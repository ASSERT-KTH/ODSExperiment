{
  "files": [
    {
      "features": [
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "OperatorAssignment",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "LocalVariable",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "org.jsoup.safety.Cleaner",
            "dst_parent": "",
            "dst_parent_type": "ThisAccess",
            "dst_type": "TypeAccess",
            "operator": "UPD",
            "src": "org.jsoup.safety.Cleaner.CleaningVisitor",
            "src_parent": "",
            "src_parent_type": "ThisAccess",
            "src_type": "TypeAccess"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "OperatorAssignment",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "Assignment",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Invocation",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "destination",
            "src_parent": "destination.appendChild(destChild)",
            "src_parent_type": "Invocation",
            "src_type": "FieldRead"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Assignment",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "LocalVariable",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "OperatorAssignment",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "numDiscarded",
            "src_parent": "numDiscarded += meta.numAttribsDiscarded",
            "src_parent_type": "OperatorAssignment",
            "src_type": "FieldWrite"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "destination = destChild",
            "src_parent": "{\n    org.jsoup.safety.Cleaner.ElementMeta meta = createSafeElement(sourceEl);\n    org.jsoup.safety.Element destChild = meta.el;\n    destination.appendChild(destChild);\n    numDiscarded += meta.numAttribsDiscarded;\n    destination = destChild;\n}",
            "src_parent_type": "Block",
            "src_type": "Assignment"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "if (source != root) {\n    numDiscarded++;\n}",
            "src_parent": "{\n    if (source != root) {\n        numDiscarded++;\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "If"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Invocation",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "destination",
            "src_parent": "destination.appendChild(destText)",
            "src_parent_type": "Invocation",
            "src_type": "FieldRead"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "{\n    numDiscarded++;\n}",
            "src_parent": "if (source instanceof org.jsoup.safety.TextNode) {\n    org.jsoup.safety.TextNode sourceText = ((org.jsoup.safety.TextNode) (source));\n    org.jsoup.safety.TextNode destText = new org.jsoup.safety.TextNode(sourceText.getWholeText(), source.baseUri());\n    destination.appendChild(destText);\n} else {\n    numDiscarded++;\n}",
            "src_parent_type": "If",
            "src_type": "Block"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "LocalVariable",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Return",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "cleaningVisitor.numDiscarded",
            "src_parent": "return cleaningVisitor.numDiscarded",
            "src_parent_type": "Return",
            "src_type": "FieldRead"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Class",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "private final class CleaningVisitor implements org.jsoup.select.NodeVisitor {\n    private int numDiscarded = 0;\n\n    private final org.jsoup.safety.Element root;\n\n    private org.jsoup.safety.Element destination;\n\n    private CleaningVisitor(org.jsoup.safety.Element root, org.jsoup.safety.Element destination) {\n        this.root = root;\n        this.destination = destination;\n    }\n\n    public void head(org.jsoup.safety.Node source, int depth) {\n        if (source instanceof org.jsoup.safety.Element) {\n            org.jsoup.safety.Element sourceEl = ((org.jsoup.safety.Element) (source));\n            if (whitelist.isSafeTag(sourceEl.tagName())) {\n                org.jsoup.safety.Cleaner.ElementMeta meta = createSafeElement(sourceEl);\n                org.jsoup.safety.Element destChild = meta.el;\n                destination.appendChild(destChild);\n                numDiscarded += meta.numAttribsDiscarded;\n                destination = destChild;\n            } else if (source != root) {\n                numDiscarded++;\n            }\n        } else if (source instanceof org.jsoup.safety.TextNode) {\n            org.jsoup.safety.TextNode sourceText = ((org.jsoup.safety.TextNode) (source));\n            org.jsoup.safety.TextNode destText = new org.jsoup.safety.TextNode(sourceText.getWholeText(), source.baseUri());\n            destination.appendChild(destText);\n        } else {\n            numDiscarded++;\n        }\n    }\n\n    public void tail(org.jsoup.safety.Node source, int depth) {\n        if ((source instanceof org.jsoup.safety.Element) && whitelist.isSafeTag(source.nodeName())) {\n            destination = destination.parent();\n        }\n    }\n}",
            "src_parent": "public class Cleaner {\n    private org.jsoup.safety.Whitelist whitelist;\n\n    public Cleaner(org.jsoup.safety.Whitelist whitelist) {\n        org.jsoup.helper.Validate.notNull(whitelist);\n        this.whitelist = whitelist;\n    }\n\n    public org.jsoup.safety.Document clean(org.jsoup.safety.Document dirtyDocument) {\n        org.jsoup.helper.Validate.notNull(dirtyDocument);\n        org.jsoup.safety.Document clean = org.jsoup.safety.Document.createShell(dirtyDocument.baseUri());\n        if (dirtyDocument.body() != null) {\n            copySafeNodes(dirtyDocument.body(), clean.body());\n        }\n        return clean;\n    }\n\n    public boolean isValid(org.jsoup.safety.Document dirtyDocument) {\n        org.jsoup.helper.Validate.notNull(dirtyDocument);\n        org.jsoup.safety.Document clean = org.jsoup.safety.Document.createShell(dirtyDocument.baseUri());\n        int numDiscarded = copySafeNodes(dirtyDocument.body(), clean.body());\n        return numDiscarded == 0;\n    }\n\n    private final class CleaningVisitor implements org.jsoup.select.NodeVisitor {\n        private int numDiscarded = 0;\n\n        private final org.jsoup.safety.Element root;\n\n        private org.jsoup.safety.Element destination;\n\n        private CleaningVisitor(org.jsoup.safety.Element root, org.jsoup.safety.Element destination) {\n            this.root = root;\n            this.destination = destination;\n        }\n\n        public void head(org.jsoup.safety.Node source, int depth) {\n            if (source instanceof org.jsoup.safety.Element) {\n                org.jsoup.safety.Element sourceEl = ((org.jsoup.safety.Element) (source));\n                if (whitelist.isSafeTag(sourceEl.tagName())) {\n                    org.jsoup.safety.Cleaner.ElementMeta meta = createSafeElement(sourceEl);\n                    org.jsoup.safety.Element destChild = meta.el;\n                    destination.appendChild(destChild);\n                    numDiscarded += meta.numAttribsDiscarded;\n                    destination = destChild;\n                } else if (source != root) {\n                    numDiscarded++;\n                }\n            } else if (source instanceof org.jsoup.safety.TextNode) {\n                org.jsoup.safety.TextNode sourceText = ((org.jsoup.safety.TextNode) (source));\n                org.jsoup.safety.TextNode destText = new org.jsoup.safety.TextNode(sourceText.getWholeText(), source.baseUri());\n                destination.appendChild(destText);\n            } else {\n                numDiscarded++;\n            }\n        }\n\n        public void tail(org.jsoup.safety.Node source, int depth) {\n            if ((source instanceof org.jsoup.safety.Element) && whitelist.isSafeTag(source.nodeName())) {\n                destination = destination.parent();\n            }\n        }\n    }\n\n    private int copySafeNodes(org.jsoup.safety.Element source, org.jsoup.safety.Element dest) {\n        org.jsoup.safety.Cleaner.CleaningVisitor cleaningVisitor = new org.jsoup.safety.Cleaner.CleaningVisitor(source, dest);\n        org.jsoup.select.NodeTraversor traversor = new org.jsoup.select.NodeTraversor(cleaningVisitor);\n        traversor.traverse(source);\n        return cleaningVisitor.numDiscarded;\n    }\n\n    private org.jsoup.safety.Cleaner.ElementMeta createSafeElement(org.jsoup.safety.Element sourceEl) {\n        java.lang.String sourceTag = sourceEl.tagName();\n        org.jsoup.safety.Attributes destAttrs = new org.jsoup.safety.Attributes();\n        org.jsoup.safety.Element dest = new org.jsoup.safety.Element(org.jsoup.parser.Tag.valueOf(sourceTag), sourceEl.baseUri(), destAttrs);\n        int numDiscarded = 0;\n        org.jsoup.safety.Attributes sourceAttrs = sourceEl.attributes();\n        for (org.jsoup.safety.Attribute sourceAttr : sourceAttrs) {\n            if (whitelist.isSafeAttribute(sourceTag, sourceEl, sourceAttr)) {\n                destAttrs.put(sourceAttr);\n            } else {\n                numDiscarded++;\n            }\n        }\n        org.jsoup.safety.Attributes enforcedAttrs = whitelist.getEnforcedAttributes(sourceTag);\n        destAttrs.addAll(enforcedAttrs);\n        return new org.jsoup.safety.Cleaner.ElementMeta(dest, numDiscarded);\n    }\n\n    private static class ElementMeta {\n        org.jsoup.safety.Element el;\n\n        int numAttribsDiscarded;\n\n        ElementMeta(org.jsoup.safety.Element el, int numAttribsDiscarded) {\n            this.el = el;\n            this.numAttribsDiscarded = numAttribsDiscarded;\n        }\n    }\n}",
            "src_parent_type": "Class",
            "src_type": "Class"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Method",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "private int copySafeNodes(org.jsoup.safety.Element source, org.jsoup.safety.Element dest) {\n    org.jsoup.safety.Cleaner.CleaningVisitor cleaningVisitor = new org.jsoup.safety.Cleaner.CleaningVisitor(source, dest);\n    org.jsoup.select.NodeTraversor traversor = new org.jsoup.select.NodeTraversor(cleaningVisitor);\n    traversor.traverse(source);\n    return cleaningVisitor.numDiscarded;\n}",
            "src_parent": "public class Cleaner {\n    private org.jsoup.safety.Whitelist whitelist;\n\n    public Cleaner(org.jsoup.safety.Whitelist whitelist) {\n        org.jsoup.helper.Validate.notNull(whitelist);\n        this.whitelist = whitelist;\n    }\n\n    public org.jsoup.safety.Document clean(org.jsoup.safety.Document dirtyDocument) {\n        org.jsoup.helper.Validate.notNull(dirtyDocument);\n        org.jsoup.safety.Document clean = org.jsoup.safety.Document.createShell(dirtyDocument.baseUri());\n        if (dirtyDocument.body() != null) {\n            copySafeNodes(dirtyDocument.body(), clean.body());\n        }\n        return clean;\n    }\n\n    public boolean isValid(org.jsoup.safety.Document dirtyDocument) {\n        org.jsoup.helper.Validate.notNull(dirtyDocument);\n        org.jsoup.safety.Document clean = org.jsoup.safety.Document.createShell(dirtyDocument.baseUri());\n        int numDiscarded = copySafeNodes(dirtyDocument.body(), clean.body());\n        return numDiscarded == 0;\n    }\n\n    private final class CleaningVisitor implements org.jsoup.select.NodeVisitor {\n        private int numDiscarded = 0;\n\n        private final org.jsoup.safety.Element root;\n\n        private org.jsoup.safety.Element destination;\n\n        private CleaningVisitor(org.jsoup.safety.Element root, org.jsoup.safety.Element destination) {\n            this.root = root;\n            this.destination = destination;\n        }\n\n        public void head(org.jsoup.safety.Node source, int depth) {\n            if (source instanceof org.jsoup.safety.Element) {\n                org.jsoup.safety.Element sourceEl = ((org.jsoup.safety.Element) (source));\n                if (whitelist.isSafeTag(sourceEl.tagName())) {\n                    org.jsoup.safety.Cleaner.ElementMeta meta = createSafeElement(sourceEl);\n                    org.jsoup.safety.Element destChild = meta.el;\n                    destination.appendChild(destChild);\n                    numDiscarded += meta.numAttribsDiscarded;\n                    destination = destChild;\n                } else if (source != root) {\n                    numDiscarded++;\n                }\n            } else if (source instanceof org.jsoup.safety.TextNode) {\n                org.jsoup.safety.TextNode sourceText = ((org.jsoup.safety.TextNode) (source));\n                org.jsoup.safety.TextNode destText = new org.jsoup.safety.TextNode(sourceText.getWholeText(), source.baseUri());\n                destination.appendChild(destText);\n            } else {\n                numDiscarded++;\n            }\n        }\n\n        public void tail(org.jsoup.safety.Node source, int depth) {\n            if ((source instanceof org.jsoup.safety.Element) && whitelist.isSafeTag(source.nodeName())) {\n                destination = destination.parent();\n            }\n        }\n    }\n\n    private int copySafeNodes(org.jsoup.safety.Element source, org.jsoup.safety.Element dest) {\n        org.jsoup.safety.Cleaner.CleaningVisitor cleaningVisitor = new org.jsoup.safety.Cleaner.CleaningVisitor(source, dest);\n        org.jsoup.select.NodeTraversor traversor = new org.jsoup.select.NodeTraversor(cleaningVisitor);\n        traversor.traverse(source);\n        return cleaningVisitor.numDiscarded;\n    }\n\n    private org.jsoup.safety.Cleaner.ElementMeta createSafeElement(org.jsoup.safety.Element sourceEl) {\n        java.lang.String sourceTag = sourceEl.tagName();\n        org.jsoup.safety.Attributes destAttrs = new org.jsoup.safety.Attributes();\n        org.jsoup.safety.Element dest = new org.jsoup.safety.Element(org.jsoup.parser.Tag.valueOf(sourceTag), sourceEl.baseUri(), destAttrs);\n        int numDiscarded = 0;\n        org.jsoup.safety.Attributes sourceAttrs = sourceEl.attributes();\n        for (org.jsoup.safety.Attribute sourceAttr : sourceAttrs) {\n            if (whitelist.isSafeAttribute(sourceTag, sourceEl, sourceAttr)) {\n                destAttrs.put(sourceAttr);\n            } else {\n                numDiscarded++;\n            }\n        }\n        org.jsoup.safety.Attributes enforcedAttrs = whitelist.getEnforcedAttributes(sourceTag);\n        destAttrs.addAll(enforcedAttrs);\n        return new org.jsoup.safety.Cleaner.ElementMeta(dest, numDiscarded);\n    }\n\n    private static class ElementMeta {\n        org.jsoup.safety.Element el;\n\n        int numAttribsDiscarded;\n\n        ElementMeta(org.jsoup.safety.Element el, int numAttribsDiscarded) {\n            this.el = el;\n            this.numAttribsDiscarded = numAttribsDiscarded;\n        }\n    }\n}",
            "src_parent_type": "Class",
            "src_type": "Method"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Package",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Class",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "private int copySafeNodes(org.jsoup.safety.Element root, org.jsoup.safety.Element destination) {\n    java.util.List<org.jsoup.safety.Node> sourceChildren = root.childNodes();\n    int numDiscarded = 0;\n    for (org.jsoup.safety.Node source : sourceChildren) {\n        if (source instanceof org.jsoup.safety.Element) {\n            org.jsoup.safety.Element sourceEl = ((org.jsoup.safety.Element) (source));\n            if (whitelist.isSafeTag(sourceEl.tagName())) {\n                org.jsoup.safety.Cleaner.ElementMeta meta = createSafeElement(sourceEl);\n                org.jsoup.safety.Element destChild = meta.el;\n                destination.appendChild(destChild);\n                numDiscarded += meta.numAttribsDiscarded;\n                numDiscarded += copySafeNodes(sourceEl, destChild);\n            } else {\n                numDiscarded++;\n                numDiscarded += copySafeNodes(sourceEl, destination);\n            }\n        } else if (source instanceof org.jsoup.safety.TextNode) {\n            org.jsoup.safety.TextNode sourceText = ((org.jsoup.safety.TextNode) (source));\n            org.jsoup.safety.TextNode destText = new org.jsoup.safety.TextNode(sourceText.getWholeText(), source.baseUri());\n            destination.appendChild(destText);\n        }\n    }\n    return numDiscarded;\n}",
            "src_parent": "public class Cleaner {\n    private org.jsoup.safety.Whitelist whitelist;\n\n    public Cleaner(org.jsoup.safety.Whitelist whitelist) {\n        org.jsoup.helper.Validate.notNull(whitelist);\n        this.whitelist = whitelist;\n    }\n\n    public org.jsoup.safety.Document clean(org.jsoup.safety.Document dirtyDocument) {\n        org.jsoup.helper.Validate.notNull(dirtyDocument);\n        org.jsoup.safety.Document clean = org.jsoup.safety.Document.createShell(dirtyDocument.baseUri());\n        if (dirtyDocument.body() != null) {\n            copySafeNodes(dirtyDocument.body(), clean.body());\n        }\n        return clean;\n    }\n\n    public boolean isValid(org.jsoup.safety.Document dirtyDocument) {\n        org.jsoup.helper.Validate.notNull(dirtyDocument);\n        org.jsoup.safety.Document clean = org.jsoup.safety.Document.createShell(dirtyDocument.baseUri());\n        int numDiscarded = copySafeNodes(dirtyDocument.body(), clean.body());\n        return numDiscarded == 0;\n    }\n\n    private int copySafeNodes(org.jsoup.safety.Element root, org.jsoup.safety.Element destination) {\n        java.util.List<org.jsoup.safety.Node> sourceChildren = root.childNodes();\n        int numDiscarded = 0;\n        for (org.jsoup.safety.Node source : sourceChildren) {\n            if (source instanceof org.jsoup.safety.Element) {\n                org.jsoup.safety.Element sourceEl = ((org.jsoup.safety.Element) (source));\n                if (whitelist.isSafeTag(sourceEl.tagName())) {\n                    org.jsoup.safety.Cleaner.ElementMeta meta = createSafeElement(sourceEl);\n                    org.jsoup.safety.Element destChild = meta.el;\n                    destination.appendChild(destChild);\n                    numDiscarded += meta.numAttribsDiscarded;\n                    numDiscarded += copySafeNodes(sourceEl, destChild);\n                } else {\n                    numDiscarded++;\n                    numDiscarded += copySafeNodes(sourceEl, destination);\n                }\n            } else if (source instanceof org.jsoup.safety.TextNode) {\n                org.jsoup.safety.TextNode sourceText = ((org.jsoup.safety.TextNode) (source));\n                org.jsoup.safety.TextNode destText = new org.jsoup.safety.TextNode(sourceText.getWholeText(), source.baseUri());\n                destination.appendChild(destText);\n            }\n        }\n        return numDiscarded;\n    }\n\n    private org.jsoup.safety.Cleaner.ElementMeta createSafeElement(org.jsoup.safety.Element sourceEl) {\n        java.lang.String sourceTag = sourceEl.tagName();\n        org.jsoup.safety.Attributes destAttrs = new org.jsoup.safety.Attributes();\n        org.jsoup.safety.Element dest = new org.jsoup.safety.Element(org.jsoup.parser.Tag.valueOf(sourceTag), sourceEl.baseUri(), destAttrs);\n        int numDiscarded = 0;\n        org.jsoup.safety.Attributes sourceAttrs = sourceEl.attributes();\n        for (org.jsoup.safety.Attribute sourceAttr : sourceAttrs) {\n            if (whitelist.isSafeAttribute(sourceTag, sourceEl, sourceAttr)) {\n                destAttrs.put(sourceAttr);\n            } else {\n                numDiscarded++;\n            }\n        }\n        org.jsoup.safety.Attributes enforcedAttrs = whitelist.getEnforcedAttributes(sourceTag);\n        destAttrs.addAll(enforcedAttrs);\n        return new org.jsoup.safety.Cleaner.ElementMeta(dest, numDiscarded);\n    }\n\n    private static class ElementMeta {\n        org.jsoup.safety.Element el;\n\n        int numAttribsDiscarded;\n\n        ElementMeta(org.jsoup.safety.Element el, int numAttribsDiscarded) {\n            this.el = el;\n            this.numAttribsDiscarded = numAttribsDiscarded;\n        }\n    }\n}",
            "src_parent_type": "Class",
            "src_type": "Method"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "LocalVariable",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Return",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "numDiscarded",
            "src_parent": "return numDiscarded",
            "src_parent_type": "Return",
            "src_type": "VariableRead"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "numDiscarded += copySafeNodes(sourceEl, destChild)",
            "src_parent": "{\n    org.jsoup.safety.Cleaner.ElementMeta meta = createSafeElement(sourceEl);\n    org.jsoup.safety.Element destChild = meta.el;\n    destination.appendChild(destChild);\n    numDiscarded += meta.numAttribsDiscarded;\n    numDiscarded += copySafeNodes(sourceEl, destChild);\n}",
            "src_parent_type": "Block",
            "src_type": "OperatorAssignment"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "numDiscarded++",
            "src_parent": "{\n    numDiscarded++;\n    numDiscarded += copySafeNodes(sourceEl, destination);\n}",
            "src_parent_type": "Block",
            "src_type": "UnaryOperator"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "numDiscarded += copySafeNodes(sourceEl, destination)",
            "src_parent": "{\n    numDiscarded++;\n    numDiscarded += copySafeNodes(sourceEl, destination);\n}",
            "src_parent_type": "Block",
            "src_type": "OperatorAssignment"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "destination",
            "src_parent": "destination.appendChild(destChild)",
            "src_parent_type": "Invocation",
            "src_type": "VariableRead"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "numDiscarded",
            "src_parent": "numDiscarded += meta.numAttribsDiscarded",
            "src_parent_type": "OperatorAssignment",
            "src_type": "VariableWrite"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "destination",
            "src_parent": "destination.appendChild(destText)",
            "src_parent_type": "Invocation",
            "src_type": "VariableRead"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "VirtualElement",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "VE: Modifiers_Method",
            "dst_parent": "private int copySafeNodes(org.jsoup.safety.Element root, org.jsoup.safety.Element destination) {\n    java.util.List<org.jsoup.safety.Node> sourceChildren = root.childNodes();\n    int numDiscarded = 0;\n    for (org.jsoup.safety.Node source : sourceChildren) {\n        if (source instanceof org.jsoup.safety.Element) {\n            org.jsoup.safety.Element sourceEl = ((org.jsoup.safety.Element) (source));\n            if (whitelist.isSafeTag(sourceEl.tagName())) {\n                org.jsoup.safety.Cleaner.ElementMeta meta = createSafeElement(sourceEl);\n                org.jsoup.safety.Element destChild = meta.el;\n                destination.appendChild(destChild);\n                numDiscarded += meta.numAttribsDiscarded;\n                numDiscarded += copySafeNodes(sourceEl, destChild);\n            } else {\n                numDiscarded++;\n                numDiscarded += copySafeNodes(sourceEl, destination);\n            }\n        } else if (source instanceof org.jsoup.safety.TextNode) {\n            org.jsoup.safety.TextNode sourceText = ((org.jsoup.safety.TextNode) (source));\n            org.jsoup.safety.TextNode destText = new org.jsoup.safety.TextNode(sourceText.getWholeText(), source.baseUri());\n            destination.appendChild(destText);\n        }\n    }\n    return numDiscarded;\n}",
            "dst_parent_type": "Method",
            "dst_type": "VirtualEle",
            "operator": "MOV",
            "src": "VE: Modifiers_Method",
            "src_parent": "private int copySafeNodes(org.jsoup.safety.Element source, org.jsoup.safety.Element dest) {\n    org.jsoup.safety.Cleaner.CleaningVisitor cleaningVisitor = new org.jsoup.safety.Cleaner.CleaningVisitor(source, dest);\n    org.jsoup.select.NodeTraversor traversor = new org.jsoup.select.NodeTraversor(cleaningVisitor);\n    traversor.traverse(source);\n    return cleaningVisitor.numDiscarded;\n}",
            "src_parent_type": "Method",
            "src_type": "VirtualEle"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Constructor",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Parameter",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "org.jsoup.safety.Element root",
            "dst_parent": "private int copySafeNodes(org.jsoup.safety.Element root, org.jsoup.safety.Element destination) {\n    java.util.List<org.jsoup.safety.Node> sourceChildren = root.childNodes();\n    int numDiscarded = 0;\n    for (org.jsoup.safety.Node source : sourceChildren) {\n        if (source instanceof org.jsoup.safety.Element) {\n            org.jsoup.safety.Element sourceEl = ((org.jsoup.safety.Element) (source));\n            if (whitelist.isSafeTag(sourceEl.tagName())) {\n                org.jsoup.safety.Cleaner.ElementMeta meta = createSafeElement(sourceEl);\n                org.jsoup.safety.Element destChild = meta.el;\n                destination.appendChild(destChild);\n                numDiscarded += meta.numAttribsDiscarded;\n                numDiscarded += copySafeNodes(sourceEl, destChild);\n            } else {\n                numDiscarded++;\n                numDiscarded += copySafeNodes(sourceEl, destination);\n            }\n        } else if (source instanceof org.jsoup.safety.TextNode) {\n            org.jsoup.safety.TextNode sourceText = ((org.jsoup.safety.TextNode) (source));\n            org.jsoup.safety.TextNode destText = new org.jsoup.safety.TextNode(sourceText.getWholeText(), source.baseUri());\n            destination.appendChild(destText);\n        }\n    }\n    return numDiscarded;\n}",
            "dst_parent_type": "Method",
            "dst_type": "Parameter",
            "operator": "MOV",
            "src": "org.jsoup.safety.Element root",
            "src_parent": "private CleaningVisitor(org.jsoup.safety.Element root, org.jsoup.safety.Element destination) {\n    this.root = root;\n    this.destination = destination;\n}",
            "src_parent_type": "Constructor",
            "src_type": "Parameter"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Constructor",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Parameter",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "org.jsoup.safety.Element destination",
            "dst_parent": "private int copySafeNodes(org.jsoup.safety.Element root, org.jsoup.safety.Element destination) {\n    java.util.List<org.jsoup.safety.Node> sourceChildren = root.childNodes();\n    int numDiscarded = 0;\n    for (org.jsoup.safety.Node source : sourceChildren) {\n        if (source instanceof org.jsoup.safety.Element) {\n            org.jsoup.safety.Element sourceEl = ((org.jsoup.safety.Element) (source));\n            if (whitelist.isSafeTag(sourceEl.tagName())) {\n                org.jsoup.safety.Cleaner.ElementMeta meta = createSafeElement(sourceEl);\n                org.jsoup.safety.Element destChild = meta.el;\n                destination.appendChild(destChild);\n                numDiscarded += meta.numAttribsDiscarded;\n                numDiscarded += copySafeNodes(sourceEl, destChild);\n            } else {\n                numDiscarded++;\n                numDiscarded += copySafeNodes(sourceEl, destination);\n            }\n        } else if (source instanceof org.jsoup.safety.TextNode) {\n            org.jsoup.safety.TextNode sourceText = ((org.jsoup.safety.TextNode) (source));\n            org.jsoup.safety.TextNode destText = new org.jsoup.safety.TextNode(sourceText.getWholeText(), source.baseUri());\n            destination.appendChild(destText);\n        }\n    }\n    return numDiscarded;\n}",
            "dst_parent_type": "Method",
            "dst_type": "Parameter",
            "operator": "MOV",
            "src": "org.jsoup.safety.Element destination",
            "src_parent": "private CleaningVisitor(org.jsoup.safety.Element root, org.jsoup.safety.Element destination) {\n    this.root = root;\n    this.destination = destination;\n}",
            "src_parent_type": "Constructor",
            "src_type": "Parameter"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "LocalVariable",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Return",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "return numDiscarded",
            "dst_parent": "{\n    java.util.List<org.jsoup.safety.Node> sourceChildren = root.childNodes();\n    int numDiscarded = 0;\n    for (org.jsoup.safety.Node source : sourceChildren) {\n        if (source instanceof org.jsoup.safety.Element) {\n            org.jsoup.safety.Element sourceEl = ((org.jsoup.safety.Element) (source));\n            if (whitelist.isSafeTag(sourceEl.tagName())) {\n                org.jsoup.safety.Cleaner.ElementMeta meta = createSafeElement(sourceEl);\n                org.jsoup.safety.Element destChild = meta.el;\n                destination.appendChild(destChild);\n                numDiscarded += meta.numAttribsDiscarded;\n                numDiscarded += copySafeNodes(sourceEl, destChild);\n            } else {\n                numDiscarded++;\n                numDiscarded += copySafeNodes(sourceEl, destination);\n            }\n        } else if (source instanceof org.jsoup.safety.TextNode) {\n            org.jsoup.safety.TextNode sourceText = ((org.jsoup.safety.TextNode) (source));\n            org.jsoup.safety.TextNode destText = new org.jsoup.safety.TextNode(sourceText.getWholeText(), source.baseUri());\n            destination.appendChild(destText);\n        }\n    }\n    return numDiscarded;\n}",
            "dst_parent_type": "Block",
            "dst_type": "Return",
            "operator": "MOV",
            "src": "return cleaningVisitor.numDiscarded",
            "src_parent": "{\n    org.jsoup.safety.Cleaner.CleaningVisitor cleaningVisitor = new org.jsoup.safety.Cleaner.CleaningVisitor(source, dest);\n    org.jsoup.select.NodeTraversor traversor = new org.jsoup.select.NodeTraversor(cleaningVisitor);\n    traversor.traverse(source);\n    return cleaningVisitor.numDiscarded;\n}",
            "src_parent_type": "Block",
            "src_type": "Return"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "source instanceof org.jsoup.safety.Element",
            "dst_parent": "if (source instanceof org.jsoup.safety.Element) {\n    org.jsoup.safety.Element sourceEl = ((org.jsoup.safety.Element) (source));\n    if (whitelist.isSafeTag(sourceEl.tagName())) {\n        org.jsoup.safety.Cleaner.ElementMeta meta = createSafeElement(sourceEl);\n        org.jsoup.safety.Element destChild = meta.el;\n        destination.appendChild(destChild);\n        numDiscarded += meta.numAttribsDiscarded;\n        numDiscarded += copySafeNodes(sourceEl, destChild);\n    } else {\n        numDiscarded++;\n        numDiscarded += copySafeNodes(sourceEl, destination);\n    }\n} else if (source instanceof org.jsoup.safety.TextNode) {\n    org.jsoup.safety.TextNode sourceText = ((org.jsoup.safety.TextNode) (source));\n    org.jsoup.safety.TextNode destText = new org.jsoup.safety.TextNode(sourceText.getWholeText(), source.baseUri());\n    destination.appendChild(destText);\n}",
            "dst_parent_type": "If",
            "dst_type": "BinaryOperator",
            "operator": "MOV",
            "src": "source instanceof org.jsoup.safety.Element",
            "src_parent": "if (source instanceof org.jsoup.safety.Element) {\n    org.jsoup.safety.Element sourceEl = ((org.jsoup.safety.Element) (source));\n    if (whitelist.isSafeTag(sourceEl.tagName())) {\n        org.jsoup.safety.Cleaner.ElementMeta meta = createSafeElement(sourceEl);\n        org.jsoup.safety.Element destChild = meta.el;\n        destination.appendChild(destChild);\n        numDiscarded += meta.numAttribsDiscarded;\n        destination = destChild;\n    } else if (source != root) {\n        numDiscarded++;\n    }\n} else if (source instanceof org.jsoup.safety.TextNode) {\n    org.jsoup.safety.TextNode sourceText = ((org.jsoup.safety.TextNode) (source));\n    org.jsoup.safety.TextNode destText = new org.jsoup.safety.TextNode(sourceText.getWholeText(), source.baseUri());\n    destination.appendChild(destText);\n} else {\n    numDiscarded++;\n}",
            "src_parent_type": "If",
            "src_type": "BinaryOperator"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "{\n    org.jsoup.safety.Element sourceEl = ((org.jsoup.safety.Element) (source));\n    if (whitelist.isSafeTag(sourceEl.tagName())) {\n        org.jsoup.safety.Cleaner.ElementMeta meta = createSafeElement(sourceEl);\n        org.jsoup.safety.Element destChild = meta.el;\n        destination.appendChild(destChild);\n        numDiscarded += meta.numAttribsDiscarded;\n        numDiscarded += copySafeNodes(sourceEl, destChild);\n    } else {\n        numDiscarded++;\n        numDiscarded += copySafeNodes(sourceEl, destination);\n    }\n}",
            "dst_parent": "if (source instanceof org.jsoup.safety.Element) {\n    org.jsoup.safety.Element sourceEl = ((org.jsoup.safety.Element) (source));\n    if (whitelist.isSafeTag(sourceEl.tagName())) {\n        org.jsoup.safety.Cleaner.ElementMeta meta = createSafeElement(sourceEl);\n        org.jsoup.safety.Element destChild = meta.el;\n        destination.appendChild(destChild);\n        numDiscarded += meta.numAttribsDiscarded;\n        numDiscarded += copySafeNodes(sourceEl, destChild);\n    } else {\n        numDiscarded++;\n        numDiscarded += copySafeNodes(sourceEl, destination);\n    }\n} else if (source instanceof org.jsoup.safety.TextNode) {\n    org.jsoup.safety.TextNode sourceText = ((org.jsoup.safety.TextNode) (source));\n    org.jsoup.safety.TextNode destText = new org.jsoup.safety.TextNode(sourceText.getWholeText(), source.baseUri());\n    destination.appendChild(destText);\n}",
            "dst_parent_type": "If",
            "dst_type": "Block",
            "operator": "MOV",
            "src": "{\n    org.jsoup.safety.Element sourceEl = ((org.jsoup.safety.Element) (source));\n    if (whitelist.isSafeTag(sourceEl.tagName())) {\n        org.jsoup.safety.Cleaner.ElementMeta meta = createSafeElement(sourceEl);\n        org.jsoup.safety.Element destChild = meta.el;\n        destination.appendChild(destChild);\n        numDiscarded += meta.numAttribsDiscarded;\n        destination = destChild;\n    } else if (source != root) {\n        numDiscarded++;\n    }\n}",
            "src_parent": "if (source instanceof org.jsoup.safety.Element) {\n    org.jsoup.safety.Element sourceEl = ((org.jsoup.safety.Element) (source));\n    if (whitelist.isSafeTag(sourceEl.tagName())) {\n        org.jsoup.safety.Cleaner.ElementMeta meta = createSafeElement(sourceEl);\n        org.jsoup.safety.Element destChild = meta.el;\n        destination.appendChild(destChild);\n        numDiscarded += meta.numAttribsDiscarded;\n        destination = destChild;\n    } else if (source != root) {\n        numDiscarded++;\n    }\n} else if (source instanceof org.jsoup.safety.TextNode) {\n    org.jsoup.safety.TextNode sourceText = ((org.jsoup.safety.TextNode) (source));\n    org.jsoup.safety.TextNode destText = new org.jsoup.safety.TextNode(sourceText.getWholeText(), source.baseUri());\n    destination.appendChild(destText);\n} else {\n    numDiscarded++;\n}",
            "src_parent_type": "If",
            "src_type": "Block"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "{\n    if (source instanceof org.jsoup.safety.TextNode) {\n        org.jsoup.safety.TextNode sourceText = ((org.jsoup.safety.TextNode) (source));\n        org.jsoup.safety.TextNode destText = new org.jsoup.safety.TextNode(sourceText.getWholeText(), source.baseUri());\n        destination.appendChild(destText);\n    }\n}",
            "dst_parent": "if (source instanceof org.jsoup.safety.Element) {\n    org.jsoup.safety.Element sourceEl = ((org.jsoup.safety.Element) (source));\n    if (whitelist.isSafeTag(sourceEl.tagName())) {\n        org.jsoup.safety.Cleaner.ElementMeta meta = createSafeElement(sourceEl);\n        org.jsoup.safety.Element destChild = meta.el;\n        destination.appendChild(destChild);\n        numDiscarded += meta.numAttribsDiscarded;\n        numDiscarded += copySafeNodes(sourceEl, destChild);\n    } else {\n        numDiscarded++;\n        numDiscarded += copySafeNodes(sourceEl, destination);\n    }\n} else if (source instanceof org.jsoup.safety.TextNode) {\n    org.jsoup.safety.TextNode sourceText = ((org.jsoup.safety.TextNode) (source));\n    org.jsoup.safety.TextNode destText = new org.jsoup.safety.TextNode(sourceText.getWholeText(), source.baseUri());\n    destination.appendChild(destText);\n}",
            "dst_parent_type": "If",
            "dst_type": "Block",
            "operator": "MOV",
            "src": "{\n    if (source instanceof org.jsoup.safety.TextNode) {\n        org.jsoup.safety.TextNode sourceText = ((org.jsoup.safety.TextNode) (source));\n        org.jsoup.safety.TextNode destText = new org.jsoup.safety.TextNode(sourceText.getWholeText(), source.baseUri());\n        destination.appendChild(destText);\n    } else {\n        numDiscarded++;\n    }\n}",
            "src_parent": "if (source instanceof org.jsoup.safety.Element) {\n    org.jsoup.safety.Element sourceEl = ((org.jsoup.safety.Element) (source));\n    if (whitelist.isSafeTag(sourceEl.tagName())) {\n        org.jsoup.safety.Cleaner.ElementMeta meta = createSafeElement(sourceEl);\n        org.jsoup.safety.Element destChild = meta.el;\n        destination.appendChild(destChild);\n        numDiscarded += meta.numAttribsDiscarded;\n        destination = destChild;\n    } else if (source != root) {\n        numDiscarded++;\n    }\n} else if (source instanceof org.jsoup.safety.TextNode) {\n    org.jsoup.safety.TextNode sourceText = ((org.jsoup.safety.TextNode) (source));\n    org.jsoup.safety.TextNode destText = new org.jsoup.safety.TextNode(sourceText.getWholeText(), source.baseUri());\n    destination.appendChild(destText);\n} else {\n    numDiscarded++;\n}",
            "src_parent_type": "If",
            "src_type": "Block"
          }
        }
      ],
      "file_name": "Cleaner"
    }
  ],
  "id": "Jsoup_30"
}