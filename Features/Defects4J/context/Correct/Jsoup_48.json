{
  "files": [
    {
      "features": [
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "values.size() > 1",
            "src_parent": "if (values.size() > 1) {\n    java.lang.StringBuilder accum = new java.lang.StringBuilder();\n    for (int i = 0; i < values.size(); i++) {\n        final java.lang.String val = values.get(i);\n        if (i != 0) {\n            accum.append(\", \");\n        }\n        accum.append(val);\n    }\n    header(name, accum.toString());\n}",
            "src_parent_type": "If",
            "src_type": "BinaryOperator"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "{\n    java.lang.StringBuilder accum = new java.lang.StringBuilder();\n    for (int i = 0; i < values.size(); i++) {\n        final java.lang.String val = values.get(i);\n        if (i != 0) {\n            accum.append(\", \");\n        }\n        accum.append(val);\n    }\n    header(name, accum.toString());\n}",
            "src_parent": "if (values.size() > 1) {\n    java.lang.StringBuilder accum = new java.lang.StringBuilder();\n    for (int i = 0; i < values.size(); i++) {\n        final java.lang.String val = values.get(i);\n        if (i != 0) {\n            accum.append(\", \");\n        }\n        accum.append(val);\n    }\n    header(name, accum.toString());\n}",
            "src_parent_type": "If",
            "src_type": "Block"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "ForEach",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "if (name.equalsIgnoreCase(\"Set-Cookie\")) {\n    for (java.lang.String value : values) {\n        if (value == null) {\n            continue;\n        }\n        org.jsoup.parser.TokenQueue cd = new org.jsoup.parser.TokenQueue(value);\n        java.lang.String cookieName = cd.chompTo(\"=\").trim();\n        java.lang.String cookieVal = cd.consumeTo(\";\").trim();\n        if (cookieName.length() > 0) {\n            cookie(cookieName, cookieVal);\n        }\n    }\n} else if (values.size() == 1) {\n    header(name, values.get(0));\n} else if (values.size() > 1) {\n    java.lang.StringBuilder accum = new java.lang.StringBuilder();\n    for (int i = 0; i < values.size(); i++) {\n        final java.lang.String val = values.get(i);\n        if (i != 0) {\n            accum.append(\", \");\n        }\n        accum.append(val);\n    }\n    header(name, accum.toString());\n}",
            "src_parent": "{\n    java.lang.String name = entry.getKey();\n    if (name == null) {\n        continue;\n    }\n    java.util.List<java.lang.String> values = entry.getValue();\n    if (name.equalsIgnoreCase(\"Set-Cookie\")) {\n        for (java.lang.String value : values) {\n            if (value == null) {\n                continue;\n            }\n            org.jsoup.parser.TokenQueue cd = new org.jsoup.parser.TokenQueue(value);\n            java.lang.String cookieName = cd.chompTo(\"=\").trim();\n            java.lang.String cookieVal = cd.consumeTo(\";\").trim();\n            if (cookieName.length() > 0) {\n                cookie(cookieName, cookieVal);\n            }\n        }\n    } else if (values.size() == 1) {\n        header(name, values.get(0));\n    } else if (values.size() > 1) {\n        java.lang.StringBuilder accum = new java.lang.StringBuilder();\n        for (int i = 0; i < values.size(); i++) {\n            final java.lang.String val = values.get(i);\n            if (i != 0) {\n                accum.append(\", \");\n            }\n            accum.append(val);\n        }\n        header(name, accum.toString());\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "If"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "ForEach",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "if (name.equalsIgnoreCase(\"Set-Cookie\")) {\n    for (java.lang.String value : values) {\n        if (value == null) {\n            continue;\n        }\n        org.jsoup.parser.TokenQueue cd = new org.jsoup.parser.TokenQueue(value);\n        java.lang.String cookieName = cd.chompTo(\"=\").trim();\n        java.lang.String cookieVal = cd.consumeTo(\";\").trim();\n        if (cookieName.length() > 0) {\n            cookie(cookieName, cookieVal);\n        }\n    }\n} else if (!values.isEmpty()) {\n    header(name, values.get(0));\n}",
            "src_parent": "{\n    java.lang.String name = entry.getKey();\n    if (name == null) {\n        continue;\n    }\n    java.util.List<java.lang.String> values = entry.getValue();\n    if (name.equalsIgnoreCase(\"Set-Cookie\")) {\n        for (java.lang.String value : values) {\n            if (value == null) {\n                continue;\n            }\n            org.jsoup.parser.TokenQueue cd = new org.jsoup.parser.TokenQueue(value);\n            java.lang.String cookieName = cd.chompTo(\"=\").trim();\n            java.lang.String cookieVal = cd.consumeTo(\";\").trim();\n            if (cookieName.length() > 0) {\n                cookie(cookieName, cookieVal);\n            }\n        }\n    } else if (!values.isEmpty()) {\n        header(name, values.get(0));\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "If"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "!values.isEmpty()",
            "src_parent": "if (!values.isEmpty()) {\n    header(name, values.get(0));\n}",
            "src_parent_type": "If",
            "src_type": "UnaryOperator"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "LocalVariable",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "ForEach",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "name.equalsIgnoreCase(\"Set-Cookie\")",
            "dst_parent": "if (name.equalsIgnoreCase(\"Set-Cookie\")) {\n    for (java.lang.String value : values) {\n        if (value == null) {\n            continue;\n        }\n        org.jsoup.parser.TokenQueue cd = new org.jsoup.parser.TokenQueue(value);\n        java.lang.String cookieName = cd.chompTo(\"=\").trim();\n        java.lang.String cookieVal = cd.consumeTo(\";\").trim();\n        if (cookieName.length() > 0) {\n            cookie(cookieName, cookieVal);\n        }\n    }\n} else if (!values.isEmpty()) {\n    header(name, values.get(0));\n}",
            "dst_parent_type": "If",
            "dst_type": "Invocation",
            "operator": "MOV",
            "src": "name.equalsIgnoreCase(\"Set-Cookie\")",
            "src_parent": "if (name.equalsIgnoreCase(\"Set-Cookie\")) {\n    for (java.lang.String value : values) {\n        if (value == null) {\n            continue;\n        }\n        org.jsoup.parser.TokenQueue cd = new org.jsoup.parser.TokenQueue(value);\n        java.lang.String cookieName = cd.chompTo(\"=\").trim();\n        java.lang.String cookieVal = cd.consumeTo(\";\").trim();\n        if (cookieName.length() > 0) {\n            cookie(cookieName, cookieVal);\n        }\n    }\n} else if (values.size() == 1) {\n    header(name, values.get(0));\n} else if (values.size() > 1) {\n    java.lang.StringBuilder accum = new java.lang.StringBuilder();\n    for (int i = 0; i < values.size(); i++) {\n        final java.lang.String val = values.get(i);\n        if (i != 0) {\n            accum.append(\", \");\n        }\n        accum.append(val);\n    }\n    header(name, accum.toString());\n}",
            "src_parent_type": "If",
            "src_type": "Invocation"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "LocalVariable",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "ForEach",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "{\n    for (java.lang.String value : values) {\n        if (value == null) {\n            continue;\n        }\n        org.jsoup.parser.TokenQueue cd = new org.jsoup.parser.TokenQueue(value);\n        java.lang.String cookieName = cd.chompTo(\"=\").trim();\n        java.lang.String cookieVal = cd.consumeTo(\";\").trim();\n        if (cookieName.length() > 0) {\n            cookie(cookieName, cookieVal);\n        }\n    }\n}",
            "dst_parent": "if (name.equalsIgnoreCase(\"Set-Cookie\")) {\n    for (java.lang.String value : values) {\n        if (value == null) {\n            continue;\n        }\n        org.jsoup.parser.TokenQueue cd = new org.jsoup.parser.TokenQueue(value);\n        java.lang.String cookieName = cd.chompTo(\"=\").trim();\n        java.lang.String cookieVal = cd.consumeTo(\";\").trim();\n        if (cookieName.length() > 0) {\n            cookie(cookieName, cookieVal);\n        }\n    }\n} else if (!values.isEmpty()) {\n    header(name, values.get(0));\n}",
            "dst_parent_type": "If",
            "dst_type": "Block",
            "operator": "MOV",
            "src": "{\n    for (java.lang.String value : values) {\n        if (value == null) {\n            continue;\n        }\n        org.jsoup.parser.TokenQueue cd = new org.jsoup.parser.TokenQueue(value);\n        java.lang.String cookieName = cd.chompTo(\"=\").trim();\n        java.lang.String cookieVal = cd.consumeTo(\";\").trim();\n        if (cookieName.length() > 0) {\n            cookie(cookieName, cookieVal);\n        }\n    }\n}",
            "src_parent": "if (name.equalsIgnoreCase(\"Set-Cookie\")) {\n    for (java.lang.String value : values) {\n        if (value == null) {\n            continue;\n        }\n        org.jsoup.parser.TokenQueue cd = new org.jsoup.parser.TokenQueue(value);\n        java.lang.String cookieName = cd.chompTo(\"=\").trim();\n        java.lang.String cookieVal = cd.consumeTo(\";\").trim();\n        if (cookieName.length() > 0) {\n            cookie(cookieName, cookieVal);\n        }\n    }\n} else if (values.size() == 1) {\n    header(name, values.get(0));\n} else if (values.size() > 1) {\n    java.lang.StringBuilder accum = new java.lang.StringBuilder();\n    for (int i = 0; i < values.size(); i++) {\n        final java.lang.String val = values.get(i);\n        if (i != 0) {\n            accum.append(\", \");\n        }\n        accum.append(val);\n    }\n    header(name, accum.toString());\n}",
            "src_parent_type": "If",
            "src_type": "Block"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "{\n    if (!values.isEmpty()) {\n        header(name, values.get(0));\n    }\n}",
            "dst_parent": "if (name.equalsIgnoreCase(\"Set-Cookie\")) {\n    for (java.lang.String value : values) {\n        if (value == null) {\n            continue;\n        }\n        org.jsoup.parser.TokenQueue cd = new org.jsoup.parser.TokenQueue(value);\n        java.lang.String cookieName = cd.chompTo(\"=\").trim();\n        java.lang.String cookieVal = cd.consumeTo(\";\").trim();\n        if (cookieName.length() > 0) {\n            cookie(cookieName, cookieVal);\n        }\n    }\n} else if (!values.isEmpty()) {\n    header(name, values.get(0));\n}",
            "dst_parent_type": "If",
            "dst_type": "Block",
            "operator": "MOV",
            "src": "{\n    if (values.size() > 1) {\n        java.lang.StringBuilder accum = new java.lang.StringBuilder();\n        for (int i = 0; i < values.size(); i++) {\n            final java.lang.String val = values.get(i);\n            if (i != 0) {\n                accum.append(\", \");\n            }\n            accum.append(val);\n        }\n        header(name, accum.toString());\n    }\n}",
            "src_parent": "if (values.size() == 1) {\n    header(name, values.get(0));\n} else if (values.size() > 1) {\n    java.lang.StringBuilder accum = new java.lang.StringBuilder();\n    for (int i = 0; i < values.size(); i++) {\n        final java.lang.String val = values.get(i);\n        if (i != 0) {\n            accum.append(\", \");\n        }\n        accum.append(val);\n    }\n    header(name, accum.toString());\n}",
            "src_parent_type": "If",
            "src_type": "Block"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "{\n    header(name, values.get(0));\n}",
            "dst_parent": "if (!values.isEmpty()) {\n    header(name, values.get(0));\n}",
            "dst_parent_type": "If",
            "dst_type": "Block",
            "operator": "MOV",
            "src": "{\n    header(name, values.get(0));\n}",
            "src_parent": "if (values.size() == 1) {\n    header(name, values.get(0));\n} else if (values.size() > 1) {\n    java.lang.StringBuilder accum = new java.lang.StringBuilder();\n    for (int i = 0; i < values.size(); i++) {\n        final java.lang.String val = values.get(i);\n        if (i != 0) {\n            accum.append(\", \");\n        }\n        accum.append(val);\n    }\n    header(name, accum.toString());\n}",
            "src_parent_type": "If",
            "src_type": "Block"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "values",
            "dst_parent": "values.isEmpty()",
            "dst_parent_type": "Invocation",
            "dst_type": "VariableRead",
            "operator": "MOV",
            "src": "values",
            "src_parent": "values.size()",
            "src_parent_type": "Invocation",
            "src_type": "VariableRead"
          }
        }
      ],
      "file_name": "HttpConnection"
    }
  ],
  "id": "Jsoup_48"
}