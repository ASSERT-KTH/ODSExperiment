{
  "files": [
    {
      "features": [
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Method",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "public final boolean defineSynthesizedProperty(java.lang.String propertyName, com.google.javascript.rhino.jstype.JSType type, com.google.javascript.rhino.Node propertyNode) {\n    return defineProperty(propertyName, type, false, propertyNode);\n}",
            "src_parent": "public abstract class ObjectType extends com.google.javascript.rhino.jstype.JSType implements com.google.javascript.rhino.jstype.StaticScope<com.google.javascript.rhino.jstype.JSType> {\n    private boolean visited;\n\n    private com.google.javascript.rhino.JSDocInfo docInfo = null;\n\n    private boolean unknown = true;\n\n    ObjectType(com.google.javascript.rhino.jstype.JSTypeRegistry registry) {\n        super(registry);\n    }\n\n    @java.lang.Override\n    public com.google.javascript.rhino.Node getRootNode() {\n        return null;\n    }\n\n    @java.lang.Override\n    public com.google.javascript.rhino.jstype.ObjectType getParentScope() {\n        return getImplicitPrototype();\n    }\n\n    @java.lang.Override\n    public abstract com.google.javascript.rhino.jstype.ObjectType.Property getSlot(java.lang.String name);\n\n    @java.lang.Override\n    public com.google.javascript.rhino.jstype.ObjectType.Property getOwnSlot(java.lang.String name) {\n        if (hasOwnProperty(name)) {\n            return getSlot(name);\n        }\n        return null;\n    }\n\n    @java.lang.Override\n    public com.google.javascript.rhino.jstype.ObjectType getTypeOfThis() {\n        return null;\n    }\n\n    public com.google.javascript.rhino.jstype.JSType getParameterType() {\n        return null;\n    }\n\n    public com.google.javascript.rhino.jstype.JSType getIndexType() {\n        return null;\n    }\n\n    @java.lang.Override\n    public com.google.javascript.rhino.JSDocInfo getJSDocInfo() {\n        if (docInfo != null) {\n            return docInfo;\n        } else if (getImplicitPrototype() != null) {\n            return getImplicitPrototype().getJSDocInfo();\n        } else {\n            return super.getJSDocInfo();\n        }\n    }\n\n    public void setJSDocInfo(com.google.javascript.rhino.JSDocInfo info) {\n        docInfo = info;\n    }\n\n    final boolean detectImplicitPrototypeCycle() {\n        this.visited = true;\n        com.google.javascript.rhino.jstype.ObjectType p = getImplicitPrototype();\n        while (p != null) {\n            if (p.visited) {\n                return true;\n            } else {\n                p.visited = true;\n            }\n            p = p.getImplicitPrototype();\n        } \n        p = this;\n        do {\n            p.visited = false;\n            p = p.getImplicitPrototype();\n        } while (p != null );\n        return false;\n    }\n\n    public abstract java.lang.String getReferenceName();\n\n    public java.lang.String getNormalizedReferenceName() {\n        java.lang.String name = getReferenceName();\n        if (name != null) {\n            int pos = name.indexOf(\"(\");\n            if (pos != (-1)) {\n                return name.substring(0, pos);\n            }\n        }\n        return name;\n    }\n\n    @java.lang.Override\n    public java.lang.String getDisplayName() {\n        return getNormalizedReferenceName();\n    }\n\n    public static java.lang.String createDelegateSuffix(java.lang.String suffix) {\n        return (\"(\" + suffix) + \")\";\n    }\n\n    public boolean hasReferenceName() {\n        return false;\n    }\n\n    @java.lang.Override\n    public com.google.javascript.rhino.jstype.TernaryValue testForEquality(com.google.javascript.rhino.jstype.JSType that) {\n        com.google.javascript.rhino.jstype.TernaryValue result = super.testForEquality(that);\n        if (result != null) {\n            return result;\n        }\n        if (that.isSubtype(getNativeType(JSTypeNative.OBJECT_NUMBER_STRING_BOOLEAN))) {\n            return com.google.javascript.rhino.jstype.TernaryValue.UNKNOWN;\n        } else {\n            return com.google.javascript.rhino.jstype.TernaryValue.FALSE;\n        }\n    }\n\n    public abstract com.google.javascript.rhino.jstype.FunctionType getConstructor();\n\n    public abstract com.google.javascript.rhino.jstype.ObjectType getImplicitPrototype();\n\n    public final boolean defineDeclaredProperty(java.lang.String propertyName, com.google.javascript.rhino.jstype.JSType type, com.google.javascript.rhino.Node propertyNode) {\n        boolean result = defineProperty(propertyName, type, false, propertyNode);\n        registry.registerPropertyOnType(propertyName, this);\n        return result;\n    }\n\n    public final boolean defineSynthesizedProperty(java.lang.String propertyName, com.google.javascript.rhino.jstype.JSType type, com.google.javascript.rhino.Node propertyNode) {\n        return defineProperty(propertyName, type, false, propertyNode);\n    }\n\n    public final boolean defineInferredProperty(java.lang.String propertyName, com.google.javascript.rhino.jstype.JSType type, com.google.javascript.rhino.Node propertyNode) {\n        if (hasProperty(propertyName)) {\n            com.google.javascript.rhino.jstype.JSType originalType = getPropertyType(propertyName);\n            type = (originalType == null) ? type : originalType.getLeastSupertype(type);\n        }\n        boolean result = defineProperty(propertyName, type, true, propertyNode);\n        registry.registerPropertyOnType(propertyName, this);\n        return result;\n    }\n\n    abstract boolean defineProperty(java.lang.String propertyName, com.google.javascript.rhino.jstype.JSType type, boolean inferred, com.google.javascript.rhino.Node propertyNode);\n\n    public boolean removeProperty(java.lang.String propertyName) {\n        return false;\n    }\n\n    public com.google.javascript.rhino.Node getPropertyNode(java.lang.String propertyName) {\n        return null;\n    }\n\n    public com.google.javascript.rhino.JSDocInfo getOwnPropertyJSDocInfo(java.lang.String propertyName) {\n        return null;\n    }\n\n    public void setPropertyJSDocInfo(java.lang.String propertyName, com.google.javascript.rhino.JSDocInfo info) {\n    }\n\n    @java.lang.Override\n    public com.google.javascript.rhino.jstype.JSType findPropertyType(java.lang.String propertyName) {\n        return hasProperty(propertyName) ? getPropertyType(propertyName) : null;\n    }\n\n    public abstract com.google.javascript.rhino.jstype.JSType getPropertyType(java.lang.String propertyName);\n\n    public abstract boolean hasProperty(java.lang.String propertyName);\n\n    public boolean hasOwnProperty(java.lang.String propertyName) {\n        return hasProperty(propertyName);\n    }\n\n    public java.util.Set<java.lang.String> getOwnPropertyNames() {\n        return com.google.common.collect.ImmutableSet.of();\n    }\n\n    public abstract boolean isPropertyTypeInferred(java.lang.String propertyName);\n\n    public abstract boolean isPropertyTypeDeclared(java.lang.String propertyName);\n\n    boolean hasOwnDeclaredProperty(java.lang.String name) {\n        return hasOwnProperty(name) && isPropertyTypeDeclared(name);\n    }\n\n    public boolean isPropertyInExterns(java.lang.String propertyName) {\n        return false;\n    }\n\n    public abstract int getPropertiesCount();\n\n    public java.util.Set<java.lang.String> getPropertyNames() {\n        java.util.Set<java.lang.String> props = com.google.common.collect.Sets.newTreeSet();\n        collectPropertyNames(props);\n        return props;\n    }\n\n    abstract void collectPropertyNames(java.util.Set<java.lang.String> props);\n\n    @java.lang.Override\n    public <T> T visit(com.google.javascript.rhino.jstype.Visitor<T> visitor) {\n        return visitor.caseObjectType(this);\n    }\n\n    final boolean isImplicitPrototype(com.google.javascript.rhino.jstype.ObjectType prototype) {\n        for (com.google.javascript.rhino.jstype.ObjectType current = this; current != null; current = current.getImplicitPrototype()) {\n            if (current.isEquivalentTo(prototype)) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    @java.lang.Override\n    public com.google.javascript.rhino.jstype.BooleanLiteralSet getPossibleToBooleanOutcomes() {\n        return BooleanLiteralSet.TRUE;\n    }\n\n    @java.lang.Override\n    public boolean isUnknownType() {\n        if (unknown) {\n            com.google.javascript.rhino.jstype.ObjectType implicitProto = getImplicitPrototype();\n            if ((implicitProto == null) || implicitProto.isNativeObjectType()) {\n                unknown = false;\n                for (com.google.javascript.rhino.jstype.ObjectType interfaceType : getCtorExtendedInterfaces()) {\n                    if (interfaceType.isUnknownType()) {\n                        unknown = true;\n                        break;\n                    }\n                }\n            } else {\n                unknown = implicitProto.isUnknownType();\n            }\n        }\n        return unknown;\n    }\n\n    @java.lang.Override\n    public boolean isObject() {\n        return true;\n    }\n\n    public boolean hasCachedValues() {\n        return !unknown;\n    }\n\n    public void clearCachedValues() {\n        unknown = true;\n    }\n\n    public boolean isNativeObjectType() {\n        return false;\n    }\n\n    public static com.google.javascript.rhino.jstype.ObjectType cast(com.google.javascript.rhino.jstype.JSType type) {\n        return type == null ? null : type.toObjectType();\n    }\n\n    @java.lang.Override\n    public final boolean isFunctionPrototypeType() {\n        return getOwnerFunction() != null;\n    }\n\n    public com.google.javascript.rhino.jstype.FunctionType getOwnerFunction() {\n        return null;\n    }\n\n    void setOwnerFunction(com.google.javascript.rhino.jstype.FunctionType type) {\n    }\n\n    public java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> getCtorImplementedInterfaces() {\n        return com.google.common.collect.ImmutableSet.of();\n    }\n\n    public java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> getCtorExtendedInterfaces() {\n        return com.google.common.collect.ImmutableSet.of();\n    }\n\n    public static final class Property implements com.google.javascript.rhino.jstype.StaticReference<com.google.javascript.rhino.jstype.JSType> , com.google.javascript.rhino.jstype.StaticSlot<com.google.javascript.rhino.jstype.JSType> , java.io.Serializable {\n        private static final long serialVersionUID = 1L;\n\n        private final java.lang.String name;\n\n        private com.google.javascript.rhino.jstype.JSType type;\n\n        private final boolean inferred;\n\n        private com.google.javascript.rhino.Node propertyNode;\n\n        private com.google.javascript.rhino.JSDocInfo docInfo = null;\n\n        Property(java.lang.String name, com.google.javascript.rhino.jstype.JSType type, boolean inferred, com.google.javascript.rhino.Node propertyNode) {\n            this.name = name;\n            this.type = type;\n            this.inferred = inferred;\n            this.propertyNode = propertyNode;\n        }\n\n        @java.lang.Override\n        public java.lang.String getName() {\n            return name;\n        }\n\n        @java.lang.Override\n        public com.google.javascript.rhino.Node getNode() {\n            return propertyNode;\n        }\n\n        @java.lang.Override\n        public com.google.javascript.rhino.jstype.StaticSourceFile getSourceFile() {\n            return propertyNode == null ? null : propertyNode.getStaticSourceFile();\n        }\n\n        @java.lang.Override\n        public com.google.javascript.rhino.jstype.ObjectType.Property getSymbol() {\n            return this;\n        }\n\n        @java.lang.Override\n        public com.google.javascript.rhino.jstype.ObjectType.Property getDeclaration() {\n            return propertyNode == null ? null : this;\n        }\n\n        @java.lang.Override\n        public com.google.javascript.rhino.jstype.JSType getType() {\n            return type;\n        }\n\n        @java.lang.Override\n        public boolean isTypeInferred() {\n            return inferred;\n        }\n\n        boolean isFromExterns() {\n            return propertyNode == null ? false : propertyNode.isFromExterns();\n        }\n\n        void setType(com.google.javascript.rhino.jstype.JSType type) {\n            this.type = type;\n        }\n\n        @java.lang.Override\n        public com.google.javascript.rhino.JSDocInfo getJSDocInfo() {\n            return this.docInfo;\n        }\n\n        void setJSDocInfo(com.google.javascript.rhino.JSDocInfo info) {\n            this.docInfo = info;\n        }\n\n        public void setNode(com.google.javascript.rhino.Node n) {\n            this.propertyNode = n;\n        }\n    }\n}",
            "src_parent_type": "Class",
            "src_type": "Method"
          }
        }
      ],
      "file_name": "ObjectType"
    },
    {
      "features": [
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Return",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "continue",
            "src_parent": "{\n    continue;\n}",
            "src_parent_type": "Block",
            "src_type": "Continue"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "ForEach",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "if (!greatestSubtype.isEmptyType()) {\n    com.google.javascript.rhino.jstype.RecordType maybeRecordType = greatestSubtype.toMaybeRecordType();\n    if ((maybeRecordType != null) && maybeRecordType.isSynthetic()) {\n        continue;\n    }\n    return true;\n}",
            "src_parent": "{\n    com.google.javascript.rhino.jstype.JSType greatestSubtype = alt.getGreatestSubtype(type);\n    if (!greatestSubtype.isEmptyType()) {\n        com.google.javascript.rhino.jstype.RecordType maybeRecordType = greatestSubtype.toMaybeRecordType();\n        if ((maybeRecordType != null) && maybeRecordType.isSynthetic()) {\n            continue;\n        }\n        return true;\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "If"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Return",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "if (!greatestSubtype.isEmptyType()) {\n    return true;\n}",
            "src_parent": "{\n    com.google.javascript.rhino.jstype.JSType greatestSubtype = alt.getGreatestSubtype(type);\n    if (!greatestSubtype.isEmptyType()) {\n        return true;\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "If"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "ForEach",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "!greatestSubtype.isEmptyType()",
            "dst_parent": "if (!greatestSubtype.isEmptyType()) {\n    return true;\n}",
            "dst_parent_type": "If",
            "dst_type": "UnaryOperator",
            "operator": "MOV",
            "src": "!greatestSubtype.isEmptyType()",
            "src_parent": "if (!greatestSubtype.isEmptyType()) {\n    com.google.javascript.rhino.jstype.RecordType maybeRecordType = greatestSubtype.toMaybeRecordType();\n    if ((maybeRecordType != null) && maybeRecordType.isSynthetic()) {\n        continue;\n    }\n    return true;\n}",
            "src_parent_type": "If",
            "src_type": "UnaryOperator"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Return",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "{\n    return true;\n}",
            "dst_parent": "if (!greatestSubtype.isEmptyType()) {\n    return true;\n}",
            "dst_parent_type": "If",
            "dst_type": "Block",
            "operator": "MOV",
            "src": "{\n    continue;\n}",
            "src_parent": "if ((maybeRecordType != null) && maybeRecordType.isSynthetic()) {\n    continue;\n}",
            "src_parent_type": "If",
            "src_type": "Block"
          }
        }
      ],
      "file_name": "JSTypeRegistry"
    },
    {
      "features": [
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Field",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "private final boolean declared;",
            "src_parent": "class RecordType extends com.google.javascript.rhino.jstype.PrototypeObjectType {\n    private static final long serialVersionUID = 1L;\n\n    private final java.util.SortedMap<java.lang.String, com.google.javascript.rhino.jstype.JSType> properties = com.google.common.collect.Maps.newTreeMap();\n\n    private final boolean declared;\n\n    private boolean isFrozen = false;\n\n    RecordType(com.google.javascript.rhino.jstype.JSTypeRegistry registry, java.util.Map<java.lang.String, com.google.javascript.rhino.jstype.RecordTypeBuilder.RecordProperty> properties) {\n        this(registry, properties, true);\n    }\n\n    RecordType(com.google.javascript.rhino.jstype.JSTypeRegistry registry, java.util.Map<java.lang.String, com.google.javascript.rhino.jstype.RecordTypeBuilder.RecordProperty> properties, boolean declared) {\n        super(registry, null, null);\n        setPrettyPrint(true);\n        this.declared = declared;\n        for (java.lang.String property : properties.keySet()) {\n            com.google.javascript.rhino.jstype.RecordTypeBuilder.RecordProperty prop = properties.get(property);\n            if (prop == null) {\n                throw new java.lang.IllegalStateException(\"RecordProperty associated with a property should not be null!\");\n            }\n            if (declared) {\n                defineDeclaredProperty(property, prop.getType(), prop.getPropertyNode());\n            } else {\n                defineSynthesizedProperty(property, prop.getType(), prop.getPropertyNode());\n            }\n        }\n        isFrozen = true;\n    }\n\n    boolean isSynthetic() {\n        return !declared;\n    }\n\n    @java.lang.Override\n    public boolean isEquivalentTo(com.google.javascript.rhino.jstype.JSType other) {\n        if (!other.isRecordType()) {\n            return false;\n        }\n        com.google.javascript.rhino.jstype.RecordType otherRecord = other.toMaybeRecordType();\n        if (otherRecord == this) {\n            return true;\n        }\n        java.util.Set<java.lang.String> keySet = properties.keySet();\n        java.util.Map<java.lang.String, com.google.javascript.rhino.jstype.JSType> otherProps = otherRecord.properties;\n        if (!otherProps.keySet().equals(keySet)) {\n            return false;\n        }\n        for (java.lang.String key : keySet) {\n            if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    @java.lang.Override\n    public com.google.javascript.rhino.jstype.ObjectType getImplicitPrototype() {\n        return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n    }\n\n    @java.lang.Override\n    boolean defineProperty(java.lang.String propertyName, com.google.javascript.rhino.jstype.JSType type, boolean inferred, com.google.javascript.rhino.Node propertyNode) {\n        if (isFrozen) {\n            return false;\n        }\n        if (!inferred) {\n            properties.put(propertyName, type);\n        }\n        return super.defineProperty(propertyName, type, inferred, propertyNode);\n    }\n\n    com.google.javascript.rhino.jstype.JSType getGreatestSubtypeHelper(com.google.javascript.rhino.jstype.JSType that) {\n        if (that.isRecordType()) {\n            com.google.javascript.rhino.jstype.RecordType thatRecord = that.toMaybeRecordType();\n            com.google.javascript.rhino.jstype.RecordTypeBuilder builder = new com.google.javascript.rhino.jstype.RecordTypeBuilder(registry);\n            builder.setSynthesized(true);\n            for (java.lang.String property : properties.keySet()) {\n                if (thatRecord.hasProperty(property) && (!thatRecord.getPropertyType(property).isEquivalentTo(getPropertyType(property)))) {\n                    return registry.getNativeObjectType(JSTypeNative.NO_TYPE);\n                }\n                builder.addProperty(property, getPropertyType(property), getPropertyNode(property));\n            }\n            for (java.lang.String property : thatRecord.properties.keySet()) {\n                if (!hasProperty(property)) {\n                    builder.addProperty(property, thatRecord.getPropertyType(property), thatRecord.getPropertyNode(property));\n                }\n            }\n            return builder.build();\n        }\n        com.google.javascript.rhino.jstype.JSType greatestSubtype = registry.getNativeType(JSTypeNative.NO_OBJECT_TYPE);\n        com.google.javascript.rhino.jstype.JSType thatRestrictedToObj = registry.getNativeType(JSTypeNative.OBJECT_TYPE).getGreatestSubtype(that);\n        if (!thatRestrictedToObj.isEmptyType()) {\n            for (java.util.Map.Entry<java.lang.String, com.google.javascript.rhino.jstype.JSType> entry : properties.entrySet()) {\n                java.lang.String propName = entry.getKey();\n                com.google.javascript.rhino.jstype.JSType propType = entry.getValue();\n                com.google.javascript.rhino.jstype.UnionTypeBuilder builder = new com.google.javascript.rhino.jstype.UnionTypeBuilder(registry);\n                for (com.google.javascript.rhino.jstype.ObjectType alt : registry.getEachReferenceTypeWithProperty(propName)) {\n                    com.google.javascript.rhino.jstype.JSType altPropType = alt.getPropertyType(propName);\n                    if ((((altPropType != null) && (!alt.isEquivalentTo(this))) && alt.isSubtype(that)) && ((propType.isUnknownType() || altPropType.isUnknownType()) || altPropType.isEquivalentTo(propType))) {\n                        builder.addAlternate(alt);\n                    }\n                }\n                greatestSubtype = greatestSubtype.getLeastSupertype(builder.build());\n            }\n        }\n        return greatestSubtype;\n    }\n\n    @java.lang.Override\n    com.google.javascript.rhino.jstype.RecordType toMaybeRecordType() {\n        return this;\n    }\n\n    @java.lang.Override\n    public boolean isSubtype(com.google.javascript.rhino.jstype.JSType that) {\n        if (com.google.javascript.rhino.jstype.JSType.isSubtypeHelper(this, that)) {\n            return true;\n        }\n        if (registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE).isSubtype(that)) {\n            return true;\n        }\n        if (!that.isRecordType()) {\n            return false;\n        }\n        return com.google.javascript.rhino.jstype.RecordType.isSubtype(this, that.toMaybeRecordType());\n    }\n\n    static boolean isSubtype(com.google.javascript.rhino.jstype.ObjectType typeA, com.google.javascript.rhino.jstype.RecordType typeB) {\n        for (java.lang.String property : typeB.properties.keySet()) {\n            if (!typeA.hasProperty(property)) {\n                return false;\n            }\n            com.google.javascript.rhino.jstype.JSType propA = typeA.getPropertyType(property);\n            com.google.javascript.rhino.jstype.JSType propB = typeB.getPropertyType(property);\n            if ((!propA.isUnknownType()) && (!propB.isUnknownType())) {\n                if (typeA.isPropertyTypeDeclared(property)) {\n                    if (!propA.isEquivalentTo(propB)) {\n                        return false;\n                    }\n                } else if (!propA.isSubtype(propB)) {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n\n    @java.lang.Override\n    com.google.javascript.rhino.jstype.JSType resolveInternal(com.google.javascript.rhino.ErrorReporter t, com.google.javascript.rhino.jstype.StaticScope<com.google.javascript.rhino.jstype.JSType> scope) {\n        for (java.util.Map.Entry<java.lang.String, com.google.javascript.rhino.jstype.JSType> entry : properties.entrySet()) {\n            com.google.javascript.rhino.jstype.JSType type = entry.getValue();\n            com.google.javascript.rhino.jstype.JSType resolvedType = type.resolve(t, scope);\n            if (type != resolvedType) {\n                properties.put(entry.getKey(), resolvedType);\n            }\n        }\n        return super.resolveInternal(t, scope);\n    }\n}",
            "src_parent_type": "Class",
            "src_type": "Field"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Constructor",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "RecordType(com.google.javascript.rhino.jstype.JSTypeRegistry registry, java.util.Map<java.lang.String, com.google.javascript.rhino.jstype.RecordTypeBuilder.RecordProperty> properties) {\n    this(registry, properties, true);\n}",
            "src_parent": "class RecordType extends com.google.javascript.rhino.jstype.PrototypeObjectType {\n    private static final long serialVersionUID = 1L;\n\n    private final java.util.SortedMap<java.lang.String, com.google.javascript.rhino.jstype.JSType> properties = com.google.common.collect.Maps.newTreeMap();\n\n    private final boolean declared;\n\n    private boolean isFrozen = false;\n\n    RecordType(com.google.javascript.rhino.jstype.JSTypeRegistry registry, java.util.Map<java.lang.String, com.google.javascript.rhino.jstype.RecordTypeBuilder.RecordProperty> properties) {\n        this(registry, properties, true);\n    }\n\n    RecordType(com.google.javascript.rhino.jstype.JSTypeRegistry registry, java.util.Map<java.lang.String, com.google.javascript.rhino.jstype.RecordTypeBuilder.RecordProperty> properties, boolean declared) {\n        super(registry, null, null);\n        setPrettyPrint(true);\n        this.declared = declared;\n        for (java.lang.String property : properties.keySet()) {\n            com.google.javascript.rhino.jstype.RecordTypeBuilder.RecordProperty prop = properties.get(property);\n            if (prop == null) {\n                throw new java.lang.IllegalStateException(\"RecordProperty associated with a property should not be null!\");\n            }\n            if (declared) {\n                defineDeclaredProperty(property, prop.getType(), prop.getPropertyNode());\n            } else {\n                defineSynthesizedProperty(property, prop.getType(), prop.getPropertyNode());\n            }\n        }\n        isFrozen = true;\n    }\n\n    boolean isSynthetic() {\n        return !declared;\n    }\n\n    @java.lang.Override\n    public boolean isEquivalentTo(com.google.javascript.rhino.jstype.JSType other) {\n        if (!other.isRecordType()) {\n            return false;\n        }\n        com.google.javascript.rhino.jstype.RecordType otherRecord = other.toMaybeRecordType();\n        if (otherRecord == this) {\n            return true;\n        }\n        java.util.Set<java.lang.String> keySet = properties.keySet();\n        java.util.Map<java.lang.String, com.google.javascript.rhino.jstype.JSType> otherProps = otherRecord.properties;\n        if (!otherProps.keySet().equals(keySet)) {\n            return false;\n        }\n        for (java.lang.String key : keySet) {\n            if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    @java.lang.Override\n    public com.google.javascript.rhino.jstype.ObjectType getImplicitPrototype() {\n        return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n    }\n\n    @java.lang.Override\n    boolean defineProperty(java.lang.String propertyName, com.google.javascript.rhino.jstype.JSType type, boolean inferred, com.google.javascript.rhino.Node propertyNode) {\n        if (isFrozen) {\n            return false;\n        }\n        if (!inferred) {\n            properties.put(propertyName, type);\n        }\n        return super.defineProperty(propertyName, type, inferred, propertyNode);\n    }\n\n    com.google.javascript.rhino.jstype.JSType getGreatestSubtypeHelper(com.google.javascript.rhino.jstype.JSType that) {\n        if (that.isRecordType()) {\n            com.google.javascript.rhino.jstype.RecordType thatRecord = that.toMaybeRecordType();\n            com.google.javascript.rhino.jstype.RecordTypeBuilder builder = new com.google.javascript.rhino.jstype.RecordTypeBuilder(registry);\n            builder.setSynthesized(true);\n            for (java.lang.String property : properties.keySet()) {\n                if (thatRecord.hasProperty(property) && (!thatRecord.getPropertyType(property).isEquivalentTo(getPropertyType(property)))) {\n                    return registry.getNativeObjectType(JSTypeNative.NO_TYPE);\n                }\n                builder.addProperty(property, getPropertyType(property), getPropertyNode(property));\n            }\n            for (java.lang.String property : thatRecord.properties.keySet()) {\n                if (!hasProperty(property)) {\n                    builder.addProperty(property, thatRecord.getPropertyType(property), thatRecord.getPropertyNode(property));\n                }\n            }\n            return builder.build();\n        }\n        com.google.javascript.rhino.jstype.JSType greatestSubtype = registry.getNativeType(JSTypeNative.NO_OBJECT_TYPE);\n        com.google.javascript.rhino.jstype.JSType thatRestrictedToObj = registry.getNativeType(JSTypeNative.OBJECT_TYPE).getGreatestSubtype(that);\n        if (!thatRestrictedToObj.isEmptyType()) {\n            for (java.util.Map.Entry<java.lang.String, com.google.javascript.rhino.jstype.JSType> entry : properties.entrySet()) {\n                java.lang.String propName = entry.getKey();\n                com.google.javascript.rhino.jstype.JSType propType = entry.getValue();\n                com.google.javascript.rhino.jstype.UnionTypeBuilder builder = new com.google.javascript.rhino.jstype.UnionTypeBuilder(registry);\n                for (com.google.javascript.rhino.jstype.ObjectType alt : registry.getEachReferenceTypeWithProperty(propName)) {\n                    com.google.javascript.rhino.jstype.JSType altPropType = alt.getPropertyType(propName);\n                    if ((((altPropType != null) && (!alt.isEquivalentTo(this))) && alt.isSubtype(that)) && ((propType.isUnknownType() || altPropType.isUnknownType()) || altPropType.isEquivalentTo(propType))) {\n                        builder.addAlternate(alt);\n                    }\n                }\n                greatestSubtype = greatestSubtype.getLeastSupertype(builder.build());\n            }\n        }\n        return greatestSubtype;\n    }\n\n    @java.lang.Override\n    com.google.javascript.rhino.jstype.RecordType toMaybeRecordType() {\n        return this;\n    }\n\n    @java.lang.Override\n    public boolean isSubtype(com.google.javascript.rhino.jstype.JSType that) {\n        if (com.google.javascript.rhino.jstype.JSType.isSubtypeHelper(this, that)) {\n            return true;\n        }\n        if (registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE).isSubtype(that)) {\n            return true;\n        }\n        if (!that.isRecordType()) {\n            return false;\n        }\n        return com.google.javascript.rhino.jstype.RecordType.isSubtype(this, that.toMaybeRecordType());\n    }\n\n    static boolean isSubtype(com.google.javascript.rhino.jstype.ObjectType typeA, com.google.javascript.rhino.jstype.RecordType typeB) {\n        for (java.lang.String property : typeB.properties.keySet()) {\n            if (!typeA.hasProperty(property)) {\n                return false;\n            }\n            com.google.javascript.rhino.jstype.JSType propA = typeA.getPropertyType(property);\n            com.google.javascript.rhino.jstype.JSType propB = typeB.getPropertyType(property);\n            if ((!propA.isUnknownType()) && (!propB.isUnknownType())) {\n                if (typeA.isPropertyTypeDeclared(property)) {\n                    if (!propA.isEquivalentTo(propB)) {\n                        return false;\n                    }\n                } else if (!propA.isSubtype(propB)) {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n\n    @java.lang.Override\n    com.google.javascript.rhino.jstype.JSType resolveInternal(com.google.javascript.rhino.ErrorReporter t, com.google.javascript.rhino.jstype.StaticScope<com.google.javascript.rhino.jstype.JSType> scope) {\n        for (java.util.Map.Entry<java.lang.String, com.google.javascript.rhino.jstype.JSType> entry : properties.entrySet()) {\n            com.google.javascript.rhino.jstype.JSType type = entry.getValue();\n            com.google.javascript.rhino.jstype.JSType resolvedType = type.resolve(t, scope);\n            if (type != resolvedType) {\n                properties.put(entry.getKey(), resolvedType);\n            }\n        }\n        return super.resolveInternal(t, scope);\n    }\n}",
            "src_parent_type": "Class",
            "src_type": "Constructor"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Constructor",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Parameter",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "boolean declared",
            "src_parent": "RecordType(com.google.javascript.rhino.jstype.JSTypeRegistry registry, java.util.Map<java.lang.String, com.google.javascript.rhino.jstype.RecordTypeBuilder.RecordProperty> properties, boolean declared) {\n    super(registry, null, null);\n    setPrettyPrint(true);\n    this.declared = declared;\n    for (java.lang.String property : properties.keySet()) {\n        com.google.javascript.rhino.jstype.RecordTypeBuilder.RecordProperty prop = properties.get(property);\n        if (prop == null) {\n            throw new java.lang.IllegalStateException(\"RecordProperty associated with a property should not be null!\");\n        }\n        if (declared) {\n            defineDeclaredProperty(property, prop.getType(), prop.getPropertyNode());\n        } else {\n            defineSynthesizedProperty(property, prop.getType(), prop.getPropertyNode());\n        }\n    }\n    isFrozen = true;\n}",
            "src_parent_type": "Constructor",
            "src_type": "Parameter"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "ForEach",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "Assignment",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Constructor",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Assignment",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "this.declared = declared",
            "src_parent": "{\n    super(registry, null, null);\n    setPrettyPrint(true);\n    this.declared = declared;\n    for (java.lang.String property : properties.keySet()) {\n        com.google.javascript.rhino.jstype.RecordTypeBuilder.RecordProperty prop = properties.get(property);\n        if (prop == null) {\n            throw new java.lang.IllegalStateException(\"RecordProperty associated with a property should not be null!\");\n        }\n        if (declared) {\n            defineDeclaredProperty(property, prop.getType(), prop.getPropertyNode());\n        } else {\n            defineSynthesizedProperty(property, prop.getType(), prop.getPropertyNode());\n        }\n    }\n    isFrozen = true;\n}",
            "src_parent_type": "Block",
            "src_type": "Assignment"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Assignment",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "Assignment",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "Invocation",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Constructor",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "ForEach",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "if (declared) {\n    defineDeclaredProperty(property, prop.getType(), prop.getPropertyNode());\n} else {\n    defineSynthesizedProperty(property, prop.getType(), prop.getPropertyNode());\n}",
            "src_parent": "{\n    com.google.javascript.rhino.jstype.RecordTypeBuilder.RecordProperty prop = properties.get(property);\n    if (prop == null) {\n        throw new java.lang.IllegalStateException(\"RecordProperty associated with a property should not be null!\");\n    }\n    if (declared) {\n        defineDeclaredProperty(property, prop.getType(), prop.getPropertyNode());\n    } else {\n        defineSynthesizedProperty(property, prop.getType(), prop.getPropertyNode());\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "If"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Method",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "boolean isSynthetic() {\n    return !declared;\n}",
            "src_parent": "class RecordType extends com.google.javascript.rhino.jstype.PrototypeObjectType {\n    private static final long serialVersionUID = 1L;\n\n    private final java.util.SortedMap<java.lang.String, com.google.javascript.rhino.jstype.JSType> properties = com.google.common.collect.Maps.newTreeMap();\n\n    private final boolean declared;\n\n    private boolean isFrozen = false;\n\n    RecordType(com.google.javascript.rhino.jstype.JSTypeRegistry registry, java.util.Map<java.lang.String, com.google.javascript.rhino.jstype.RecordTypeBuilder.RecordProperty> properties) {\n        this(registry, properties, true);\n    }\n\n    RecordType(com.google.javascript.rhino.jstype.JSTypeRegistry registry, java.util.Map<java.lang.String, com.google.javascript.rhino.jstype.RecordTypeBuilder.RecordProperty> properties, boolean declared) {\n        super(registry, null, null);\n        setPrettyPrint(true);\n        this.declared = declared;\n        for (java.lang.String property : properties.keySet()) {\n            com.google.javascript.rhino.jstype.RecordTypeBuilder.RecordProperty prop = properties.get(property);\n            if (prop == null) {\n                throw new java.lang.IllegalStateException(\"RecordProperty associated with a property should not be null!\");\n            }\n            if (declared) {\n                defineDeclaredProperty(property, prop.getType(), prop.getPropertyNode());\n            } else {\n                defineSynthesizedProperty(property, prop.getType(), prop.getPropertyNode());\n            }\n        }\n        isFrozen = true;\n    }\n\n    boolean isSynthetic() {\n        return !declared;\n    }\n\n    @java.lang.Override\n    public boolean isEquivalentTo(com.google.javascript.rhino.jstype.JSType other) {\n        if (!other.isRecordType()) {\n            return false;\n        }\n        com.google.javascript.rhino.jstype.RecordType otherRecord = other.toMaybeRecordType();\n        if (otherRecord == this) {\n            return true;\n        }\n        java.util.Set<java.lang.String> keySet = properties.keySet();\n        java.util.Map<java.lang.String, com.google.javascript.rhino.jstype.JSType> otherProps = otherRecord.properties;\n        if (!otherProps.keySet().equals(keySet)) {\n            return false;\n        }\n        for (java.lang.String key : keySet) {\n            if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    @java.lang.Override\n    public com.google.javascript.rhino.jstype.ObjectType getImplicitPrototype() {\n        return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n    }\n\n    @java.lang.Override\n    boolean defineProperty(java.lang.String propertyName, com.google.javascript.rhino.jstype.JSType type, boolean inferred, com.google.javascript.rhino.Node propertyNode) {\n        if (isFrozen) {\n            return false;\n        }\n        if (!inferred) {\n            properties.put(propertyName, type);\n        }\n        return super.defineProperty(propertyName, type, inferred, propertyNode);\n    }\n\n    com.google.javascript.rhino.jstype.JSType getGreatestSubtypeHelper(com.google.javascript.rhino.jstype.JSType that) {\n        if (that.isRecordType()) {\n            com.google.javascript.rhino.jstype.RecordType thatRecord = that.toMaybeRecordType();\n            com.google.javascript.rhino.jstype.RecordTypeBuilder builder = new com.google.javascript.rhino.jstype.RecordTypeBuilder(registry);\n            builder.setSynthesized(true);\n            for (java.lang.String property : properties.keySet()) {\n                if (thatRecord.hasProperty(property) && (!thatRecord.getPropertyType(property).isEquivalentTo(getPropertyType(property)))) {\n                    return registry.getNativeObjectType(JSTypeNative.NO_TYPE);\n                }\n                builder.addProperty(property, getPropertyType(property), getPropertyNode(property));\n            }\n            for (java.lang.String property : thatRecord.properties.keySet()) {\n                if (!hasProperty(property)) {\n                    builder.addProperty(property, thatRecord.getPropertyType(property), thatRecord.getPropertyNode(property));\n                }\n            }\n            return builder.build();\n        }\n        com.google.javascript.rhino.jstype.JSType greatestSubtype = registry.getNativeType(JSTypeNative.NO_OBJECT_TYPE);\n        com.google.javascript.rhino.jstype.JSType thatRestrictedToObj = registry.getNativeType(JSTypeNative.OBJECT_TYPE).getGreatestSubtype(that);\n        if (!thatRestrictedToObj.isEmptyType()) {\n            for (java.util.Map.Entry<java.lang.String, com.google.javascript.rhino.jstype.JSType> entry : properties.entrySet()) {\n                java.lang.String propName = entry.getKey();\n                com.google.javascript.rhino.jstype.JSType propType = entry.getValue();\n                com.google.javascript.rhino.jstype.UnionTypeBuilder builder = new com.google.javascript.rhino.jstype.UnionTypeBuilder(registry);\n                for (com.google.javascript.rhino.jstype.ObjectType alt : registry.getEachReferenceTypeWithProperty(propName)) {\n                    com.google.javascript.rhino.jstype.JSType altPropType = alt.getPropertyType(propName);\n                    if ((((altPropType != null) && (!alt.isEquivalentTo(this))) && alt.isSubtype(that)) && ((propType.isUnknownType() || altPropType.isUnknownType()) || altPropType.isEquivalentTo(propType))) {\n                        builder.addAlternate(alt);\n                    }\n                }\n                greatestSubtype = greatestSubtype.getLeastSupertype(builder.build());\n            }\n        }\n        return greatestSubtype;\n    }\n\n    @java.lang.Override\n    com.google.javascript.rhino.jstype.RecordType toMaybeRecordType() {\n        return this;\n    }\n\n    @java.lang.Override\n    public boolean isSubtype(com.google.javascript.rhino.jstype.JSType that) {\n        if (com.google.javascript.rhino.jstype.JSType.isSubtypeHelper(this, that)) {\n            return true;\n        }\n        if (registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE).isSubtype(that)) {\n            return true;\n        }\n        if (!that.isRecordType()) {\n            return false;\n        }\n        return com.google.javascript.rhino.jstype.RecordType.isSubtype(this, that.toMaybeRecordType());\n    }\n\n    static boolean isSubtype(com.google.javascript.rhino.jstype.ObjectType typeA, com.google.javascript.rhino.jstype.RecordType typeB) {\n        for (java.lang.String property : typeB.properties.keySet()) {\n            if (!typeA.hasProperty(property)) {\n                return false;\n            }\n            com.google.javascript.rhino.jstype.JSType propA = typeA.getPropertyType(property);\n            com.google.javascript.rhino.jstype.JSType propB = typeB.getPropertyType(property);\n            if ((!propA.isUnknownType()) && (!propB.isUnknownType())) {\n                if (typeA.isPropertyTypeDeclared(property)) {\n                    if (!propA.isEquivalentTo(propB)) {\n                        return false;\n                    }\n                } else if (!propA.isSubtype(propB)) {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n\n    @java.lang.Override\n    com.google.javascript.rhino.jstype.JSType resolveInternal(com.google.javascript.rhino.ErrorReporter t, com.google.javascript.rhino.jstype.StaticScope<com.google.javascript.rhino.jstype.JSType> scope) {\n        for (java.util.Map.Entry<java.lang.String, com.google.javascript.rhino.jstype.JSType> entry : properties.entrySet()) {\n            com.google.javascript.rhino.jstype.JSType type = entry.getValue();\n            com.google.javascript.rhino.jstype.JSType resolvedType = type.resolve(t, scope);\n            if (type != resolvedType) {\n                properties.put(entry.getKey(), resolvedType);\n            }\n        }\n        return super.resolveInternal(t, scope);\n    }\n}",
            "src_parent_type": "Class",
            "src_type": "Method"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "builder.setSynthesized(true)",
            "src_parent": "{\n    com.google.javascript.rhino.jstype.RecordType thatRecord = that.toMaybeRecordType();\n    com.google.javascript.rhino.jstype.RecordTypeBuilder builder = new com.google.javascript.rhino.jstype.RecordTypeBuilder(registry);\n    builder.setSynthesized(true);\n    for (java.lang.String property : properties.keySet()) {\n        if (thatRecord.hasProperty(property) && (!thatRecord.getPropertyType(property).isEquivalentTo(getPropertyType(property)))) {\n            return registry.getNativeObjectType(JSTypeNative.NO_TYPE);\n        }\n        builder.addProperty(property, getPropertyType(property), getPropertyNode(property));\n    }\n    for (java.lang.String property : thatRecord.properties.keySet()) {\n        if (!hasProperty(property)) {\n            builder.addProperty(property, thatRecord.getPropertyType(property), thatRecord.getPropertyNode(property));\n        }\n    }\n    return builder.build();\n}",
            "src_parent_type": "Block",
            "src_type": "Invocation"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "ForEach",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "defineDeclaredProperty(property, prop.getType(), prop.getPropertyNode())",
            "dst_parent": "{\n    com.google.javascript.rhino.jstype.RecordTypeBuilder.RecordProperty prop = properties.get(property);\n    if (prop == null) {\n        throw new java.lang.IllegalStateException(\"RecordProperty associated with a property should not be null!\");\n    }\n    defineDeclaredProperty(property, prop.getType(), prop.getPropertyNode());\n}",
            "dst_parent_type": "Block",
            "dst_type": "Invocation",
            "operator": "MOV",
            "src": "defineDeclaredProperty(property, prop.getType(), prop.getPropertyNode())",
            "src_parent": "{\n    defineDeclaredProperty(property, prop.getType(), prop.getPropertyNode());\n}",
            "src_parent_type": "Block",
            "src_type": "Invocation"
          }
        }
      ],
      "file_name": "RecordType"
    },
    {
      "features": [
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Field",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "private boolean isDeclared = true;",
            "src_parent": "public class RecordTypeBuilder {\n    private boolean isEmpty = true;\n\n    private boolean isDeclared = true;\n\n    private final com.google.javascript.rhino.jstype.JSTypeRegistry registry;\n\n    private final java.util.HashMap<java.lang.String, com.google.javascript.rhino.jstype.RecordTypeBuilder.RecordProperty> properties = com.google.common.collect.Maps.newHashMap();\n\n    public RecordTypeBuilder(com.google.javascript.rhino.jstype.JSTypeRegistry registry) {\n        this.registry = registry;\n    }\n\n    void setSynthesized(boolean synthesized) {\n        isDeclared = !synthesized;\n    }\n\n    public com.google.javascript.rhino.jstype.RecordTypeBuilder addProperty(java.lang.String name, com.google.javascript.rhino.jstype.JSType type, com.google.javascript.rhino.Node propertyNode) {\n        isEmpty = false;\n        if (properties.containsKey(name)) {\n            return null;\n        }\n        properties.put(name, new com.google.javascript.rhino.jstype.RecordTypeBuilder.RecordProperty(type, propertyNode));\n        return this;\n    }\n\n    public com.google.javascript.rhino.jstype.JSType build() {\n        if (isEmpty) {\n            return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n        }\n        return new com.google.javascript.rhino.jstype.RecordType(registry, java.util.Collections.unmodifiableMap(properties), isDeclared);\n    }\n\n    static class RecordProperty {\n        private final com.google.javascript.rhino.jstype.JSType type;\n\n        private final com.google.javascript.rhino.Node propertyNode;\n\n        RecordProperty(com.google.javascript.rhino.jstype.JSType type, com.google.javascript.rhino.Node propertyNode) {\n            this.type = type;\n            this.propertyNode = propertyNode;\n        }\n\n        public com.google.javascript.rhino.jstype.JSType getType() {\n            return type;\n        }\n\n        public com.google.javascript.rhino.Node getPropertyNode() {\n            return propertyNode;\n        }\n    }\n}",
            "src_parent_type": "Class",
            "src_type": "Field"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Method",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "void setSynthesized(boolean synthesized) {\n    isDeclared = !synthesized;\n}",
            "src_parent": "public class RecordTypeBuilder {\n    private boolean isEmpty = true;\n\n    private boolean isDeclared = true;\n\n    private final com.google.javascript.rhino.jstype.JSTypeRegistry registry;\n\n    private final java.util.HashMap<java.lang.String, com.google.javascript.rhino.jstype.RecordTypeBuilder.RecordProperty> properties = com.google.common.collect.Maps.newHashMap();\n\n    public RecordTypeBuilder(com.google.javascript.rhino.jstype.JSTypeRegistry registry) {\n        this.registry = registry;\n    }\n\n    void setSynthesized(boolean synthesized) {\n        isDeclared = !synthesized;\n    }\n\n    public com.google.javascript.rhino.jstype.RecordTypeBuilder addProperty(java.lang.String name, com.google.javascript.rhino.jstype.JSType type, com.google.javascript.rhino.Node propertyNode) {\n        isEmpty = false;\n        if (properties.containsKey(name)) {\n            return null;\n        }\n        properties.put(name, new com.google.javascript.rhino.jstype.RecordTypeBuilder.RecordProperty(type, propertyNode));\n        return this;\n    }\n\n    public com.google.javascript.rhino.jstype.JSType build() {\n        if (isEmpty) {\n            return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n        }\n        return new com.google.javascript.rhino.jstype.RecordType(registry, java.util.Collections.unmodifiableMap(properties), isDeclared);\n    }\n\n    static class RecordProperty {\n        private final com.google.javascript.rhino.jstype.JSType type;\n\n        private final com.google.javascript.rhino.Node propertyNode;\n\n        RecordProperty(com.google.javascript.rhino.jstype.JSType type, com.google.javascript.rhino.Node propertyNode) {\n            this.type = type;\n            this.propertyNode = propertyNode;\n        }\n\n        public com.google.javascript.rhino.jstype.JSType getType() {\n            return type;\n        }\n\n        public com.google.javascript.rhino.Node getPropertyNode() {\n            return propertyNode;\n        }\n    }\n}",
            "src_parent_type": "Class",
            "src_type": "Method"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Return",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "isDeclared",
            "src_parent": "new com.google.javascript.rhino.jstype.RecordType(registry, java.util.Collections.unmodifiableMap(properties), isDeclared)",
            "src_parent_type": "ConstructorCall",
            "src_type": "FieldRead"
          }
        }
      ],
      "file_name": "RecordTypeBuilder"
    }
  ],
  "id": "Closure_165"
}