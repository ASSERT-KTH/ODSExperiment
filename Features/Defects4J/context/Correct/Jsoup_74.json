{
  "files": [
    {
      "features": [
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Method",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "public static boolean isInvisibleChar(int c) {\n    return (java.lang.Character.getType(c) == 16) && ((((c == 8203) || (c == 8204)) || (c == 8205)) || (c == 173));\n}",
            "src_parent": "public final class StringUtil {\n    static final java.lang.String[] padding = new java.lang.String[]{ \"\", \" \", \"  \", \"   \", \"    \", \"     \", \"      \", \"       \", \"        \", \"         \", \"          \", \"           \", \"            \", \"             \", \"              \", \"               \", \"                \", \"                 \", \"                  \", \"                   \", \"                    \" };\n\n    public static java.lang.String join(java.util.Collection strings, java.lang.String sep) {\n        return org.jsoup.helper.StringUtil.join(strings.iterator(), sep);\n    }\n\n    public static java.lang.String join(java.util.Iterator strings, java.lang.String sep) {\n        if (!strings.hasNext()) {\n            return \"\";\n        }\n        java.lang.String start = strings.next().toString();\n        if (!strings.hasNext()) {\n            return start;\n        }\n        java.lang.StringBuilder sb = new java.lang.StringBuilder(64).append(start);\n        while (strings.hasNext()) {\n            sb.append(sep);\n            sb.append(strings.next());\n        } \n        return sb.toString();\n    }\n\n    public static java.lang.String join(java.lang.String[] strings, java.lang.String sep) {\n        return org.jsoup.helper.StringUtil.join(java.util.Arrays.asList(strings), sep);\n    }\n\n    public static java.lang.String padding(int width) {\n        if (width < 0) {\n            throw new java.lang.IllegalArgumentException(\"width must be > 0\");\n        }\n        if (width < org.jsoup.helper.StringUtil.padding.length) {\n            return org.jsoup.helper.StringUtil.padding[width];\n        }\n        char[] out = new char[width];\n        for (int i = 0; i < width; i++) {\n            out[i] = ' ';\n        }\n        return java.lang.String.valueOf(out);\n    }\n\n    public static boolean isBlank(java.lang.String string) {\n        if ((string == null) || (string.length() == 0)) {\n            return true;\n        }\n        int l = string.length();\n        for (int i = 0; i < l; i++) {\n            if (!org.jsoup.helper.StringUtil.isWhitespace(string.codePointAt(i))) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    public static boolean isNumeric(java.lang.String string) {\n        if ((string == null) || (string.length() == 0)) {\n            return false;\n        }\n        int l = string.length();\n        for (int i = 0; i < l; i++) {\n            if (!java.lang.Character.isDigit(string.codePointAt(i))) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    public static boolean isWhitespace(int c) {\n        return ((((c == ' ') || (c == '\\t')) || (c == '\\n')) || (c == '\\f')) || (c == '\\r');\n    }\n\n    public static boolean isActuallyWhitespace(int c) {\n        return (((((c == ' ') || (c == '\\t')) || (c == '\\n')) || (c == '\\f')) || (c == '\\r')) || (c == 160);\n    }\n\n    public static boolean isInvisibleChar(int c) {\n        return (java.lang.Character.getType(c) == 16) && ((((c == 8203) || (c == 8204)) || (c == 8205)) || (c == 173));\n    }\n\n    public static java.lang.String normaliseWhitespace(java.lang.String string) {\n        java.lang.StringBuilder sb = org.jsoup.helper.StringUtil.stringBuilder();\n        org.jsoup.helper.StringUtil.appendNormalisedWhitespace(sb, string, false);\n        return sb.toString();\n    }\n\n    public static void appendNormalisedWhitespace(java.lang.StringBuilder accum, java.lang.String string, boolean stripLeading) {\n        boolean lastWasWhite = false;\n        boolean reachedNonWhite = false;\n        int len = string.length();\n        int c;\n        for (int i = 0; i < len; i += java.lang.Character.charCount(c)) {\n            c = string.codePointAt(i);\n            if (org.jsoup.helper.StringUtil.isActuallyWhitespace(c)) {\n                if ((stripLeading && (!reachedNonWhite)) || lastWasWhite) {\n                    continue;\n                }\n                accum.append(' ');\n                lastWasWhite = true;\n            } else if (!org.jsoup.helper.StringUtil.isInvisibleChar(c)) {\n                accum.appendCodePoint(c);\n                lastWasWhite = false;\n                reachedNonWhite = true;\n            }\n        }\n    }\n\n    public static boolean in(final java.lang.String needle, final java.lang.String... haystack) {\n        final int len = haystack.length;\n        for (int i = 0; i < len; i++) {\n            if (haystack[i].equals(needle)) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    public static boolean inSorted(java.lang.String needle, java.lang.String[] haystack) {\n        return java.util.Arrays.binarySearch(haystack, needle) >= 0;\n    }\n\n    public static java.net.URL resolve(java.net.URL base, java.lang.String relUrl) throws java.net.MalformedURLException {\n        if (relUrl.startsWith(\"?\")) {\n            relUrl = base.getPath() + relUrl;\n        }\n        if ((relUrl.indexOf('.') == 0) && (base.getFile().indexOf('/') != 0)) {\n            base = new java.net.URL(base.getProtocol(), base.getHost(), base.getPort(), \"/\" + base.getFile());\n        }\n        return new java.net.URL(base, relUrl);\n    }\n\n    public static java.lang.String resolve(final java.lang.String baseUrl, final java.lang.String relUrl) {\n        java.net.URL base;\n        try {\n            try {\n                base = new java.net.URL(baseUrl);\n            } catch (java.net.MalformedURLException e) {\n                java.net.URL abs = new java.net.URL(relUrl);\n                return abs.toExternalForm();\n            }\n            return org.jsoup.helper.StringUtil.resolve(base, relUrl).toExternalForm();\n        } catch (java.net.MalformedURLException e) {\n            return \"\";\n        }\n    }\n\n    public static java.lang.StringBuilder stringBuilder() {\n        java.lang.StringBuilder sb = org.jsoup.helper.StringUtil.stringLocal.get();\n        if (sb.length() > org.jsoup.helper.StringUtil.MaxCachedBuilderSize) {\n            sb = new java.lang.StringBuilder(org.jsoup.helper.StringUtil.MaxCachedBuilderSize);\n            org.jsoup.helper.StringUtil.stringLocal.set(sb);\n        } else {\n            sb.delete(0, sb.length());\n        }\n        return sb;\n    }\n\n    private static final int MaxCachedBuilderSize = 8 * 1024;\n\n    private static final java.lang.ThreadLocal<java.lang.StringBuilder> stringLocal = new java.lang.ThreadLocal<java.lang.StringBuilder>() {\n        @java.lang.Override\n        protected java.lang.StringBuilder initialValue() {\n            return new java.lang.StringBuilder(org.jsoup.helper.StringUtil.MaxCachedBuilderSize);\n        }\n    };\n}",
            "src_parent_type": "Class",
            "src_type": "Method"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "Assignment",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "For",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "if (!org.jsoup.helper.StringUtil.isInvisibleChar(c)) {\n    accum.appendCodePoint(c);\n    lastWasWhite = false;\n    reachedNonWhite = true;\n}",
            "src_parent": "{\n    if (!org.jsoup.helper.StringUtil.isInvisibleChar(c)) {\n        accum.appendCodePoint(c);\n        lastWasWhite = false;\n        reachedNonWhite = true;\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "If"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "accum.appendCodePoint(c)",
            "dst_parent": "{\n    accum.appendCodePoint(c);\n    lastWasWhite = false;\n    reachedNonWhite = true;\n}",
            "dst_parent_type": "Block",
            "dst_type": "Invocation",
            "operator": "MOV",
            "src": "accum.appendCodePoint(c)",
            "src_parent": "{\n    accum.appendCodePoint(c);\n    lastWasWhite = false;\n    reachedNonWhite = true;\n}",
            "src_parent_type": "Block",
            "src_type": "Invocation"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "lastWasWhite = false",
            "dst_parent": "{\n    accum.appendCodePoint(c);\n    lastWasWhite = false;\n    reachedNonWhite = true;\n}",
            "dst_parent_type": "Block",
            "dst_type": "Assignment",
            "operator": "MOV",
            "src": "lastWasWhite = false",
            "src_parent": "{\n    accum.appendCodePoint(c);\n    lastWasWhite = false;\n    reachedNonWhite = true;\n}",
            "src_parent_type": "Block",
            "src_type": "Assignment"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "reachedNonWhite = true",
            "dst_parent": "{\n    accum.appendCodePoint(c);\n    lastWasWhite = false;\n    reachedNonWhite = true;\n}",
            "dst_parent_type": "Block",
            "dst_type": "Assignment",
            "operator": "MOV",
            "src": "reachedNonWhite = true",
            "src_parent": "{\n    accum.appendCodePoint(c);\n    lastWasWhite = false;\n    reachedNonWhite = true;\n}",
            "src_parent_type": "Block",
            "src_type": "Assignment"
          }
        }
      ],
      "file_name": "StringUtil"
    }
  ],
  "id": "Jsoup_74"
}