{
  "files": [
    {
      "features": [
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "Switch",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "Throw",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "if (baseType.isPrimitive()) {\n    return null;\n}",
            "src_parent": "{\n    if (_idType == com.fasterxml.jackson.annotation.JsonTypeInfo.Id.NONE) {\n        return null;\n    }\n    if (baseType.isPrimitive()) {\n        return null;\n    }\n    com.fasterxml.jackson.databind.jsontype.TypeIdResolver idRes = idResolver(config, baseType, subtypes, true, false);\n    switch (_includeAs) {\n        case WRAPPER_ARRAY :\n            return new com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeSerializer(idRes, null);\n        case PROPERTY :\n            return new com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeSerializer(idRes, null, _typeProperty);\n        case WRAPPER_OBJECT :\n            return new com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer(idRes, null);\n        case EXTERNAL_PROPERTY :\n            return new com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeSerializer(idRes, null, _typeProperty);\n        case EXISTING_PROPERTY :\n            return new com.fasterxml.jackson.databind.jsontype.impl.AsExistingPropertyTypeSerializer(idRes, null, _typeProperty);\n    }\n    throw new java.lang.IllegalStateException(\"Do not know how to construct standard type serializer for inclusion type: \" + _includeAs);\n}",
            "src_parent_type": "Block",
            "src_type": "If"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "if (baseType.isPrimitive()) {\n    return null;\n}",
            "src_parent": "{\n    if (_idType == com.fasterxml.jackson.annotation.JsonTypeInfo.Id.NONE) {\n        return null;\n    }\n    if (baseType.isPrimitive()) {\n        return null;\n    }\n    com.fasterxml.jackson.databind.jsontype.TypeIdResolver idRes = idResolver(config, baseType, subtypes, false, true);\n    com.fasterxml.jackson.databind.JavaType defaultImpl;\n    if (_defaultImpl == null) {\n        defaultImpl = null;\n    } else if ((_defaultImpl == java.lang.Void.class) || (_defaultImpl == com.fasterxml.jackson.databind.annotation.NoClass.class)) {\n        defaultImpl = config.getTypeFactory().constructType(_defaultImpl);\n    } else {\n        defaultImpl = config.getTypeFactory().constructSpecializedType(baseType, _defaultImpl);\n    }\n    switch (_includeAs) {\n        case WRAPPER_ARRAY :\n            return new com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer(baseType, idRes, _typeProperty, _typeIdVisible, defaultImpl);\n        case PROPERTY :\n        case EXISTING_PROPERTY :\n            return new com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer(baseType, idRes, _typeProperty, _typeIdVisible, defaultImpl, _includeAs);\n        case WRAPPER_OBJECT :\n            return new com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer(baseType, idRes, _typeProperty, _typeIdVisible, defaultImpl);\n        case EXTERNAL_PROPERTY :\n            return new com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeDeserializer(baseType, idRes, _typeProperty, _typeIdVisible, defaultImpl);\n    }\n    throw new java.lang.IllegalStateException(\"Do not know how to construct standard type serializer for inclusion type: \" + _includeAs);\n}",
            "src_parent_type": "Block",
            "src_type": "If"
          }
        }
      ],
      "file_name": "StdTypeResolverBuilder"
    },
    {
      "features": [
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Switch",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "if (t.isPrimitive()) {\n    return false;\n}",
            "src_parent": "{\n    if (t.isPrimitive()) {\n        return false;\n    }\n    switch (_appliesFor) {\n        case NON_CONCRETE_AND_ARRAYS :\n            while (t.isArrayType()) {\n                t = t.getContentType();\n            } \n        case OBJECT_AND_NON_CONCRETE :\n            while (t.isReferenceType()) {\n                t = t.getReferencedType();\n            } \n            return t.isJavaLangObject() || ((!t.isConcrete()) && (!com.fasterxml.jackson.core.TreeNode.class.isAssignableFrom(t.getRawClass())));\n        case NON_FINAL :\n            while (t.isArrayType()) {\n                t = t.getContentType();\n            } \n            while (t.isReferenceType()) {\n                t = t.getReferencedType();\n            } \n            return (!t.isFinal()) && (!com.fasterxml.jackson.core.TreeNode.class.isAssignableFrom(t.getRawClass()));\n        default :\n            return t.isJavaLangObject();\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "If"
          }
        }
      ],
      "file_name": "ObjectMapper"
    }
  ],
  "id": "JacksonDatabind_61"
}