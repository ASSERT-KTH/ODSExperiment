{
  "files": [
    {
      "features": [
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Method",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "java.lang.Iterable<com.google.javascript.jscomp.Scope.Var> getVarIterable() {\n    return vars.values();\n}",
            "src_parent": "public class Scope implements com.google.javascript.rhino.jstype.StaticScope<com.google.javascript.rhino.jstype.JSType> , com.google.javascript.rhino.jstype.StaticSymbolTable<com.google.javascript.jscomp.Scope.Var, com.google.javascript.jscomp.Scope.Var> {\n    private final java.util.Map<java.lang.String, com.google.javascript.jscomp.Scope.Var> vars = new java.util.LinkedHashMap<java.lang.String, com.google.javascript.jscomp.Scope.Var>();\n\n    private final com.google.javascript.jscomp.Scope parent;\n\n    private final int depth;\n\n    private final com.google.javascript.rhino.Node rootNode;\n\n    private final com.google.javascript.rhino.jstype.ObjectType thisType;\n\n    private final boolean isBottom;\n\n    private com.google.javascript.jscomp.Scope.Var arguments;\n\n    private static final com.google.common.base.Predicate<com.google.javascript.jscomp.Scope.Var> DECLARATIVELY_UNBOUND_VARS_WITHOUT_TYPES = new com.google.common.base.Predicate<com.google.javascript.jscomp.Scope.Var>() {\n        @java.lang.Override\n        public boolean apply(com.google.javascript.jscomp.Scope.Var var) {\n            return (((var.getParentNode() != null) && (var.getType() == null)) && (var.getParentNode().getType() == com.google.javascript.rhino.Token.VAR)) && (!var.isExtern());\n        }\n    };\n\n    public static class Var implements com.google.javascript.rhino.jstype.StaticReference<com.google.javascript.rhino.jstype.JSType> , com.google.javascript.rhino.jstype.StaticSlot<com.google.javascript.rhino.jstype.JSType> {\n        final java.lang.String name;\n\n        final com.google.javascript.rhino.Node nameNode;\n\n        private com.google.javascript.rhino.jstype.JSType type;\n\n        private final com.google.javascript.rhino.JSDocInfo info;\n\n        private final boolean typeInferred;\n\n        final com.google.javascript.jscomp.CompilerInput input;\n\n        final boolean isDefine;\n\n        final int index;\n\n        final com.google.javascript.jscomp.Scope scope;\n\n        private Var(boolean inferred, java.lang.String name, com.google.javascript.rhino.Node nameNode, com.google.javascript.rhino.jstype.JSType type, com.google.javascript.jscomp.Scope scope, int index, com.google.javascript.jscomp.CompilerInput input, boolean isDefine, com.google.javascript.rhino.JSDocInfo info) {\n            this.name = name;\n            this.nameNode = nameNode;\n            this.type = type;\n            this.scope = scope;\n            this.index = index;\n            this.input = input;\n            this.isDefine = isDefine;\n            this.info = info;\n            this.typeInferred = inferred;\n        }\n\n        @java.lang.Override\n        public java.lang.String getName() {\n            return name;\n        }\n\n        @java.lang.Override\n        public com.google.javascript.rhino.Node getNode() {\n            return nameNode;\n        }\n\n        com.google.javascript.jscomp.CompilerInput getInput() {\n            return input;\n        }\n\n        @java.lang.Override\n        public com.google.javascript.rhino.jstype.StaticSourceFile getSourceFile() {\n            return nameNode.getStaticSourceFile();\n        }\n\n        @java.lang.Override\n        public com.google.javascript.jscomp.Scope.Var getSymbol() {\n            return this;\n        }\n\n        @java.lang.Override\n        public com.google.javascript.jscomp.Scope.Var getDeclaration() {\n            return nameNode == null ? null : this;\n        }\n\n        public com.google.javascript.rhino.Node getParentNode() {\n            return nameNode == null ? null : nameNode.getParent();\n        }\n\n        public boolean isBleedingFunction() {\n            return com.google.javascript.jscomp.NodeUtil.isFunctionExpression(getParentNode());\n        }\n\n        com.google.javascript.jscomp.Scope getScope() {\n            return scope;\n        }\n\n        public boolean isGlobal() {\n            return scope.isGlobal();\n        }\n\n        public boolean isLocal() {\n            return scope.isLocal();\n        }\n\n        boolean isExtern() {\n            return (input == null) || input.isExtern();\n        }\n\n        public boolean isConst() {\n            return (nameNode != null) && com.google.javascript.jscomp.NodeUtil.isConstantName(nameNode);\n        }\n\n        public boolean isDefine() {\n            return isDefine;\n        }\n\n        public com.google.javascript.rhino.Node getInitialValue() {\n            com.google.javascript.rhino.Node parent = getParentNode();\n            int pType = parent.getType();\n            if (pType == com.google.javascript.rhino.Token.FUNCTION) {\n                return parent;\n            } else if (pType == com.google.javascript.rhino.Token.ASSIGN) {\n                return parent.getLastChild();\n            } else if (pType == com.google.javascript.rhino.Token.VAR) {\n                return nameNode.getFirstChild();\n            } else {\n                return null;\n            }\n        }\n\n        @java.lang.Override\n        public com.google.javascript.rhino.jstype.JSType getType() {\n            return type;\n        }\n\n        public com.google.javascript.rhino.Node getNameNode() {\n            return nameNode;\n        }\n\n        public com.google.javascript.rhino.JSDocInfo getJSDocInfo() {\n            return info;\n        }\n\n        void setType(com.google.javascript.rhino.jstype.JSType type) {\n            com.google.common.base.Preconditions.checkState(isTypeInferred());\n            this.type = type;\n        }\n\n        void resolveType(com.google.javascript.rhino.ErrorReporter errorReporter) {\n            if (type != null) {\n                type = type.resolve(errorReporter, scope);\n            }\n        }\n\n        @java.lang.Override\n        public boolean isTypeInferred() {\n            return typeInferred;\n        }\n\n        public java.lang.String getInputName() {\n            if (input == null) {\n                return \"<non-file>\";\n            } else {\n                return input.getName();\n            }\n        }\n\n        public boolean isNoShadow() {\n            if ((info != null) && info.isNoShadow()) {\n                return true;\n            } else {\n                return false;\n            }\n        }\n\n        @java.lang.Override\n        public boolean equals(java.lang.Object other) {\n            if (!(other instanceof com.google.javascript.jscomp.Scope.Var)) {\n                return false;\n            }\n            com.google.javascript.jscomp.Scope.Var otherVar = ((com.google.javascript.jscomp.Scope.Var) (other));\n            return otherVar.nameNode == nameNode;\n        }\n\n        @java.lang.Override\n        public int hashCode() {\n            return nameNode.hashCode();\n        }\n\n        @java.lang.Override\n        public java.lang.String toString() {\n            return (((\"Scope.Var \" + name) + \"{\") + type) + \"}\";\n        }\n    }\n\n    public static class Arguments extends com.google.javascript.jscomp.Scope.Var {\n        Arguments(com.google.javascript.jscomp.Scope scope) {\n            super(false, \"arguments\", null, null, scope, -1, null, false, null);\n        }\n\n        @java.lang.Override\n        public boolean equals(java.lang.Object other) {\n            if (!(other instanceof com.google.javascript.jscomp.Scope.Arguments)) {\n                return false;\n            }\n            com.google.javascript.jscomp.Scope.Arguments otherVar = ((com.google.javascript.jscomp.Scope.Arguments) (other));\n            return otherVar.scope.getRootNode() == scope.getRootNode();\n        }\n\n        @java.lang.Override\n        public int hashCode() {\n            return java.lang.System.identityHashCode(this);\n        }\n    }\n\n    Scope(com.google.javascript.jscomp.Scope parent, com.google.javascript.rhino.Node rootNode) {\n        com.google.common.base.Preconditions.checkNotNull(parent);\n        com.google.common.base.Preconditions.checkArgument(rootNode != parent.rootNode);\n        this.parent = parent;\n        this.rootNode = rootNode;\n        com.google.javascript.rhino.jstype.JSType nodeType = rootNode.getJSType();\n        if ((nodeType != null) && nodeType.isFunctionType()) {\n            thisType = nodeType.toMaybeFunctionType().getTypeOfThis();\n        } else {\n            thisType = parent.thisType;\n        }\n        this.isBottom = false;\n        this.depth = parent.depth + 1;\n    }\n\n    Scope(com.google.javascript.rhino.Node rootNode, com.google.javascript.jscomp.AbstractCompiler compiler) {\n        this.parent = null;\n        this.rootNode = rootNode;\n        thisType = compiler.getTypeRegistry().getNativeObjectType(com.google.javascript.jscomp.GLOBAL_THIS);\n        this.isBottom = false;\n        this.depth = 0;\n    }\n\n    Scope(com.google.javascript.rhino.Node rootNode, com.google.javascript.rhino.jstype.ObjectType thisType) {\n        this.parent = null;\n        this.rootNode = rootNode;\n        this.thisType = thisType;\n        this.isBottom = true;\n        this.depth = 0;\n    }\n\n    int getDepth() {\n        return depth;\n    }\n\n    boolean isBottom() {\n        return isBottom;\n    }\n\n    @java.lang.Override\n    public com.google.javascript.rhino.Node getRootNode() {\n        return rootNode;\n    }\n\n    public com.google.javascript.jscomp.Scope getParent() {\n        return parent;\n    }\n\n    com.google.javascript.jscomp.Scope getGlobalScope() {\n        com.google.javascript.jscomp.Scope result = this;\n        while (result.getParent() != null) {\n            result = result.getParent();\n        } \n        return result;\n    }\n\n    @java.lang.Override\n    public com.google.javascript.rhino.jstype.StaticScope<com.google.javascript.rhino.jstype.JSType> getParentScope() {\n        return parent;\n    }\n\n    @java.lang.Override\n    public com.google.javascript.rhino.jstype.ObjectType getTypeOfThis() {\n        return thisType;\n    }\n\n    com.google.javascript.jscomp.Scope.Var declare(java.lang.String name, com.google.javascript.rhino.Node nameNode, com.google.javascript.rhino.jstype.JSType type, com.google.javascript.jscomp.CompilerInput input) {\n        return declare(name, nameNode, type, input, true);\n    }\n\n    com.google.javascript.jscomp.Scope.Var declare(java.lang.String name, com.google.javascript.rhino.Node nameNode, com.google.javascript.rhino.jstype.JSType type, com.google.javascript.jscomp.CompilerInput input, boolean inferred) {\n        com.google.common.base.Preconditions.checkState((name != null) && (name.length() > 0));\n        com.google.common.base.Preconditions.checkState(vars.get(name) == null);\n        com.google.javascript.rhino.JSDocInfo info = com.google.javascript.jscomp.NodeUtil.getInfoForNameNode(nameNode);\n        com.google.javascript.jscomp.Scope.Var var = new com.google.javascript.jscomp.Scope.Var(inferred, name, nameNode, type, this, vars.size(), input, (info != null) && info.isDefine(), info);\n        vars.put(name, var);\n        return var;\n    }\n\n    void undeclare(com.google.javascript.jscomp.Scope.Var var) {\n        com.google.common.base.Preconditions.checkState(var.scope == this);\n        com.google.common.base.Preconditions.checkState(vars.get(var.name) == var);\n        vars.remove(var.name);\n    }\n\n    @java.lang.Override\n    public com.google.javascript.rhino.jstype.StaticSlot<com.google.javascript.rhino.jstype.JSType> getSlot(java.lang.String name) {\n        return getVar(name);\n    }\n\n    @java.lang.Override\n    public com.google.javascript.rhino.jstype.StaticSlot<com.google.javascript.rhino.jstype.JSType> getOwnSlot(java.lang.String name) {\n        return vars.get(name);\n    }\n\n    public com.google.javascript.jscomp.Scope.Var getVar(java.lang.String name) {\n        com.google.javascript.jscomp.Scope.Var var = vars.get(name);\n        if (var != null) {\n            return var;\n        } else if (parent != null) {\n            return parent.getVar(name);\n        } else {\n            return null;\n        }\n    }\n\n    public com.google.javascript.jscomp.Scope.Var getArgumentsVar() {\n        if (arguments == null) {\n            arguments = new com.google.javascript.jscomp.Scope.Arguments(this);\n        }\n        return arguments;\n    }\n\n    public boolean isDeclared(java.lang.String name, boolean recurse) {\n        com.google.javascript.jscomp.Scope scope = this;\n        if (scope.vars.containsKey(name)) {\n            return true;\n        }\n        if ((scope.parent != null) && recurse) {\n            return scope.parent.isDeclared(name, recurse);\n        }\n        return false;\n    }\n\n    public java.util.Iterator<com.google.javascript.jscomp.Scope.Var> getVars() {\n        return vars.values().iterator();\n    }\n\n    java.lang.Iterable<com.google.javascript.jscomp.Scope.Var> getVarIterable() {\n        return vars.values();\n    }\n\n    @java.lang.Override\n    public java.lang.Iterable<com.google.javascript.jscomp.Scope.Var> getReferences(com.google.javascript.jscomp.Scope.Var var) {\n        return com.google.common.collect.ImmutableList.of(var);\n    }\n\n    @java.lang.Override\n    public com.google.javascript.rhino.jstype.StaticScope<com.google.javascript.rhino.jstype.JSType> getScope(com.google.javascript.jscomp.Scope.Var var) {\n        return var.scope;\n    }\n\n    @java.lang.Override\n    public java.lang.Iterable<com.google.javascript.jscomp.Scope.Var> getAllSymbols() {\n        return java.util.Collections.unmodifiableCollection(vars.values());\n    }\n\n    public int getVarCount() {\n        return vars.size();\n    }\n\n    public boolean isGlobal() {\n        return parent == null;\n    }\n\n    public boolean isLocal() {\n        return !isGlobal();\n    }\n\n    public java.util.Iterator<com.google.javascript.jscomp.Scope.Var> getDeclarativelyUnboundVarsWithoutTypes() {\n        return com.google.common.collect.Iterators.filter(getVars(), com.google.javascript.jscomp.Scope.DECLARATIVELY_UNBOUND_VARS_WITHOUT_TYPES);\n    }\n}",
            "src_parent_type": "Class",
            "src_type": "Method"
          }
        }
      ],
      "file_name": "Scope"
    },
    {
      "features": [
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "n.getType() == com.google.javascript.rhino.Token.NAME",
            "dst_parent": "if (n.getType() == com.google.javascript.rhino.Token.NAME) {\n    java.lang.String name = n.getString();\n    com.google.javascript.jscomp.Scope.Var aliasVar = aliases.get(name);\n    if ((aliasVar != null) && (t.getScope().getVar(name) == aliasVar)) {\n        com.google.javascript.rhino.Node aliasedNode = aliasVar.getInitialValue();\n        aliasUsages.add(new com.google.javascript.jscomp.ScopedAliases.AliasedNode(n, aliasedNode));\n    }\n}",
            "dst_parent_type": "If",
            "dst_type": "BinaryOperator",
            "operator": "UPD",
            "src": "(aliasVar != null) && com.google.javascript.jscomp.NodeUtil.isLValue(n)",
            "src_parent": "if ((aliasVar != null) && com.google.javascript.jscomp.NodeUtil.isLValue(n)) {\n    if (aliasVar.getNode() == n) {\n        aliasDefinitionsInOrder.add(n);\n        return;\n    } else {\n        report(t, n, com.google.javascript.jscomp.ScopedAliases.GOOG_SCOPE_ALIAS_REDEFINED, n.getString());\n    }\n}",
            "src_parent_type": "If",
            "src_type": "BinaryOperator"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "((type == com.google.javascript.rhino.Token.NAME) && com.google.javascript.jscomp.NodeUtil.isAssignmentOp(parent))",
            "dst_parent": "((type == com.google.javascript.rhino.Token.NAME) && com.google.javascript.jscomp.NodeUtil.isAssignmentOp(parent)) && (n == parent.getFirstChild())",
            "dst_parent_type": "BinaryOperator",
            "dst_type": "BinaryOperator",
            "operator": "UPD",
            "src": "(lexicalVar != null)",
            "src_parent": "(lexicalVar != null) && (lexicalVar == aliases.get(name))",
            "src_parent_type": "BinaryOperator",
            "src_type": "BinaryOperator"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "n.getType()",
            "dst_parent": "n.getType() == com.google.javascript.rhino.Token.NAME",
            "dst_parent_type": "BinaryOperator",
            "dst_type": "Invocation",
            "operator": "UPD",
            "src": "com.google.javascript.jscomp.NodeUtil.isLValue(n)",
            "src_parent": "(aliasVar != null) && com.google.javascript.jscomp.NodeUtil.isLValue(n)",
            "src_parent_type": "BinaryOperator",
            "src_type": "Invocation"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "n",
            "dst_parent": "(n == parent.getFirstChild())",
            "dst_parent_type": "BinaryOperator",
            "dst_type": "VariableRead",
            "operator": "UPD",
            "src": "lexicalVar",
            "src_parent": "(lexicalVar == aliases.get(name))",
            "src_parent_type": "BinaryOperator",
            "src_type": "VariableRead"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "t.getScope().getVar(name)",
            "dst_parent": "(t.getScope().getVar(name) == aliasVar)",
            "dst_parent_type": "BinaryOperator",
            "dst_type": "Invocation",
            "operator": "UPD",
            "src": "aliasVar.getNode()",
            "src_parent": "aliasVar.getNode() == n",
            "src_parent_type": "BinaryOperator",
            "src_type": "Invocation"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "aliasVar",
            "dst_parent": "(t.getScope().getVar(name) == aliasVar)",
            "dst_parent_type": "BinaryOperator",
            "dst_type": "VariableRead",
            "operator": "UPD",
            "src": "n",
            "src_parent": "aliasVar.getNode() == n",
            "src_parent_type": "BinaryOperator",
            "src_type": "VariableRead"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "name",
            "dst_parent": "t.getScope().getVar(name)",
            "dst_parent_type": "Invocation",
            "dst_type": "VariableRead",
            "operator": "UPD",
            "src": "aliasVar",
            "src_parent": "aliasVar.getNode()",
            "src_parent_type": "Invocation",
            "src_type": "VariableRead"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "findAliases(t)",
            "src_parent": "{\n    transformation = transformationHandler.logAliasTransformation(n.getSourceFileName(), getSourceRegion(n));\n    findAliases(t);\n}",
            "src_parent_type": "Block",
            "src_type": "Invocation"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Method",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "private void findAliases(com.google.javascript.jscomp.NodeTraversal t) {\n    com.google.javascript.jscomp.Scope scope = t.getScope();\n    for (com.google.javascript.jscomp.Scope.Var v : scope.getVarIterable()) {\n        com.google.javascript.rhino.Node n = v.getNode();\n        int type = n.getType();\n        com.google.javascript.rhino.Node parent = n.getParent();\n        if (parent.getType() == com.google.javascript.rhino.Token.VAR) {\n            if (n.hasChildren() && n.getFirstChild().isQualifiedName()) {\n                java.lang.String name = n.getString();\n                com.google.javascript.jscomp.Scope.Var aliasVar = scope.getVar(name);\n                aliases.put(name, aliasVar);\n                java.lang.String qualifiedName = aliasVar.getInitialValue().getQualifiedName();\n                transformation.addAlias(name, qualifiedName);\n            } else {\n                report(t, n, com.google.javascript.jscomp.ScopedAliases.GOOG_SCOPE_NON_ALIAS_LOCAL, n.getString());\n            }\n        }\n    }\n}",
            "src_parent": "private class Traversal implements com.google.javascript.jscomp.NodeTraversal.ScopedCallback {\n    private final java.util.List<com.google.javascript.rhino.Node> aliasDefinitionsInOrder = com.google.common.collect.Lists.newArrayList();\n\n    private final java.util.List<com.google.javascript.rhino.Node> scopeCalls = com.google.common.collect.Lists.newArrayList();\n\n    private final java.util.List<com.google.javascript.jscomp.ScopedAliases.AliasUsage> aliasUsages = com.google.common.collect.Lists.newArrayList();\n\n    private final java.util.Map<java.lang.String, com.google.javascript.jscomp.Scope.Var> aliases = com.google.common.collect.Maps.newHashMap();\n\n    private boolean hasErrors = false;\n\n    private com.google.javascript.jscomp.CompilerOptions.AliasTransformation transformation = null;\n\n    java.util.Collection<com.google.javascript.rhino.Node> getAliasDefinitionsInOrder() {\n        return aliasDefinitionsInOrder;\n    }\n\n    private java.util.List<com.google.javascript.jscomp.ScopedAliases.AliasUsage> getAliasUsages() {\n        return aliasUsages;\n    }\n\n    java.util.List<com.google.javascript.rhino.Node> getScopeCalls() {\n        return scopeCalls;\n    }\n\n    boolean hasErrors() {\n        return hasErrors;\n    }\n\n    private boolean isCallToScopeMethod(com.google.javascript.rhino.Node n) {\n        return (n.getType() == com.google.javascript.rhino.Token.CALL) && com.google.javascript.jscomp.ScopedAliases.SCOPING_METHOD_NAME.equals(n.getFirstChild().getQualifiedName());\n    }\n\n    @java.lang.Override\n    public void enterScope(com.google.javascript.jscomp.NodeTraversal t) {\n        com.google.javascript.rhino.Node n = t.getCurrentNode().getParent();\n        if ((n != null) && isCallToScopeMethod(n)) {\n            transformation = transformationHandler.logAliasTransformation(n.getSourceFileName(), getSourceRegion(n));\n            findAliases(t);\n        }\n    }\n\n    @java.lang.Override\n    public void exitScope(com.google.javascript.jscomp.NodeTraversal t) {\n        if (t.getScopeDepth() == 2) {\n            aliases.clear();\n            transformation = null;\n        }\n    }\n\n    @java.lang.Override\n    public final boolean shouldTraverse(com.google.javascript.jscomp.NodeTraversal t, com.google.javascript.rhino.Node n, com.google.javascript.rhino.Node parent) {\n        if ((n.getType() == com.google.javascript.rhino.Token.FUNCTION) && t.inGlobalScope()) {\n            if ((parent == null) || (!isCallToScopeMethod(parent))) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    private com.google.javascript.rhino.SourcePosition<com.google.javascript.jscomp.CompilerOptions.AliasTransformation> getSourceRegion(com.google.javascript.rhino.Node n) {\n        com.google.javascript.rhino.Node testNode = n;\n        com.google.javascript.rhino.Node next = null;\n        for (; (next != null) || (testNode.getType() == com.google.javascript.rhino.Token.SCRIPT);) {\n            next = testNode.getNext();\n            testNode = testNode.getParent();\n        }\n        int endLine = (next == null) ? java.lang.Integer.MAX_VALUE : next.getLineno();\n        int endChar = (next == null) ? java.lang.Integer.MAX_VALUE : next.getCharno();\n        com.google.javascript.rhino.SourcePosition<com.google.javascript.jscomp.CompilerOptions.AliasTransformation> pos = new com.google.javascript.rhino.SourcePosition<com.google.javascript.jscomp.CompilerOptions.AliasTransformation>() {};\n        pos.setPositionInformation(n.getLineno(), n.getCharno(), endLine, endChar);\n        return pos;\n    }\n\n    private void report(com.google.javascript.jscomp.NodeTraversal t, com.google.javascript.rhino.Node n, com.google.javascript.jscomp.DiagnosticType error, java.lang.String... arguments) {\n        compiler.report(t.makeError(n, error, arguments));\n        hasErrors = true;\n    }\n\n    private void findAliases(com.google.javascript.jscomp.NodeTraversal t) {\n        com.google.javascript.jscomp.Scope scope = t.getScope();\n        for (com.google.javascript.jscomp.Scope.Var v : scope.getVarIterable()) {\n            com.google.javascript.rhino.Node n = v.getNode();\n            int type = n.getType();\n            com.google.javascript.rhino.Node parent = n.getParent();\n            if (parent.getType() == com.google.javascript.rhino.Token.VAR) {\n                if (n.hasChildren() && n.getFirstChild().isQualifiedName()) {\n                    java.lang.String name = n.getString();\n                    com.google.javascript.jscomp.Scope.Var aliasVar = scope.getVar(name);\n                    aliases.put(name, aliasVar);\n                    java.lang.String qualifiedName = aliasVar.getInitialValue().getQualifiedName();\n                    transformation.addAlias(name, qualifiedName);\n                } else {\n                    report(t, n, com.google.javascript.jscomp.ScopedAliases.GOOG_SCOPE_NON_ALIAS_LOCAL, n.getString());\n                }\n            }\n        }\n    }\n\n    private void validateScopeCall(com.google.javascript.jscomp.NodeTraversal t, com.google.javascript.rhino.Node n, com.google.javascript.rhino.Node parent) {\n        if (preprocessorSymbolTable != null) {\n            preprocessorSymbolTable.addReference(n.getFirstChild());\n        }\n        if (!com.google.javascript.jscomp.NodeUtil.isExpressionNode(parent)) {\n            report(t, n, com.google.javascript.jscomp.ScopedAliases.GOOG_SCOPE_USED_IMPROPERLY);\n        }\n        if (n.getChildCount() != 2) {\n            report(t, n, com.google.javascript.jscomp.ScopedAliases.GOOG_SCOPE_HAS_BAD_PARAMETERS);\n        } else {\n            com.google.javascript.rhino.Node anonymousFnNode = n.getChildAtIndex(1);\n            if (((!com.google.javascript.jscomp.NodeUtil.isFunction(anonymousFnNode)) || (com.google.javascript.jscomp.NodeUtil.getFunctionName(anonymousFnNode) != null)) || com.google.javascript.jscomp.NodeUtil.getFunctionParameters(anonymousFnNode).hasChildren()) {\n                report(t, anonymousFnNode, com.google.javascript.jscomp.ScopedAliases.GOOG_SCOPE_HAS_BAD_PARAMETERS);\n            } else {\n                scopeCalls.add(n);\n            }\n        }\n    }\n\n    @java.lang.Override\n    public void visit(com.google.javascript.jscomp.NodeTraversal t, com.google.javascript.rhino.Node n, com.google.javascript.rhino.Node parent) {\n        if (isCallToScopeMethod(n)) {\n            validateScopeCall(t, n, n.getParent());\n        }\n        if (t.getScopeDepth() < 2) {\n            return;\n        }\n        int type = n.getType();\n        com.google.javascript.jscomp.Scope.Var aliasVar = null;\n        if (type == com.google.javascript.rhino.Token.NAME) {\n            java.lang.String name = n.getString();\n            com.google.javascript.jscomp.Scope.Var lexicalVar = t.getScope().getVar(n.getString());\n            if ((lexicalVar != null) && (lexicalVar == aliases.get(name))) {\n                aliasVar = lexicalVar;\n            }\n        }\n        if (t.getScopeDepth() == 2) {\n            if ((aliasVar != null) && com.google.javascript.jscomp.NodeUtil.isLValue(n)) {\n                if (aliasVar.getNode() == n) {\n                    aliasDefinitionsInOrder.add(n);\n                    return;\n                } else {\n                    report(t, n, com.google.javascript.jscomp.ScopedAliases.GOOG_SCOPE_ALIAS_REDEFINED, n.getString());\n                }\n            }\n            if (type == com.google.javascript.rhino.Token.RETURN) {\n                report(t, n, com.google.javascript.jscomp.ScopedAliases.GOOG_SCOPE_USES_RETURN);\n            } else if (type == com.google.javascript.rhino.Token.THIS) {\n                report(t, n, com.google.javascript.jscomp.ScopedAliases.GOOG_SCOPE_REFERENCES_THIS);\n            } else if (type == com.google.javascript.rhino.Token.THROW) {\n                report(t, n, com.google.javascript.jscomp.ScopedAliases.GOOG_SCOPE_USES_THROW);\n            }\n        }\n        if (t.getScopeDepth() >= 2) {\n            if (aliasVar != null) {\n                com.google.javascript.rhino.Node aliasedNode = aliasVar.getInitialValue();\n                aliasUsages.add(new com.google.javascript.jscomp.ScopedAliases.AliasedNode(n, aliasedNode));\n            }\n            com.google.javascript.rhino.JSDocInfo info = n.getJSDocInfo();\n            if (info != null) {\n                for (com.google.javascript.rhino.Node node : info.getTypeNodes()) {\n                    fixTypeNode(node);\n                }\n            }\n        }\n    }\n\n    private void fixTypeNode(com.google.javascript.rhino.Node typeNode) {\n        if (typeNode.getType() == com.google.javascript.rhino.Token.STRING) {\n            java.lang.String name = typeNode.getString();\n            int endIndex = name.indexOf('.');\n            if (endIndex == (-1)) {\n                endIndex = name.length();\n            }\n            java.lang.String baseName = name.substring(0, endIndex);\n            com.google.javascript.jscomp.Scope.Var aliasVar = aliases.get(baseName);\n            if (aliasVar != null) {\n                com.google.javascript.rhino.Node aliasedNode = aliasVar.getInitialValue();\n                aliasUsages.add(new com.google.javascript.jscomp.ScopedAliases.AliasedTypeNode(typeNode, aliasedNode.getQualifiedName() + name.substring(endIndex)));\n            }\n        }\n        for (com.google.javascript.rhino.Node child = typeNode.getFirstChild(); child != null; child = child.getNext()) {\n            fixTypeNode(child);\n        }\n    }\n}",
            "src_parent_type": "Class",
            "src_type": "Method"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "if (t.getScopeDepth() < 2) {\n    return;\n}",
            "src_parent": "{\n    if (isCallToScopeMethod(n)) {\n        validateScopeCall(t, n, n.getParent());\n    }\n    if (t.getScopeDepth() < 2) {\n        return;\n    }\n    int type = n.getType();\n    com.google.javascript.jscomp.Scope.Var aliasVar = null;\n    if (type == com.google.javascript.rhino.Token.NAME) {\n        java.lang.String name = n.getString();\n        com.google.javascript.jscomp.Scope.Var lexicalVar = t.getScope().getVar(n.getString());\n        if ((lexicalVar != null) && (lexicalVar == aliases.get(name))) {\n            aliasVar = lexicalVar;\n        }\n    }\n    if (t.getScopeDepth() == 2) {\n        if ((aliasVar != null) && com.google.javascript.jscomp.NodeUtil.isLValue(n)) {\n            if (aliasVar.getNode() == n) {\n                aliasDefinitionsInOrder.add(n);\n                return;\n            } else {\n                report(t, n, com.google.javascript.jscomp.ScopedAliases.GOOG_SCOPE_ALIAS_REDEFINED, n.getString());\n            }\n        }\n        if (type == com.google.javascript.rhino.Token.RETURN) {\n            report(t, n, com.google.javascript.jscomp.ScopedAliases.GOOG_SCOPE_USES_RETURN);\n        } else if (type == com.google.javascript.rhino.Token.THIS) {\n            report(t, n, com.google.javascript.jscomp.ScopedAliases.GOOG_SCOPE_REFERENCES_THIS);\n        } else if (type == com.google.javascript.rhino.Token.THROW) {\n            report(t, n, com.google.javascript.jscomp.ScopedAliases.GOOG_SCOPE_USES_THROW);\n        }\n    }\n    if (t.getScopeDepth() >= 2) {\n        if (aliasVar != null) {\n            com.google.javascript.rhino.Node aliasedNode = aliasVar.getInitialValue();\n            aliasUsages.add(new com.google.javascript.jscomp.ScopedAliases.AliasedNode(n, aliasedNode));\n        }\n        com.google.javascript.rhino.JSDocInfo info = n.getJSDocInfo();\n        if (info != null) {\n            for (com.google.javascript.rhino.Node node : info.getTypeNodes()) {\n                fixTypeNode(node);\n            }\n        }\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "If"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "LocalVariable",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "int type = n.getType()",
            "src_parent": "{\n    if (isCallToScopeMethod(n)) {\n        validateScopeCall(t, n, n.getParent());\n    }\n    if (t.getScopeDepth() < 2) {\n        return;\n    }\n    int type = n.getType();\n    com.google.javascript.jscomp.Scope.Var aliasVar = null;\n    if (type == com.google.javascript.rhino.Token.NAME) {\n        java.lang.String name = n.getString();\n        com.google.javascript.jscomp.Scope.Var lexicalVar = t.getScope().getVar(n.getString());\n        if ((lexicalVar != null) && (lexicalVar == aliases.get(name))) {\n            aliasVar = lexicalVar;\n        }\n    }\n    if (t.getScopeDepth() == 2) {\n        if ((aliasVar != null) && com.google.javascript.jscomp.NodeUtil.isLValue(n)) {\n            if (aliasVar.getNode() == n) {\n                aliasDefinitionsInOrder.add(n);\n                return;\n            } else {\n                report(t, n, com.google.javascript.jscomp.ScopedAliases.GOOG_SCOPE_ALIAS_REDEFINED, n.getString());\n            }\n        }\n        if (type == com.google.javascript.rhino.Token.RETURN) {\n            report(t, n, com.google.javascript.jscomp.ScopedAliases.GOOG_SCOPE_USES_RETURN);\n        } else if (type == com.google.javascript.rhino.Token.THIS) {\n            report(t, n, com.google.javascript.jscomp.ScopedAliases.GOOG_SCOPE_REFERENCES_THIS);\n        } else if (type == com.google.javascript.rhino.Token.THROW) {\n            report(t, n, com.google.javascript.jscomp.ScopedAliases.GOOG_SCOPE_USES_THROW);\n        }\n    }\n    if (t.getScopeDepth() >= 2) {\n        if (aliasVar != null) {\n            com.google.javascript.rhino.Node aliasedNode = aliasVar.getInitialValue();\n            aliasUsages.add(new com.google.javascript.jscomp.ScopedAliases.AliasedNode(n, aliasedNode));\n        }\n        com.google.javascript.rhino.JSDocInfo info = n.getJSDocInfo();\n        if (info != null) {\n            for (com.google.javascript.rhino.Node node : info.getTypeNodes()) {\n                fixTypeNode(node);\n            }\n        }\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "LocalVariable"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "If",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "LocalVariable",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "com.google.javascript.jscomp.Scope.Var aliasVar = null",
            "src_parent": "{\n    if (isCallToScopeMethod(n)) {\n        validateScopeCall(t, n, n.getParent());\n    }\n    if (t.getScopeDepth() < 2) {\n        return;\n    }\n    int type = n.getType();\n    com.google.javascript.jscomp.Scope.Var aliasVar = null;\n    if (type == com.google.javascript.rhino.Token.NAME) {\n        java.lang.String name = n.getString();\n        com.google.javascript.jscomp.Scope.Var lexicalVar = t.getScope().getVar(n.getString());\n        if ((lexicalVar != null) && (lexicalVar == aliases.get(name))) {\n            aliasVar = lexicalVar;\n        }\n    }\n    if (t.getScopeDepth() == 2) {\n        if ((aliasVar != null) && com.google.javascript.jscomp.NodeUtil.isLValue(n)) {\n            if (aliasVar.getNode() == n) {\n                aliasDefinitionsInOrder.add(n);\n                return;\n            } else {\n                report(t, n, com.google.javascript.jscomp.ScopedAliases.GOOG_SCOPE_ALIAS_REDEFINED, n.getString());\n            }\n        }\n        if (type == com.google.javascript.rhino.Token.RETURN) {\n            report(t, n, com.google.javascript.jscomp.ScopedAliases.GOOG_SCOPE_USES_RETURN);\n        } else if (type == com.google.javascript.rhino.Token.THIS) {\n            report(t, n, com.google.javascript.jscomp.ScopedAliases.GOOG_SCOPE_REFERENCES_THIS);\n        } else if (type == com.google.javascript.rhino.Token.THROW) {\n            report(t, n, com.google.javascript.jscomp.ScopedAliases.GOOG_SCOPE_USES_THROW);\n        }\n    }\n    if (t.getScopeDepth() >= 2) {\n        if (aliasVar != null) {\n            com.google.javascript.rhino.Node aliasedNode = aliasVar.getInitialValue();\n            aliasUsages.add(new com.google.javascript.jscomp.ScopedAliases.AliasedNode(n, aliasedNode));\n        }\n        com.google.javascript.rhino.JSDocInfo info = n.getJSDocInfo();\n        if (info != null) {\n            for (com.google.javascript.rhino.Node node : info.getTypeNodes()) {\n                fixTypeNode(node);\n            }\n        }\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "LocalVariable"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "LocalVariable",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "scope",
            "src_parent": "scope.getVar(name)",
            "src_parent_type": "Invocation",
            "src_type": "VariableRead"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "If",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "com.google.javascript.jscomp.Scope.Var lexicalVar = t.getScope().getVar(n.getString())",
            "src_parent": "{\n    java.lang.String name = n.getString();\n    com.google.javascript.jscomp.Scope.Var lexicalVar = t.getScope().getVar(n.getString());\n    if ((lexicalVar != null) && (lexicalVar == aliases.get(name))) {\n        aliasVar = lexicalVar;\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "LocalVariable"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "aliasVar = lexicalVar",
            "src_parent": "{\n    aliasVar = lexicalVar;\n}",
            "src_parent_type": "Block",
            "src_type": "Assignment"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "aliasVar.getNode() == n",
            "src_parent": "if (aliasVar.getNode() == n) {\n    aliasDefinitionsInOrder.add(n);\n    return;\n} else {\n    report(t, n, com.google.javascript.jscomp.ScopedAliases.GOOG_SCOPE_ALIAS_REDEFINED, n.getString());\n}",
            "src_parent_type": "If",
            "src_type": "BinaryOperator"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "{\n    aliasDefinitionsInOrder.add(n);\n    return;\n}",
            "src_parent": "if (aliasVar.getNode() == n) {\n    aliasDefinitionsInOrder.add(n);\n    return;\n} else {\n    report(t, n, com.google.javascript.jscomp.ScopedAliases.GOOG_SCOPE_ALIAS_REDEFINED, n.getString());\n}",
            "src_parent_type": "If",
            "src_type": "Block"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "{\n    report(t, n, com.google.javascript.jscomp.ScopedAliases.GOOG_SCOPE_ALIAS_REDEFINED, n.getString());\n}",
            "src_parent": "if (aliasVar.getNode() == n) {\n    aliasDefinitionsInOrder.add(n);\n    return;\n} else {\n    report(t, n, com.google.javascript.jscomp.ScopedAliases.GOOG_SCOPE_ALIAS_REDEFINED, n.getString());\n}",
            "src_parent_type": "If",
            "src_type": "Block"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "LocalVariable",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "if (t.getScopeDepth() >= 2) {\n    if (aliasVar != null) {\n        com.google.javascript.rhino.Node aliasedNode = aliasVar.getInitialValue();\n        aliasUsages.add(new com.google.javascript.jscomp.ScopedAliases.AliasedNode(n, aliasedNode));\n    }\n    com.google.javascript.rhino.JSDocInfo info = n.getJSDocInfo();\n    if (info != null) {\n        for (com.google.javascript.rhino.Node node : info.getTypeNodes()) {\n            fixTypeNode(node);\n        }\n    }\n}",
            "src_parent": "{\n    if (isCallToScopeMethod(n)) {\n        validateScopeCall(t, n, n.getParent());\n    }\n    if (t.getScopeDepth() < 2) {\n        return;\n    }\n    int type = n.getType();\n    com.google.javascript.jscomp.Scope.Var aliasVar = null;\n    if (type == com.google.javascript.rhino.Token.NAME) {\n        java.lang.String name = n.getString();\n        com.google.javascript.jscomp.Scope.Var lexicalVar = t.getScope().getVar(n.getString());\n        if ((lexicalVar != null) && (lexicalVar == aliases.get(name))) {\n            aliasVar = lexicalVar;\n        }\n    }\n    if (t.getScopeDepth() == 2) {\n        if ((aliasVar != null) && com.google.javascript.jscomp.NodeUtil.isLValue(n)) {\n            if (aliasVar.getNode() == n) {\n                aliasDefinitionsInOrder.add(n);\n                return;\n            } else {\n                report(t, n, com.google.javascript.jscomp.ScopedAliases.GOOG_SCOPE_ALIAS_REDEFINED, n.getString());\n            }\n        }\n        if (type == com.google.javascript.rhino.Token.RETURN) {\n            report(t, n, com.google.javascript.jscomp.ScopedAliases.GOOG_SCOPE_USES_RETURN);\n        } else if (type == com.google.javascript.rhino.Token.THIS) {\n            report(t, n, com.google.javascript.jscomp.ScopedAliases.GOOG_SCOPE_REFERENCES_THIS);\n        } else if (type == com.google.javascript.rhino.Token.THROW) {\n            report(t, n, com.google.javascript.jscomp.ScopedAliases.GOOG_SCOPE_USES_THROW);\n        }\n    }\n    if (t.getScopeDepth() >= 2) {\n        if (aliasVar != null) {\n            com.google.javascript.rhino.Node aliasedNode = aliasVar.getInitialValue();\n            aliasUsages.add(new com.google.javascript.jscomp.ScopedAliases.AliasedNode(n, aliasedNode));\n        }\n        com.google.javascript.rhino.JSDocInfo info = n.getJSDocInfo();\n        if (info != null) {\n            for (com.google.javascript.rhino.Node node : info.getTypeNodes()) {\n                fixTypeNode(node);\n            }\n        }\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "If"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "ForEach",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "(type == com.google.javascript.rhino.Token.NAME) && (parent.getType() == com.google.javascript.rhino.Token.VAR)",
            "src_parent": "if ((type == com.google.javascript.rhino.Token.NAME) && (parent.getType() == com.google.javascript.rhino.Token.VAR)) {\n    if (n.hasChildren() && n.getFirstChild().isQualifiedName()) {\n        java.lang.String name = n.getString();\n        com.google.javascript.jscomp.Scope.Var aliasVar = t.getScope().getVar(name);\n        aliases.put(name, aliasVar);\n        aliasDefinitionsInOrder.add(n);\n        java.lang.String qualifiedName = aliasVar.getInitialValue().getQualifiedName();\n        transformation.addAlias(name, qualifiedName);\n        return;\n    } else {\n        report(t, n, com.google.javascript.jscomp.ScopedAliases.GOOG_SCOPE_NON_ALIAS_LOCAL, n.getString());\n    }\n}",
            "src_parent_type": "If",
            "src_type": "BinaryOperator"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "com.google.javascript.jscomp.Scope.Var aliasVar = aliases.get(name)",
            "src_parent": "{\n    java.lang.String name = n.getString();\n    com.google.javascript.jscomp.Scope.Var aliasVar = aliases.get(name);\n    if ((aliasVar != null) && (t.getScope().getVar(name) == aliasVar)) {\n        com.google.javascript.rhino.Node aliasedNode = aliasVar.getInitialValue();\n        aliasUsages.add(new com.google.javascript.jscomp.ScopedAliases.AliasedNode(n, aliasedNode));\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "LocalVariable"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "parent.getFirstChild()",
            "src_parent": "(n == parent.getFirstChild())",
            "src_parent_type": "BinaryOperator",
            "src_type": "Invocation"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "(aliasVar != null) && (t.getScope().getVar(name) == aliasVar)",
            "src_parent": "if ((aliasVar != null) && (t.getScope().getVar(name) == aliasVar)) {\n    com.google.javascript.rhino.Node aliasedNode = aliasVar.getInitialValue();\n    aliasUsages.add(new com.google.javascript.jscomp.ScopedAliases.AliasedNode(n, aliasedNode));\n}",
            "src_parent_type": "If",
            "src_type": "BinaryOperator"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "return",
            "src_parent": "{\n    java.lang.String name = n.getString();\n    com.google.javascript.jscomp.Scope.Var aliasVar = t.getScope().getVar(name);\n    aliases.put(name, aliasVar);\n    aliasDefinitionsInOrder.add(n);\n    java.lang.String qualifiedName = aliasVar.getInitialValue().getQualifiedName();\n    transformation.addAlias(name, qualifiedName);\n    return;\n}",
            "src_parent_type": "Block",
            "src_type": "Return"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "LocalVariable",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "t.getScopeDepth() == 2",
            "dst_parent": "if (t.getScopeDepth() == 2) {\n    int type = n.getType();\n    if ((type == com.google.javascript.rhino.Token.NAME) && (parent.getType() == com.google.javascript.rhino.Token.VAR)) {\n        if (n.hasChildren() && n.getFirstChild().isQualifiedName()) {\n            java.lang.String name = n.getString();\n            com.google.javascript.jscomp.Scope.Var aliasVar = t.getScope().getVar(name);\n            aliases.put(name, aliasVar);\n            aliasDefinitionsInOrder.add(n);\n            java.lang.String qualifiedName = aliasVar.getInitialValue().getQualifiedName();\n            transformation.addAlias(name, qualifiedName);\n            return;\n        } else {\n            report(t, n, com.google.javascript.jscomp.ScopedAliases.GOOG_SCOPE_NON_ALIAS_LOCAL, n.getString());\n        }\n    }\n    if (((type == com.google.javascript.rhino.Token.NAME) && com.google.javascript.jscomp.NodeUtil.isAssignmentOp(parent)) && (n == parent.getFirstChild())) {\n        report(t, n, com.google.javascript.jscomp.ScopedAliases.GOOG_SCOPE_ALIAS_REDEFINED, n.getString());\n    }\n    if (type == com.google.javascript.rhino.Token.RETURN) {\n        report(t, n, com.google.javascript.jscomp.ScopedAliases.GOOG_SCOPE_USES_RETURN);\n    } else if (type == com.google.javascript.rhino.Token.THIS) {\n        report(t, n, com.google.javascript.jscomp.ScopedAliases.GOOG_SCOPE_REFERENCES_THIS);\n    } else if (type == com.google.javascript.rhino.Token.THROW) {\n        report(t, n, com.google.javascript.jscomp.ScopedAliases.GOOG_SCOPE_USES_THROW);\n    }\n}",
            "dst_parent_type": "If",
            "dst_type": "BinaryOperator",
            "operator": "MOV",
            "src": "t.getScopeDepth() == 2",
            "src_parent": "if (t.getScopeDepth() == 2) {\n    if ((aliasVar != null) && com.google.javascript.jscomp.NodeUtil.isLValue(n)) {\n        if (aliasVar.getNode() == n) {\n            aliasDefinitionsInOrder.add(n);\n            return;\n        } else {\n            report(t, n, com.google.javascript.jscomp.ScopedAliases.GOOG_SCOPE_ALIAS_REDEFINED, n.getString());\n        }\n    }\n    if (type == com.google.javascript.rhino.Token.RETURN) {\n        report(t, n, com.google.javascript.jscomp.ScopedAliases.GOOG_SCOPE_USES_RETURN);\n    } else if (type == com.google.javascript.rhino.Token.THIS) {\n        report(t, n, com.google.javascript.jscomp.ScopedAliases.GOOG_SCOPE_REFERENCES_THIS);\n    } else if (type == com.google.javascript.rhino.Token.THROW) {\n        report(t, n, com.google.javascript.jscomp.ScopedAliases.GOOG_SCOPE_USES_THROW);\n    }\n}",
            "src_parent_type": "If",
            "src_type": "BinaryOperator"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "LocalVariable",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "t.getScopeDepth() >= 2",
            "dst_parent": "if (t.getScopeDepth() >= 2) {\n    if (n.getType() == com.google.javascript.rhino.Token.NAME) {\n        java.lang.String name = n.getString();\n        com.google.javascript.jscomp.Scope.Var aliasVar = aliases.get(name);\n        if ((aliasVar != null) && (t.getScope().getVar(name) == aliasVar)) {\n            com.google.javascript.rhino.Node aliasedNode = aliasVar.getInitialValue();\n            aliasUsages.add(new com.google.javascript.jscomp.ScopedAliases.AliasedNode(n, aliasedNode));\n        }\n    }\n    com.google.javascript.rhino.JSDocInfo info = n.getJSDocInfo();\n    if (info != null) {\n        for (com.google.javascript.rhino.Node node : info.getTypeNodes()) {\n            fixTypeNode(node);\n        }\n    }\n}",
            "dst_parent_type": "If",
            "dst_type": "BinaryOperator",
            "operator": "MOV",
            "src": "t.getScopeDepth() >= 2",
            "src_parent": "if (t.getScopeDepth() >= 2) {\n    if (aliasVar != null) {\n        com.google.javascript.rhino.Node aliasedNode = aliasVar.getInitialValue();\n        aliasUsages.add(new com.google.javascript.jscomp.ScopedAliases.AliasedNode(n, aliasedNode));\n    }\n    com.google.javascript.rhino.JSDocInfo info = n.getJSDocInfo();\n    if (info != null) {\n        for (com.google.javascript.rhino.Node node : info.getTypeNodes()) {\n            fixTypeNode(node);\n        }\n    }\n}",
            "src_parent_type": "If",
            "src_type": "BinaryOperator"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "ForEach",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "int type = n.getType()",
            "dst_parent": "{\n    int type = n.getType();\n    if ((type == com.google.javascript.rhino.Token.NAME) && (parent.getType() == com.google.javascript.rhino.Token.VAR)) {\n        if (n.hasChildren() && n.getFirstChild().isQualifiedName()) {\n            java.lang.String name = n.getString();\n            com.google.javascript.jscomp.Scope.Var aliasVar = t.getScope().getVar(name);\n            aliases.put(name, aliasVar);\n            aliasDefinitionsInOrder.add(n);\n            java.lang.String qualifiedName = aliasVar.getInitialValue().getQualifiedName();\n            transformation.addAlias(name, qualifiedName);\n            return;\n        } else {\n            report(t, n, com.google.javascript.jscomp.ScopedAliases.GOOG_SCOPE_NON_ALIAS_LOCAL, n.getString());\n        }\n    }\n    if (((type == com.google.javascript.rhino.Token.NAME) && com.google.javascript.jscomp.NodeUtil.isAssignmentOp(parent)) && (n == parent.getFirstChild())) {\n        report(t, n, com.google.javascript.jscomp.ScopedAliases.GOOG_SCOPE_ALIAS_REDEFINED, n.getString());\n    }\n    if (type == com.google.javascript.rhino.Token.RETURN) {\n        report(t, n, com.google.javascript.jscomp.ScopedAliases.GOOG_SCOPE_USES_RETURN);\n    } else if (type == com.google.javascript.rhino.Token.THIS) {\n        report(t, n, com.google.javascript.jscomp.ScopedAliases.GOOG_SCOPE_REFERENCES_THIS);\n    } else if (type == com.google.javascript.rhino.Token.THROW) {\n        report(t, n, com.google.javascript.jscomp.ScopedAliases.GOOG_SCOPE_USES_THROW);\n    }\n}",
            "dst_parent_type": "Block",
            "dst_type": "LocalVariable",
            "operator": "MOV",
            "src": "int type = n.getType()",
            "src_parent": "{\n    com.google.javascript.rhino.Node n = v.getNode();\n    int type = n.getType();\n    com.google.javascript.rhino.Node parent = n.getParent();\n    if (parent.getType() == com.google.javascript.rhino.Token.VAR) {\n        if (n.hasChildren() && n.getFirstChild().isQualifiedName()) {\n            java.lang.String name = n.getString();\n            com.google.javascript.jscomp.Scope.Var aliasVar = scope.getVar(name);\n            aliases.put(name, aliasVar);\n            java.lang.String qualifiedName = aliasVar.getInitialValue().getQualifiedName();\n            transformation.addAlias(name, qualifiedName);\n        } else {\n            report(t, n, com.google.javascript.jscomp.ScopedAliases.GOOG_SCOPE_NON_ALIAS_LOCAL, n.getString());\n        }\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "LocalVariable"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "ForEach",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "if ((type == com.google.javascript.rhino.Token.NAME) && (parent.getType() == com.google.javascript.rhino.Token.VAR)) {\n    if (n.hasChildren() && n.getFirstChild().isQualifiedName()) {\n        java.lang.String name = n.getString();\n        com.google.javascript.jscomp.Scope.Var aliasVar = t.getScope().getVar(name);\n        aliases.put(name, aliasVar);\n        aliasDefinitionsInOrder.add(n);\n        java.lang.String qualifiedName = aliasVar.getInitialValue().getQualifiedName();\n        transformation.addAlias(name, qualifiedName);\n        return;\n    } else {\n        report(t, n, com.google.javascript.jscomp.ScopedAliases.GOOG_SCOPE_NON_ALIAS_LOCAL, n.getString());\n    }\n}",
            "dst_parent": "{\n    int type = n.getType();\n    if ((type == com.google.javascript.rhino.Token.NAME) && (parent.getType() == com.google.javascript.rhino.Token.VAR)) {\n        if (n.hasChildren() && n.getFirstChild().isQualifiedName()) {\n            java.lang.String name = n.getString();\n            com.google.javascript.jscomp.Scope.Var aliasVar = t.getScope().getVar(name);\n            aliases.put(name, aliasVar);\n            aliasDefinitionsInOrder.add(n);\n            java.lang.String qualifiedName = aliasVar.getInitialValue().getQualifiedName();\n            transformation.addAlias(name, qualifiedName);\n            return;\n        } else {\n            report(t, n, com.google.javascript.jscomp.ScopedAliases.GOOG_SCOPE_NON_ALIAS_LOCAL, n.getString());\n        }\n    }\n    if (((type == com.google.javascript.rhino.Token.NAME) && com.google.javascript.jscomp.NodeUtil.isAssignmentOp(parent)) && (n == parent.getFirstChild())) {\n        report(t, n, com.google.javascript.jscomp.ScopedAliases.GOOG_SCOPE_ALIAS_REDEFINED, n.getString());\n    }\n    if (type == com.google.javascript.rhino.Token.RETURN) {\n        report(t, n, com.google.javascript.jscomp.ScopedAliases.GOOG_SCOPE_USES_RETURN);\n    } else if (type == com.google.javascript.rhino.Token.THIS) {\n        report(t, n, com.google.javascript.jscomp.ScopedAliases.GOOG_SCOPE_REFERENCES_THIS);\n    } else if (type == com.google.javascript.rhino.Token.THROW) {\n        report(t, n, com.google.javascript.jscomp.ScopedAliases.GOOG_SCOPE_USES_THROW);\n    }\n}",
            "dst_parent_type": "Block",
            "dst_type": "If",
            "operator": "MOV",
            "src": "if (parent.getType() == com.google.javascript.rhino.Token.VAR) {\n    if (n.hasChildren() && n.getFirstChild().isQualifiedName()) {\n        java.lang.String name = n.getString();\n        com.google.javascript.jscomp.Scope.Var aliasVar = scope.getVar(name);\n        aliases.put(name, aliasVar);\n        java.lang.String qualifiedName = aliasVar.getInitialValue().getQualifiedName();\n        transformation.addAlias(name, qualifiedName);\n    } else {\n        report(t, n, com.google.javascript.jscomp.ScopedAliases.GOOG_SCOPE_NON_ALIAS_LOCAL, n.getString());\n    }\n}",
            "src_parent": "{\n    com.google.javascript.rhino.Node n = v.getNode();\n    int type = n.getType();\n    com.google.javascript.rhino.Node parent = n.getParent();\n    if (parent.getType() == com.google.javascript.rhino.Token.VAR) {\n        if (n.hasChildren() && n.getFirstChild().isQualifiedName()) {\n            java.lang.String name = n.getString();\n            com.google.javascript.jscomp.Scope.Var aliasVar = scope.getVar(name);\n            aliases.put(name, aliasVar);\n            java.lang.String qualifiedName = aliasVar.getInitialValue().getQualifiedName();\n            transformation.addAlias(name, qualifiedName);\n        } else {\n            report(t, n, com.google.javascript.jscomp.ScopedAliases.GOOG_SCOPE_NON_ALIAS_LOCAL, n.getString());\n        }\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "If"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "LocalVariable",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "if (type == com.google.javascript.rhino.Token.RETURN) {\n    report(t, n, com.google.javascript.jscomp.ScopedAliases.GOOG_SCOPE_USES_RETURN);\n} else if (type == com.google.javascript.rhino.Token.THIS) {\n    report(t, n, com.google.javascript.jscomp.ScopedAliases.GOOG_SCOPE_REFERENCES_THIS);\n} else if (type == com.google.javascript.rhino.Token.THROW) {\n    report(t, n, com.google.javascript.jscomp.ScopedAliases.GOOG_SCOPE_USES_THROW);\n}",
            "dst_parent": "{\n    int type = n.getType();\n    if ((type == com.google.javascript.rhino.Token.NAME) && (parent.getType() == com.google.javascript.rhino.Token.VAR)) {\n        if (n.hasChildren() && n.getFirstChild().isQualifiedName()) {\n            java.lang.String name = n.getString();\n            com.google.javascript.jscomp.Scope.Var aliasVar = t.getScope().getVar(name);\n            aliases.put(name, aliasVar);\n            aliasDefinitionsInOrder.add(n);\n            java.lang.String qualifiedName = aliasVar.getInitialValue().getQualifiedName();\n            transformation.addAlias(name, qualifiedName);\n            return;\n        } else {\n            report(t, n, com.google.javascript.jscomp.ScopedAliases.GOOG_SCOPE_NON_ALIAS_LOCAL, n.getString());\n        }\n    }\n    if (((type == com.google.javascript.rhino.Token.NAME) && com.google.javascript.jscomp.NodeUtil.isAssignmentOp(parent)) && (n == parent.getFirstChild())) {\n        report(t, n, com.google.javascript.jscomp.ScopedAliases.GOOG_SCOPE_ALIAS_REDEFINED, n.getString());\n    }\n    if (type == com.google.javascript.rhino.Token.RETURN) {\n        report(t, n, com.google.javascript.jscomp.ScopedAliases.GOOG_SCOPE_USES_RETURN);\n    } else if (type == com.google.javascript.rhino.Token.THIS) {\n        report(t, n, com.google.javascript.jscomp.ScopedAliases.GOOG_SCOPE_REFERENCES_THIS);\n    } else if (type == com.google.javascript.rhino.Token.THROW) {\n        report(t, n, com.google.javascript.jscomp.ScopedAliases.GOOG_SCOPE_USES_THROW);\n    }\n}",
            "dst_parent_type": "Block",
            "dst_type": "If",
            "operator": "MOV",
            "src": "if (type == com.google.javascript.rhino.Token.RETURN) {\n    report(t, n, com.google.javascript.jscomp.ScopedAliases.GOOG_SCOPE_USES_RETURN);\n} else if (type == com.google.javascript.rhino.Token.THIS) {\n    report(t, n, com.google.javascript.jscomp.ScopedAliases.GOOG_SCOPE_REFERENCES_THIS);\n} else if (type == com.google.javascript.rhino.Token.THROW) {\n    report(t, n, com.google.javascript.jscomp.ScopedAliases.GOOG_SCOPE_USES_THROW);\n}",
            "src_parent": "{\n    if ((aliasVar != null) && com.google.javascript.jscomp.NodeUtil.isLValue(n)) {\n        if (aliasVar.getNode() == n) {\n            aliasDefinitionsInOrder.add(n);\n            return;\n        } else {\n            report(t, n, com.google.javascript.jscomp.ScopedAliases.GOOG_SCOPE_ALIAS_REDEFINED, n.getString());\n        }\n    }\n    if (type == com.google.javascript.rhino.Token.RETURN) {\n        report(t, n, com.google.javascript.jscomp.ScopedAliases.GOOG_SCOPE_USES_RETURN);\n    } else if (type == com.google.javascript.rhino.Token.THIS) {\n        report(t, n, com.google.javascript.jscomp.ScopedAliases.GOOG_SCOPE_REFERENCES_THIS);\n    } else if (type == com.google.javascript.rhino.Token.THROW) {\n        report(t, n, com.google.javascript.jscomp.ScopedAliases.GOOG_SCOPE_USES_THROW);\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "If"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "LocalVariable",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "com.google.javascript.rhino.JSDocInfo info = n.getJSDocInfo()",
            "dst_parent": "{\n    if (n.getType() == com.google.javascript.rhino.Token.NAME) {\n        java.lang.String name = n.getString();\n        com.google.javascript.jscomp.Scope.Var aliasVar = aliases.get(name);\n        if ((aliasVar != null) && (t.getScope().getVar(name) == aliasVar)) {\n            com.google.javascript.rhino.Node aliasedNode = aliasVar.getInitialValue();\n            aliasUsages.add(new com.google.javascript.jscomp.ScopedAliases.AliasedNode(n, aliasedNode));\n        }\n    }\n    com.google.javascript.rhino.JSDocInfo info = n.getJSDocInfo();\n    if (info != null) {\n        for (com.google.javascript.rhino.Node node : info.getTypeNodes()) {\n            fixTypeNode(node);\n        }\n    }\n}",
            "dst_parent_type": "Block",
            "dst_type": "LocalVariable",
            "operator": "MOV",
            "src": "com.google.javascript.rhino.JSDocInfo info = n.getJSDocInfo()",
            "src_parent": "{\n    if (aliasVar != null) {\n        com.google.javascript.rhino.Node aliasedNode = aliasVar.getInitialValue();\n        aliasUsages.add(new com.google.javascript.jscomp.ScopedAliases.AliasedNode(n, aliasedNode));\n    }\n    com.google.javascript.rhino.JSDocInfo info = n.getJSDocInfo();\n    if (info != null) {\n        for (com.google.javascript.rhino.Node node : info.getTypeNodes()) {\n            fixTypeNode(node);\n        }\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "LocalVariable"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "LocalVariable",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "if (info != null) {\n    for (com.google.javascript.rhino.Node node : info.getTypeNodes()) {\n        fixTypeNode(node);\n    }\n}",
            "dst_parent": "{\n    if (n.getType() == com.google.javascript.rhino.Token.NAME) {\n        java.lang.String name = n.getString();\n        com.google.javascript.jscomp.Scope.Var aliasVar = aliases.get(name);\n        if ((aliasVar != null) && (t.getScope().getVar(name) == aliasVar)) {\n            com.google.javascript.rhino.Node aliasedNode = aliasVar.getInitialValue();\n            aliasUsages.add(new com.google.javascript.jscomp.ScopedAliases.AliasedNode(n, aliasedNode));\n        }\n    }\n    com.google.javascript.rhino.JSDocInfo info = n.getJSDocInfo();\n    if (info != null) {\n        for (com.google.javascript.rhino.Node node : info.getTypeNodes()) {\n            fixTypeNode(node);\n        }\n    }\n}",
            "dst_parent_type": "Block",
            "dst_type": "If",
            "operator": "MOV",
            "src": "if (info != null) {\n    for (com.google.javascript.rhino.Node node : info.getTypeNodes()) {\n        fixTypeNode(node);\n    }\n}",
            "src_parent": "{\n    if (aliasVar != null) {\n        com.google.javascript.rhino.Node aliasedNode = aliasVar.getInitialValue();\n        aliasUsages.add(new com.google.javascript.jscomp.ScopedAliases.AliasedNode(n, aliasedNode));\n    }\n    com.google.javascript.rhino.JSDocInfo info = n.getJSDocInfo();\n    if (info != null) {\n        for (com.google.javascript.rhino.Node node : info.getTypeNodes()) {\n            fixTypeNode(node);\n        }\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "If"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "LocalVariable",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "ForEach",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "(parent.getType() == com.google.javascript.rhino.Token.VAR)",
            "dst_parent": "(type == com.google.javascript.rhino.Token.NAME) && (parent.getType() == com.google.javascript.rhino.Token.VAR)",
            "dst_parent_type": "BinaryOperator",
            "dst_type": "BinaryOperator",
            "operator": "MOV",
            "src": "parent.getType() == com.google.javascript.rhino.Token.VAR",
            "src_parent": "if (parent.getType() == com.google.javascript.rhino.Token.VAR) {\n    if (n.hasChildren() && n.getFirstChild().isQualifiedName()) {\n        java.lang.String name = n.getString();\n        com.google.javascript.jscomp.Scope.Var aliasVar = scope.getVar(name);\n        aliases.put(name, aliasVar);\n        java.lang.String qualifiedName = aliasVar.getInitialValue().getQualifiedName();\n        transformation.addAlias(name, qualifiedName);\n    } else {\n        report(t, n, com.google.javascript.jscomp.ScopedAliases.GOOG_SCOPE_NON_ALIAS_LOCAL, n.getString());\n    }\n}",
            "src_parent_type": "If",
            "src_type": "BinaryOperator"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "report(t, n, com.google.javascript.jscomp.ScopedAliases.GOOG_SCOPE_ALIAS_REDEFINED, n.getString())",
            "dst_parent": "{\n    report(t, n, com.google.javascript.jscomp.ScopedAliases.GOOG_SCOPE_ALIAS_REDEFINED, n.getString());\n}",
            "dst_parent_type": "Block",
            "dst_type": "Invocation",
            "operator": "MOV",
            "src": "report(t, n, com.google.javascript.jscomp.ScopedAliases.GOOG_SCOPE_ALIAS_REDEFINED, n.getString())",
            "src_parent": "{\n    report(t, n, com.google.javascript.jscomp.ScopedAliases.GOOG_SCOPE_ALIAS_REDEFINED, n.getString());\n}",
            "src_parent_type": "Block",
            "src_type": "Invocation"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "If",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "java.lang.String name = n.getString()",
            "dst_parent": "{\n    java.lang.String name = n.getString();\n    com.google.javascript.jscomp.Scope.Var aliasVar = aliases.get(name);\n    if ((aliasVar != null) && (t.getScope().getVar(name) == aliasVar)) {\n        com.google.javascript.rhino.Node aliasedNode = aliasVar.getInitialValue();\n        aliasUsages.add(new com.google.javascript.jscomp.ScopedAliases.AliasedNode(n, aliasedNode));\n    }\n}",
            "dst_parent_type": "Block",
            "dst_type": "LocalVariable",
            "operator": "MOV",
            "src": "java.lang.String name = n.getString()",
            "src_parent": "{\n    java.lang.String name = n.getString();\n    com.google.javascript.jscomp.Scope.Var lexicalVar = t.getScope().getVar(n.getString());\n    if ((lexicalVar != null) && (lexicalVar == aliases.get(name))) {\n        aliasVar = lexicalVar;\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "LocalVariable"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "If",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "(type == com.google.javascript.rhino.Token.NAME)",
            "dst_parent": "((type == com.google.javascript.rhino.Token.NAME) && com.google.javascript.jscomp.NodeUtil.isAssignmentOp(parent))",
            "dst_parent_type": "BinaryOperator",
            "dst_type": "BinaryOperator",
            "operator": "MOV",
            "src": "type == com.google.javascript.rhino.Token.NAME",
            "src_parent": "if (type == com.google.javascript.rhino.Token.NAME) {\n    java.lang.String name = n.getString();\n    com.google.javascript.jscomp.Scope.Var lexicalVar = t.getScope().getVar(n.getString());\n    if ((lexicalVar != null) && (lexicalVar == aliases.get(name))) {\n        aliasVar = lexicalVar;\n    }\n}",
            "src_parent_type": "If",
            "src_type": "BinaryOperator"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "aliases.get(name)",
            "dst_parent": "com.google.javascript.jscomp.Scope.Var aliasVar = aliases.get(name)",
            "dst_parent_type": "LocalVariable",
            "dst_type": "Invocation",
            "operator": "MOV",
            "src": "aliases.get(name)",
            "src_parent": "(lexicalVar == aliases.get(name))",
            "src_parent_type": "BinaryOperator",
            "src_type": "Invocation"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "{\n    com.google.javascript.rhino.Node aliasedNode = aliasVar.getInitialValue();\n    aliasUsages.add(new com.google.javascript.jscomp.ScopedAliases.AliasedNode(n, aliasedNode));\n}",
            "dst_parent": "if ((aliasVar != null) && (t.getScope().getVar(name) == aliasVar)) {\n    com.google.javascript.rhino.Node aliasedNode = aliasVar.getInitialValue();\n    aliasUsages.add(new com.google.javascript.jscomp.ScopedAliases.AliasedNode(n, aliasedNode));\n}",
            "dst_parent_type": "If",
            "dst_type": "Block",
            "operator": "MOV",
            "src": "{\n    com.google.javascript.rhino.Node aliasedNode = aliasVar.getInitialValue();\n    aliasUsages.add(new com.google.javascript.jscomp.ScopedAliases.AliasedNode(n, aliasedNode));\n}",
            "src_parent": "if (aliasVar != null) {\n    com.google.javascript.rhino.Node aliasedNode = aliasVar.getInitialValue();\n    aliasUsages.add(new com.google.javascript.jscomp.ScopedAliases.AliasedNode(n, aliasedNode));\n}",
            "src_parent_type": "If",
            "src_type": "Block"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "aliasDefinitionsInOrder.add(n)",
            "dst_parent": "{\n    java.lang.String name = n.getString();\n    com.google.javascript.jscomp.Scope.Var aliasVar = t.getScope().getVar(name);\n    aliases.put(name, aliasVar);\n    aliasDefinitionsInOrder.add(n);\n    java.lang.String qualifiedName = aliasVar.getInitialValue().getQualifiedName();\n    transformation.addAlias(name, qualifiedName);\n    return;\n}",
            "dst_parent_type": "Block",
            "dst_type": "Invocation",
            "operator": "MOV",
            "src": "aliasDefinitionsInOrder.add(n)",
            "src_parent": "{\n    aliasDefinitionsInOrder.add(n);\n    return;\n}",
            "src_parent_type": "Block",
            "src_type": "Invocation"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "(aliasVar != null)",
            "dst_parent": "(aliasVar != null) && (t.getScope().getVar(name) == aliasVar)",
            "dst_parent_type": "BinaryOperator",
            "dst_type": "BinaryOperator",
            "operator": "MOV",
            "src": "(aliasVar != null)",
            "src_parent": "(aliasVar != null) && com.google.javascript.jscomp.NodeUtil.isLValue(n)",
            "src_parent_type": "BinaryOperator",
            "src_type": "BinaryOperator"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "t.getScope().getVar(name)",
            "dst_parent": "(t.getScope().getVar(name) == aliasVar)",
            "dst_parent_type": "BinaryOperator",
            "dst_type": "Invocation",
            "operator": "MOV",
            "src": "aliasVar.getNode()",
            "src_parent": "aliasVar.getNode() == n",
            "src_parent_type": "BinaryOperator",
            "src_type": "Invocation"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "aliasVar",
            "dst_parent": "(t.getScope().getVar(name) == aliasVar)",
            "dst_parent_type": "BinaryOperator",
            "dst_type": "VariableRead",
            "operator": "MOV",
            "src": "n",
            "src_parent": "aliasVar.getNode() == n",
            "src_parent_type": "BinaryOperator",
            "src_type": "VariableRead"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "ForEach",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "LocalVariable",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "t.getScope()",
            "dst_parent": "t.getScope().getVar(name)",
            "dst_parent_type": "Invocation",
            "dst_type": "Invocation",
            "operator": "MOV",
            "src": "t.getScope()",
            "src_parent": "com.google.javascript.jscomp.Scope scope = t.getScope()",
            "src_parent_type": "LocalVariable",
            "src_type": "Invocation"
          }
        }
      ],
      "file_name": "ScopedAliases"
    }
  ],
  "id": "Closure_162"
}