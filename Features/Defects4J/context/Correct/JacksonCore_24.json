{
  "files": [
    {
      "features": [
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Invocation",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "numDesc",
            "dst_parent": "_reportError(\"Numeric value (%s) out of range of %s\", numDesc, expType == NR_LONG ? \"long\" : \"int\")",
            "dst_parent_type": "Invocation",
            "dst_type": "VariableRead",
            "operator": "UPD",
            "src": "rawNum",
            "src_parent": "reportOverflowLong(rawNum)",
            "src_parent_type": "Invocation",
            "src_type": "VariableRead"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Assignment",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "_reportError((\"Numeric value (\" + getText()) + \") out of range of int\")",
            "dst_parent": "{\n    _reportError((\"Numeric value (\" + getText()) + \") out of range of int\");\n}",
            "dst_parent_type": "Block",
            "dst_type": "Invocation",
            "operator": "UPD",
            "src": "reportOverflowInt(getText(), currentToken())",
            "src_parent": "{\n    reportOverflowInt(getText(), currentToken());\n}",
            "src_parent_type": "Block",
            "src_type": "Invocation"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "if (expType == NR_INT) {\n    reportOverflowInt(rawNum);\n} else {\n    reportOverflowLong(rawNum);\n}",
            "src_parent": "{\n    if (expType == NR_INT) {\n        reportOverflowInt(rawNum);\n    } else {\n        reportOverflowLong(rawNum);\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "If"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Method",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "final java.lang.String numDesc = _longIntegerDesc(rawNum)",
            "src_parent": "{\n    final java.lang.String numDesc = _longIntegerDesc(rawNum);\n    _reportError(\"Numeric value (%s) out of range of %s\", numDesc, expType == NR_LONG ? \"long\" : \"int\");\n}",
            "src_parent_type": "Block",
            "src_type": "LocalVariable"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Method",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "_reportError(\"Numeric value (%s) out of range of %s\", numDesc, expType == NR_LONG ? \"long\" : \"int\")",
            "src_parent": "{\n    final java.lang.String numDesc = _longIntegerDesc(rawNum);\n    _reportError(\"Numeric value (%s) out of range of %s\", numDesc, expType == NR_LONG ? \"long\" : \"int\");\n}",
            "src_parent_type": "Block",
            "src_type": "Invocation"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Invocation",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "com.fasterxml.jackson.core.base.ParserBase",
            "dst_parent": "",
            "dst_parent_type": "ThisAccess",
            "dst_type": "TypeAccess",
            "operator": "MOV",
            "src": "com.fasterxml.jackson.core.base.ParserBase",
            "src_parent": "",
            "src_parent_type": "ThisAccess",
            "src_type": "TypeAccess"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Invocation",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "numDesc",
            "dst_parent": "_reportError(\"Numeric value (%s) out of range of %s\", numDesc, expType == NR_LONG ? \"long\" : \"int\")",
            "dst_parent_type": "Invocation",
            "dst_type": "VariableRead",
            "operator": "MOV",
            "src": "rawNum",
            "src_parent": "reportOverflowLong(rawNum)",
            "src_parent_type": "Invocation",
            "src_type": "VariableRead"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Invocation",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "com.fasterxml.jackson.core.base.ParserBase",
            "dst_parent": "",
            "dst_parent_type": "ThisAccess",
            "dst_type": "TypeAccess",
            "operator": "MOV",
            "src": "com.fasterxml.jackson.core.base.ParserBase",
            "src_parent": "",
            "src_parent_type": "ThisAccess",
            "src_type": "TypeAccess"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Invocation",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "rawNum",
            "dst_parent": "_longIntegerDesc(rawNum)",
            "dst_parent_type": "Invocation",
            "dst_type": "VariableRead",
            "operator": "MOV",
            "src": "rawNum",
            "src_parent": "reportOverflowInt(rawNum)",
            "src_parent_type": "Invocation",
            "src_type": "VariableRead"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Invocation",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "getText()",
            "dst_parent": "(\"Numeric value (\" + getText())",
            "dst_parent_type": "BinaryOperator",
            "dst_type": "Invocation",
            "operator": "MOV",
            "src": "getText()",
            "src_parent": "reportOverflowInt(getText(), currentToken())",
            "src_parent_type": "Invocation",
            "src_type": "Invocation"
          }
        }
      ],
      "file_name": "ParserBase"
    },
    {
      "features": [
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Invocation",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "_reportError(java.lang.String.format(\"Numeric value (%s) out of range of int (%d - %s)\", _longIntegerDesc(numDesc), java.lang.Integer.MIN_VALUE, java.lang.Integer.MAX_VALUE))",
            "dst_parent": "{\n    _reportError(java.lang.String.format(\"Numeric value (%s) out of range of int (%d - %s)\", _longIntegerDesc(numDesc), java.lang.Integer.MIN_VALUE, java.lang.Integer.MAX_VALUE));\n}",
            "dst_parent_type": "Block",
            "dst_type": "Invocation",
            "operator": "UPD",
            "src": "_reportInputCoercion(java.lang.String.format(\"Numeric value (%s) out of range of int (%d - %s)\", _longIntegerDesc(numDesc), java.lang.Integer.MIN_VALUE, java.lang.Integer.MAX_VALUE), inputType, java.lang.Integer.TYPE)",
            "src_parent": "{\n    _reportInputCoercion(java.lang.String.format(\"Numeric value (%s) out of range of int (%d - %s)\", _longIntegerDesc(numDesc), java.lang.Integer.MIN_VALUE, java.lang.Integer.MAX_VALUE), inputType, java.lang.Integer.TYPE);\n}",
            "src_parent_type": "Block",
            "src_type": "Invocation"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Invocation",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "_reportError(java.lang.String.format(\"Numeric value (%s) out of range of long (%d - %s)\", _longIntegerDesc(numDesc), java.lang.Long.MIN_VALUE, java.lang.Long.MAX_VALUE))",
            "dst_parent": "{\n    _reportError(java.lang.String.format(\"Numeric value (%s) out of range of long (%d - %s)\", _longIntegerDesc(numDesc), java.lang.Long.MIN_VALUE, java.lang.Long.MAX_VALUE));\n}",
            "dst_parent_type": "Block",
            "dst_type": "Invocation",
            "operator": "UPD",
            "src": "_reportInputCoercion(java.lang.String.format(\"Numeric value (%s) out of range of long (%d - %s)\", _longIntegerDesc(numDesc), java.lang.Long.MIN_VALUE, java.lang.Long.MAX_VALUE), inputType, java.lang.Long.TYPE)",
            "src_parent": "{\n    _reportInputCoercion(java.lang.String.format(\"Numeric value (%s) out of range of long (%d - %s)\", _longIntegerDesc(numDesc), java.lang.Long.MIN_VALUE, java.lang.Long.MAX_VALUE), inputType, java.lang.Long.TYPE);\n}",
            "src_parent_type": "Block",
            "src_type": "Invocation"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Method",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "protected void reportOverflowInt(java.lang.String numDesc) throws java.io.IOException {\n    reportOverflowInt(numDesc, com.fasterxml.jackson.core.JsonToken.VALUE_NUMBER_INT);\n}",
            "src_parent": "public abstract class ParserMinimalBase extends com.fasterxml.jackson.core.JsonParser {\n    protected static final int INT_TAB = '\\t';\n\n    protected static final int INT_LF = '\\n';\n\n    protected static final int INT_CR = '\\r';\n\n    protected static final int INT_SPACE = 0x20;\n\n    protected static final int INT_LBRACKET = '[';\n\n    protected static final int INT_RBRACKET = ']';\n\n    protected static final int INT_LCURLY = '{';\n\n    protected static final int INT_RCURLY = '}';\n\n    protected static final int INT_QUOTE = '\"';\n\n    protected static final int INT_APOS = '\\'';\n\n    protected static final int INT_BACKSLASH = '\\\\';\n\n    protected static final int INT_SLASH = '/';\n\n    protected static final int INT_ASTERISK = '*';\n\n    protected static final int INT_COLON = ':';\n\n    protected static final int INT_COMMA = ',';\n\n    protected static final int INT_HASH = '#';\n\n    protected static final int INT_0 = '0';\n\n    protected static final int INT_9 = '9';\n\n    protected static final int INT_MINUS = '-';\n\n    protected static final int INT_PLUS = '+';\n\n    protected static final int INT_PERIOD = '.';\n\n    protected static final int INT_e = 'e';\n\n    protected static final int INT_E = 'E';\n\n    protected static final char CHAR_NULL = '\\u0000';\n\n    protected static final byte[] NO_BYTES = new byte[0];\n\n    protected static final int[] NO_INTS = new int[0];\n\n    protected static final int NR_UNKNOWN = 0;\n\n    protected static final int NR_INT = 0x1;\n\n    protected static final int NR_LONG = 0x2;\n\n    protected static final int NR_BIGINT = 0x4;\n\n    protected static final int NR_DOUBLE = 0x8;\n\n    protected static final int NR_BIGDECIMAL = 0x10;\n\n    protected static final int NR_FLOAT = 0x20;\n\n    protected static final java.math.BigInteger BI_MIN_INT = java.math.BigInteger.valueOf(java.lang.Integer.MIN_VALUE);\n\n    protected static final java.math.BigInteger BI_MAX_INT = java.math.BigInteger.valueOf(java.lang.Integer.MAX_VALUE);\n\n    protected static final java.math.BigInteger BI_MIN_LONG = java.math.BigInteger.valueOf(java.lang.Long.MIN_VALUE);\n\n    protected static final java.math.BigInteger BI_MAX_LONG = java.math.BigInteger.valueOf(java.lang.Long.MAX_VALUE);\n\n    protected static final java.math.BigDecimal BD_MIN_LONG = new java.math.BigDecimal(com.fasterxml.jackson.core.base.ParserMinimalBase.BI_MIN_LONG);\n\n    protected static final java.math.BigDecimal BD_MAX_LONG = new java.math.BigDecimal(com.fasterxml.jackson.core.base.ParserMinimalBase.BI_MAX_LONG);\n\n    protected static final java.math.BigDecimal BD_MIN_INT = new java.math.BigDecimal(com.fasterxml.jackson.core.base.ParserMinimalBase.BI_MIN_INT);\n\n    protected static final java.math.BigDecimal BD_MAX_INT = new java.math.BigDecimal(com.fasterxml.jackson.core.base.ParserMinimalBase.BI_MAX_INT);\n\n    protected static final long MIN_INT_L = ((long) (java.lang.Integer.MIN_VALUE));\n\n    protected static final long MAX_INT_L = ((long) (java.lang.Integer.MAX_VALUE));\n\n    protected static final double MIN_LONG_D = ((double) (java.lang.Long.MIN_VALUE));\n\n    protected static final double MAX_LONG_D = ((double) (java.lang.Long.MAX_VALUE));\n\n    protected static final double MIN_INT_D = ((double) (java.lang.Integer.MIN_VALUE));\n\n    protected static final double MAX_INT_D = ((double) (java.lang.Integer.MAX_VALUE));\n\n    protected static final int MAX_ERROR_TOKEN_LENGTH = 256;\n\n    protected com.fasterxml.jackson.core.JsonToken _currToken;\n\n    protected com.fasterxml.jackson.core.JsonToken _lastClearedToken;\n\n    protected ParserMinimalBase() {\n    }\n\n    protected ParserMinimalBase(int features) {\n        super(features);\n    }\n\n    @java.lang.Override\n    public abstract com.fasterxml.jackson.core.JsonToken nextToken() throws java.io.IOException;\n\n    @java.lang.Override\n    public com.fasterxml.jackson.core.JsonToken currentToken() {\n        return _currToken;\n    }\n\n    @java.lang.Override\n    public int currentTokenId() {\n        final com.fasterxml.jackson.core.JsonToken t = _currToken;\n        return t == null ? com.fasterxml.jackson.core.JsonTokenId.ID_NO_TOKEN : t.id();\n    }\n\n    @java.lang.Override\n    public com.fasterxml.jackson.core.JsonToken getCurrentToken() {\n        return _currToken;\n    }\n\n    @java.lang.Override\n    public int getCurrentTokenId() {\n        final com.fasterxml.jackson.core.JsonToken t = _currToken;\n        return t == null ? com.fasterxml.jackson.core.JsonTokenId.ID_NO_TOKEN : t.id();\n    }\n\n    @java.lang.Override\n    public boolean hasCurrentToken() {\n        return _currToken != null;\n    }\n\n    @java.lang.Override\n    public boolean hasTokenId(int id) {\n        final com.fasterxml.jackson.core.JsonToken t = _currToken;\n        if (t == null) {\n            return com.fasterxml.jackson.core.JsonTokenId.ID_NO_TOKEN == id;\n        }\n        return t.id() == id;\n    }\n\n    @java.lang.Override\n    public boolean hasToken(com.fasterxml.jackson.core.JsonToken t) {\n        return _currToken == t;\n    }\n\n    @java.lang.Override\n    public boolean isExpectedStartArrayToken() {\n        return _currToken == com.fasterxml.jackson.core.JsonToken.START_ARRAY;\n    }\n\n    @java.lang.Override\n    public boolean isExpectedStartObjectToken() {\n        return _currToken == com.fasterxml.jackson.core.JsonToken.START_OBJECT;\n    }\n\n    @java.lang.Override\n    public com.fasterxml.jackson.core.JsonToken nextValue() throws java.io.IOException {\n        com.fasterxml.jackson.core.JsonToken t = nextToken();\n        if (t == com.fasterxml.jackson.core.JsonToken.FIELD_NAME) {\n            t = nextToken();\n        }\n        return t;\n    }\n\n    @java.lang.Override\n    public com.fasterxml.jackson.core.JsonParser skipChildren() throws java.io.IOException {\n        if ((_currToken != com.fasterxml.jackson.core.JsonToken.START_OBJECT) && (_currToken != com.fasterxml.jackson.core.JsonToken.START_ARRAY)) {\n            return this;\n        }\n        int open = 1;\n        while (true) {\n            com.fasterxml.jackson.core.JsonToken t = nextToken();\n            if (t == null) {\n                _handleEOF();\n                return this;\n            }\n            if (t.isStructStart()) {\n                ++open;\n            } else if (t.isStructEnd()) {\n                if ((--open) == 0) {\n                    return this;\n                }\n            } else if (t == com.fasterxml.jackson.core.JsonToken.NOT_AVAILABLE) {\n                _reportError(\"Not enough content available for `skipChildren()`: non-blocking parser? (%s)\", getClass().getName());\n            }\n        } \n    }\n\n    protected abstract void _handleEOF() throws com.fasterxml.jackson.core.JsonParseException;\n\n    @java.lang.Override\n    public abstract java.lang.String getCurrentName() throws java.io.IOException;\n\n    @java.lang.Override\n    public abstract void close() throws java.io.IOException;\n\n    @java.lang.Override\n    public abstract boolean isClosed();\n\n    @java.lang.Override\n    public abstract com.fasterxml.jackson.core.JsonStreamContext getParsingContext();\n\n    @java.lang.Override\n    public void clearCurrentToken() {\n        if (_currToken != null) {\n            _lastClearedToken = _currToken;\n            _currToken = null;\n        }\n    }\n\n    @java.lang.Override\n    public com.fasterxml.jackson.core.JsonToken getLastClearedToken() {\n        return _lastClearedToken;\n    }\n\n    @java.lang.Override\n    public abstract void overrideCurrentName(java.lang.String name);\n\n    @java.lang.Override\n    public abstract java.lang.String getText() throws java.io.IOException;\n\n    @java.lang.Override\n    public abstract char[] getTextCharacters() throws java.io.IOException;\n\n    @java.lang.Override\n    public abstract boolean hasTextCharacters();\n\n    @java.lang.Override\n    public abstract int getTextLength() throws java.io.IOException;\n\n    @java.lang.Override\n    public abstract int getTextOffset() throws java.io.IOException;\n\n    @java.lang.Override\n    public abstract byte[] getBinaryValue(com.fasterxml.jackson.core.Base64Variant b64variant) throws java.io.IOException;\n\n    @java.lang.Override\n    public boolean getValueAsBoolean(boolean defaultValue) throws java.io.IOException {\n        com.fasterxml.jackson.core.JsonToken t = _currToken;\n        if (t != null) {\n            switch (t.id()) {\n                case com.fasterxml.jackson.core.JsonTokenId.ID_STRING :\n                    java.lang.String str = getText().trim();\n                    if (\"true\".equals(str)) {\n                        return true;\n                    }\n                    if (\"false\".equals(str)) {\n                        return false;\n                    }\n                    if (_hasTextualNull(str)) {\n                        return false;\n                    }\n                    break;\n                case com.fasterxml.jackson.core.JsonTokenId.ID_NUMBER_INT :\n                    return getIntValue() != 0;\n                case com.fasterxml.jackson.core.JsonTokenId.ID_TRUE :\n                    return true;\n                case com.fasterxml.jackson.core.JsonTokenId.ID_FALSE :\n                case com.fasterxml.jackson.core.JsonTokenId.ID_NULL :\n                    return false;\n                case com.fasterxml.jackson.core.JsonTokenId.ID_EMBEDDED_OBJECT :\n                    java.lang.Object value = getEmbeddedObject();\n                    if (value instanceof java.lang.Boolean) {\n                        return ((java.lang.Boolean) (value));\n                    }\n                    break;\n                default :\n            }\n        }\n        return defaultValue;\n    }\n\n    @java.lang.Override\n    public int getValueAsInt() throws java.io.IOException {\n        com.fasterxml.jackson.core.JsonToken t = _currToken;\n        if ((t == com.fasterxml.jackson.core.JsonToken.VALUE_NUMBER_INT) || (t == com.fasterxml.jackson.core.JsonToken.VALUE_NUMBER_FLOAT)) {\n            return getIntValue();\n        }\n        return getValueAsInt(0);\n    }\n\n    @java.lang.Override\n    public int getValueAsInt(int defaultValue) throws java.io.IOException {\n        com.fasterxml.jackson.core.JsonToken t = _currToken;\n        if ((t == com.fasterxml.jackson.core.JsonToken.VALUE_NUMBER_INT) || (t == com.fasterxml.jackson.core.JsonToken.VALUE_NUMBER_FLOAT)) {\n            return getIntValue();\n        }\n        if (t != null) {\n            switch (t.id()) {\n                case com.fasterxml.jackson.core.JsonTokenId.ID_STRING :\n                    java.lang.String str = getText();\n                    if (_hasTextualNull(str)) {\n                        return 0;\n                    }\n                    return com.fasterxml.jackson.core.io.NumberInput.parseAsInt(str, defaultValue);\n                case com.fasterxml.jackson.core.JsonTokenId.ID_TRUE :\n                    return 1;\n                case com.fasterxml.jackson.core.JsonTokenId.ID_FALSE :\n                    return 0;\n                case com.fasterxml.jackson.core.JsonTokenId.ID_NULL :\n                    return 0;\n                case com.fasterxml.jackson.core.JsonTokenId.ID_EMBEDDED_OBJECT :\n                    java.lang.Object value = getEmbeddedObject();\n                    if (value instanceof java.lang.Number) {\n                        return ((java.lang.Number) (value)).intValue();\n                    }\n            }\n        }\n        return defaultValue;\n    }\n\n    @java.lang.Override\n    public long getValueAsLong() throws java.io.IOException {\n        com.fasterxml.jackson.core.JsonToken t = _currToken;\n        if ((t == com.fasterxml.jackson.core.JsonToken.VALUE_NUMBER_INT) || (t == com.fasterxml.jackson.core.JsonToken.VALUE_NUMBER_FLOAT)) {\n            return getLongValue();\n        }\n        return getValueAsLong(0L);\n    }\n\n    @java.lang.Override\n    public long getValueAsLong(long defaultValue) throws java.io.IOException {\n        com.fasterxml.jackson.core.JsonToken t = _currToken;\n        if ((t == com.fasterxml.jackson.core.JsonToken.VALUE_NUMBER_INT) || (t == com.fasterxml.jackson.core.JsonToken.VALUE_NUMBER_FLOAT)) {\n            return getLongValue();\n        }\n        if (t != null) {\n            switch (t.id()) {\n                case com.fasterxml.jackson.core.JsonTokenId.ID_STRING :\n                    java.lang.String str = getText();\n                    if (_hasTextualNull(str)) {\n                        return 0L;\n                    }\n                    return com.fasterxml.jackson.core.io.NumberInput.parseAsLong(str, defaultValue);\n                case com.fasterxml.jackson.core.JsonTokenId.ID_TRUE :\n                    return 1L;\n                case com.fasterxml.jackson.core.JsonTokenId.ID_FALSE :\n                case com.fasterxml.jackson.core.JsonTokenId.ID_NULL :\n                    return 0L;\n                case com.fasterxml.jackson.core.JsonTokenId.ID_EMBEDDED_OBJECT :\n                    java.lang.Object value = getEmbeddedObject();\n                    if (value instanceof java.lang.Number) {\n                        return ((java.lang.Number) (value)).longValue();\n                    }\n            }\n        }\n        return defaultValue;\n    }\n\n    @java.lang.Override\n    public double getValueAsDouble(double defaultValue) throws java.io.IOException {\n        com.fasterxml.jackson.core.JsonToken t = _currToken;\n        if (t != null) {\n            switch (t.id()) {\n                case com.fasterxml.jackson.core.JsonTokenId.ID_STRING :\n                    java.lang.String str = getText();\n                    if (_hasTextualNull(str)) {\n                        return 0L;\n                    }\n                    return com.fasterxml.jackson.core.io.NumberInput.parseAsDouble(str, defaultValue);\n                case com.fasterxml.jackson.core.JsonTokenId.ID_NUMBER_INT :\n                case com.fasterxml.jackson.core.JsonTokenId.ID_NUMBER_FLOAT :\n                    return getDoubleValue();\n                case com.fasterxml.jackson.core.JsonTokenId.ID_TRUE :\n                    return 1.0;\n                case com.fasterxml.jackson.core.JsonTokenId.ID_FALSE :\n                case com.fasterxml.jackson.core.JsonTokenId.ID_NULL :\n                    return 0.0;\n                case com.fasterxml.jackson.core.JsonTokenId.ID_EMBEDDED_OBJECT :\n                    java.lang.Object value = this.getEmbeddedObject();\n                    if (value instanceof java.lang.Number) {\n                        return ((java.lang.Number) (value)).doubleValue();\n                    }\n            }\n        }\n        return defaultValue;\n    }\n\n    @java.lang.Override\n    public java.lang.String getValueAsString() throws java.io.IOException {\n        if (_currToken == com.fasterxml.jackson.core.JsonToken.VALUE_STRING) {\n            return getText();\n        }\n        if (_currToken == com.fasterxml.jackson.core.JsonToken.FIELD_NAME) {\n            return getCurrentName();\n        }\n        return getValueAsString(null);\n    }\n\n    @java.lang.Override\n    public java.lang.String getValueAsString(java.lang.String defaultValue) throws java.io.IOException {\n        if (_currToken == com.fasterxml.jackson.core.JsonToken.VALUE_STRING) {\n            return getText();\n        }\n        if (_currToken == com.fasterxml.jackson.core.JsonToken.FIELD_NAME) {\n            return getCurrentName();\n        }\n        if (((_currToken == null) || (_currToken == com.fasterxml.jackson.core.JsonToken.VALUE_NULL)) || (!_currToken.isScalarValue())) {\n            return defaultValue;\n        }\n        return getText();\n    }\n\n    protected void _decodeBase64(java.lang.String str, com.fasterxml.jackson.core.util.ByteArrayBuilder builder, com.fasterxml.jackson.core.Base64Variant b64variant) throws java.io.IOException {\n        try {\n            b64variant.decode(str, builder);\n        } catch (java.lang.IllegalArgumentException e) {\n            _reportError(e.getMessage());\n        }\n    }\n\n    protected boolean _hasTextualNull(java.lang.String value) {\n        return \"null\".equals(value);\n    }\n\n    protected void reportUnexpectedNumberChar(int ch, java.lang.String comment) throws com.fasterxml.jackson.core.JsonParseException {\n        java.lang.String msg = java.lang.String.format(\"Unexpected character (%s) in numeric value\", com.fasterxml.jackson.core.base.ParserMinimalBase._getCharDesc(ch));\n        if (comment != null) {\n            msg += \": \" + comment;\n        }\n        _reportError(msg);\n    }\n\n    protected void reportInvalidNumber(java.lang.String msg) throws com.fasterxml.jackson.core.JsonParseException {\n        _reportError(\"Invalid numeric value: \" + msg);\n    }\n\n    protected void reportOverflowInt() throws java.io.IOException {\n        reportOverflowInt(getText());\n    }\n\n    protected void reportOverflowInt(java.lang.String numDesc) throws java.io.IOException {\n        reportOverflowInt(numDesc, com.fasterxml.jackson.core.JsonToken.VALUE_NUMBER_INT);\n    }\n\n    protected void reportOverflowInt(java.lang.String numDesc, com.fasterxml.jackson.core.JsonToken inputType) throws java.io.IOException {\n        _reportInputCoercion(java.lang.String.format(\"Numeric value (%s) out of range of int (%d - %s)\", _longIntegerDesc(numDesc), java.lang.Integer.MIN_VALUE, java.lang.Integer.MAX_VALUE), inputType, java.lang.Integer.TYPE);\n    }\n\n    protected void reportOverflowLong() throws java.io.IOException {\n        reportOverflowLong(getText());\n    }\n\n    protected void reportOverflowLong(java.lang.String numDesc) throws java.io.IOException {\n        reportOverflowLong(numDesc, com.fasterxml.jackson.core.JsonToken.VALUE_NUMBER_INT);\n    }\n\n    protected void reportOverflowLong(java.lang.String numDesc, com.fasterxml.jackson.core.JsonToken inputType) throws java.io.IOException {\n        _reportInputCoercion(java.lang.String.format(\"Numeric value (%s) out of range of long (%d - %s)\", _longIntegerDesc(numDesc), java.lang.Long.MIN_VALUE, java.lang.Long.MAX_VALUE), inputType, java.lang.Long.TYPE);\n    }\n\n    protected void _reportInputCoercion(java.lang.String msg, com.fasterxml.jackson.core.JsonToken inputType, java.lang.Class<?> targetType) throws com.fasterxml.jackson.core.exc.InputCoercionException {\n        throw new com.fasterxml.jackson.core.exc.InputCoercionException(this, msg, inputType, targetType);\n    }\n\n    protected java.lang.String _longIntegerDesc(java.lang.String rawNum) {\n        int rawLen = rawNum.length();\n        if (rawLen < 1000) {\n            return rawNum;\n        }\n        if (rawNum.startsWith(\"-\")) {\n            rawLen -= 1;\n        }\n        return java.lang.String.format(\"[Integer with %d digits]\", rawLen);\n    }\n\n    protected java.lang.String _longNumberDesc(java.lang.String rawNum) {\n        int rawLen = rawNum.length();\n        if (rawLen < 1000) {\n            return rawNum;\n        }\n        if (rawNum.startsWith(\"-\")) {\n            rawLen -= 1;\n        }\n        return java.lang.String.format(\"[number with %d characters]\", rawLen);\n    }\n\n    protected void _reportUnexpectedChar(int ch, java.lang.String comment) throws com.fasterxml.jackson.core.JsonParseException {\n        if (ch < 0) {\n            _reportInvalidEOF();\n        }\n        java.lang.String msg = java.lang.String.format(\"Unexpected character (%s)\", com.fasterxml.jackson.core.base.ParserMinimalBase._getCharDesc(ch));\n        if (comment != null) {\n            msg += \": \" + comment;\n        }\n        _reportError(msg);\n    }\n\n    protected void _reportInvalidEOF() throws com.fasterxml.jackson.core.JsonParseException {\n        _reportInvalidEOF(\" in \" + _currToken, _currToken);\n    }\n\n    protected void _reportInvalidEOFInValue(com.fasterxml.jackson.core.JsonToken type) throws com.fasterxml.jackson.core.JsonParseException {\n        java.lang.String msg;\n        if (type == com.fasterxml.jackson.core.JsonToken.VALUE_STRING) {\n            msg = \" in a String value\";\n        } else if ((type == com.fasterxml.jackson.core.JsonToken.VALUE_NUMBER_INT) || (type == com.fasterxml.jackson.core.JsonToken.VALUE_NUMBER_FLOAT)) {\n            msg = \" in a Number value\";\n        } else {\n            msg = \" in a value\";\n        }\n        _reportInvalidEOF(msg, type);\n    }\n\n    protected void _reportInvalidEOF(java.lang.String msg, com.fasterxml.jackson.core.JsonToken currToken) throws com.fasterxml.jackson.core.JsonParseException {\n        throw new com.fasterxml.jackson.core.io.JsonEOFException(this, currToken, \"Unexpected end-of-input\" + msg);\n    }\n\n    @java.lang.Deprecated\n    protected void _reportInvalidEOFInValue() throws com.fasterxml.jackson.core.JsonParseException {\n        _reportInvalidEOF(\" in a value\");\n    }\n\n    @java.lang.Deprecated\n    protected void _reportInvalidEOF(java.lang.String msg) throws com.fasterxml.jackson.core.JsonParseException {\n        throw new com.fasterxml.jackson.core.io.JsonEOFException(this, null, \"Unexpected end-of-input\" + msg);\n    }\n\n    protected void _reportMissingRootWS(int ch) throws com.fasterxml.jackson.core.JsonParseException {\n        _reportUnexpectedChar(ch, \"Expected space separating root-level values\");\n    }\n\n    protected void _throwInvalidSpace(int i) throws com.fasterxml.jackson.core.JsonParseException {\n        char c = ((char) (i));\n        java.lang.String msg = (\"Illegal character (\" + com.fasterxml.jackson.core.base.ParserMinimalBase._getCharDesc(c)) + \"): only regular white space (\\\\r, \\\\n, \\\\t) is allowed between tokens\";\n        _reportError(msg);\n    }\n\n    protected static final java.lang.String _getCharDesc(int ch) {\n        char c = ((char) (ch));\n        if (java.lang.Character.isISOControl(c)) {\n            return (\"(CTRL-CHAR, code \" + ch) + \")\";\n        }\n        if (ch > 255) {\n            return (((((\"'\" + c) + \"' (code \") + ch) + \" / 0x\") + java.lang.Integer.toHexString(ch)) + \")\";\n        }\n        return (((\"'\" + c) + \"' (code \") + ch) + \")\";\n    }\n\n    protected final void _reportError(java.lang.String msg) throws com.fasterxml.jackson.core.JsonParseException {\n        throw _constructError(msg);\n    }\n\n    protected final void _reportError(java.lang.String msg, java.lang.Object arg) throws com.fasterxml.jackson.core.JsonParseException {\n        throw _constructError(java.lang.String.format(msg, arg));\n    }\n\n    protected final void _reportError(java.lang.String msg, java.lang.Object arg1, java.lang.Object arg2) throws com.fasterxml.jackson.core.JsonParseException {\n        throw _constructError(java.lang.String.format(msg, arg1, arg2));\n    }\n\n    protected final void _wrapError(java.lang.String msg, java.lang.Throwable t) throws com.fasterxml.jackson.core.JsonParseException {\n        throw _constructError(msg, t);\n    }\n\n    protected final void _throwInternal() {\n        com.fasterxml.jackson.core.util.VersionUtil.throwInternal();\n    }\n\n    protected final com.fasterxml.jackson.core.JsonParseException _constructError(java.lang.String msg, java.lang.Throwable t) {\n        return new com.fasterxml.jackson.core.JsonParseException(this, msg, t);\n    }\n\n    protected static byte[] _asciiBytes(java.lang.String str) {\n        byte[] b = new byte[str.length()];\n        for (int i = 0, len = str.length(); i < len; ++i) {\n            b[i] = ((byte) (str.charAt(i)));\n        }\n        return b;\n    }\n\n    protected static java.lang.String _ascii(byte[] b) {\n        try {\n            return new java.lang.String(b, \"US-ASCII\");\n        } catch (java.io.IOException e) {\n            throw new java.lang.RuntimeException(e);\n        }\n    }\n}",
            "src_parent_type": "Class",
            "src_type": "Method"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Parameter",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "com.fasterxml.jackson.core.JsonToken inputType",
            "src_parent": "protected void reportOverflowInt(java.lang.String numDesc, com.fasterxml.jackson.core.JsonToken inputType) throws java.io.IOException {\n    _reportInputCoercion(java.lang.String.format(\"Numeric value (%s) out of range of int (%d - %s)\", _longIntegerDesc(numDesc), java.lang.Integer.MIN_VALUE, java.lang.Integer.MAX_VALUE), inputType, java.lang.Integer.TYPE);\n}",
            "src_parent_type": "Method",
            "src_type": "Parameter"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Method",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "protected void reportOverflowLong(java.lang.String numDesc) throws java.io.IOException {\n    reportOverflowLong(numDesc, com.fasterxml.jackson.core.JsonToken.VALUE_NUMBER_INT);\n}",
            "src_parent": "public abstract class ParserMinimalBase extends com.fasterxml.jackson.core.JsonParser {\n    protected static final int INT_TAB = '\\t';\n\n    protected static final int INT_LF = '\\n';\n\n    protected static final int INT_CR = '\\r';\n\n    protected static final int INT_SPACE = 0x20;\n\n    protected static final int INT_LBRACKET = '[';\n\n    protected static final int INT_RBRACKET = ']';\n\n    protected static final int INT_LCURLY = '{';\n\n    protected static final int INT_RCURLY = '}';\n\n    protected static final int INT_QUOTE = '\"';\n\n    protected static final int INT_APOS = '\\'';\n\n    protected static final int INT_BACKSLASH = '\\\\';\n\n    protected static final int INT_SLASH = '/';\n\n    protected static final int INT_ASTERISK = '*';\n\n    protected static final int INT_COLON = ':';\n\n    protected static final int INT_COMMA = ',';\n\n    protected static final int INT_HASH = '#';\n\n    protected static final int INT_0 = '0';\n\n    protected static final int INT_9 = '9';\n\n    protected static final int INT_MINUS = '-';\n\n    protected static final int INT_PLUS = '+';\n\n    protected static final int INT_PERIOD = '.';\n\n    protected static final int INT_e = 'e';\n\n    protected static final int INT_E = 'E';\n\n    protected static final char CHAR_NULL = '\\u0000';\n\n    protected static final byte[] NO_BYTES = new byte[0];\n\n    protected static final int[] NO_INTS = new int[0];\n\n    protected static final int NR_UNKNOWN = 0;\n\n    protected static final int NR_INT = 0x1;\n\n    protected static final int NR_LONG = 0x2;\n\n    protected static final int NR_BIGINT = 0x4;\n\n    protected static final int NR_DOUBLE = 0x8;\n\n    protected static final int NR_BIGDECIMAL = 0x10;\n\n    protected static final int NR_FLOAT = 0x20;\n\n    protected static final java.math.BigInteger BI_MIN_INT = java.math.BigInteger.valueOf(java.lang.Integer.MIN_VALUE);\n\n    protected static final java.math.BigInteger BI_MAX_INT = java.math.BigInteger.valueOf(java.lang.Integer.MAX_VALUE);\n\n    protected static final java.math.BigInteger BI_MIN_LONG = java.math.BigInteger.valueOf(java.lang.Long.MIN_VALUE);\n\n    protected static final java.math.BigInteger BI_MAX_LONG = java.math.BigInteger.valueOf(java.lang.Long.MAX_VALUE);\n\n    protected static final java.math.BigDecimal BD_MIN_LONG = new java.math.BigDecimal(com.fasterxml.jackson.core.base.ParserMinimalBase.BI_MIN_LONG);\n\n    protected static final java.math.BigDecimal BD_MAX_LONG = new java.math.BigDecimal(com.fasterxml.jackson.core.base.ParserMinimalBase.BI_MAX_LONG);\n\n    protected static final java.math.BigDecimal BD_MIN_INT = new java.math.BigDecimal(com.fasterxml.jackson.core.base.ParserMinimalBase.BI_MIN_INT);\n\n    protected static final java.math.BigDecimal BD_MAX_INT = new java.math.BigDecimal(com.fasterxml.jackson.core.base.ParserMinimalBase.BI_MAX_INT);\n\n    protected static final long MIN_INT_L = ((long) (java.lang.Integer.MIN_VALUE));\n\n    protected static final long MAX_INT_L = ((long) (java.lang.Integer.MAX_VALUE));\n\n    protected static final double MIN_LONG_D = ((double) (java.lang.Long.MIN_VALUE));\n\n    protected static final double MAX_LONG_D = ((double) (java.lang.Long.MAX_VALUE));\n\n    protected static final double MIN_INT_D = ((double) (java.lang.Integer.MIN_VALUE));\n\n    protected static final double MAX_INT_D = ((double) (java.lang.Integer.MAX_VALUE));\n\n    protected static final int MAX_ERROR_TOKEN_LENGTH = 256;\n\n    protected com.fasterxml.jackson.core.JsonToken _currToken;\n\n    protected com.fasterxml.jackson.core.JsonToken _lastClearedToken;\n\n    protected ParserMinimalBase() {\n    }\n\n    protected ParserMinimalBase(int features) {\n        super(features);\n    }\n\n    @java.lang.Override\n    public abstract com.fasterxml.jackson.core.JsonToken nextToken() throws java.io.IOException;\n\n    @java.lang.Override\n    public com.fasterxml.jackson.core.JsonToken currentToken() {\n        return _currToken;\n    }\n\n    @java.lang.Override\n    public int currentTokenId() {\n        final com.fasterxml.jackson.core.JsonToken t = _currToken;\n        return t == null ? com.fasterxml.jackson.core.JsonTokenId.ID_NO_TOKEN : t.id();\n    }\n\n    @java.lang.Override\n    public com.fasterxml.jackson.core.JsonToken getCurrentToken() {\n        return _currToken;\n    }\n\n    @java.lang.Override\n    public int getCurrentTokenId() {\n        final com.fasterxml.jackson.core.JsonToken t = _currToken;\n        return t == null ? com.fasterxml.jackson.core.JsonTokenId.ID_NO_TOKEN : t.id();\n    }\n\n    @java.lang.Override\n    public boolean hasCurrentToken() {\n        return _currToken != null;\n    }\n\n    @java.lang.Override\n    public boolean hasTokenId(int id) {\n        final com.fasterxml.jackson.core.JsonToken t = _currToken;\n        if (t == null) {\n            return com.fasterxml.jackson.core.JsonTokenId.ID_NO_TOKEN == id;\n        }\n        return t.id() == id;\n    }\n\n    @java.lang.Override\n    public boolean hasToken(com.fasterxml.jackson.core.JsonToken t) {\n        return _currToken == t;\n    }\n\n    @java.lang.Override\n    public boolean isExpectedStartArrayToken() {\n        return _currToken == com.fasterxml.jackson.core.JsonToken.START_ARRAY;\n    }\n\n    @java.lang.Override\n    public boolean isExpectedStartObjectToken() {\n        return _currToken == com.fasterxml.jackson.core.JsonToken.START_OBJECT;\n    }\n\n    @java.lang.Override\n    public com.fasterxml.jackson.core.JsonToken nextValue() throws java.io.IOException {\n        com.fasterxml.jackson.core.JsonToken t = nextToken();\n        if (t == com.fasterxml.jackson.core.JsonToken.FIELD_NAME) {\n            t = nextToken();\n        }\n        return t;\n    }\n\n    @java.lang.Override\n    public com.fasterxml.jackson.core.JsonParser skipChildren() throws java.io.IOException {\n        if ((_currToken != com.fasterxml.jackson.core.JsonToken.START_OBJECT) && (_currToken != com.fasterxml.jackson.core.JsonToken.START_ARRAY)) {\n            return this;\n        }\n        int open = 1;\n        while (true) {\n            com.fasterxml.jackson.core.JsonToken t = nextToken();\n            if (t == null) {\n                _handleEOF();\n                return this;\n            }\n            if (t.isStructStart()) {\n                ++open;\n            } else if (t.isStructEnd()) {\n                if ((--open) == 0) {\n                    return this;\n                }\n            } else if (t == com.fasterxml.jackson.core.JsonToken.NOT_AVAILABLE) {\n                _reportError(\"Not enough content available for `skipChildren()`: non-blocking parser? (%s)\", getClass().getName());\n            }\n        } \n    }\n\n    protected abstract void _handleEOF() throws com.fasterxml.jackson.core.JsonParseException;\n\n    @java.lang.Override\n    public abstract java.lang.String getCurrentName() throws java.io.IOException;\n\n    @java.lang.Override\n    public abstract void close() throws java.io.IOException;\n\n    @java.lang.Override\n    public abstract boolean isClosed();\n\n    @java.lang.Override\n    public abstract com.fasterxml.jackson.core.JsonStreamContext getParsingContext();\n\n    @java.lang.Override\n    public void clearCurrentToken() {\n        if (_currToken != null) {\n            _lastClearedToken = _currToken;\n            _currToken = null;\n        }\n    }\n\n    @java.lang.Override\n    public com.fasterxml.jackson.core.JsonToken getLastClearedToken() {\n        return _lastClearedToken;\n    }\n\n    @java.lang.Override\n    public abstract void overrideCurrentName(java.lang.String name);\n\n    @java.lang.Override\n    public abstract java.lang.String getText() throws java.io.IOException;\n\n    @java.lang.Override\n    public abstract char[] getTextCharacters() throws java.io.IOException;\n\n    @java.lang.Override\n    public abstract boolean hasTextCharacters();\n\n    @java.lang.Override\n    public abstract int getTextLength() throws java.io.IOException;\n\n    @java.lang.Override\n    public abstract int getTextOffset() throws java.io.IOException;\n\n    @java.lang.Override\n    public abstract byte[] getBinaryValue(com.fasterxml.jackson.core.Base64Variant b64variant) throws java.io.IOException;\n\n    @java.lang.Override\n    public boolean getValueAsBoolean(boolean defaultValue) throws java.io.IOException {\n        com.fasterxml.jackson.core.JsonToken t = _currToken;\n        if (t != null) {\n            switch (t.id()) {\n                case com.fasterxml.jackson.core.JsonTokenId.ID_STRING :\n                    java.lang.String str = getText().trim();\n                    if (\"true\".equals(str)) {\n                        return true;\n                    }\n                    if (\"false\".equals(str)) {\n                        return false;\n                    }\n                    if (_hasTextualNull(str)) {\n                        return false;\n                    }\n                    break;\n                case com.fasterxml.jackson.core.JsonTokenId.ID_NUMBER_INT :\n                    return getIntValue() != 0;\n                case com.fasterxml.jackson.core.JsonTokenId.ID_TRUE :\n                    return true;\n                case com.fasterxml.jackson.core.JsonTokenId.ID_FALSE :\n                case com.fasterxml.jackson.core.JsonTokenId.ID_NULL :\n                    return false;\n                case com.fasterxml.jackson.core.JsonTokenId.ID_EMBEDDED_OBJECT :\n                    java.lang.Object value = getEmbeddedObject();\n                    if (value instanceof java.lang.Boolean) {\n                        return ((java.lang.Boolean) (value));\n                    }\n                    break;\n                default :\n            }\n        }\n        return defaultValue;\n    }\n\n    @java.lang.Override\n    public int getValueAsInt() throws java.io.IOException {\n        com.fasterxml.jackson.core.JsonToken t = _currToken;\n        if ((t == com.fasterxml.jackson.core.JsonToken.VALUE_NUMBER_INT) || (t == com.fasterxml.jackson.core.JsonToken.VALUE_NUMBER_FLOAT)) {\n            return getIntValue();\n        }\n        return getValueAsInt(0);\n    }\n\n    @java.lang.Override\n    public int getValueAsInt(int defaultValue) throws java.io.IOException {\n        com.fasterxml.jackson.core.JsonToken t = _currToken;\n        if ((t == com.fasterxml.jackson.core.JsonToken.VALUE_NUMBER_INT) || (t == com.fasterxml.jackson.core.JsonToken.VALUE_NUMBER_FLOAT)) {\n            return getIntValue();\n        }\n        if (t != null) {\n            switch (t.id()) {\n                case com.fasterxml.jackson.core.JsonTokenId.ID_STRING :\n                    java.lang.String str = getText();\n                    if (_hasTextualNull(str)) {\n                        return 0;\n                    }\n                    return com.fasterxml.jackson.core.io.NumberInput.parseAsInt(str, defaultValue);\n                case com.fasterxml.jackson.core.JsonTokenId.ID_TRUE :\n                    return 1;\n                case com.fasterxml.jackson.core.JsonTokenId.ID_FALSE :\n                    return 0;\n                case com.fasterxml.jackson.core.JsonTokenId.ID_NULL :\n                    return 0;\n                case com.fasterxml.jackson.core.JsonTokenId.ID_EMBEDDED_OBJECT :\n                    java.lang.Object value = getEmbeddedObject();\n                    if (value instanceof java.lang.Number) {\n                        return ((java.lang.Number) (value)).intValue();\n                    }\n            }\n        }\n        return defaultValue;\n    }\n\n    @java.lang.Override\n    public long getValueAsLong() throws java.io.IOException {\n        com.fasterxml.jackson.core.JsonToken t = _currToken;\n        if ((t == com.fasterxml.jackson.core.JsonToken.VALUE_NUMBER_INT) || (t == com.fasterxml.jackson.core.JsonToken.VALUE_NUMBER_FLOAT)) {\n            return getLongValue();\n        }\n        return getValueAsLong(0L);\n    }\n\n    @java.lang.Override\n    public long getValueAsLong(long defaultValue) throws java.io.IOException {\n        com.fasterxml.jackson.core.JsonToken t = _currToken;\n        if ((t == com.fasterxml.jackson.core.JsonToken.VALUE_NUMBER_INT) || (t == com.fasterxml.jackson.core.JsonToken.VALUE_NUMBER_FLOAT)) {\n            return getLongValue();\n        }\n        if (t != null) {\n            switch (t.id()) {\n                case com.fasterxml.jackson.core.JsonTokenId.ID_STRING :\n                    java.lang.String str = getText();\n                    if (_hasTextualNull(str)) {\n                        return 0L;\n                    }\n                    return com.fasterxml.jackson.core.io.NumberInput.parseAsLong(str, defaultValue);\n                case com.fasterxml.jackson.core.JsonTokenId.ID_TRUE :\n                    return 1L;\n                case com.fasterxml.jackson.core.JsonTokenId.ID_FALSE :\n                case com.fasterxml.jackson.core.JsonTokenId.ID_NULL :\n                    return 0L;\n                case com.fasterxml.jackson.core.JsonTokenId.ID_EMBEDDED_OBJECT :\n                    java.lang.Object value = getEmbeddedObject();\n                    if (value instanceof java.lang.Number) {\n                        return ((java.lang.Number) (value)).longValue();\n                    }\n            }\n        }\n        return defaultValue;\n    }\n\n    @java.lang.Override\n    public double getValueAsDouble(double defaultValue) throws java.io.IOException {\n        com.fasterxml.jackson.core.JsonToken t = _currToken;\n        if (t != null) {\n            switch (t.id()) {\n                case com.fasterxml.jackson.core.JsonTokenId.ID_STRING :\n                    java.lang.String str = getText();\n                    if (_hasTextualNull(str)) {\n                        return 0L;\n                    }\n                    return com.fasterxml.jackson.core.io.NumberInput.parseAsDouble(str, defaultValue);\n                case com.fasterxml.jackson.core.JsonTokenId.ID_NUMBER_INT :\n                case com.fasterxml.jackson.core.JsonTokenId.ID_NUMBER_FLOAT :\n                    return getDoubleValue();\n                case com.fasterxml.jackson.core.JsonTokenId.ID_TRUE :\n                    return 1.0;\n                case com.fasterxml.jackson.core.JsonTokenId.ID_FALSE :\n                case com.fasterxml.jackson.core.JsonTokenId.ID_NULL :\n                    return 0.0;\n                case com.fasterxml.jackson.core.JsonTokenId.ID_EMBEDDED_OBJECT :\n                    java.lang.Object value = this.getEmbeddedObject();\n                    if (value instanceof java.lang.Number) {\n                        return ((java.lang.Number) (value)).doubleValue();\n                    }\n            }\n        }\n        return defaultValue;\n    }\n\n    @java.lang.Override\n    public java.lang.String getValueAsString() throws java.io.IOException {\n        if (_currToken == com.fasterxml.jackson.core.JsonToken.VALUE_STRING) {\n            return getText();\n        }\n        if (_currToken == com.fasterxml.jackson.core.JsonToken.FIELD_NAME) {\n            return getCurrentName();\n        }\n        return getValueAsString(null);\n    }\n\n    @java.lang.Override\n    public java.lang.String getValueAsString(java.lang.String defaultValue) throws java.io.IOException {\n        if (_currToken == com.fasterxml.jackson.core.JsonToken.VALUE_STRING) {\n            return getText();\n        }\n        if (_currToken == com.fasterxml.jackson.core.JsonToken.FIELD_NAME) {\n            return getCurrentName();\n        }\n        if (((_currToken == null) || (_currToken == com.fasterxml.jackson.core.JsonToken.VALUE_NULL)) || (!_currToken.isScalarValue())) {\n            return defaultValue;\n        }\n        return getText();\n    }\n\n    protected void _decodeBase64(java.lang.String str, com.fasterxml.jackson.core.util.ByteArrayBuilder builder, com.fasterxml.jackson.core.Base64Variant b64variant) throws java.io.IOException {\n        try {\n            b64variant.decode(str, builder);\n        } catch (java.lang.IllegalArgumentException e) {\n            _reportError(e.getMessage());\n        }\n    }\n\n    protected boolean _hasTextualNull(java.lang.String value) {\n        return \"null\".equals(value);\n    }\n\n    protected void reportUnexpectedNumberChar(int ch, java.lang.String comment) throws com.fasterxml.jackson.core.JsonParseException {\n        java.lang.String msg = java.lang.String.format(\"Unexpected character (%s) in numeric value\", com.fasterxml.jackson.core.base.ParserMinimalBase._getCharDesc(ch));\n        if (comment != null) {\n            msg += \": \" + comment;\n        }\n        _reportError(msg);\n    }\n\n    protected void reportInvalidNumber(java.lang.String msg) throws com.fasterxml.jackson.core.JsonParseException {\n        _reportError(\"Invalid numeric value: \" + msg);\n    }\n\n    protected void reportOverflowInt() throws java.io.IOException {\n        reportOverflowInt(getText());\n    }\n\n    protected void reportOverflowInt(java.lang.String numDesc) throws java.io.IOException {\n        reportOverflowInt(numDesc, com.fasterxml.jackson.core.JsonToken.VALUE_NUMBER_INT);\n    }\n\n    protected void reportOverflowInt(java.lang.String numDesc, com.fasterxml.jackson.core.JsonToken inputType) throws java.io.IOException {\n        _reportInputCoercion(java.lang.String.format(\"Numeric value (%s) out of range of int (%d - %s)\", _longIntegerDesc(numDesc), java.lang.Integer.MIN_VALUE, java.lang.Integer.MAX_VALUE), inputType, java.lang.Integer.TYPE);\n    }\n\n    protected void reportOverflowLong() throws java.io.IOException {\n        reportOverflowLong(getText());\n    }\n\n    protected void reportOverflowLong(java.lang.String numDesc) throws java.io.IOException {\n        reportOverflowLong(numDesc, com.fasterxml.jackson.core.JsonToken.VALUE_NUMBER_INT);\n    }\n\n    protected void reportOverflowLong(java.lang.String numDesc, com.fasterxml.jackson.core.JsonToken inputType) throws java.io.IOException {\n        _reportInputCoercion(java.lang.String.format(\"Numeric value (%s) out of range of long (%d - %s)\", _longIntegerDesc(numDesc), java.lang.Long.MIN_VALUE, java.lang.Long.MAX_VALUE), inputType, java.lang.Long.TYPE);\n    }\n\n    protected void _reportInputCoercion(java.lang.String msg, com.fasterxml.jackson.core.JsonToken inputType, java.lang.Class<?> targetType) throws com.fasterxml.jackson.core.exc.InputCoercionException {\n        throw new com.fasterxml.jackson.core.exc.InputCoercionException(this, msg, inputType, targetType);\n    }\n\n    protected java.lang.String _longIntegerDesc(java.lang.String rawNum) {\n        int rawLen = rawNum.length();\n        if (rawLen < 1000) {\n            return rawNum;\n        }\n        if (rawNum.startsWith(\"-\")) {\n            rawLen -= 1;\n        }\n        return java.lang.String.format(\"[Integer with %d digits]\", rawLen);\n    }\n\n    protected java.lang.String _longNumberDesc(java.lang.String rawNum) {\n        int rawLen = rawNum.length();\n        if (rawLen < 1000) {\n            return rawNum;\n        }\n        if (rawNum.startsWith(\"-\")) {\n            rawLen -= 1;\n        }\n        return java.lang.String.format(\"[number with %d characters]\", rawLen);\n    }\n\n    protected void _reportUnexpectedChar(int ch, java.lang.String comment) throws com.fasterxml.jackson.core.JsonParseException {\n        if (ch < 0) {\n            _reportInvalidEOF();\n        }\n        java.lang.String msg = java.lang.String.format(\"Unexpected character (%s)\", com.fasterxml.jackson.core.base.ParserMinimalBase._getCharDesc(ch));\n        if (comment != null) {\n            msg += \": \" + comment;\n        }\n        _reportError(msg);\n    }\n\n    protected void _reportInvalidEOF() throws com.fasterxml.jackson.core.JsonParseException {\n        _reportInvalidEOF(\" in \" + _currToken, _currToken);\n    }\n\n    protected void _reportInvalidEOFInValue(com.fasterxml.jackson.core.JsonToken type) throws com.fasterxml.jackson.core.JsonParseException {\n        java.lang.String msg;\n        if (type == com.fasterxml.jackson.core.JsonToken.VALUE_STRING) {\n            msg = \" in a String value\";\n        } else if ((type == com.fasterxml.jackson.core.JsonToken.VALUE_NUMBER_INT) || (type == com.fasterxml.jackson.core.JsonToken.VALUE_NUMBER_FLOAT)) {\n            msg = \" in a Number value\";\n        } else {\n            msg = \" in a value\";\n        }\n        _reportInvalidEOF(msg, type);\n    }\n\n    protected void _reportInvalidEOF(java.lang.String msg, com.fasterxml.jackson.core.JsonToken currToken) throws com.fasterxml.jackson.core.JsonParseException {\n        throw new com.fasterxml.jackson.core.io.JsonEOFException(this, currToken, \"Unexpected end-of-input\" + msg);\n    }\n\n    @java.lang.Deprecated\n    protected void _reportInvalidEOFInValue() throws com.fasterxml.jackson.core.JsonParseException {\n        _reportInvalidEOF(\" in a value\");\n    }\n\n    @java.lang.Deprecated\n    protected void _reportInvalidEOF(java.lang.String msg) throws com.fasterxml.jackson.core.JsonParseException {\n        throw new com.fasterxml.jackson.core.io.JsonEOFException(this, null, \"Unexpected end-of-input\" + msg);\n    }\n\n    protected void _reportMissingRootWS(int ch) throws com.fasterxml.jackson.core.JsonParseException {\n        _reportUnexpectedChar(ch, \"Expected space separating root-level values\");\n    }\n\n    protected void _throwInvalidSpace(int i) throws com.fasterxml.jackson.core.JsonParseException {\n        char c = ((char) (i));\n        java.lang.String msg = (\"Illegal character (\" + com.fasterxml.jackson.core.base.ParserMinimalBase._getCharDesc(c)) + \"): only regular white space (\\\\r, \\\\n, \\\\t) is allowed between tokens\";\n        _reportError(msg);\n    }\n\n    protected static final java.lang.String _getCharDesc(int ch) {\n        char c = ((char) (ch));\n        if (java.lang.Character.isISOControl(c)) {\n            return (\"(CTRL-CHAR, code \" + ch) + \")\";\n        }\n        if (ch > 255) {\n            return (((((\"'\" + c) + \"' (code \") + ch) + \" / 0x\") + java.lang.Integer.toHexString(ch)) + \")\";\n        }\n        return (((\"'\" + c) + \"' (code \") + ch) + \")\";\n    }\n\n    protected final void _reportError(java.lang.String msg) throws com.fasterxml.jackson.core.JsonParseException {\n        throw _constructError(msg);\n    }\n\n    protected final void _reportError(java.lang.String msg, java.lang.Object arg) throws com.fasterxml.jackson.core.JsonParseException {\n        throw _constructError(java.lang.String.format(msg, arg));\n    }\n\n    protected final void _reportError(java.lang.String msg, java.lang.Object arg1, java.lang.Object arg2) throws com.fasterxml.jackson.core.JsonParseException {\n        throw _constructError(java.lang.String.format(msg, arg1, arg2));\n    }\n\n    protected final void _wrapError(java.lang.String msg, java.lang.Throwable t) throws com.fasterxml.jackson.core.JsonParseException {\n        throw _constructError(msg, t);\n    }\n\n    protected final void _throwInternal() {\n        com.fasterxml.jackson.core.util.VersionUtil.throwInternal();\n    }\n\n    protected final com.fasterxml.jackson.core.JsonParseException _constructError(java.lang.String msg, java.lang.Throwable t) {\n        return new com.fasterxml.jackson.core.JsonParseException(this, msg, t);\n    }\n\n    protected static byte[] _asciiBytes(java.lang.String str) {\n        byte[] b = new byte[str.length()];\n        for (int i = 0, len = str.length(); i < len; ++i) {\n            b[i] = ((byte) (str.charAt(i)));\n        }\n        return b;\n    }\n\n    protected static java.lang.String _ascii(byte[] b) {\n        try {\n            return new java.lang.String(b, \"US-ASCII\");\n        } catch (java.io.IOException e) {\n            throw new java.lang.RuntimeException(e);\n        }\n    }\n}",
            "src_parent_type": "Class",
            "src_type": "Method"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Parameter",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "com.fasterxml.jackson.core.JsonToken inputType",
            "src_parent": "protected void reportOverflowLong(java.lang.String numDesc, com.fasterxml.jackson.core.JsonToken inputType) throws java.io.IOException {\n    _reportInputCoercion(java.lang.String.format(\"Numeric value (%s) out of range of long (%d - %s)\", _longIntegerDesc(numDesc), java.lang.Long.MIN_VALUE, java.lang.Long.MAX_VALUE), inputType, java.lang.Long.TYPE);\n}",
            "src_parent_type": "Method",
            "src_type": "Parameter"
          }
        }
      ],
      "file_name": "ParserMinimalBase"
    }
  ],
  "id": "JacksonCore_24"
}