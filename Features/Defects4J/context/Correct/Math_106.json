{
  "files": [
    {
      "features": [
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "Switch",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "Invocation",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "if (num.intValue() < 0) {\n    pos.setIndex(initialIndex);\n    return null;\n}",
            "src_parent": "{\n    org.apache.commons.math.fraction.Fraction ret = super.parse(source, pos);\n    if (ret != null) {\n        return ret;\n    }\n    int initialIndex = pos.getIndex();\n    parseAndIgnoreWhitespace(source, pos);\n    java.lang.Number whole = getWholeFormat().parse(source, pos);\n    if (whole == null) {\n        pos.setIndex(initialIndex);\n        return null;\n    }\n    parseAndIgnoreWhitespace(source, pos);\n    java.lang.Number num = getNumeratorFormat().parse(source, pos);\n    if (num == null) {\n        pos.setIndex(initialIndex);\n        return null;\n    }\n    if (num.intValue() < 0) {\n        pos.setIndex(initialIndex);\n        return null;\n    }\n    int startIndex = pos.getIndex();\n    char c = parseNextCharacter(source, pos);\n    switch (c) {\n        case 0 :\n            return new org.apache.commons.math.fraction.Fraction(num.intValue(), 1);\n        case '/' :\n            break;\n        default :\n            pos.setIndex(initialIndex);\n            pos.setErrorIndex(startIndex);\n            return null;\n    }\n    parseAndIgnoreWhitespace(source, pos);\n    java.lang.Number den = getDenominatorFormat().parse(source, pos);\n    if (den == null) {\n        pos.setIndex(initialIndex);\n        return null;\n    }\n    if (den.intValue() < 0) {\n        pos.setIndex(initialIndex);\n        return null;\n    }\n    int w = whole.intValue();\n    int n = num.intValue();\n    int d = den.intValue();\n    return new org.apache.commons.math.fraction.Fraction(((java.lang.Math.abs(w) * d) + n) * org.apache.commons.math.util.MathUtils.sign(w), d);\n}",
            "src_parent_type": "Block",
            "src_type": "If"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "Invocation",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "if (den.intValue() < 0) {\n    pos.setIndex(initialIndex);\n    return null;\n}",
            "src_parent": "{\n    org.apache.commons.math.fraction.Fraction ret = super.parse(source, pos);\n    if (ret != null) {\n        return ret;\n    }\n    int initialIndex = pos.getIndex();\n    parseAndIgnoreWhitespace(source, pos);\n    java.lang.Number whole = getWholeFormat().parse(source, pos);\n    if (whole == null) {\n        pos.setIndex(initialIndex);\n        return null;\n    }\n    parseAndIgnoreWhitespace(source, pos);\n    java.lang.Number num = getNumeratorFormat().parse(source, pos);\n    if (num == null) {\n        pos.setIndex(initialIndex);\n        return null;\n    }\n    if (num.intValue() < 0) {\n        pos.setIndex(initialIndex);\n        return null;\n    }\n    int startIndex = pos.getIndex();\n    char c = parseNextCharacter(source, pos);\n    switch (c) {\n        case 0 :\n            return new org.apache.commons.math.fraction.Fraction(num.intValue(), 1);\n        case '/' :\n            break;\n        default :\n            pos.setIndex(initialIndex);\n            pos.setErrorIndex(startIndex);\n            return null;\n    }\n    parseAndIgnoreWhitespace(source, pos);\n    java.lang.Number den = getDenominatorFormat().parse(source, pos);\n    if (den == null) {\n        pos.setIndex(initialIndex);\n        return null;\n    }\n    if (den.intValue() < 0) {\n        pos.setIndex(initialIndex);\n        return null;\n    }\n    int w = whole.intValue();\n    int n = num.intValue();\n    int d = den.intValue();\n    return new org.apache.commons.math.fraction.Fraction(((java.lang.Math.abs(w) * d) + n) * org.apache.commons.math.util.MathUtils.sign(w), d);\n}",
            "src_parent_type": "Block",
            "src_type": "If"
          }
        }
      ],
      "file_name": "ProperFractionFormat"
    }
  ],
  "id": "Math_106"
}