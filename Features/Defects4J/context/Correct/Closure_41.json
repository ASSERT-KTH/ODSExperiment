{
  "files": [
    {
      "features": [
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Return",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "Assignment",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "Assignment",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "If",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "while (oldParams.hasNext()) {\n    paramBuilder.newParameterFromNode(oldParams.next());\n} ",
            "src_parent": "{\n    com.google.javascript.rhino.jstype.FunctionParamBuilder paramBuilder = new com.google.javascript.rhino.jstype.FunctionParamBuilder(typeRegistry);\n    java.util.Iterator<com.google.javascript.rhino.Node> oldParams = oldType.getParameters().iterator();\n    boolean warnedAboutArgList = false;\n    boolean oldParamsListHitOptArgs = false;\n    for (com.google.javascript.rhino.Node currentParam = paramsParent.getFirstChild(); currentParam != null; currentParam = currentParam.getNext()) {\n        if (oldParams.hasNext()) {\n            com.google.javascript.rhino.Node oldParam = oldParams.next();\n            com.google.javascript.rhino.Node newParam = paramBuilder.newParameterFromNode(oldParam);\n            oldParamsListHitOptArgs = (oldParamsListHitOptArgs || oldParam.isVarArgs()) || oldParam.isOptionalArg();\n            if ((currentParam.getNext() != null) && newParam.isVarArgs()) {\n                newParam.setVarArgs(false);\n                newParam.setOptionalArg(true);\n            }\n        } else {\n            warnedAboutArgList |= addParameter(paramBuilder, typeRegistry.getNativeType(com.google.javascript.jscomp.UNKNOWN_TYPE), warnedAboutArgList, codingConvention.isOptionalParameter(currentParam) || oldParamsListHitOptArgs, codingConvention.isVarArgsParameter(currentParam));\n        }\n    }\n    while (oldParams.hasNext()) {\n        paramBuilder.newParameterFromNode(oldParams.next());\n    } \n    parametersNode = paramBuilder.build();\n}",
            "src_parent_type": "Block",
            "src_type": "While"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "ForEach",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "Assignment",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "ForEach",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "LocalVariable",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "if (!isVarArgs) {\n    while ((oldParameterType != null) && (!isVarArgs)) {\n        builder.newParameterFromNode(oldParameterType);\n        oldParameterType = oldParameterType.getNext();\n    } \n}",
            "src_parent": "{\n    if (argsParent == null) {\n        if (info == null) {\n            return this;\n        } else {\n            return inferParameterTypes(info);\n        }\n    }\n    com.google.javascript.rhino.Node oldParameterType = null;\n    if (parametersNode != null) {\n        oldParameterType = parametersNode.getFirstChild();\n    }\n    com.google.javascript.rhino.jstype.FunctionParamBuilder builder = new com.google.javascript.rhino.jstype.FunctionParamBuilder(typeRegistry);\n    boolean warnedAboutArgList = false;\n    java.util.Set<java.lang.String> allJsDocParams = (info == null) ? com.google.common.collect.Sets.<java.lang.String>newHashSet() : com.google.common.collect.Sets.newHashSet(info.getParameterNames());\n    boolean foundTemplateType = false;\n    boolean isVarArgs = false;\n    for (com.google.javascript.rhino.Node arg : argsParent.children()) {\n        java.lang.String argumentName = arg.getString();\n        allJsDocParams.remove(argumentName);\n        com.google.javascript.rhino.jstype.JSType parameterType = null;\n        boolean isOptionalParam = isOptionalParameter(arg, info);\n        isVarArgs = isVarArgsParameter(arg, info);\n        if ((info != null) && info.hasParameterType(argumentName)) {\n            parameterType = info.getParameterType(argumentName).evaluate(scope, typeRegistry);\n        } else if ((oldParameterType != null) && (oldParameterType.getJSType() != null)) {\n            parameterType = oldParameterType.getJSType();\n            isOptionalParam = oldParameterType.isOptionalArg();\n            isVarArgs = oldParameterType.isVarArgs();\n        } else {\n            parameterType = typeRegistry.getNativeType(com.google.javascript.jscomp.UNKNOWN_TYPE);\n        }\n        if ((templateTypeName != null) && parameterType.restrictByNotNullOrUndefined().isTemplateType()) {\n            if (foundTemplateType) {\n                reportError(com.google.javascript.jscomp.FunctionTypeBuilder.TEMPLATE_TYPE_DUPLICATED, fnName);\n            }\n            foundTemplateType = true;\n        }\n        warnedAboutArgList |= addParameter(builder, parameterType, warnedAboutArgList, isOptionalParam, isVarArgs);\n        if (oldParameterType != null) {\n            oldParameterType = oldParameterType.getNext();\n        }\n    }\n    if (!isVarArgs) {\n        while ((oldParameterType != null) && (!isVarArgs)) {\n            builder.newParameterFromNode(oldParameterType);\n            oldParameterType = oldParameterType.getNext();\n        } \n    }\n    if ((templateTypeName != null) && (!foundTemplateType)) {\n        reportError(com.google.javascript.jscomp.FunctionTypeBuilder.TEMPLATE_TYPE_EXPECTED, fnName);\n    }\n    for (java.lang.String inexistentName : allJsDocParams) {\n        reportWarning(com.google.javascript.jscomp.FunctionTypeBuilder.INEXISTANT_PARAM, inexistentName, fnName);\n    }\n    parametersNode = builder.build();\n    return this;\n}",
            "src_parent_type": "Block",
            "src_type": "If"
          }
        }
      ],
      "file_name": "FunctionTypeBuilder"
    }
  ],
  "id": "Closure_41"
}