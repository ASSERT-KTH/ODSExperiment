{
  "files": [
    {
      "features": [
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "t",
            "src_parent": "t != com.fasterxml.jackson.core.JsonToken.FIELD_NAME",
            "src_parent_type": "BinaryOperator",
            "src_type": "VariableRead"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "com.fasterxml.jackson.core.JsonToken.FIELD_NAME",
            "src_parent": "t != com.fasterxml.jackson.core.JsonToken.FIELD_NAME",
            "src_parent_type": "BinaryOperator",
            "src_type": "FieldRead"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "LocalVariable",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "com.fasterxml.jackson.core.JsonToken t = p.getCurrentToken()",
            "src_parent": "{\n    if (p.canReadTypeId()) {\n        java.lang.Object typeId = p.getTypeId();\n        if (typeId != null) {\n            return _deserializeWithNativeTypeId(p, ctxt, typeId);\n        }\n    }\n    com.fasterxml.jackson.core.JsonToken t = p.getCurrentToken();\n    if (t == com.fasterxml.jackson.core.JsonToken.START_OBJECT) {\n        if (p.nextToken() != com.fasterxml.jackson.core.JsonToken.FIELD_NAME) {\n            throw ctxt.wrongTokenException(p, com.fasterxml.jackson.core.JsonToken.FIELD_NAME, (\"need JSON String that contains type id (for subtype of \" + baseTypeName()) + \")\");\n        }\n    } else if (t != com.fasterxml.jackson.core.JsonToken.FIELD_NAME) {\n        throw ctxt.wrongTokenException(p, com.fasterxml.jackson.core.JsonToken.START_OBJECT, \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \" + baseTypeName());\n    }\n    final java.lang.String typeId = p.getText();\n    com.fasterxml.jackson.databind.JsonDeserializer<java.lang.Object> deser = _findDeserializer(ctxt, typeId);\n    p.nextToken();\n    if (_typeIdVisible && (p.getCurrentToken() == com.fasterxml.jackson.core.JsonToken.START_OBJECT)) {\n        com.fasterxml.jackson.databind.util.TokenBuffer tb = new com.fasterxml.jackson.databind.util.TokenBuffer(null, false);\n        tb.writeStartObject();\n        tb.writeFieldName(_typePropertyName);\n        tb.writeString(typeId);\n        p = com.fasterxml.jackson.core.util.JsonParserSequence.createFlattened(tb.asParser(p), p);\n        p.nextToken();\n    }\n    java.lang.Object value = deser.deserialize(p, ctxt);\n    if (p.nextToken() != com.fasterxml.jackson.core.JsonToken.END_OBJECT) {\n        throw ctxt.wrongTokenException(p, com.fasterxml.jackson.core.JsonToken.END_OBJECT, \"expected closing END_OBJECT after type information and deserialized value\");\n    }\n    return value;\n}",
            "src_parent_type": "Block",
            "src_type": "LocalVariable"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "if (t == com.fasterxml.jackson.core.JsonToken.START_OBJECT) {\n    if (p.nextToken() != com.fasterxml.jackson.core.JsonToken.FIELD_NAME) {\n        throw ctxt.wrongTokenException(p, com.fasterxml.jackson.core.JsonToken.FIELD_NAME, (\"need JSON String that contains type id (for subtype of \" + baseTypeName()) + \")\");\n    }\n} else if (t != com.fasterxml.jackson.core.JsonToken.FIELD_NAME) {\n    throw ctxt.wrongTokenException(p, com.fasterxml.jackson.core.JsonToken.START_OBJECT, \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \" + baseTypeName());\n}",
            "src_parent": "{\n    if (p.canReadTypeId()) {\n        java.lang.Object typeId = p.getTypeId();\n        if (typeId != null) {\n            return _deserializeWithNativeTypeId(p, ctxt, typeId);\n        }\n    }\n    com.fasterxml.jackson.core.JsonToken t = p.getCurrentToken();\n    if (t == com.fasterxml.jackson.core.JsonToken.START_OBJECT) {\n        if (p.nextToken() != com.fasterxml.jackson.core.JsonToken.FIELD_NAME) {\n            throw ctxt.wrongTokenException(p, com.fasterxml.jackson.core.JsonToken.FIELD_NAME, (\"need JSON String that contains type id (for subtype of \" + baseTypeName()) + \")\");\n        }\n    } else if (t != com.fasterxml.jackson.core.JsonToken.FIELD_NAME) {\n        throw ctxt.wrongTokenException(p, com.fasterxml.jackson.core.JsonToken.START_OBJECT, \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \" + baseTypeName());\n    }\n    final java.lang.String typeId = p.getText();\n    com.fasterxml.jackson.databind.JsonDeserializer<java.lang.Object> deser = _findDeserializer(ctxt, typeId);\n    p.nextToken();\n    if (_typeIdVisible && (p.getCurrentToken() == com.fasterxml.jackson.core.JsonToken.START_OBJECT)) {\n        com.fasterxml.jackson.databind.util.TokenBuffer tb = new com.fasterxml.jackson.databind.util.TokenBuffer(null, false);\n        tb.writeStartObject();\n        tb.writeFieldName(_typePropertyName);\n        tb.writeString(typeId);\n        p = com.fasterxml.jackson.core.util.JsonParserSequence.createFlattened(tb.asParser(p), p);\n        p.nextToken();\n    }\n    java.lang.Object value = deser.deserialize(p, ctxt);\n    if (p.nextToken() != com.fasterxml.jackson.core.JsonToken.END_OBJECT) {\n        throw ctxt.wrongTokenException(p, com.fasterxml.jackson.core.JsonToken.END_OBJECT, \"expected closing END_OBJECT after type information and deserialized value\");\n    }\n    return value;\n}",
            "src_parent_type": "Block",
            "src_type": "If"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "if (p.getCurrentToken() != com.fasterxml.jackson.core.JsonToken.START_OBJECT) {\n    throw ctxt.wrongTokenException(p, com.fasterxml.jackson.core.JsonToken.START_OBJECT, \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \" + baseTypeName());\n}",
            "dst_parent": "{\n    if (p.canReadTypeId()) {\n        java.lang.Object typeId = p.getTypeId();\n        if (typeId != null) {\n            return _deserializeWithNativeTypeId(p, ctxt, typeId);\n        }\n    }\n    if (p.getCurrentToken() != com.fasterxml.jackson.core.JsonToken.START_OBJECT) {\n        throw ctxt.wrongTokenException(p, com.fasterxml.jackson.core.JsonToken.START_OBJECT, \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \" + baseTypeName());\n    }\n    if (p.nextToken() != com.fasterxml.jackson.core.JsonToken.FIELD_NAME) {\n        throw ctxt.wrongTokenException(p, com.fasterxml.jackson.core.JsonToken.FIELD_NAME, (\"need JSON String that contains type id (for subtype of \" + baseTypeName()) + \")\");\n    }\n    final java.lang.String typeId = p.getText();\n    com.fasterxml.jackson.databind.JsonDeserializer<java.lang.Object> deser = _findDeserializer(ctxt, typeId);\n    p.nextToken();\n    if (_typeIdVisible && (p.getCurrentToken() == com.fasterxml.jackson.core.JsonToken.START_OBJECT)) {\n        com.fasterxml.jackson.databind.util.TokenBuffer tb = new com.fasterxml.jackson.databind.util.TokenBuffer(null, false);\n        tb.writeStartObject();\n        tb.writeFieldName(_typePropertyName);\n        tb.writeString(typeId);\n        p = com.fasterxml.jackson.core.util.JsonParserSequence.createFlattened(tb.asParser(p), p);\n        p.nextToken();\n    }\n    java.lang.Object value = deser.deserialize(p, ctxt);\n    if (p.nextToken() != com.fasterxml.jackson.core.JsonToken.END_OBJECT) {\n        throw ctxt.wrongTokenException(p, com.fasterxml.jackson.core.JsonToken.END_OBJECT, \"expected closing END_OBJECT after type information and deserialized value\");\n    }\n    return value;\n}",
            "dst_parent_type": "Block",
            "dst_type": "If",
            "operator": "MOV",
            "src": "if (t != com.fasterxml.jackson.core.JsonToken.FIELD_NAME) {\n    throw ctxt.wrongTokenException(p, com.fasterxml.jackson.core.JsonToken.START_OBJECT, \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \" + baseTypeName());\n}",
            "src_parent": "{\n    if (t != com.fasterxml.jackson.core.JsonToken.FIELD_NAME) {\n        throw ctxt.wrongTokenException(p, com.fasterxml.jackson.core.JsonToken.START_OBJECT, \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \" + baseTypeName());\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "If"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "if (p.nextToken() != com.fasterxml.jackson.core.JsonToken.FIELD_NAME) {\n    throw ctxt.wrongTokenException(p, com.fasterxml.jackson.core.JsonToken.FIELD_NAME, (\"need JSON String that contains type id (for subtype of \" + baseTypeName()) + \")\");\n}",
            "dst_parent": "{\n    if (p.canReadTypeId()) {\n        java.lang.Object typeId = p.getTypeId();\n        if (typeId != null) {\n            return _deserializeWithNativeTypeId(p, ctxt, typeId);\n        }\n    }\n    if (p.getCurrentToken() != com.fasterxml.jackson.core.JsonToken.START_OBJECT) {\n        throw ctxt.wrongTokenException(p, com.fasterxml.jackson.core.JsonToken.START_OBJECT, \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \" + baseTypeName());\n    }\n    if (p.nextToken() != com.fasterxml.jackson.core.JsonToken.FIELD_NAME) {\n        throw ctxt.wrongTokenException(p, com.fasterxml.jackson.core.JsonToken.FIELD_NAME, (\"need JSON String that contains type id (for subtype of \" + baseTypeName()) + \")\");\n    }\n    final java.lang.String typeId = p.getText();\n    com.fasterxml.jackson.databind.JsonDeserializer<java.lang.Object> deser = _findDeserializer(ctxt, typeId);\n    p.nextToken();\n    if (_typeIdVisible && (p.getCurrentToken() == com.fasterxml.jackson.core.JsonToken.START_OBJECT)) {\n        com.fasterxml.jackson.databind.util.TokenBuffer tb = new com.fasterxml.jackson.databind.util.TokenBuffer(null, false);\n        tb.writeStartObject();\n        tb.writeFieldName(_typePropertyName);\n        tb.writeString(typeId);\n        p = com.fasterxml.jackson.core.util.JsonParserSequence.createFlattened(tb.asParser(p), p);\n        p.nextToken();\n    }\n    java.lang.Object value = deser.deserialize(p, ctxt);\n    if (p.nextToken() != com.fasterxml.jackson.core.JsonToken.END_OBJECT) {\n        throw ctxt.wrongTokenException(p, com.fasterxml.jackson.core.JsonToken.END_OBJECT, \"expected closing END_OBJECT after type information and deserialized value\");\n    }\n    return value;\n}",
            "dst_parent_type": "Block",
            "dst_type": "If",
            "operator": "MOV",
            "src": "if (p.nextToken() != com.fasterxml.jackson.core.JsonToken.FIELD_NAME) {\n    throw ctxt.wrongTokenException(p, com.fasterxml.jackson.core.JsonToken.FIELD_NAME, (\"need JSON String that contains type id (for subtype of \" + baseTypeName()) + \")\");\n}",
            "src_parent": "{\n    if (p.nextToken() != com.fasterxml.jackson.core.JsonToken.FIELD_NAME) {\n        throw ctxt.wrongTokenException(p, com.fasterxml.jackson.core.JsonToken.FIELD_NAME, (\"need JSON String that contains type id (for subtype of \" + baseTypeName()) + \")\");\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "If"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "LocalVariable",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "p.getCurrentToken()",
            "dst_parent": "p.getCurrentToken() != com.fasterxml.jackson.core.JsonToken.START_OBJECT",
            "dst_parent_type": "BinaryOperator",
            "dst_type": "Invocation",
            "operator": "MOV",
            "src": "p.getCurrentToken()",
            "src_parent": "com.fasterxml.jackson.core.JsonToken t = p.getCurrentToken()",
            "src_parent_type": "LocalVariable",
            "src_type": "Invocation"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "com.fasterxml.jackson.core.JsonToken.START_OBJECT",
            "dst_parent": "p.getCurrentToken() != com.fasterxml.jackson.core.JsonToken.START_OBJECT",
            "dst_parent_type": "BinaryOperator",
            "dst_type": "FieldRead",
            "operator": "MOV",
            "src": "com.fasterxml.jackson.core.JsonToken.START_OBJECT",
            "src_parent": "t == com.fasterxml.jackson.core.JsonToken.START_OBJECT",
            "src_parent_type": "BinaryOperator",
            "src_type": "FieldRead"
          }
        }
      ],
      "file_name": "AsWrapperTypeDeserializer"
    }
  ],
  "id": "JacksonDatabind_35"
}