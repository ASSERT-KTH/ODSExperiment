{
  "files": [
    {
      "features": [
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Catch",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Return",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "iae.getMessage()",
            "dst_parent": "((java.util.Date) (ctxt.handleWeirdStringValue(_valueClass, value, \"not a valid representation (error: %s)\", iae.getMessage())))",
            "dst_parent_type": "Invocation",
            "dst_type": "Invocation",
            "operator": "UPD",
            "src": "com.fasterxml.jackson.databind.util.ClassUtil.exceptionMessage(iae)",
            "src_parent": "((java.util.Date) (ctxt.handleWeirdStringValue(_valueClass, value, \"not a valid representation (error: %s)\", com.fasterxml.jackson.databind.util.ClassUtil.exceptionMessage(iae))))",
            "src_parent_type": "Invocation",
            "src_type": "Invocation"
          }
        }
      ],
      "file_name": "StdDeserializer"
    },
    {
      "features": [
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "Invocation",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Throw",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "th.getMessage()",
            "dst_parent": "com.fasterxml.jackson.databind.JsonMappingException.from(p, th.getMessage(), th)",
            "dst_parent_type": "Invocation",
            "dst_type": "Invocation",
            "operator": "UPD",
            "src": "com.fasterxml.jackson.databind.util.ClassUtil.exceptionMessage(th)",
            "src_parent": "com.fasterxml.jackson.databind.JsonMappingException.from(p, com.fasterxml.jackson.databind.util.ClassUtil.exceptionMessage(th), th)",
            "src_parent_type": "Invocation",
            "src_type": "Invocation"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "Throw",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "LocalVariable",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "e.getMessage()",
            "dst_parent": "java.lang.String origMsg = e.getMessage()",
            "dst_parent_type": "LocalVariable",
            "dst_type": "Invocation",
            "operator": "UPD",
            "src": "com.fasterxml.jackson.databind.util.ClassUtil.exceptionMessage(e)",
            "src_parent": "java.lang.String origMsg = com.fasterxml.jackson.databind.util.ClassUtil.exceptionMessage(e)",
            "src_parent_type": "LocalVariable",
            "src_type": "Invocation"
          }
        }
      ],
      "file_name": "SettableBeanProperty"
    },
    {
      "features": [
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Method",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "public static java.lang.String exceptionMessage(java.lang.Throwable t) {\n    if (t instanceof com.fasterxml.jackson.core.JsonProcessingException) {\n        return ((com.fasterxml.jackson.core.JsonProcessingException) (t)).getOriginalMessage();\n    }\n    return t.getMessage();\n}",
            "src_parent": "public final class ClassUtil {\n    private static final java.lang.Class<?> CLS_OBJECT = java.lang.Object.class;\n\n    private static final java.lang.annotation.Annotation[] NO_ANNOTATIONS = new java.lang.annotation.Annotation[0];\n\n    private static final com.fasterxml.jackson.databind.util.ClassUtil.Ctor[] NO_CTORS = new com.fasterxml.jackson.databind.util.ClassUtil.Ctor[0];\n\n    private static final java.util.Iterator<?> EMPTY_ITERATOR = java.util.Collections.emptyIterator();\n\n    @java.lang.SuppressWarnings(\"unchecked\")\n    public static <T> java.util.Iterator<T> emptyIterator() {\n        return ((java.util.Iterator<T>) (com.fasterxml.jackson.databind.util.ClassUtil.EMPTY_ITERATOR));\n    }\n\n    public static java.util.List<com.fasterxml.jackson.databind.JavaType> findSuperTypes(com.fasterxml.jackson.databind.JavaType type, java.lang.Class<?> endBefore, boolean addClassItself) {\n        if (((type == null) || type.hasRawClass(endBefore)) || type.hasRawClass(java.lang.Object.class)) {\n            return java.util.Collections.emptyList();\n        }\n        java.util.List<com.fasterxml.jackson.databind.JavaType> result = new java.util.ArrayList<com.fasterxml.jackson.databind.JavaType>(8);\n        com.fasterxml.jackson.databind.util.ClassUtil._addSuperTypes(type, endBefore, result, addClassItself);\n        return result;\n    }\n\n    public static java.util.List<java.lang.Class<?>> findRawSuperTypes(java.lang.Class<?> cls, java.lang.Class<?> endBefore, boolean addClassItself) {\n        if (((cls == null) || (cls == endBefore)) || (cls == java.lang.Object.class)) {\n            return java.util.Collections.emptyList();\n        }\n        java.util.List<java.lang.Class<?>> result = new java.util.ArrayList<java.lang.Class<?>>(8);\n        com.fasterxml.jackson.databind.util.ClassUtil._addRawSuperTypes(cls, endBefore, result, addClassItself);\n        return result;\n    }\n\n    public static java.util.List<java.lang.Class<?>> findSuperClasses(java.lang.Class<?> cls, java.lang.Class<?> endBefore, boolean addClassItself) {\n        java.util.List<java.lang.Class<?>> result = new java.util.LinkedList<java.lang.Class<?>>();\n        if ((cls != null) && (cls != endBefore)) {\n            if (addClassItself) {\n                result.add(cls);\n            }\n            while ((cls = cls.getSuperclass()) != null) {\n                if (cls == endBefore) {\n                    break;\n                }\n                result.add(cls);\n            } \n        }\n        return result;\n    }\n\n    @java.lang.Deprecated\n    public static java.util.List<java.lang.Class<?>> findSuperTypes(java.lang.Class<?> cls, java.lang.Class<?> endBefore) {\n        return com.fasterxml.jackson.databind.util.ClassUtil.findSuperTypes(cls, endBefore, new java.util.ArrayList<java.lang.Class<?>>(8));\n    }\n\n    @java.lang.Deprecated\n    public static java.util.List<java.lang.Class<?>> findSuperTypes(java.lang.Class<?> cls, java.lang.Class<?> endBefore, java.util.List<java.lang.Class<?>> result) {\n        com.fasterxml.jackson.databind.util.ClassUtil._addRawSuperTypes(cls, endBefore, result, false);\n        return result;\n    }\n\n    private static void _addSuperTypes(com.fasterxml.jackson.databind.JavaType type, java.lang.Class<?> endBefore, java.util.Collection<com.fasterxml.jackson.databind.JavaType> result, boolean addClassItself) {\n        if (type == null) {\n            return;\n        }\n        final java.lang.Class<?> cls = type.getRawClass();\n        if ((cls == endBefore) || (cls == java.lang.Object.class)) {\n            return;\n        }\n        if (addClassItself) {\n            if (result.contains(type)) {\n                return;\n            }\n            result.add(type);\n        }\n        for (com.fasterxml.jackson.databind.JavaType intCls : type.getInterfaces()) {\n            com.fasterxml.jackson.databind.util.ClassUtil._addSuperTypes(intCls, endBefore, result, true);\n        }\n        com.fasterxml.jackson.databind.util.ClassUtil._addSuperTypes(type.getSuperClass(), endBefore, result, true);\n    }\n\n    private static void _addRawSuperTypes(java.lang.Class<?> cls, java.lang.Class<?> endBefore, java.util.Collection<java.lang.Class<?>> result, boolean addClassItself) {\n        if (((cls == endBefore) || (cls == null)) || (cls == java.lang.Object.class)) {\n            return;\n        }\n        if (addClassItself) {\n            if (result.contains(cls)) {\n                return;\n            }\n            result.add(cls);\n        }\n        for (java.lang.Class<?> intCls : com.fasterxml.jackson.databind.util.ClassUtil._interfaces(cls)) {\n            com.fasterxml.jackson.databind.util.ClassUtil._addRawSuperTypes(intCls, endBefore, result, true);\n        }\n        com.fasterxml.jackson.databind.util.ClassUtil._addRawSuperTypes(cls.getSuperclass(), endBefore, result, true);\n    }\n\n    public static java.lang.String canBeABeanType(java.lang.Class<?> type) {\n        if (type.isAnnotation()) {\n            return \"annotation\";\n        }\n        if (type.isArray()) {\n            return \"array\";\n        }\n        if (type.isEnum()) {\n            return \"enum\";\n        }\n        if (type.isPrimitive()) {\n            return \"primitive\";\n        }\n        return null;\n    }\n\n    public static java.lang.String isLocalType(java.lang.Class<?> type, boolean allowNonStatic) {\n        try {\n            if (com.fasterxml.jackson.databind.util.ClassUtil.hasEnclosingMethod(type)) {\n                return \"local/anonymous\";\n            }\n            if (!allowNonStatic) {\n                if (!java.lang.reflect.Modifier.isStatic(type.getModifiers())) {\n                    if (com.fasterxml.jackson.databind.util.ClassUtil.getEnclosingClass(type) != null) {\n                        return \"non-static member class\";\n                    }\n                }\n            }\n        } catch (java.lang.SecurityException e) {\n        } catch (java.lang.NullPointerException e) {\n        }\n        return null;\n    }\n\n    public static java.lang.Class<?> getOuterClass(java.lang.Class<?> type) {\n        try {\n            if (com.fasterxml.jackson.databind.util.ClassUtil.hasEnclosingMethod(type)) {\n                return null;\n            }\n            if (!java.lang.reflect.Modifier.isStatic(type.getModifiers())) {\n                return com.fasterxml.jackson.databind.util.ClassUtil.getEnclosingClass(type);\n            }\n        } catch (java.lang.SecurityException e) {\n        }\n        return null;\n    }\n\n    public static boolean isProxyType(java.lang.Class<?> type) {\n        java.lang.String name = type.getName();\n        if (name.startsWith(\"net.sf.cglib.proxy.\") || name.startsWith(\"org.hibernate.proxy.\")) {\n            return true;\n        }\n        return false;\n    }\n\n    public static boolean isConcrete(java.lang.Class<?> type) {\n        int mod = type.getModifiers();\n        return (mod & (java.lang.reflect.Modifier.INTERFACE | java.lang.reflect.Modifier.ABSTRACT)) == 0;\n    }\n\n    public static boolean isConcrete(java.lang.reflect.Member member) {\n        int mod = member.getModifiers();\n        return (mod & (java.lang.reflect.Modifier.INTERFACE | java.lang.reflect.Modifier.ABSTRACT)) == 0;\n    }\n\n    public static boolean isCollectionMapOrArray(java.lang.Class<?> type) {\n        if (type.isArray()) {\n            return true;\n        }\n        if (java.util.Collection.class.isAssignableFrom(type)) {\n            return true;\n        }\n        if (java.util.Map.class.isAssignableFrom(type)) {\n            return true;\n        }\n        return false;\n    }\n\n    public static boolean isBogusClass(java.lang.Class<?> cls) {\n        return ((cls == java.lang.Void.class) || (cls == java.lang.Void.TYPE)) || (cls == com.fasterxml.jackson.databind.annotation.NoClass.class);\n    }\n\n    public static boolean isNonStaticInnerClass(java.lang.Class<?> cls) {\n        return (!java.lang.reflect.Modifier.isStatic(cls.getModifiers())) && (com.fasterxml.jackson.databind.util.ClassUtil.getEnclosingClass(cls) != null);\n    }\n\n    public static boolean isObjectOrPrimitive(java.lang.Class<?> cls) {\n        return (cls == com.fasterxml.jackson.databind.util.ClassUtil.CLS_OBJECT) || cls.isPrimitive();\n    }\n\n    public static boolean hasClass(java.lang.Object inst, java.lang.Class<?> raw) {\n        return (inst != null) && (inst.getClass() == raw);\n    }\n\n    public static void verifyMustOverride(java.lang.Class<?> expType, java.lang.Object instance, java.lang.String method) {\n        if (instance.getClass() != expType) {\n            throw new java.lang.IllegalStateException(java.lang.String.format(\"Sub-class %s (of class %s) must override method '%s'\", instance.getClass().getName(), expType.getName(), method));\n        }\n    }\n\n    @java.lang.Deprecated\n    public static boolean hasGetterSignature(java.lang.reflect.Method m) {\n        if (java.lang.reflect.Modifier.isStatic(m.getModifiers())) {\n            return false;\n        }\n        java.lang.Class<?>[] pts = m.getParameterTypes();\n        if ((pts != null) && (pts.length != 0)) {\n            return false;\n        }\n        if (java.lang.Void.TYPE == m.getReturnType()) {\n            return false;\n        }\n        return true;\n    }\n\n    public static java.lang.Throwable throwIfError(java.lang.Throwable t) {\n        if (t instanceof java.lang.Error) {\n            throw ((java.lang.Error) (t));\n        }\n        return t;\n    }\n\n    public static java.lang.Throwable throwIfRTE(java.lang.Throwable t) {\n        if (t instanceof java.lang.RuntimeException) {\n            throw ((java.lang.RuntimeException) (t));\n        }\n        return t;\n    }\n\n    public static java.lang.Throwable throwIfIOE(java.lang.Throwable t) throws java.io.IOException {\n        if (t instanceof java.io.IOException) {\n            throw ((java.io.IOException) (t));\n        }\n        return t;\n    }\n\n    public static java.lang.Throwable getRootCause(java.lang.Throwable t) {\n        while (t.getCause() != null) {\n            t = t.getCause();\n        } \n        return t;\n    }\n\n    public static java.lang.Throwable throwRootCauseIfIOE(java.lang.Throwable t) throws java.io.IOException {\n        return com.fasterxml.jackson.databind.util.ClassUtil.throwIfIOE(com.fasterxml.jackson.databind.util.ClassUtil.getRootCause(t));\n    }\n\n    public static void throwAsIAE(java.lang.Throwable t) {\n        com.fasterxml.jackson.databind.util.ClassUtil.throwAsIAE(t, t.getMessage());\n    }\n\n    public static void throwAsIAE(java.lang.Throwable t, java.lang.String msg) {\n        com.fasterxml.jackson.databind.util.ClassUtil.throwIfRTE(t);\n        com.fasterxml.jackson.databind.util.ClassUtil.throwIfError(t);\n        throw new java.lang.IllegalArgumentException(msg, t);\n    }\n\n    public static <T> T throwAsMappingException(com.fasterxml.jackson.databind.DeserializationContext ctxt, java.io.IOException e0) throws com.fasterxml.jackson.databind.JsonMappingException {\n        if (e0 instanceof com.fasterxml.jackson.databind.JsonMappingException) {\n            throw ((com.fasterxml.jackson.databind.JsonMappingException) (e0));\n        }\n        com.fasterxml.jackson.databind.JsonMappingException e = com.fasterxml.jackson.databind.JsonMappingException.from(ctxt, e0.getMessage());\n        e.initCause(e0);\n        throw e;\n    }\n\n    public static void unwrapAndThrowAsIAE(java.lang.Throwable t) {\n        com.fasterxml.jackson.databind.util.ClassUtil.throwAsIAE(com.fasterxml.jackson.databind.util.ClassUtil.getRootCause(t));\n    }\n\n    public static void unwrapAndThrowAsIAE(java.lang.Throwable t, java.lang.String msg) {\n        com.fasterxml.jackson.databind.util.ClassUtil.throwAsIAE(com.fasterxml.jackson.databind.util.ClassUtil.getRootCause(t), msg);\n    }\n\n    public static void closeOnFailAndThrowAsIOE(com.fasterxml.jackson.core.JsonGenerator g, java.lang.Exception fail) throws java.io.IOException {\n        g.disable(com.fasterxml.jackson.core.JsonGenerator.Feature.AUTO_CLOSE_JSON_CONTENT);\n        try {\n            g.close();\n        } catch (java.lang.Exception e) {\n            fail.addSuppressed(e);\n        }\n        com.fasterxml.jackson.databind.util.ClassUtil.throwIfIOE(fail);\n        com.fasterxml.jackson.databind.util.ClassUtil.throwIfRTE(fail);\n        throw new java.lang.RuntimeException(fail);\n    }\n\n    public static void closeOnFailAndThrowAsIOE(com.fasterxml.jackson.core.JsonGenerator g, java.io.Closeable toClose, java.lang.Exception fail) throws java.io.IOException {\n        if (g != null) {\n            g.disable(com.fasterxml.jackson.core.JsonGenerator.Feature.AUTO_CLOSE_JSON_CONTENT);\n            try {\n                g.close();\n            } catch (java.lang.Exception e) {\n                fail.addSuppressed(e);\n            }\n        }\n        if (toClose != null) {\n            try {\n                toClose.close();\n            } catch (java.lang.Exception e) {\n                fail.addSuppressed(e);\n            }\n        }\n        com.fasterxml.jackson.databind.util.ClassUtil.throwIfIOE(fail);\n        com.fasterxml.jackson.databind.util.ClassUtil.throwIfRTE(fail);\n        throw new java.lang.RuntimeException(fail);\n    }\n\n    public static <T> T createInstance(java.lang.Class<T> cls, boolean canFixAccess) throws java.lang.IllegalArgumentException {\n        java.lang.reflect.Constructor<T> ctor = com.fasterxml.jackson.databind.util.ClassUtil.findConstructor(cls, canFixAccess);\n        if (ctor == null) {\n            throw new java.lang.IllegalArgumentException((\"Class \" + cls.getName()) + \" has no default (no arg) constructor\");\n        }\n        try {\n            return ctor.newInstance();\n        } catch (java.lang.Exception e) {\n            com.fasterxml.jackson.databind.util.ClassUtil.unwrapAndThrowAsIAE(e, ((\"Failed to instantiate class \" + cls.getName()) + \", problem: \") + e.getMessage());\n            return null;\n        }\n    }\n\n    public static <T> java.lang.reflect.Constructor<T> findConstructor(java.lang.Class<T> cls, boolean forceAccess) throws java.lang.IllegalArgumentException {\n        try {\n            java.lang.reflect.Constructor<T> ctor = cls.getDeclaredConstructor();\n            if (forceAccess) {\n                com.fasterxml.jackson.databind.util.ClassUtil.checkAndFixAccess(ctor, forceAccess);\n            } else if (!java.lang.reflect.Modifier.isPublic(ctor.getModifiers())) {\n                throw new java.lang.IllegalArgumentException((\"Default constructor for \" + cls.getName()) + \" is not accessible (non-public?): not allowed to try modify access via Reflection: cannot instantiate type\");\n            }\n            return ctor;\n        } catch (java.lang.NoSuchMethodException e) {\n        } catch (java.lang.Exception e) {\n            com.fasterxml.jackson.databind.util.ClassUtil.unwrapAndThrowAsIAE(e, ((\"Failed to find default constructor of class \" + cls.getName()) + \", problem: \") + e.getMessage());\n        }\n        return null;\n    }\n\n    public static java.lang.Class<?> classOf(java.lang.Object inst) {\n        if (inst == null) {\n            return null;\n        }\n        return inst.getClass();\n    }\n\n    public static java.lang.Class<?> rawClass(com.fasterxml.jackson.databind.JavaType t) {\n        if (t == null) {\n            return null;\n        }\n        return t.getRawClass();\n    }\n\n    public static <T> T nonNull(T valueOrNull, T defaultValue) {\n        return valueOrNull == null ? defaultValue : valueOrNull;\n    }\n\n    public static java.lang.String nullOrToString(java.lang.Object value) {\n        if (value == null) {\n            return null;\n        }\n        return value.toString();\n    }\n\n    public static java.lang.String nonNullString(java.lang.String str) {\n        if (str == null) {\n            return \"\";\n        }\n        return str;\n    }\n\n    public static java.lang.String quotedOr(java.lang.Object str, java.lang.String forNull) {\n        if (str == null) {\n            return forNull;\n        }\n        return java.lang.String.format(\"\\\"%s\\\"\", str);\n    }\n\n    public static java.lang.String getClassDescription(java.lang.Object classOrInstance) {\n        if (classOrInstance == null) {\n            return \"unknown\";\n        }\n        java.lang.Class<?> cls = (classOrInstance instanceof java.lang.Class<?>) ? ((java.lang.Class<?>) (classOrInstance)) : classOrInstance.getClass();\n        return com.fasterxml.jackson.databind.util.ClassUtil.nameOf(cls);\n    }\n\n    public static java.lang.String classNameOf(java.lang.Object inst) {\n        if (inst == null) {\n            return \"[null]\";\n        }\n        return com.fasterxml.jackson.databind.util.ClassUtil.nameOf(inst.getClass());\n    }\n\n    public static java.lang.String nameOf(java.lang.Class<?> cls) {\n        if (cls == null) {\n            return \"[null]\";\n        }\n        int index = 0;\n        while (cls.isArray()) {\n            ++index;\n            cls = cls.getComponentType();\n        } \n        java.lang.String base = (cls.isPrimitive()) ? cls.getSimpleName() : cls.getName();\n        if (index > 0) {\n            java.lang.StringBuilder sb = new java.lang.StringBuilder(base);\n            do {\n                sb.append(\"[]\");\n            } while ((--index) > 0 );\n            base = sb.toString();\n        }\n        return com.fasterxml.jackson.databind.util.ClassUtil.backticked(base);\n    }\n\n    public static java.lang.String nameOf(com.fasterxml.jackson.databind.util.Named named) {\n        if (named == null) {\n            return \"[null]\";\n        }\n        return com.fasterxml.jackson.databind.util.ClassUtil.backticked(named.getName());\n    }\n\n    public static java.lang.String backticked(java.lang.String text) {\n        if (text == null) {\n            return \"[null]\";\n        }\n        return new java.lang.StringBuilder(text.length() + 2).append('`').append(text).append('`').toString();\n    }\n\n    public static java.lang.String exceptionMessage(java.lang.Throwable t) {\n        if (t instanceof com.fasterxml.jackson.core.JsonProcessingException) {\n            return ((com.fasterxml.jackson.core.JsonProcessingException) (t)).getOriginalMessage();\n        }\n        return t.getMessage();\n    }\n\n    public static java.lang.Object defaultValue(java.lang.Class<?> cls) {\n        if (cls == java.lang.Integer.TYPE) {\n            return java.lang.Integer.valueOf(0);\n        }\n        if (cls == java.lang.Long.TYPE) {\n            return java.lang.Long.valueOf(0L);\n        }\n        if (cls == java.lang.Boolean.TYPE) {\n            return java.lang.Boolean.FALSE;\n        }\n        if (cls == java.lang.Double.TYPE) {\n            return java.lang.Double.valueOf(0.0);\n        }\n        if (cls == java.lang.Float.TYPE) {\n            return java.lang.Float.valueOf(0.0F);\n        }\n        if (cls == java.lang.Byte.TYPE) {\n            return java.lang.Byte.valueOf(((byte) (0)));\n        }\n        if (cls == java.lang.Short.TYPE) {\n            return java.lang.Short.valueOf(((short) (0)));\n        }\n        if (cls == java.lang.Character.TYPE) {\n            return '\\u0000';\n        }\n        throw new java.lang.IllegalArgumentException((\"Class \" + cls.getName()) + \" is not a primitive type\");\n    }\n\n    public static java.lang.Class<?> wrapperType(java.lang.Class<?> primitiveType) {\n        if (primitiveType == java.lang.Integer.TYPE) {\n            return java.lang.Integer.class;\n        }\n        if (primitiveType == java.lang.Long.TYPE) {\n            return java.lang.Long.class;\n        }\n        if (primitiveType == java.lang.Boolean.TYPE) {\n            return java.lang.Boolean.class;\n        }\n        if (primitiveType == java.lang.Double.TYPE) {\n            return java.lang.Double.class;\n        }\n        if (primitiveType == java.lang.Float.TYPE) {\n            return java.lang.Float.class;\n        }\n        if (primitiveType == java.lang.Byte.TYPE) {\n            return java.lang.Byte.class;\n        }\n        if (primitiveType == java.lang.Short.TYPE) {\n            return java.lang.Short.class;\n        }\n        if (primitiveType == java.lang.Character.TYPE) {\n            return java.lang.Character.class;\n        }\n        throw new java.lang.IllegalArgumentException((\"Class \" + primitiveType.getName()) + \" is not a primitive type\");\n    }\n\n    public static java.lang.Class<?> primitiveType(java.lang.Class<?> type) {\n        if (type.isPrimitive()) {\n            return type;\n        }\n        if (type == java.lang.Integer.class) {\n            return java.lang.Integer.TYPE;\n        }\n        if (type == java.lang.Long.class) {\n            return java.lang.Long.TYPE;\n        }\n        if (type == java.lang.Boolean.class) {\n            return java.lang.Boolean.TYPE;\n        }\n        if (type == java.lang.Double.class) {\n            return java.lang.Double.TYPE;\n        }\n        if (type == java.lang.Float.class) {\n            return java.lang.Float.TYPE;\n        }\n        if (type == java.lang.Byte.class) {\n            return java.lang.Byte.TYPE;\n        }\n        if (type == java.lang.Short.class) {\n            return java.lang.Short.TYPE;\n        }\n        if (type == java.lang.Character.class) {\n            return java.lang.Character.TYPE;\n        }\n        return null;\n    }\n\n    @java.lang.Deprecated\n    public static void checkAndFixAccess(java.lang.reflect.Member member) {\n        com.fasterxml.jackson.databind.util.ClassUtil.checkAndFixAccess(member, false);\n    }\n\n    public static void checkAndFixAccess(java.lang.reflect.Member member, boolean force) {\n        java.lang.reflect.AccessibleObject ao = ((java.lang.reflect.AccessibleObject) (member));\n        try {\n            if (force || ((!java.lang.reflect.Modifier.isPublic(member.getModifiers())) || (!java.lang.reflect.Modifier.isPublic(member.getDeclaringClass().getModifiers())))) {\n                ao.setAccessible(true);\n            }\n        } catch (java.lang.SecurityException se) {\n            if (!ao.isAccessible()) {\n                java.lang.Class<?> declClass = member.getDeclaringClass();\n                throw new java.lang.IllegalArgumentException(((((\"Cannot access \" + member) + \" (from class \") + declClass.getName()) + \"; failed to set access: \") + se.getMessage());\n            }\n        }\n    }\n\n    public static java.lang.Class<? extends java.lang.Enum<?>> findEnumType(java.util.EnumSet<?> s) {\n        if (!s.isEmpty()) {\n            return com.fasterxml.jackson.databind.util.ClassUtil.findEnumType(s.iterator().next());\n        }\n        return com.fasterxml.jackson.databind.util.ClassUtil.EnumTypeLocator.instance.enumTypeFor(s);\n    }\n\n    public static java.lang.Class<? extends java.lang.Enum<?>> findEnumType(java.util.EnumMap<?, ?> m) {\n        if (!m.isEmpty()) {\n            return com.fasterxml.jackson.databind.util.ClassUtil.findEnumType(m.keySet().iterator().next());\n        }\n        return com.fasterxml.jackson.databind.util.ClassUtil.EnumTypeLocator.instance.enumTypeFor(m);\n    }\n\n    @java.lang.SuppressWarnings(\"unchecked\")\n    public static java.lang.Class<? extends java.lang.Enum<?>> findEnumType(java.lang.Enum<?> en) {\n        java.lang.Class<?> ec = en.getClass();\n        if (ec.getSuperclass() != java.lang.Enum.class) {\n            ec = ec.getSuperclass();\n        }\n        return ((java.lang.Class<? extends java.lang.Enum<?>>) (ec));\n    }\n\n    @java.lang.SuppressWarnings(\"unchecked\")\n    public static java.lang.Class<? extends java.lang.Enum<?>> findEnumType(java.lang.Class<?> cls) {\n        if (cls.getSuperclass() != java.lang.Enum.class) {\n            cls = cls.getSuperclass();\n        }\n        return ((java.lang.Class<? extends java.lang.Enum<?>>) (cls));\n    }\n\n    public static <T extends java.lang.annotation.Annotation> java.lang.Enum<?> findFirstAnnotatedEnumValue(java.lang.Class<java.lang.Enum<?>> enumClass, java.lang.Class<T> annotationClass) {\n        java.lang.reflect.Field[] fields = com.fasterxml.jackson.databind.util.ClassUtil.getDeclaredFields(enumClass);\n        for (java.lang.reflect.Field field : fields) {\n            if (field.isEnumConstant()) {\n                java.lang.annotation.Annotation defaultValueAnnotation = field.getAnnotation(annotationClass);\n                if (defaultValueAnnotation != null) {\n                    final java.lang.String name = field.getName();\n                    for (java.lang.Enum<?> enumValue : enumClass.getEnumConstants()) {\n                        if (name.equals(enumValue.name())) {\n                            return enumValue;\n                        }\n                    }\n                }\n            }\n        }\n        return null;\n    }\n\n    public static boolean isJacksonStdImpl(java.lang.Object impl) {\n        return (impl == null) || com.fasterxml.jackson.databind.util.ClassUtil.isJacksonStdImpl(impl.getClass());\n    }\n\n    public static boolean isJacksonStdImpl(java.lang.Class<?> implClass) {\n        return implClass.getAnnotation(com.fasterxml.jackson.databind.annotation.JacksonStdImpl.class) != null;\n    }\n\n    public static java.lang.String getPackageName(java.lang.Class<?> cls) {\n        java.lang.Package pkg = cls.getPackage();\n        return pkg == null ? null : pkg.getName();\n    }\n\n    public static boolean hasEnclosingMethod(java.lang.Class<?> cls) {\n        return (!com.fasterxml.jackson.databind.util.ClassUtil.isObjectOrPrimitive(cls)) && (cls.getEnclosingMethod() != null);\n    }\n\n    public static java.lang.reflect.Field[] getDeclaredFields(java.lang.Class<?> cls) {\n        return cls.getDeclaredFields();\n    }\n\n    public static java.lang.reflect.Method[] getDeclaredMethods(java.lang.Class<?> cls) {\n        return cls.getDeclaredMethods();\n    }\n\n    public static java.lang.annotation.Annotation[] findClassAnnotations(java.lang.Class<?> cls) {\n        if (com.fasterxml.jackson.databind.util.ClassUtil.isObjectOrPrimitive(cls)) {\n            return com.fasterxml.jackson.databind.util.ClassUtil.NO_ANNOTATIONS;\n        }\n        return cls.getDeclaredAnnotations();\n    }\n\n    public static java.lang.reflect.Method[] getClassMethods(java.lang.Class<?> cls) {\n        try {\n            return com.fasterxml.jackson.databind.util.ClassUtil.getDeclaredMethods(cls);\n        } catch (final java.lang.NoClassDefFoundError ex) {\n            final java.lang.ClassLoader loader = java.lang.Thread.currentThread().getContextClassLoader();\n            if (loader == null) {\n                throw ex;\n            }\n            final java.lang.Class<?> contextClass;\n            try {\n                contextClass = loader.loadClass(cls.getName());\n            } catch (java.lang.ClassNotFoundException e) {\n                ex.addSuppressed(e);\n                throw ex;\n            }\n            return contextClass.getDeclaredMethods();\n        }\n    }\n\n    public static com.fasterxml.jackson.databind.util.ClassUtil.Ctor[] getConstructors(java.lang.Class<?> cls) {\n        if (cls.isInterface() || com.fasterxml.jackson.databind.util.ClassUtil.isObjectOrPrimitive(cls)) {\n            return com.fasterxml.jackson.databind.util.ClassUtil.NO_CTORS;\n        }\n        java.lang.reflect.Constructor<?>[] rawCtors = cls.getDeclaredConstructors();\n        final int len = rawCtors.length;\n        com.fasterxml.jackson.databind.util.ClassUtil.Ctor[] result = new com.fasterxml.jackson.databind.util.ClassUtil.Ctor[len];\n        for (int i = 0; i < len; ++i) {\n            result[i] = new com.fasterxml.jackson.databind.util.ClassUtil.Ctor(rawCtors[i]);\n        }\n        return result;\n    }\n\n    public static java.lang.Class<?> getDeclaringClass(java.lang.Class<?> cls) {\n        return com.fasterxml.jackson.databind.util.ClassUtil.isObjectOrPrimitive(cls) ? null : cls.getDeclaringClass();\n    }\n\n    public static java.lang.reflect.Type getGenericSuperclass(java.lang.Class<?> cls) {\n        return cls.getGenericSuperclass();\n    }\n\n    public static java.lang.reflect.Type[] getGenericInterfaces(java.lang.Class<?> cls) {\n        return cls.getGenericInterfaces();\n    }\n\n    public static java.lang.Class<?> getEnclosingClass(java.lang.Class<?> cls) {\n        return com.fasterxml.jackson.databind.util.ClassUtil.isObjectOrPrimitive(cls) ? null : cls.getEnclosingClass();\n    }\n\n    private static java.lang.Class<?>[] _interfaces(java.lang.Class<?> cls) {\n        return cls.getInterfaces();\n    }\n\n    private static class EnumTypeLocator {\n        static final com.fasterxml.jackson.databind.util.ClassUtil.EnumTypeLocator instance = new com.fasterxml.jackson.databind.util.ClassUtil.EnumTypeLocator();\n\n        private final java.lang.reflect.Field enumSetTypeField;\n\n        private final java.lang.reflect.Field enumMapTypeField;\n\n        private EnumTypeLocator() {\n            enumSetTypeField = com.fasterxml.jackson.databind.util.ClassUtil.EnumTypeLocator.locateField(java.util.EnumSet.class, \"elementType\", java.lang.Class.class);\n            enumMapTypeField = com.fasterxml.jackson.databind.util.ClassUtil.EnumTypeLocator.locateField(java.util.EnumMap.class, \"elementType\", java.lang.Class.class);\n        }\n\n        @java.lang.SuppressWarnings(\"unchecked\")\n        public java.lang.Class<? extends java.lang.Enum<?>> enumTypeFor(java.util.EnumSet<?> set) {\n            if (enumSetTypeField != null) {\n                return ((java.lang.Class<? extends java.lang.Enum<?>>) (get(set, enumSetTypeField)));\n            }\n            throw new java.lang.IllegalStateException(\"Cannot figure out type for EnumSet (odd JDK platform?)\");\n        }\n\n        @java.lang.SuppressWarnings(\"unchecked\")\n        public java.lang.Class<? extends java.lang.Enum<?>> enumTypeFor(java.util.EnumMap<?, ?> set) {\n            if (enumMapTypeField != null) {\n                return ((java.lang.Class<? extends java.lang.Enum<?>>) (get(set, enumMapTypeField)));\n            }\n            throw new java.lang.IllegalStateException(\"Cannot figure out type for EnumMap (odd JDK platform?)\");\n        }\n\n        private java.lang.Object get(java.lang.Object bean, java.lang.reflect.Field field) {\n            try {\n                return field.get(bean);\n            } catch (java.lang.Exception e) {\n                throw new java.lang.IllegalArgumentException(e);\n            }\n        }\n\n        private static java.lang.reflect.Field locateField(java.lang.Class<?> fromClass, java.lang.String expectedName, java.lang.Class<?> type) {\n            java.lang.reflect.Field found = null;\n            java.lang.reflect.Field[] fields = com.fasterxml.jackson.databind.util.ClassUtil.getDeclaredFields(fromClass);\n            for (java.lang.reflect.Field f : fields) {\n                if (expectedName.equals(f.getName()) && (f.getType() == type)) {\n                    found = f;\n                    break;\n                }\n            }\n            if (found == null) {\n                for (java.lang.reflect.Field f : fields) {\n                    if (f.getType() == type) {\n                        if (found != null) {\n                            return null;\n                        }\n                        found = f;\n                    }\n                }\n            }\n            if (found != null) {\n                try {\n                    found.setAccessible(true);\n                } catch (java.lang.Throwable t) {\n                }\n            }\n            return found;\n        }\n    }\n\n    public static final class Ctor {\n        public final java.lang.reflect.Constructor<?> _ctor;\n\n        private java.lang.annotation.Annotation[] _annotations;\n\n        private java.lang.annotation.Annotation[][] _paramAnnotations;\n\n        private int _paramCount = -1;\n\n        public Ctor(java.lang.reflect.Constructor<?> ctor) {\n            _ctor = ctor;\n        }\n\n        public java.lang.reflect.Constructor<?> getConstructor() {\n            return _ctor;\n        }\n\n        public int getParamCount() {\n            int c = _paramCount;\n            if (c < 0) {\n                c = _ctor.getParameterTypes().length;\n                _paramCount = c;\n            }\n            return c;\n        }\n\n        public java.lang.Class<?> getDeclaringClass() {\n            return _ctor.getDeclaringClass();\n        }\n\n        public java.lang.annotation.Annotation[] getDeclaredAnnotations() {\n            java.lang.annotation.Annotation[] result = _annotations;\n            if (result == null) {\n                result = _ctor.getDeclaredAnnotations();\n                _annotations = result;\n            }\n            return result;\n        }\n\n        public java.lang.annotation.Annotation[][] getParameterAnnotations() {\n            java.lang.annotation.Annotation[][] result = _paramAnnotations;\n            if (result == null) {\n                result = _ctor.getParameterAnnotations();\n                _paramAnnotations = result;\n            }\n            return result;\n        }\n    }\n}",
            "src_parent_type": "Class",
            "src_type": "Method"
          }
        }
      ],
      "file_name": "ClassUtil"
    },
    {
      "features": [
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "Return",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "LocalVariable",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "e.getMessage()",
            "dst_parent": "java.lang.String msg = e.getMessage()",
            "dst_parent_type": "LocalVariable",
            "dst_type": "Invocation",
            "operator": "UPD",
            "src": "com.fasterxml.jackson.databind.util.ClassUtil.exceptionMessage(e)",
            "src_parent": "java.lang.String msg = com.fasterxml.jackson.databind.util.ClassUtil.exceptionMessage(e)",
            "src_parent_type": "LocalVariable",
            "src_type": "Invocation"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "Return",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Catch",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "LocalVariable",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "t.getMessage()",
            "dst_parent": "java.lang.String.format(\"Problem determining whether filter of type '%s' should filter out `null` values: (%s) %s\", filter.getClass().getName(), t.getClass().getName(), t.getMessage())",
            "dst_parent_type": "Invocation",
            "dst_type": "Invocation",
            "operator": "UPD",
            "src": "com.fasterxml.jackson.databind.util.ClassUtil.exceptionMessage(t)",
            "src_parent": "java.lang.String.format(\"Problem determining whether filter of type '%s' should filter out `null` values: (%s) %s\", filter.getClass().getName(), t.getClass().getName(), com.fasterxml.jackson.databind.util.ClassUtil.exceptionMessage(t))",
            "src_parent_type": "Invocation",
            "src_type": "Invocation"
          }
        }
      ],
      "file_name": "DefaultSerializerProvider"
    },
    {
      "features": [
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "While",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Catch",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Throw",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "t.getMessage()",
            "dst_parent": "((((\"Failed to instantiate bean of type \" + _classInfo.getAnnotated().getName()) + \": (\") + t.getClass().getName()) + \") \") + t.getMessage()",
            "dst_parent_type": "BinaryOperator",
            "dst_type": "Invocation",
            "operator": "UPD",
            "src": "com.fasterxml.jackson.databind.util.ClassUtil.exceptionMessage(t)",
            "src_parent": "((((\"Failed to instantiate bean of type \" + _classInfo.getAnnotated().getName()) + \": (\") + t.getClass().getName()) + \") \") + com.fasterxml.jackson.databind.util.ClassUtil.exceptionMessage(t)",
            "src_parent_type": "BinaryOperator",
            "src_type": "Invocation"
          }
        }
      ],
      "file_name": "BasicBeanDescription"
    },
    {
      "features": [
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "Invocation",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Throw",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "t.getMessage()",
            "dst_parent": "new com.fasterxml.jackson.databind.JsonMappingException(null, t.getMessage(), t)",
            "dst_parent_type": "ConstructorCall",
            "dst_type": "Invocation",
            "operator": "UPD",
            "src": "com.fasterxml.jackson.databind.util.ClassUtil.exceptionMessage(t)",
            "src_parent": "new com.fasterxml.jackson.databind.JsonMappingException(null, com.fasterxml.jackson.databind.util.ClassUtil.exceptionMessage(t), t)",
            "src_parent_type": "ConstructorCall",
            "src_type": "Invocation"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "Throw",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "LocalVariable",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "LocalVariable",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "e.getMessage()",
            "dst_parent": "java.lang.String origMsg = e.getMessage()",
            "dst_parent_type": "LocalVariable",
            "dst_type": "Invocation",
            "operator": "UPD",
            "src": "com.fasterxml.jackson.databind.util.ClassUtil.exceptionMessage(e)",
            "src_parent": "java.lang.String origMsg = com.fasterxml.jackson.databind.util.ClassUtil.exceptionMessage(e)",
            "src_parent_type": "LocalVariable",
            "src_type": "Invocation"
          }
        }
      ],
      "file_name": "SettableAnyProperty"
    },
    {
      "features": [
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Catch",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Throw",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "e.getMessage()",
            "dst_parent": "java.lang.String.format(\"problem: (%s) %s\", e.getClass().getName(), e.getMessage())",
            "dst_parent_type": "Invocation",
            "dst_type": "Invocation",
            "operator": "UPD",
            "src": "com.fasterxml.jackson.databind.util.ClassUtil.exceptionMessage(e)",
            "src_parent": "java.lang.String.format(\"problem: (%s) %s\", e.getClass().getName(), com.fasterxml.jackson.databind.util.ClassUtil.exceptionMessage(e))",
            "src_parent_type": "Invocation",
            "src_type": "Invocation"
          }
        }
      ],
      "file_name": "DatabindContext"
    },
    {
      "features": [
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Return",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "e.getMessage()",
            "dst_parent": "ctxt.handleWeirdKey(_keyClass, key, \"problem: %s\", e.getMessage())",
            "dst_parent_type": "Invocation",
            "dst_type": "Invocation",
            "operator": "UPD",
            "src": "com.fasterxml.jackson.databind.util.ClassUtil.exceptionMessage(e)",
            "src_parent": "ctxt.handleWeirdKey(_keyClass, key, \"problem: %s\", com.fasterxml.jackson.databind.util.ClassUtil.exceptionMessage(e))",
            "src_parent_type": "Invocation",
            "src_type": "Invocation"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Catch",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Return",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "re.getMessage()",
            "dst_parent": "ctxt.handleWeirdKey(_keyClass, key, \"not a valid representation, problem: (%s) %s\", re.getClass().getName(), re.getMessage())",
            "dst_parent_type": "Invocation",
            "dst_type": "Invocation",
            "operator": "UPD",
            "src": "com.fasterxml.jackson.databind.util.ClassUtil.exceptionMessage(re)",
            "src_parent": "ctxt.handleWeirdKey(_keyClass, key, \"not a valid representation, problem: (%s) %s\", re.getClass().getName(), com.fasterxml.jackson.databind.util.ClassUtil.exceptionMessage(re))",
            "src_parent_type": "Invocation",
            "src_type": "Invocation"
          }
        }
      ],
      "file_name": "StdKeyDeserializer"
    },
    {
      "features": [
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "Throw",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Catch",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "LocalVariable",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "e0.getMessage()",
            "dst_parent": "com.fasterxml.jackson.databind.exc.InvalidDefinitionException.from(((com.fasterxml.jackson.core.JsonParser) (null)), e0.getMessage(), baseType)",
            "dst_parent_type": "Invocation",
            "dst_type": "Invocation",
            "operator": "UPD",
            "src": "com.fasterxml.jackson.databind.util.ClassUtil.exceptionMessage(e0)",
            "src_parent": "com.fasterxml.jackson.databind.exc.InvalidDefinitionException.from(((com.fasterxml.jackson.core.JsonParser) (null)), com.fasterxml.jackson.databind.util.ClassUtil.exceptionMessage(e0), baseType)",
            "src_parent_type": "Invocation",
            "src_type": "Invocation"
          }
        }
      ],
      "file_name": "BasicDeserializerFactory"
    },
    {
      "features": [
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Catch",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Throw",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "e.getMessage()",
            "dst_parent": "com.fasterxml.jackson.databind.exc.InvalidDefinitionException.from(ctxt.getParser(), e.getMessage(), beanDesc, null)",
            "dst_parent_type": "Invocation",
            "dst_type": "Invocation",
            "operator": "UPD",
            "src": "com.fasterxml.jackson.databind.util.ClassUtil.exceptionMessage(e)",
            "src_parent": "com.fasterxml.jackson.databind.exc.InvalidDefinitionException.from(ctxt.getParser(), com.fasterxml.jackson.databind.util.ClassUtil.exceptionMessage(e), beanDesc, null)",
            "src_parent_type": "Invocation",
            "src_type": "Invocation"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Catch",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Throw",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "e.getMessage()",
            "dst_parent": "com.fasterxml.jackson.databind.exc.InvalidDefinitionException.from(ctxt.getParser(), e.getMessage(), builderDesc, null)",
            "dst_parent_type": "Invocation",
            "dst_type": "Invocation",
            "operator": "UPD",
            "src": "com.fasterxml.jackson.databind.util.ClassUtil.exceptionMessage(e)",
            "src_parent": "com.fasterxml.jackson.databind.exc.InvalidDefinitionException.from(ctxt.getParser(), com.fasterxml.jackson.databind.util.ClassUtil.exceptionMessage(e), builderDesc, null)",
            "src_parent_type": "Invocation",
            "src_type": "Invocation"
          }
        }
      ],
      "file_name": "BeanDeserializerFactory"
    },
    {
      "features": [
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "true",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Return",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "src.getMessage()",
            "dst_parent": "java.lang.String.format(\"Unexpected IOException (of type %s): %s\", src.getClass().getName(), src.getMessage())",
            "dst_parent_type": "Invocation",
            "dst_type": "Invocation",
            "operator": "UPD",
            "src": "com.fasterxml.jackson.databind.util.ClassUtil.exceptionMessage(src)",
            "src_parent": "java.lang.String.format(\"Unexpected IOException (of type %s): %s\", src.getClass().getName(), com.fasterxml.jackson.databind.util.ClassUtil.exceptionMessage(src))",
            "src_parent_type": "Invocation",
            "src_type": "Invocation"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "true",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "LocalVariable",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "src.getMessage()",
            "dst_parent": "java.lang.String msg = src.getMessage()",
            "dst_parent_type": "LocalVariable",
            "dst_type": "Invocation",
            "operator": "UPD",
            "src": "com.fasterxml.jackson.databind.util.ClassUtil.exceptionMessage(src)",
            "src_parent": "java.lang.String msg = com.fasterxml.jackson.databind.util.ClassUtil.exceptionMessage(src)",
            "src_parent_type": "LocalVariable",
            "src_type": "Invocation"
          }
        }
      ],
      "file_name": "JsonMappingException"
    },
    {
      "features": [
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Catch",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Throw",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "e.getMessage()",
            "dst_parent": "java.lang.String.format(\"Failed to parse Date value '%s': %s\", dateStr, e.getMessage())",
            "dst_parent_type": "Invocation",
            "dst_type": "Invocation",
            "operator": "UPD",
            "src": "com.fasterxml.jackson.databind.util.ClassUtil.exceptionMessage(e)",
            "src_parent": "java.lang.String.format(\"Failed to parse Date value '%s': %s\", dateStr, com.fasterxml.jackson.databind.util.ClassUtil.exceptionMessage(e))",
            "src_parent_type": "Invocation",
            "src_type": "Invocation"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "cause.getMessage()",
            "dst_parent": "(excMsg = cause.getMessage())",
            "dst_parent_type": "Assignment",
            "dst_type": "Invocation",
            "operator": "UPD",
            "src": "com.fasterxml.jackson.databind.util.ClassUtil.exceptionMessage(cause)",
            "src_parent": "(excMsg = com.fasterxml.jackson.databind.util.ClassUtil.exceptionMessage(cause))",
            "src_parent_type": "Assignment",
            "src_type": "Invocation"
          }
        }
      ],
      "file_name": "DeserializationContext"
    },
    {
      "features": [
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "Assignment",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Catch",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Invocation",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "iae.getMessage()",
            "dst_parent": "reportMappingProblem(iae, iae.getMessage())",
            "dst_parent_type": "Invocation",
            "dst_type": "Invocation",
            "operator": "UPD",
            "src": "com.fasterxml.jackson.databind.util.ClassUtil.exceptionMessage(iae)",
            "src_parent": "reportMappingProblem(iae, com.fasterxml.jackson.databind.util.ClassUtil.exceptionMessage(iae))",
            "src_parent_type": "Invocation",
            "src_type": "Invocation"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "Assignment",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Catch",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Invocation",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "iae.getMessage()",
            "dst_parent": "reportMappingProblem(iae, iae.getMessage())",
            "dst_parent_type": "Invocation",
            "dst_type": "Invocation",
            "operator": "UPD",
            "src": "com.fasterxml.jackson.databind.util.ClassUtil.exceptionMessage(iae)",
            "src_parent": "reportMappingProblem(iae, com.fasterxml.jackson.databind.util.ClassUtil.exceptionMessage(iae))",
            "src_parent_type": "Invocation",
            "src_type": "Invocation"
          }
        }
      ],
      "file_name": "SerializerProvider"
    },
    {
      "features": [
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Catch",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Throw",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "iae.getMessage()",
            "dst_parent": "com.fasterxml.jackson.databind.JsonMappingException.from(ctxt, iae.getMessage(), iae)",
            "dst_parent_type": "Invocation",
            "dst_type": "Invocation",
            "operator": "UPD",
            "src": "com.fasterxml.jackson.databind.util.ClassUtil.exceptionMessage(iae)",
            "src_parent": "com.fasterxml.jackson.databind.JsonMappingException.from(ctxt, com.fasterxml.jackson.databind.util.ClassUtil.exceptionMessage(iae), iae)",
            "src_parent_type": "Invocation",
            "src_type": "Invocation"
          }
        }
      ],
      "file_name": "DeserializerCache"
    },
    {
      "features": [
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "For",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Return",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "t.getMessage()",
            "dst_parent": "((\"Instantiation of \" + getValueTypeDesc()) + \" value failed: \") + t.getMessage()",
            "dst_parent_type": "BinaryOperator",
            "dst_type": "Invocation",
            "operator": "UPD",
            "src": "com.fasterxml.jackson.databind.util.ClassUtil.exceptionMessage(t)",
            "src_parent": "((\"Instantiation of \" + getValueTypeDesc()) + \" value failed: \") + com.fasterxml.jackson.databind.util.ClassUtil.exceptionMessage(t)",
            "src_parent_type": "BinaryOperator",
            "src_type": "Invocation"
          }
        }
      ],
      "file_name": "StdValueInstantiator"
    },
    {
      "features": [
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Catch",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Return",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "e.getMessage()",
            "dst_parent": "prov.reportBadPropertyDefinition(_beanDesc, propDef, e.getMessage())",
            "dst_parent_type": "Invocation",
            "dst_type": "Invocation",
            "operator": "UPD",
            "src": "com.fasterxml.jackson.databind.util.ClassUtil.exceptionMessage(e)",
            "src_parent": "prov.reportBadPropertyDefinition(_beanDesc, propDef, com.fasterxml.jackson.databind.util.ClassUtil.exceptionMessage(e))",
            "src_parent_type": "Invocation",
            "src_type": "Invocation"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Return",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "e.getMessage()",
            "dst_parent": "prov.reportBadDefinition(declaredType, e.getMessage())",
            "dst_parent_type": "Invocation",
            "dst_type": "Invocation",
            "operator": "UPD",
            "src": "com.fasterxml.jackson.databind.util.ClassUtil.exceptionMessage(e)",
            "src_parent": "prov.reportBadDefinition(declaredType, com.fasterxml.jackson.databind.util.ClassUtil.exceptionMessage(e))",
            "src_parent_type": "Invocation",
            "src_type": "Invocation"
          }
        }
      ],
      "file_name": "PropertyBuilder"
    }
  ],
  "id": "JacksonDatabind_103"
}