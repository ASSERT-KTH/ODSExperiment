{
  "files": [
    {
      "features": [
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "Return",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "If",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "LocalVariable",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "com.google.javascript.rhino.Node fnParam = com.google.javascript.jscomp.NodeUtil.getFunctionParameters(fnNode).getFirstChild()",
            "dst_parent": "{\n    if (!isDirectCallNodeReplacementPossible(fnNode)) {\n        return com.google.javascript.jscomp.FunctionInjector.CanInlineResult.NO;\n    }\n    com.google.javascript.rhino.Node block = fnNode.getLastChild();\n    com.google.javascript.rhino.Node cArg = callNode.getFirstChild().getNext();\n    if (!callNode.getFirstChild().isName()) {\n        if (com.google.javascript.jscomp.NodeUtil.isFunctionObjectCall(callNode)) {\n            if ((cArg == null) || (!cArg.isThis())) {\n                return com.google.javascript.jscomp.FunctionInjector.CanInlineResult.NO;\n            }\n            cArg = cArg.getNext();\n        } else {\n            com.google.common.base.Preconditions.checkState(!com.google.javascript.jscomp.NodeUtil.isFunctionObjectApply(callNode));\n        }\n    }\n    com.google.javascript.rhino.Node fnParam = com.google.javascript.jscomp.NodeUtil.getFunctionParameters(fnNode).getFirstChild();\n    while ((cArg != null) || (fnParam != null)) {\n        if (fnParam != null) {\n            if (cArg != null) {\n                if (com.google.javascript.jscomp.NodeUtil.mayEffectMutableState(cArg, compiler) && (com.google.javascript.jscomp.NodeUtil.getNameReferenceCount(block, fnParam.getString()) > 1)) {\n                    return com.google.javascript.jscomp.FunctionInjector.CanInlineResult.NO;\n                }\n            }\n            fnParam = fnParam.getNext();\n        }\n        if (cArg != null) {\n            if (com.google.javascript.jscomp.NodeUtil.mayHaveSideEffects(cArg, compiler)) {\n                return com.google.javascript.jscomp.FunctionInjector.CanInlineResult.NO;\n            }\n            cArg = cArg.getNext();\n        }\n    } \n    return com.google.javascript.jscomp.FunctionInjector.CanInlineResult.YES;\n}",
            "dst_parent_type": "Block",
            "dst_type": "LocalVariable",
            "operator": "UPD",
            "src": "java.util.Map<java.lang.String, com.google.javascript.rhino.Node> args = com.google.javascript.jscomp.FunctionArgumentInjector.getFunctionCallParameterMap(fnNode, callNode, this.throwawayNameSupplier)",
            "src_parent": "{\n    if (!isDirectCallNodeReplacementPossible(fnNode)) {\n        return com.google.javascript.jscomp.FunctionInjector.CanInlineResult.NO;\n    }\n    com.google.javascript.rhino.Node cArg = callNode.getFirstChild().getNext();\n    if (!callNode.getFirstChild().isName()) {\n        if (com.google.javascript.jscomp.NodeUtil.isFunctionObjectCall(callNode)) {\n            if ((cArg == null) || (!cArg.isThis())) {\n                return com.google.javascript.jscomp.FunctionInjector.CanInlineResult.NO;\n            }\n            cArg = cArg.getNext();\n        } else {\n            com.google.common.base.Preconditions.checkState(!com.google.javascript.jscomp.NodeUtil.isFunctionObjectApply(callNode));\n        }\n    }\n    java.util.Map<java.lang.String, com.google.javascript.rhino.Node> args = com.google.javascript.jscomp.FunctionArgumentInjector.getFunctionCallParameterMap(fnNode, callNode, this.throwawayNameSupplier);\n    boolean hasArgs = !args.isEmpty();\n    if (hasArgs) {\n        java.util.Set<java.lang.String> allNamesToAlias = com.google.common.collect.Sets.newHashSet(namesToAlias);\n        com.google.javascript.jscomp.FunctionArgumentInjector.maybeAddTempsForCallArguments(fnNode, args, allNamesToAlias, compiler.getCodingConvention());\n        if (!allNamesToAlias.isEmpty()) {\n            return com.google.javascript.jscomp.FunctionInjector.CanInlineResult.NO;\n        }\n    }\n    return com.google.javascript.jscomp.FunctionInjector.CanInlineResult.YES;\n}",
            "src_parent_type": "Block",
            "src_type": "LocalVariable"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Return",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "LocalVariable",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "LocalVariable",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "new com.google.common.base.Predicate<com.google.javascript.rhino.Node>() {\n    @java.lang.Override\n    public boolean apply(com.google.javascript.rhino.Node n) {\n        if (n.isName()) {\n            return (n.getString().equals(\"eval\") || ((!fnName.isEmpty()) && n.getString().equals(fnName))) || ((!fnRecursionName.isEmpty()) && n.getString().equals(fnRecursionName));\n        }\n        return false;\n    }\n}",
            "dst_parent": "com.google.common.base.Predicate<com.google.javascript.rhino.Node> p = new com.google.common.base.Predicate<com.google.javascript.rhino.Node>() {\n    @java.lang.Override\n    public boolean apply(com.google.javascript.rhino.Node n) {\n        if (n.isName()) {\n            return (n.getString().equals(\"eval\") || ((!fnName.isEmpty()) && n.getString().equals(fnName))) || ((!fnRecursionName.isEmpty()) && n.getString().equals(fnRecursionName));\n        }\n        return false;\n    }\n}",
            "dst_parent_type": "LocalVariable",
            "dst_type": "NewClass",
            "operator": "UPD",
            "src": "new com.google.common.base.Predicate<com.google.javascript.rhino.Node>() {\n    @java.lang.Override\n    public boolean apply(com.google.javascript.rhino.Node n) {\n        if (n.isName()) {\n            return (n.getString().equals(\"eval\") || ((!fnName.isEmpty()) && n.getString().equals(fnName))) || ((!fnRecursionName.isEmpty()) && n.getString().equals(fnRecursionName));\n        }\n        return false;\n    }\n}",
            "src_parent": "com.google.common.base.Predicate<com.google.javascript.rhino.Node> p = new com.google.common.base.Predicate<com.google.javascript.rhino.Node>() {\n    @java.lang.Override\n    public boolean apply(com.google.javascript.rhino.Node n) {\n        if (n.isName()) {\n            return (n.getString().equals(\"eval\") || ((!fnName.isEmpty()) && n.getString().equals(fnName))) || ((!fnRecursionName.isEmpty()) && n.getString().equals(fnRecursionName));\n        }\n        return false;\n    }\n}",
            "src_parent_type": "LocalVariable",
            "src_type": "NewClass"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "Return",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "If",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "LocalVariable",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "com.google.javascript.rhino.Node",
            "dst_parent": "com.google.javascript.rhino.Node fnParam = com.google.javascript.jscomp.NodeUtil.getFunctionParameters(fnNode).getFirstChild()",
            "dst_parent_type": "LocalVariable",
            "dst_type": "TypeReference",
            "operator": "UPD",
            "src": "java.util.Map<java.lang.String, com.google.javascript.rhino.Node>",
            "src_parent": "java.util.Map<java.lang.String, com.google.javascript.rhino.Node> args = com.google.javascript.jscomp.FunctionArgumentInjector.getFunctionCallParameterMap(fnNode, callNode, this.throwawayNameSupplier)",
            "src_parent_type": "LocalVariable",
            "src_type": "TypeReference"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Return",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "LocalVariable",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "LocalVariable",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "{\n    @java.lang.Override\n    public boolean apply(com.google.javascript.rhino.Node n) {\n        if (n.isName()) {\n            return (n.getString().equals(\"eval\") || ((!fnName.isEmpty()) && n.getString().equals(fnName))) || ((!fnRecursionName.isEmpty()) && n.getString().equals(fnRecursionName));\n        }\n        return false;\n    }\n}",
            "dst_parent": "new com.google.common.base.Predicate<com.google.javascript.rhino.Node>() {\n    @java.lang.Override\n    public boolean apply(com.google.javascript.rhino.Node n) {\n        if (n.isName()) {\n            return (n.getString().equals(\"eval\") || ((!fnName.isEmpty()) && n.getString().equals(fnName))) || ((!fnRecursionName.isEmpty()) && n.getString().equals(fnRecursionName));\n        }\n        return false;\n    }\n}",
            "dst_parent_type": "NewClass",
            "dst_type": "Class",
            "operator": "UPD",
            "src": "{\n    @java.lang.Override\n    public boolean apply(com.google.javascript.rhino.Node n) {\n        if (n.isName()) {\n            return (n.getString().equals(\"eval\") || ((!fnName.isEmpty()) && n.getString().equals(fnName))) || ((!fnRecursionName.isEmpty()) && n.getString().equals(fnRecursionName));\n        }\n        return false;\n    }\n}",
            "src_parent": "new com.google.common.base.Predicate<com.google.javascript.rhino.Node>() {\n    @java.lang.Override\n    public boolean apply(com.google.javascript.rhino.Node n) {\n        if (n.isName()) {\n            return (n.getString().equals(\"eval\") || ((!fnName.isEmpty()) && n.getString().equals(fnName))) || ((!fnRecursionName.isEmpty()) && n.getString().equals(fnRecursionName));\n        }\n        return false;\n    }\n}",
            "src_parent_type": "NewClass",
            "src_type": "Class"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Assignment",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "LocalVariable",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "new com.google.common.base.Predicate<com.google.javascript.rhino.Node>() {\n    @java.lang.Override\n    public boolean apply(com.google.javascript.rhino.Node n) {\n        if (n.isName()) {\n            return n.getString().equals(\"eval\");\n        }\n        if ((!assumeMinimumCapture) && n.isFunction()) {\n            return n != fnNode;\n        }\n        return false;\n    }\n}",
            "dst_parent": "com.google.common.base.Predicate<com.google.javascript.rhino.Node> match = new com.google.common.base.Predicate<com.google.javascript.rhino.Node>() {\n    @java.lang.Override\n    public boolean apply(com.google.javascript.rhino.Node n) {\n        if (n.isName()) {\n            return n.getString().equals(\"eval\");\n        }\n        if ((!assumeMinimumCapture) && n.isFunction()) {\n            return n != fnNode;\n        }\n        return false;\n    }\n}",
            "dst_parent_type": "LocalVariable",
            "dst_type": "NewClass",
            "operator": "UPD",
            "src": "new com.google.common.base.Predicate<com.google.javascript.rhino.Node>() {\n    @java.lang.Override\n    public boolean apply(com.google.javascript.rhino.Node n) {\n        if (n.isName()) {\n            return n.getString().equals(\"eval\");\n        }\n        if ((!assumeMinimumCapture) && n.isFunction()) {\n            return n != fnNode;\n        }\n        return false;\n    }\n}",
            "src_parent": "com.google.common.base.Predicate<com.google.javascript.rhino.Node> match = new com.google.common.base.Predicate<com.google.javascript.rhino.Node>() {\n    @java.lang.Override\n    public boolean apply(com.google.javascript.rhino.Node n) {\n        if (n.isName()) {\n            return n.getString().equals(\"eval\");\n        }\n        if ((!assumeMinimumCapture) && n.isFunction()) {\n            return n != fnNode;\n        }\n        return false;\n    }\n}",
            "src_parent_type": "LocalVariable",
            "src_type": "NewClass"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "Return",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "If",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "LocalVariable",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "com.google.javascript.jscomp.NodeUtil",
            "dst_parent": "com.google.javascript.jscomp.NodeUtil.getFunctionParameters(fnNode)",
            "dst_parent_type": "Invocation",
            "dst_type": "TypeAccess",
            "operator": "UPD",
            "src": "com.google.javascript.jscomp.FunctionArgumentInjector",
            "src_parent": "com.google.javascript.jscomp.FunctionArgumentInjector.getFunctionCallParameterMap(fnNode, callNode, this.throwawayNameSupplier)",
            "src_parent_type": "Invocation",
            "src_type": "TypeAccess"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Assignment",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "LocalVariable",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "{\n    @java.lang.Override\n    public boolean apply(com.google.javascript.rhino.Node n) {\n        if (n.isName()) {\n            return n.getString().equals(\"eval\");\n        }\n        if ((!assumeMinimumCapture) && n.isFunction()) {\n            return n != fnNode;\n        }\n        return false;\n    }\n}",
            "dst_parent": "new com.google.common.base.Predicate<com.google.javascript.rhino.Node>() {\n    @java.lang.Override\n    public boolean apply(com.google.javascript.rhino.Node n) {\n        if (n.isName()) {\n            return n.getString().equals(\"eval\");\n        }\n        if ((!assumeMinimumCapture) && n.isFunction()) {\n            return n != fnNode;\n        }\n        return false;\n    }\n}",
            "dst_parent_type": "NewClass",
            "dst_type": "Class",
            "operator": "UPD",
            "src": "{\n    @java.lang.Override\n    public boolean apply(com.google.javascript.rhino.Node n) {\n        if (n.isName()) {\n            return n.getString().equals(\"eval\");\n        }\n        if ((!assumeMinimumCapture) && n.isFunction()) {\n            return n != fnNode;\n        }\n        return false;\n    }\n}",
            "src_parent": "new com.google.common.base.Predicate<com.google.javascript.rhino.Node>() {\n    @java.lang.Override\n    public boolean apply(com.google.javascript.rhino.Node n) {\n        if (n.isName()) {\n            return n.getString().equals(\"eval\");\n        }\n        if ((!assumeMinimumCapture) && n.isFunction()) {\n            return n != fnNode;\n        }\n        return false;\n    }\n}",
            "src_parent_type": "NewClass",
            "src_type": "Class"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Invocation",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "com.google.javascript.jscomp.NodeUtil.mayHaveSideEffects(cArg, compiler)",
            "dst_parent": "if (com.google.javascript.jscomp.NodeUtil.mayHaveSideEffects(cArg, compiler)) {\n    return com.google.javascript.jscomp.FunctionInjector.CanInlineResult.NO;\n}",
            "dst_parent_type": "If",
            "dst_type": "Invocation",
            "operator": "UPD",
            "src": "compiler.getCodingConvention()",
            "src_parent": "com.google.javascript.jscomp.FunctionArgumentInjector.maybeAddTempsForCallArguments(fnNode, args, allNamesToAlias, compiler.getCodingConvention())",
            "src_parent_type": "Invocation",
            "src_type": "Invocation"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "fnParam",
            "dst_parent": "fnParam.getNext()",
            "dst_parent_type": "Invocation",
            "dst_type": "VariableRead",
            "operator": "UPD",
            "src": "allNamesToAlias",
            "src_parent": "allNamesToAlias.isEmpty()",
            "src_parent_type": "Invocation",
            "src_type": "VariableRead"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "LocalVariable",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "com.google.javascript.jscomp.NodeUtil",
            "dst_parent": "com.google.javascript.jscomp.NodeUtil.mayEffectMutableState(cArg, compiler)",
            "dst_parent_type": "Invocation",
            "dst_type": "TypeAccess",
            "operator": "UPD",
            "src": "com.google.common.collect.Sets",
            "src_parent": "com.google.common.collect.Sets.newHashSet(namesToAlias)",
            "src_parent_type": "Invocation",
            "src_type": "TypeAccess"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "LocalVariable",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "cArg",
            "dst_parent": "com.google.javascript.jscomp.NodeUtil.mayEffectMutableState(cArg, compiler)",
            "dst_parent_type": "Invocation",
            "dst_type": "VariableRead",
            "operator": "UPD",
            "src": "namesToAlias",
            "src_parent": "com.google.common.collect.Sets.newHashSet(namesToAlias)",
            "src_parent_type": "Invocation",
            "src_type": "VariableRead"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Invocation",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "com.google.javascript.jscomp.NodeUtil",
            "dst_parent": "com.google.javascript.jscomp.NodeUtil.getNameReferenceCount(block, fnParam.getString())",
            "dst_parent_type": "Invocation",
            "dst_type": "TypeAccess",
            "operator": "UPD",
            "src": "com.google.javascript.jscomp.FunctionArgumentInjector",
            "src_parent": "com.google.javascript.jscomp.FunctionArgumentInjector.maybeAddTempsForCallArguments(fnNode, args, allNamesToAlias, compiler.getCodingConvention())",
            "src_parent_type": "Invocation",
            "src_type": "TypeAccess"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Invocation",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "block",
            "dst_parent": "com.google.javascript.jscomp.NodeUtil.getNameReferenceCount(block, fnParam.getString())",
            "dst_parent_type": "Invocation",
            "dst_type": "VariableRead",
            "operator": "UPD",
            "src": "fnNode",
            "src_parent": "com.google.javascript.jscomp.FunctionArgumentInjector.maybeAddTempsForCallArguments(fnNode, args, allNamesToAlias, compiler.getCodingConvention())",
            "src_parent_type": "Invocation",
            "src_type": "VariableRead"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Invocation",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "fnParam",
            "dst_parent": "fnParam.getString()",
            "dst_parent_type": "Invocation",
            "dst_type": "VariableRead",
            "operator": "UPD",
            "src": "args",
            "src_parent": "com.google.javascript.jscomp.FunctionArgumentInjector.maybeAddTempsForCallArguments(fnNode, args, allNamesToAlias, compiler.getCodingConvention())",
            "src_parent_type": "Invocation",
            "src_type": "VariableRead"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Field",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "private final com.google.common.base.Supplier<java.lang.String> throwawayNameSupplier = new com.google.common.base.Supplier<java.lang.String>() {\n    private int nextId = 0;\n\n    @java.lang.Override\n    public java.lang.String get() {\n        return java.lang.String.valueOf(nextId++);\n    }\n};",
            "src_parent": "class FunctionInjector {\n    private final com.google.javascript.jscomp.AbstractCompiler compiler;\n\n    private final boolean allowDecomposition;\n\n    private java.util.Set<java.lang.String> knownConstants = com.google.common.collect.Sets.newHashSet();\n\n    private final boolean assumeStrictThis;\n\n    private final boolean assumeMinimumCapture;\n\n    private final com.google.common.base.Supplier<java.lang.String> safeNameIdSupplier;\n\n    private final com.google.common.base.Supplier<java.lang.String> throwawayNameSupplier = new com.google.common.base.Supplier<java.lang.String>() {\n        private int nextId = 0;\n\n        @java.lang.Override\n        public java.lang.String get() {\n            return java.lang.String.valueOf(nextId++);\n        }\n    };\n\n    public FunctionInjector(com.google.javascript.jscomp.AbstractCompiler compiler, com.google.common.base.Supplier<java.lang.String> safeNameIdSupplier, boolean allowDecomposition, boolean assumeStrictThis, boolean assumeMinimumCapture) {\n        com.google.common.base.Preconditions.checkNotNull(compiler);\n        com.google.common.base.Preconditions.checkNotNull(safeNameIdSupplier);\n        this.compiler = compiler;\n        this.safeNameIdSupplier = safeNameIdSupplier;\n        this.allowDecomposition = allowDecomposition;\n        this.assumeStrictThis = assumeStrictThis;\n        this.assumeMinimumCapture = assumeMinimumCapture;\n    }\n\n    enum InliningMode {\n\n        DIRECT,\n        BLOCK;}\n\n    static class Reference {\n        final com.google.javascript.rhino.Node callNode;\n\n        final com.google.javascript.jscomp.JSModule module;\n\n        final com.google.javascript.jscomp.FunctionInjector.InliningMode mode;\n\n        Reference(com.google.javascript.rhino.Node callNode, com.google.javascript.jscomp.JSModule module, com.google.javascript.jscomp.FunctionInjector.InliningMode mode) {\n            this.callNode = callNode;\n            this.module = module;\n            this.mode = mode;\n        }\n    }\n\n    private static final int NAME_COST_ESTIMATE = InlineCostEstimator.ESTIMATED_IDENTIFIER_COST;\n\n    private static final int COMMA_COST = 1;\n\n    private static final int PAREN_COST = 2;\n\n    boolean doesFunctionMeetMinimumRequirements(final java.lang.String fnName, com.google.javascript.rhino.Node fnNode) {\n        com.google.javascript.rhino.Node block = com.google.javascript.jscomp.NodeUtil.getFunctionBody(fnNode);\n        if (!compiler.getCodingConvention().isInlinableFunction(fnNode)) {\n            return false;\n        }\n        final java.lang.String fnRecursionName = fnNode.getFirstChild().getString();\n        com.google.common.base.Preconditions.checkState(fnRecursionName != null);\n        boolean referencesArguments = com.google.javascript.jscomp.NodeUtil.isNameReferenced(block, \"arguments\", NodeUtil.MATCH_NOT_FUNCTION);\n        com.google.common.base.Predicate<com.google.javascript.rhino.Node> p = new com.google.common.base.Predicate<com.google.javascript.rhino.Node>() {\n            @java.lang.Override\n            public boolean apply(com.google.javascript.rhino.Node n) {\n                if (n.isName()) {\n                    return (n.getString().equals(\"eval\") || ((!fnName.isEmpty()) && n.getString().equals(fnName))) || ((!fnRecursionName.isEmpty()) && n.getString().equals(fnRecursionName));\n                }\n                return false;\n            }\n        };\n        return (!referencesArguments) && (!com.google.javascript.jscomp.NodeUtil.has(block, p, com.google.common.base.Predicates.<com.google.javascript.rhino.Node>alwaysTrue()));\n    }\n\n    com.google.javascript.jscomp.FunctionInjector.CanInlineResult canInlineReferenceToFunction(com.google.javascript.jscomp.NodeTraversal t, com.google.javascript.rhino.Node callNode, com.google.javascript.rhino.Node fnNode, java.util.Set<java.lang.String> needAliases, com.google.javascript.jscomp.FunctionInjector.InliningMode mode, boolean referencesThis, boolean containsFunctions) {\n        if (!isSupportedCallType(callNode)) {\n            return com.google.javascript.jscomp.FunctionInjector.CanInlineResult.NO;\n        }\n        if (containsFunctions) {\n            if ((!assumeMinimumCapture) && (!t.inGlobalScope())) {\n                return com.google.javascript.jscomp.FunctionInjector.CanInlineResult.NO;\n            } else if (com.google.javascript.jscomp.NodeUtil.isWithinLoop(callNode)) {\n                return com.google.javascript.jscomp.FunctionInjector.CanInlineResult.NO;\n            }\n        }\n        if (referencesThis && (!com.google.javascript.jscomp.NodeUtil.isFunctionObjectCall(callNode))) {\n            return com.google.javascript.jscomp.FunctionInjector.CanInlineResult.NO;\n        }\n        if (mode == com.google.javascript.jscomp.FunctionInjector.InliningMode.DIRECT) {\n            return canInlineReferenceDirectly(callNode, fnNode, needAliases);\n        } else {\n            return canInlineReferenceAsStatementBlock(t, callNode, fnNode, needAliases);\n        }\n    }\n\n    private boolean isSupportedCallType(com.google.javascript.rhino.Node callNode) {\n        if (!callNode.getFirstChild().isName()) {\n            if (com.google.javascript.jscomp.NodeUtil.isFunctionObjectCall(callNode)) {\n                if (!assumeStrictThis) {\n                    com.google.javascript.rhino.Node thisValue = callNode.getFirstChild().getNext();\n                    if ((thisValue == null) || (!thisValue.isThis())) {\n                        return false;\n                    }\n                }\n            } else if (com.google.javascript.jscomp.NodeUtil.isFunctionObjectApply(callNode)) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    com.google.javascript.rhino.Node inline(com.google.javascript.rhino.Node callNode, java.lang.String fnName, com.google.javascript.rhino.Node fnNode, com.google.javascript.jscomp.FunctionInjector.InliningMode mode) {\n        com.google.common.base.Preconditions.checkState(compiler.getLifeCycleStage().isNormalized());\n        if (mode == com.google.javascript.jscomp.FunctionInjector.InliningMode.DIRECT) {\n            return inlineReturnValue(callNode, fnNode);\n        } else {\n            return inlineFunction(callNode, fnNode, fnName);\n        }\n    }\n\n    private com.google.javascript.rhino.Node inlineReturnValue(com.google.javascript.rhino.Node callNode, com.google.javascript.rhino.Node fnNode) {\n        com.google.javascript.rhino.Node block = fnNode.getLastChild();\n        com.google.javascript.rhino.Node callParentNode = callNode.getParent();\n        java.util.Map<java.lang.String, com.google.javascript.rhino.Node> argMap = com.google.javascript.jscomp.FunctionArgumentInjector.getFunctionCallParameterMap(fnNode, callNode, this.safeNameIdSupplier);\n        com.google.javascript.rhino.Node newExpression;\n        if (!block.hasChildren()) {\n            com.google.javascript.rhino.Node srcLocation = block;\n            newExpression = com.google.javascript.jscomp.NodeUtil.newUndefinedNode(srcLocation);\n        } else {\n            com.google.javascript.rhino.Node returnNode = block.getFirstChild();\n            com.google.common.base.Preconditions.checkArgument(returnNode.isReturn());\n            com.google.javascript.rhino.Node safeReturnNode = returnNode.cloneTree();\n            com.google.javascript.rhino.Node inlineResult = com.google.javascript.jscomp.FunctionArgumentInjector.inject(null, safeReturnNode, null, argMap);\n            com.google.common.base.Preconditions.checkArgument(safeReturnNode == inlineResult);\n            newExpression = safeReturnNode.removeFirstChild();\n        }\n        callParentNode.replaceChild(callNode, newExpression);\n        return newExpression;\n    }\n\n    private enum CallSiteType {\n\n        UNSUPPORTED() {\n            @java.lang.Override\n            public void prepare(com.google.javascript.jscomp.FunctionInjector injector, com.google.javascript.rhino.Node callNode) {\n                throw new java.lang.IllegalStateException(\"unexpected\");\n            }\n        },\n        SIMPLE_CALL() {\n            @java.lang.Override\n            public void prepare(com.google.javascript.jscomp.FunctionInjector injector, com.google.javascript.rhino.Node callNode) {\n            }\n        },\n        SIMPLE_ASSIGNMENT() {\n            @java.lang.Override\n            public void prepare(com.google.javascript.jscomp.FunctionInjector injector, com.google.javascript.rhino.Node callNode) {\n            }\n        },\n        VAR_DECL_SIMPLE_ASSIGNMENT() {\n            @java.lang.Override\n            public void prepare(com.google.javascript.jscomp.FunctionInjector injector, com.google.javascript.rhino.Node callNode) {\n            }\n        },\n        EXPRESSION() {\n            @java.lang.Override\n            public void prepare(com.google.javascript.jscomp.FunctionInjector injector, com.google.javascript.rhino.Node callNode) {\n                injector.getDecomposer().moveExpression(callNode);\n                com.google.javascript.jscomp.FunctionInjector.CallSiteType callSiteType = injector.classifyCallSite(callNode);\n                com.google.common.base.Preconditions.checkState(this != callSiteType);\n                callSiteType.prepare(injector, callNode);\n            }\n        },\n        DECOMPOSABLE_EXPRESSION() {\n            @java.lang.Override\n            public void prepare(com.google.javascript.jscomp.FunctionInjector injector, com.google.javascript.rhino.Node callNode) {\n                injector.getDecomposer().maybeExposeExpression(callNode);\n                com.google.javascript.jscomp.FunctionInjector.CallSiteType callSiteType = injector.classifyCallSite(callNode);\n                com.google.common.base.Preconditions.checkState(this != callSiteType);\n                callSiteType.prepare(injector, callNode);\n            }\n        };\n        public abstract void prepare(com.google.javascript.jscomp.FunctionInjector injector, com.google.javascript.rhino.Node callNode);\n    }\n\n    private com.google.javascript.jscomp.FunctionInjector.CallSiteType classifyCallSite(com.google.javascript.rhino.Node callNode) {\n        com.google.javascript.rhino.Node parent = callNode.getParent();\n        com.google.javascript.rhino.Node grandParent = parent.getParent();\n        if (com.google.javascript.jscomp.NodeUtil.isExprCall(parent)) {\n            return com.google.javascript.jscomp.FunctionInjector.CallSiteType.SIMPLE_CALL;\n        } else if (((com.google.javascript.jscomp.NodeUtil.isExprAssign(grandParent) && (!com.google.javascript.jscomp.NodeUtil.isVarOrSimpleAssignLhs(callNode, parent))) && parent.getFirstChild().isName()) && (!com.google.javascript.jscomp.NodeUtil.isConstantName(parent.getFirstChild()))) {\n            return com.google.javascript.jscomp.FunctionInjector.CallSiteType.SIMPLE_ASSIGNMENT;\n        } else if (((parent.isName() && (!com.google.javascript.jscomp.NodeUtil.isConstantName(parent))) && grandParent.isVar()) && grandParent.hasOneChild()) {\n            return com.google.javascript.jscomp.FunctionInjector.CallSiteType.VAR_DECL_SIMPLE_ASSIGNMENT;\n        } else {\n            com.google.javascript.rhino.Node expressionRoot = com.google.javascript.jscomp.ExpressionDecomposer.findExpressionRoot(callNode);\n            if (expressionRoot != null) {\n                com.google.javascript.jscomp.ExpressionDecomposer decomposer = new com.google.javascript.jscomp.ExpressionDecomposer(compiler, safeNameIdSupplier, knownConstants);\n                com.google.javascript.jscomp.ExpressionDecomposer.DecompositionType type = decomposer.canExposeExpression(callNode);\n                if (type == com.google.javascript.jscomp.ExpressionDecomposer.DecompositionType.MOVABLE) {\n                    return com.google.javascript.jscomp.FunctionInjector.CallSiteType.EXPRESSION;\n                } else if (type == com.google.javascript.jscomp.ExpressionDecomposer.DecompositionType.DECOMPOSABLE) {\n                    return com.google.javascript.jscomp.FunctionInjector.CallSiteType.DECOMPOSABLE_EXPRESSION;\n                } else {\n                    com.google.common.base.Preconditions.checkState(type == com.google.javascript.jscomp.ExpressionDecomposer.DecompositionType.UNDECOMPOSABLE);\n                }\n            }\n        }\n        return com.google.javascript.jscomp.FunctionInjector.CallSiteType.UNSUPPORTED;\n    }\n\n    private com.google.javascript.jscomp.ExpressionDecomposer getDecomposer() {\n        return new com.google.javascript.jscomp.ExpressionDecomposer(compiler, safeNameIdSupplier, knownConstants);\n    }\n\n    void maybePrepareCall(com.google.javascript.rhino.Node callNode) {\n        com.google.javascript.jscomp.FunctionInjector.CallSiteType callSiteType = classifyCallSite(callNode);\n        callSiteType.prepare(this, callNode);\n    }\n\n    private com.google.javascript.rhino.Node inlineFunction(com.google.javascript.rhino.Node callNode, com.google.javascript.rhino.Node fnNode, java.lang.String fnName) {\n        com.google.javascript.rhino.Node parent = callNode.getParent();\n        com.google.javascript.rhino.Node grandParent = parent.getParent();\n        com.google.javascript.jscomp.FunctionInjector.CallSiteType callSiteType = classifyCallSite(callNode);\n        com.google.common.base.Preconditions.checkArgument(callSiteType != com.google.javascript.jscomp.FunctionInjector.CallSiteType.UNSUPPORTED);\n        boolean isCallInLoop = com.google.javascript.jscomp.NodeUtil.isWithinLoop(callNode);\n        java.lang.String resultName = null;\n        boolean needsDefaultReturnResult = true;\n        switch (callSiteType) {\n            case SIMPLE_ASSIGNMENT :\n                resultName = parent.getFirstChild().getString();\n                break;\n            case VAR_DECL_SIMPLE_ASSIGNMENT :\n                resultName = parent.getString();\n                break;\n            case SIMPLE_CALL :\n                resultName = null;\n                needsDefaultReturnResult = false;\n                break;\n            case EXPRESSION :\n                throw new java.lang.IllegalStateException(\"Movable expressions must be moved before inlining.\");\n            case DECOMPOSABLE_EXPRESSION :\n                throw new java.lang.IllegalStateException(\"Decomposable expressions must be decomposed before inlining.\");\n            default :\n                throw new java.lang.IllegalStateException(\"Unexpected call site type.\");\n        }\n        com.google.javascript.jscomp.FunctionToBlockMutator mutator = new com.google.javascript.jscomp.FunctionToBlockMutator(compiler, this.safeNameIdSupplier);\n        com.google.javascript.rhino.Node newBlock = mutator.mutate(fnName, fnNode, callNode, resultName, needsDefaultReturnResult, isCallInLoop);\n        com.google.javascript.rhino.Node greatGrandParent = grandParent.getParent();\n        switch (callSiteType) {\n            case VAR_DECL_SIMPLE_ASSIGNMENT :\n                parent.removeChild(parent.getFirstChild());\n                com.google.common.base.Preconditions.checkState(parent.getFirstChild() == null);\n                greatGrandParent.addChildAfter(newBlock, grandParent);\n                break;\n            case SIMPLE_ASSIGNMENT :\n                com.google.common.base.Preconditions.checkState(grandParent.isExprResult());\n                greatGrandParent.replaceChild(grandParent, newBlock);\n                break;\n            case SIMPLE_CALL :\n                com.google.common.base.Preconditions.checkState(parent.isExprResult());\n                grandParent.replaceChild(parent, newBlock);\n                break;\n            default :\n                throw new java.lang.IllegalStateException(\"Unexpected call site type.\");\n        }\n        return newBlock;\n    }\n\n    boolean isDirectCallNodeReplacementPossible(com.google.javascript.rhino.Node fnNode) {\n        com.google.javascript.rhino.Node block = com.google.javascript.jscomp.NodeUtil.getFunctionBody(fnNode);\n        if (!block.hasChildren()) {\n            return true;\n        } else if (block.hasOneChild()) {\n            if (block.getFirstChild().isReturn() && (block.getFirstChild().getFirstChild() != null)) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    enum CanInlineResult {\n\n        YES,\n        AFTER_PREPARATION,\n        NO;}\n\n    private com.google.javascript.jscomp.FunctionInjector.CanInlineResult canInlineReferenceAsStatementBlock(com.google.javascript.jscomp.NodeTraversal t, com.google.javascript.rhino.Node callNode, com.google.javascript.rhino.Node fnNode, java.util.Set<java.lang.String> namesToAlias) {\n        com.google.javascript.jscomp.FunctionInjector.CallSiteType callSiteType = classifyCallSite(callNode);\n        if (callSiteType == com.google.javascript.jscomp.FunctionInjector.CallSiteType.UNSUPPORTED) {\n            return com.google.javascript.jscomp.FunctionInjector.CanInlineResult.NO;\n        }\n        if ((!allowDecomposition) && ((callSiteType == com.google.javascript.jscomp.FunctionInjector.CallSiteType.DECOMPOSABLE_EXPRESSION) || (callSiteType == com.google.javascript.jscomp.FunctionInjector.CallSiteType.EXPRESSION))) {\n            return com.google.javascript.jscomp.FunctionInjector.CanInlineResult.NO;\n        }\n        if (!callMeetsBlockInliningRequirements(t, callNode, fnNode, namesToAlias)) {\n            return com.google.javascript.jscomp.FunctionInjector.CanInlineResult.NO;\n        }\n        if ((callSiteType == com.google.javascript.jscomp.FunctionInjector.CallSiteType.DECOMPOSABLE_EXPRESSION) || (callSiteType == com.google.javascript.jscomp.FunctionInjector.CallSiteType.EXPRESSION)) {\n            return com.google.javascript.jscomp.FunctionInjector.CanInlineResult.AFTER_PREPARATION;\n        } else {\n            return com.google.javascript.jscomp.FunctionInjector.CanInlineResult.YES;\n        }\n    }\n\n    private boolean callMeetsBlockInliningRequirements(com.google.javascript.jscomp.NodeTraversal t, com.google.javascript.rhino.Node callNode, final com.google.javascript.rhino.Node fnNode, java.util.Set<java.lang.String> namesToAlias) {\n        final boolean assumeMinimumCapture = this.assumeMinimumCapture;\n        boolean fnContainsVars = com.google.javascript.jscomp.NodeUtil.has(com.google.javascript.jscomp.NodeUtil.getFunctionBody(fnNode), new com.google.javascript.jscomp.NodeUtil.MatchDeclaration(), new com.google.javascript.jscomp.NodeUtil.MatchShallowStatement());\n        boolean forbidTemps = false;\n        if (!t.inGlobalScope()) {\n            com.google.javascript.rhino.Node fnCaller = t.getScopeRoot();\n            com.google.javascript.rhino.Node fnCallerBody = fnCaller.getLastChild();\n            com.google.common.base.Predicate<com.google.javascript.rhino.Node> match = new com.google.common.base.Predicate<com.google.javascript.rhino.Node>() {\n                @java.lang.Override\n                public boolean apply(com.google.javascript.rhino.Node n) {\n                    if (n.isName()) {\n                        return n.getString().equals(\"eval\");\n                    }\n                    if ((!assumeMinimumCapture) && n.isFunction()) {\n                        return n != fnNode;\n                    }\n                    return false;\n                }\n            };\n            forbidTemps = com.google.javascript.jscomp.NodeUtil.has(fnCallerBody, match, NodeUtil.MATCH_NOT_FUNCTION);\n        }\n        if (fnContainsVars && forbidTemps) {\n            return false;\n        }\n        if (forbidTemps) {\n            java.util.Map<java.lang.String, com.google.javascript.rhino.Node> args = com.google.javascript.jscomp.FunctionArgumentInjector.getFunctionCallParameterMap(fnNode, callNode, this.safeNameIdSupplier);\n            boolean hasArgs = !args.isEmpty();\n            if (hasArgs) {\n                java.util.Set<java.lang.String> allNamesToAlias = com.google.common.collect.Sets.newHashSet(namesToAlias);\n                com.google.javascript.jscomp.FunctionArgumentInjector.maybeAddTempsForCallArguments(fnNode, args, allNamesToAlias, compiler.getCodingConvention());\n                if (!allNamesToAlias.isEmpty()) {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n\n    private com.google.javascript.jscomp.FunctionInjector.CanInlineResult canInlineReferenceDirectly(com.google.javascript.rhino.Node callNode, com.google.javascript.rhino.Node fnNode, java.util.Set<java.lang.String> namesToAlias) {\n        if (!isDirectCallNodeReplacementPossible(fnNode)) {\n            return com.google.javascript.jscomp.FunctionInjector.CanInlineResult.NO;\n        }\n        com.google.javascript.rhino.Node cArg = callNode.getFirstChild().getNext();\n        if (!callNode.getFirstChild().isName()) {\n            if (com.google.javascript.jscomp.NodeUtil.isFunctionObjectCall(callNode)) {\n                if ((cArg == null) || (!cArg.isThis())) {\n                    return com.google.javascript.jscomp.FunctionInjector.CanInlineResult.NO;\n                }\n                cArg = cArg.getNext();\n            } else {\n                com.google.common.base.Preconditions.checkState(!com.google.javascript.jscomp.NodeUtil.isFunctionObjectApply(callNode));\n            }\n        }\n        java.util.Map<java.lang.String, com.google.javascript.rhino.Node> args = com.google.javascript.jscomp.FunctionArgumentInjector.getFunctionCallParameterMap(fnNode, callNode, this.throwawayNameSupplier);\n        boolean hasArgs = !args.isEmpty();\n        if (hasArgs) {\n            java.util.Set<java.lang.String> allNamesToAlias = com.google.common.collect.Sets.newHashSet(namesToAlias);\n            com.google.javascript.jscomp.FunctionArgumentInjector.maybeAddTempsForCallArguments(fnNode, args, allNamesToAlias, compiler.getCodingConvention());\n            if (!allNamesToAlias.isEmpty()) {\n                return com.google.javascript.jscomp.FunctionInjector.CanInlineResult.NO;\n            }\n        }\n        return com.google.javascript.jscomp.FunctionInjector.CanInlineResult.YES;\n    }\n\n    boolean inliningLowersCost(com.google.javascript.jscomp.JSModule fnModule, com.google.javascript.rhino.Node fnNode, java.util.Collection<? extends com.google.javascript.jscomp.FunctionInjector.Reference> refs, java.util.Set<java.lang.String> namesToAlias, boolean isRemovable, boolean referencesThis) {\n        int referenceCount = refs.size();\n        if (referenceCount == 0) {\n            return true;\n        }\n        int referencesUsingBlockInlining = 0;\n        boolean checkModules = isRemovable && (fnModule != null);\n        com.google.javascript.jscomp.JSModuleGraph moduleGraph = compiler.getModuleGraph();\n        for (com.google.javascript.jscomp.FunctionInjector.Reference ref : refs) {\n            if (ref.mode == com.google.javascript.jscomp.FunctionInjector.InliningMode.BLOCK) {\n                referencesUsingBlockInlining++;\n            }\n            if (checkModules && (ref.module != null)) {\n                if ((ref.module != fnModule) && (!moduleGraph.dependsOn(ref.module, fnModule))) {\n                    isRemovable = false;\n                    checkModules = false;\n                }\n            }\n        }\n        int referencesUsingDirectInlining = referenceCount - referencesUsingBlockInlining;\n        if (((referenceCount == 1) && isRemovable) && (referencesUsingDirectInlining == 1)) {\n            return true;\n        }\n        int callCost = com.google.javascript.jscomp.FunctionInjector.estimateCallCost(fnNode, referencesThis);\n        int overallCallCost = callCost * referenceCount;\n        int costDeltaDirect = com.google.javascript.jscomp.FunctionInjector.inlineCostDelta(fnNode, namesToAlias, com.google.javascript.jscomp.FunctionInjector.InliningMode.DIRECT);\n        int costDeltaBlock = com.google.javascript.jscomp.FunctionInjector.inlineCostDelta(fnNode, namesToAlias, com.google.javascript.jscomp.FunctionInjector.InliningMode.BLOCK);\n        return doesLowerCost(fnNode, overallCallCost, referencesUsingDirectInlining, costDeltaDirect, referencesUsingBlockInlining, costDeltaBlock, isRemovable);\n    }\n\n    private boolean doesLowerCost(com.google.javascript.rhino.Node fnNode, int callCost, int directInlines, int costDeltaDirect, int blockInlines, int costDeltaBlock, boolean removable) {\n        int fnInstanceCount = (directInlines + blockInlines) - (removable ? 1 : 0);\n        if (fnInstanceCount == 0) {\n            if ((blockInlines > 0) && (costDeltaBlock > 0)) {\n                return false;\n            }\n            return true;\n        }\n        int costDelta = (directInlines * costDeltaDirect) + (blockInlines * costDeltaBlock);\n        int threshold = (callCost - costDelta) / fnInstanceCount;\n        return com.google.javascript.jscomp.InlineCostEstimator.getCost(fnNode, threshold + 1) <= threshold;\n    }\n\n    private static int estimateCallCost(com.google.javascript.rhino.Node fnNode, boolean referencesThis) {\n        com.google.javascript.rhino.Node argsNode = com.google.javascript.jscomp.NodeUtil.getFunctionParameters(fnNode);\n        int numArgs = argsNode.getChildCount();\n        int callCost = com.google.javascript.jscomp.FunctionInjector.NAME_COST_ESTIMATE + com.google.javascript.jscomp.FunctionInjector.PAREN_COST;\n        if (numArgs > 0) {\n            callCost += (numArgs * com.google.javascript.jscomp.FunctionInjector.NAME_COST_ESTIMATE) + ((numArgs - 1) * com.google.javascript.jscomp.FunctionInjector.COMMA_COST);\n        }\n        if (referencesThis) {\n            callCost += 5 + 5;\n        }\n        return callCost;\n    }\n\n    private static int inlineCostDelta(com.google.javascript.rhino.Node fnNode, java.util.Set<java.lang.String> namesToAlias, com.google.javascript.jscomp.FunctionInjector.InliningMode mode) {\n        int paramCount = com.google.javascript.jscomp.NodeUtil.getFunctionParameters(fnNode).getChildCount();\n        int commaCount = (paramCount > 1) ? paramCount - 1 : 0;\n        int costDeltaFunctionOverhead = (15 + commaCount) + (paramCount * InlineCostEstimator.ESTIMATED_IDENTIFIER_COST);\n        com.google.javascript.rhino.Node block = fnNode.getLastChild();\n        if (!block.hasChildren()) {\n            return -costDeltaFunctionOverhead;\n        }\n        if (mode == com.google.javascript.jscomp.FunctionInjector.InliningMode.DIRECT) {\n            return -(costDeltaFunctionOverhead + 7);\n        } else {\n            int aliasCount = namesToAlias.size();\n            final int inlineBlockOverhead = 4;\n            final int perReturnOverhead = 2;\n            final int perReturnResultOverhead = 3;\n            final int perAliasOverhead = 3;\n            int returnCount = com.google.javascript.jscomp.NodeUtil.getNodeTypeReferenceCount(block, Token.RETURN, new com.google.javascript.jscomp.NodeUtil.MatchShallowStatement());\n            int resultCount = (returnCount > 0) ? returnCount - 1 : 0;\n            int baseOverhead = (returnCount > 0) ? inlineBlockOverhead : 0;\n            int overhead = ((baseOverhead + (returnCount * perReturnOverhead)) + (resultCount * perReturnResultOverhead)) + (aliasCount * perAliasOverhead);\n            return overhead - costDeltaFunctionOverhead;\n        }\n    }\n\n    public void setKnownConstants(java.util.Set<java.lang.String> knownConstants) {\n        com.google.common.base.Preconditions.checkState(this.knownConstants.isEmpty());\n        this.knownConstants = knownConstants;\n    }\n}",
            "src_parent_type": "Class",
            "src_type": "Field"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Return",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "needAliases",
            "src_parent": "canInlineReferenceDirectly(callNode, fnNode, needAliases)",
            "src_parent_type": "Invocation",
            "src_type": "VariableRead"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Parameter",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "java.util.Set<java.lang.String> namesToAlias",
            "src_parent": "private com.google.javascript.jscomp.FunctionInjector.CanInlineResult canInlineReferenceDirectly(com.google.javascript.rhino.Node callNode, com.google.javascript.rhino.Node fnNode, java.util.Set<java.lang.String> namesToAlias) {\n    if (!isDirectCallNodeReplacementPossible(fnNode)) {\n        return com.google.javascript.jscomp.FunctionInjector.CanInlineResult.NO;\n    }\n    com.google.javascript.rhino.Node cArg = callNode.getFirstChild().getNext();\n    if (!callNode.getFirstChild().isName()) {\n        if (com.google.javascript.jscomp.NodeUtil.isFunctionObjectCall(callNode)) {\n            if ((cArg == null) || (!cArg.isThis())) {\n                return com.google.javascript.jscomp.FunctionInjector.CanInlineResult.NO;\n            }\n            cArg = cArg.getNext();\n        } else {\n            com.google.common.base.Preconditions.checkState(!com.google.javascript.jscomp.NodeUtil.isFunctionObjectApply(callNode));\n        }\n    }\n    java.util.Map<java.lang.String, com.google.javascript.rhino.Node> args = com.google.javascript.jscomp.FunctionArgumentInjector.getFunctionCallParameterMap(fnNode, callNode, this.throwawayNameSupplier);\n    boolean hasArgs = !args.isEmpty();\n    if (hasArgs) {\n        java.util.Set<java.lang.String> allNamesToAlias = com.google.common.collect.Sets.newHashSet(namesToAlias);\n        com.google.javascript.jscomp.FunctionArgumentInjector.maybeAddTempsForCallArguments(fnNode, args, allNamesToAlias, compiler.getCodingConvention());\n        if (!allNamesToAlias.isEmpty()) {\n            return com.google.javascript.jscomp.FunctionInjector.CanInlineResult.NO;\n        }\n    }\n    return com.google.javascript.jscomp.FunctionInjector.CanInlineResult.YES;\n}",
            "src_parent_type": "Method",
            "src_type": "Parameter"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Return",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "If",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "java.util.Set<java.lang.String> allNamesToAlias = com.google.common.collect.Sets.newHashSet(namesToAlias)",
            "src_parent": "{\n    java.util.Set<java.lang.String> allNamesToAlias = com.google.common.collect.Sets.newHashSet(namesToAlias);\n    com.google.javascript.jscomp.FunctionArgumentInjector.maybeAddTempsForCallArguments(fnNode, args, allNamesToAlias, compiler.getCodingConvention());\n    if (!allNamesToAlias.isEmpty()) {\n        return com.google.javascript.jscomp.FunctionInjector.CanInlineResult.NO;\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "LocalVariable"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Return",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "If",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "com.google.javascript.jscomp.FunctionArgumentInjector.maybeAddTempsForCallArguments(fnNode, args, allNamesToAlias, compiler.getCodingConvention())",
            "src_parent": "{\n    java.util.Set<java.lang.String> allNamesToAlias = com.google.common.collect.Sets.newHashSet(namesToAlias);\n    com.google.javascript.jscomp.FunctionArgumentInjector.maybeAddTempsForCallArguments(fnNode, args, allNamesToAlias, compiler.getCodingConvention());\n    if (!allNamesToAlias.isEmpty()) {\n        return com.google.javascript.jscomp.FunctionInjector.CanInlineResult.NO;\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "Invocation"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Return",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "If",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "if (!allNamesToAlias.isEmpty()) {\n    return com.google.javascript.jscomp.FunctionInjector.CanInlineResult.NO;\n}",
            "src_parent": "{\n    java.util.Set<java.lang.String> allNamesToAlias = com.google.common.collect.Sets.newHashSet(namesToAlias);\n    com.google.javascript.jscomp.FunctionArgumentInjector.maybeAddTempsForCallArguments(fnNode, args, allNamesToAlias, compiler.getCodingConvention());\n    if (!allNamesToAlias.isEmpty()) {\n        return com.google.javascript.jscomp.FunctionInjector.CanInlineResult.NO;\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "If"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "Return",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "LocalVariable",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "LocalVariable",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "boolean hasArgs = !args.isEmpty()",
            "src_parent": "{\n    if (!isDirectCallNodeReplacementPossible(fnNode)) {\n        return com.google.javascript.jscomp.FunctionInjector.CanInlineResult.NO;\n    }\n    com.google.javascript.rhino.Node cArg = callNode.getFirstChild().getNext();\n    if (!callNode.getFirstChild().isName()) {\n        if (com.google.javascript.jscomp.NodeUtil.isFunctionObjectCall(callNode)) {\n            if ((cArg == null) || (!cArg.isThis())) {\n                return com.google.javascript.jscomp.FunctionInjector.CanInlineResult.NO;\n            }\n            cArg = cArg.getNext();\n        } else {\n            com.google.common.base.Preconditions.checkState(!com.google.javascript.jscomp.NodeUtil.isFunctionObjectApply(callNode));\n        }\n    }\n    java.util.Map<java.lang.String, com.google.javascript.rhino.Node> args = com.google.javascript.jscomp.FunctionArgumentInjector.getFunctionCallParameterMap(fnNode, callNode, this.throwawayNameSupplier);\n    boolean hasArgs = !args.isEmpty();\n    if (hasArgs) {\n        java.util.Set<java.lang.String> allNamesToAlias = com.google.common.collect.Sets.newHashSet(namesToAlias);\n        com.google.javascript.jscomp.FunctionArgumentInjector.maybeAddTempsForCallArguments(fnNode, args, allNamesToAlias, compiler.getCodingConvention());\n        if (!allNamesToAlias.isEmpty()) {\n            return com.google.javascript.jscomp.FunctionInjector.CanInlineResult.NO;\n        }\n    }\n    return com.google.javascript.jscomp.FunctionInjector.CanInlineResult.YES;\n}",
            "src_parent_type": "Block",
            "src_type": "LocalVariable"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Return",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "If",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "if (hasArgs) {\n    java.util.Set<java.lang.String> allNamesToAlias = com.google.common.collect.Sets.newHashSet(namesToAlias);\n    com.google.javascript.jscomp.FunctionArgumentInjector.maybeAddTempsForCallArguments(fnNode, args, allNamesToAlias, compiler.getCodingConvention());\n    if (!allNamesToAlias.isEmpty()) {\n        return com.google.javascript.jscomp.FunctionInjector.CanInlineResult.NO;\n    }\n}",
            "src_parent": "{\n    if (!isDirectCallNodeReplacementPossible(fnNode)) {\n        return com.google.javascript.jscomp.FunctionInjector.CanInlineResult.NO;\n    }\n    com.google.javascript.rhino.Node cArg = callNode.getFirstChild().getNext();\n    if (!callNode.getFirstChild().isName()) {\n        if (com.google.javascript.jscomp.NodeUtil.isFunctionObjectCall(callNode)) {\n            if ((cArg == null) || (!cArg.isThis())) {\n                return com.google.javascript.jscomp.FunctionInjector.CanInlineResult.NO;\n            }\n            cArg = cArg.getNext();\n        } else {\n            com.google.common.base.Preconditions.checkState(!com.google.javascript.jscomp.NodeUtil.isFunctionObjectApply(callNode));\n        }\n    }\n    java.util.Map<java.lang.String, com.google.javascript.rhino.Node> args = com.google.javascript.jscomp.FunctionArgumentInjector.getFunctionCallParameterMap(fnNode, callNode, this.throwawayNameSupplier);\n    boolean hasArgs = !args.isEmpty();\n    if (hasArgs) {\n        java.util.Set<java.lang.String> allNamesToAlias = com.google.common.collect.Sets.newHashSet(namesToAlias);\n        com.google.javascript.jscomp.FunctionArgumentInjector.maybeAddTempsForCallArguments(fnNode, args, allNamesToAlias, compiler.getCodingConvention());\n        if (!allNamesToAlias.isEmpty()) {\n            return com.google.javascript.jscomp.FunctionInjector.CanInlineResult.NO;\n        }\n    }\n    return com.google.javascript.jscomp.FunctionInjector.CanInlineResult.YES;\n}",
            "src_parent_type": "Block",
            "src_type": "If"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Method",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "com.google.javascript.rhino.Node block = fnNode.getLastChild()",
            "src_parent": "{\n    if (!isDirectCallNodeReplacementPossible(fnNode)) {\n        return com.google.javascript.jscomp.FunctionInjector.CanInlineResult.NO;\n    }\n    com.google.javascript.rhino.Node block = fnNode.getLastChild();\n    com.google.javascript.rhino.Node cArg = callNode.getFirstChild().getNext();\n    if (!callNode.getFirstChild().isName()) {\n        if (com.google.javascript.jscomp.NodeUtil.isFunctionObjectCall(callNode)) {\n            if ((cArg == null) || (!cArg.isThis())) {\n                return com.google.javascript.jscomp.FunctionInjector.CanInlineResult.NO;\n            }\n            cArg = cArg.getNext();\n        } else {\n            com.google.common.base.Preconditions.checkState(!com.google.javascript.jscomp.NodeUtil.isFunctionObjectApply(callNode));\n        }\n    }\n    com.google.javascript.rhino.Node fnParam = com.google.javascript.jscomp.NodeUtil.getFunctionParameters(fnNode).getFirstChild();\n    while ((cArg != null) || (fnParam != null)) {\n        if (fnParam != null) {\n            if (cArg != null) {\n                if (com.google.javascript.jscomp.NodeUtil.mayEffectMutableState(cArg, compiler) && (com.google.javascript.jscomp.NodeUtil.getNameReferenceCount(block, fnParam.getString()) > 1)) {\n                    return com.google.javascript.jscomp.FunctionInjector.CanInlineResult.NO;\n                }\n            }\n            fnParam = fnParam.getNext();\n        }\n        if (cArg != null) {\n            if (com.google.javascript.jscomp.NodeUtil.mayHaveSideEffects(cArg, compiler)) {\n                return com.google.javascript.jscomp.FunctionInjector.CanInlineResult.NO;\n            }\n            cArg = cArg.getNext();\n        }\n    } \n    return com.google.javascript.jscomp.FunctionInjector.CanInlineResult.YES;\n}",
            "src_parent_type": "Block",
            "src_type": "LocalVariable"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Method",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "while ((cArg != null) || (fnParam != null)) {\n    if (fnParam != null) {\n        if (cArg != null) {\n            if (com.google.javascript.jscomp.NodeUtil.mayEffectMutableState(cArg, compiler) && (com.google.javascript.jscomp.NodeUtil.getNameReferenceCount(block, fnParam.getString()) > 1)) {\n                return com.google.javascript.jscomp.FunctionInjector.CanInlineResult.NO;\n            }\n        }\n        fnParam = fnParam.getNext();\n    }\n    if (cArg != null) {\n        if (com.google.javascript.jscomp.NodeUtil.mayHaveSideEffects(cArg, compiler)) {\n            return com.google.javascript.jscomp.FunctionInjector.CanInlineResult.NO;\n        }\n        cArg = cArg.getNext();\n    }\n} ",
            "src_parent": "{\n    if (!isDirectCallNodeReplacementPossible(fnNode)) {\n        return com.google.javascript.jscomp.FunctionInjector.CanInlineResult.NO;\n    }\n    com.google.javascript.rhino.Node block = fnNode.getLastChild();\n    com.google.javascript.rhino.Node cArg = callNode.getFirstChild().getNext();\n    if (!callNode.getFirstChild().isName()) {\n        if (com.google.javascript.jscomp.NodeUtil.isFunctionObjectCall(callNode)) {\n            if ((cArg == null) || (!cArg.isThis())) {\n                return com.google.javascript.jscomp.FunctionInjector.CanInlineResult.NO;\n            }\n            cArg = cArg.getNext();\n        } else {\n            com.google.common.base.Preconditions.checkState(!com.google.javascript.jscomp.NodeUtil.isFunctionObjectApply(callNode));\n        }\n    }\n    com.google.javascript.rhino.Node fnParam = com.google.javascript.jscomp.NodeUtil.getFunctionParameters(fnNode).getFirstChild();\n    while ((cArg != null) || (fnParam != null)) {\n        if (fnParam != null) {\n            if (cArg != null) {\n                if (com.google.javascript.jscomp.NodeUtil.mayEffectMutableState(cArg, compiler) && (com.google.javascript.jscomp.NodeUtil.getNameReferenceCount(block, fnParam.getString()) > 1)) {\n                    return com.google.javascript.jscomp.FunctionInjector.CanInlineResult.NO;\n                }\n            }\n            fnParam = fnParam.getNext();\n        }\n        if (cArg != null) {\n            if (com.google.javascript.jscomp.NodeUtil.mayHaveSideEffects(cArg, compiler)) {\n                return com.google.javascript.jscomp.FunctionInjector.CanInlineResult.NO;\n            }\n            cArg = cArg.getNext();\n        }\n    } \n    return com.google.javascript.jscomp.FunctionInjector.CanInlineResult.YES;\n}",
            "src_parent_type": "Block",
            "src_type": "While"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Return",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "If",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "if (cArg != null) {\n    if (com.google.javascript.jscomp.NodeUtil.mayEffectMutableState(cArg, compiler) && (com.google.javascript.jscomp.NodeUtil.getNameReferenceCount(block, fnParam.getString()) > 1)) {\n        return com.google.javascript.jscomp.FunctionInjector.CanInlineResult.NO;\n    }\n}",
            "src_parent": "{\n    if (cArg != null) {\n        if (com.google.javascript.jscomp.NodeUtil.mayEffectMutableState(cArg, compiler) && (com.google.javascript.jscomp.NodeUtil.getNameReferenceCount(block, fnParam.getString()) > 1)) {\n            return com.google.javascript.jscomp.FunctionInjector.CanInlineResult.NO;\n        }\n    }\n    fnParam = fnParam.getNext();\n}",
            "src_parent_type": "Block",
            "src_type": "If"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Return",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "If",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "fnParam = fnParam.getNext()",
            "src_parent": "{\n    if (cArg != null) {\n        if (com.google.javascript.jscomp.NodeUtil.mayEffectMutableState(cArg, compiler) && (com.google.javascript.jscomp.NodeUtil.getNameReferenceCount(block, fnParam.getString()) > 1)) {\n            return com.google.javascript.jscomp.FunctionInjector.CanInlineResult.NO;\n        }\n    }\n    fnParam = fnParam.getNext();\n}",
            "src_parent_type": "Block",
            "src_type": "Assignment"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Return",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "If",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "{\n    if (cArg != null) {\n        if (com.google.javascript.jscomp.NodeUtil.mayEffectMutableState(cArg, compiler) && (com.google.javascript.jscomp.NodeUtil.getNameReferenceCount(block, fnParam.getString()) > 1)) {\n            return com.google.javascript.jscomp.FunctionInjector.CanInlineResult.NO;\n        }\n    }\n    fnParam = fnParam.getNext();\n}",
            "dst_parent": "if (fnParam != null) {\n    if (cArg != null) {\n        if (com.google.javascript.jscomp.NodeUtil.mayEffectMutableState(cArg, compiler) && (com.google.javascript.jscomp.NodeUtil.getNameReferenceCount(block, fnParam.getString()) > 1)) {\n            return com.google.javascript.jscomp.FunctionInjector.CanInlineResult.NO;\n        }\n    }\n    fnParam = fnParam.getNext();\n}",
            "dst_parent_type": "If",
            "dst_type": "Block",
            "operator": "MOV",
            "src": "{\n    java.util.Set<java.lang.String> allNamesToAlias = com.google.common.collect.Sets.newHashSet(namesToAlias);\n    com.google.javascript.jscomp.FunctionArgumentInjector.maybeAddTempsForCallArguments(fnNode, args, allNamesToAlias, compiler.getCodingConvention());\n    if (!allNamesToAlias.isEmpty()) {\n        return com.google.javascript.jscomp.FunctionInjector.CanInlineResult.NO;\n    }\n}",
            "src_parent": "if (hasArgs) {\n    java.util.Set<java.lang.String> allNamesToAlias = com.google.common.collect.Sets.newHashSet(namesToAlias);\n    com.google.javascript.jscomp.FunctionArgumentInjector.maybeAddTempsForCallArguments(fnNode, args, allNamesToAlias, compiler.getCodingConvention());\n    if (!allNamesToAlias.isEmpty()) {\n        return com.google.javascript.jscomp.FunctionInjector.CanInlineResult.NO;\n    }\n}",
            "src_parent_type": "If",
            "src_type": "Block"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "Return",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "If",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "LocalVariable",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "com.google.javascript.jscomp.NodeUtil",
            "dst_parent": "com.google.javascript.jscomp.NodeUtil.getFunctionParameters(fnNode)",
            "dst_parent_type": "Invocation",
            "dst_type": "TypeAccess",
            "operator": "MOV",
            "src": "com.google.javascript.jscomp.FunctionArgumentInjector",
            "src_parent": "com.google.javascript.jscomp.FunctionArgumentInjector.getFunctionCallParameterMap(fnNode, callNode, this.throwawayNameSupplier)",
            "src_parent_type": "Invocation",
            "src_type": "TypeAccess"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "Return",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "If",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "LocalVariable",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "fnNode",
            "dst_parent": "com.google.javascript.jscomp.NodeUtil.getFunctionParameters(fnNode)",
            "dst_parent_type": "Invocation",
            "dst_type": "VariableRead",
            "operator": "MOV",
            "src": "fnNode",
            "src_parent": "com.google.javascript.jscomp.FunctionArgumentInjector.getFunctionCallParameterMap(fnNode, callNode, this.throwawayNameSupplier)",
            "src_parent_type": "Invocation",
            "src_type": "VariableRead"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Invocation",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "com.google.javascript.jscomp.NodeUtil.mayHaveSideEffects(cArg, compiler)",
            "dst_parent": "if (com.google.javascript.jscomp.NodeUtil.mayHaveSideEffects(cArg, compiler)) {\n    return com.google.javascript.jscomp.FunctionInjector.CanInlineResult.NO;\n}",
            "dst_parent_type": "If",
            "dst_type": "Invocation",
            "operator": "MOV",
            "src": "compiler.getCodingConvention()",
            "src_parent": "com.google.javascript.jscomp.FunctionArgumentInjector.maybeAddTempsForCallArguments(fnNode, args, allNamesToAlias, compiler.getCodingConvention())",
            "src_parent_type": "Invocation",
            "src_type": "Invocation"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "{\n    return com.google.javascript.jscomp.FunctionInjector.CanInlineResult.NO;\n}",
            "dst_parent": "if (com.google.javascript.jscomp.NodeUtil.mayHaveSideEffects(cArg, compiler)) {\n    return com.google.javascript.jscomp.FunctionInjector.CanInlineResult.NO;\n}",
            "dst_parent_type": "If",
            "dst_type": "Block",
            "operator": "MOV",
            "src": "{\n    return com.google.javascript.jscomp.FunctionInjector.CanInlineResult.NO;\n}",
            "src_parent": "if (!allNamesToAlias.isEmpty()) {\n    return com.google.javascript.jscomp.FunctionInjector.CanInlineResult.NO;\n}",
            "src_parent_type": "If",
            "src_type": "Block"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "fnParam",
            "dst_parent": "fnParam.getNext()",
            "dst_parent_type": "Invocation",
            "dst_type": "VariableRead",
            "operator": "MOV",
            "src": "allNamesToAlias",
            "src_parent": "allNamesToAlias.isEmpty()",
            "src_parent_type": "Invocation",
            "src_type": "VariableRead"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "LocalVariable",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "com.google.javascript.jscomp.NodeUtil",
            "dst_parent": "com.google.javascript.jscomp.NodeUtil.mayEffectMutableState(cArg, compiler)",
            "dst_parent_type": "Invocation",
            "dst_type": "TypeAccess",
            "operator": "MOV",
            "src": "com.google.common.collect.Sets",
            "src_parent": "com.google.common.collect.Sets.newHashSet(namesToAlias)",
            "src_parent_type": "Invocation",
            "src_type": "TypeAccess"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "LocalVariable",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "cArg",
            "dst_parent": "com.google.javascript.jscomp.NodeUtil.mayEffectMutableState(cArg, compiler)",
            "dst_parent_type": "Invocation",
            "dst_type": "VariableRead",
            "operator": "MOV",
            "src": "namesToAlias",
            "src_parent": "com.google.common.collect.Sets.newHashSet(namesToAlias)",
            "src_parent_type": "Invocation",
            "src_type": "VariableRead"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Invocation",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "com.google.javascript.jscomp.NodeUtil",
            "dst_parent": "com.google.javascript.jscomp.NodeUtil.getNameReferenceCount(block, fnParam.getString())",
            "dst_parent_type": "Invocation",
            "dst_type": "TypeAccess",
            "operator": "MOV",
            "src": "com.google.javascript.jscomp.FunctionArgumentInjector",
            "src_parent": "com.google.javascript.jscomp.FunctionArgumentInjector.maybeAddTempsForCallArguments(fnNode, args, allNamesToAlias, compiler.getCodingConvention())",
            "src_parent_type": "Invocation",
            "src_type": "TypeAccess"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Invocation",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "block",
            "dst_parent": "com.google.javascript.jscomp.NodeUtil.getNameReferenceCount(block, fnParam.getString())",
            "dst_parent_type": "Invocation",
            "dst_type": "VariableRead",
            "operator": "MOV",
            "src": "fnNode",
            "src_parent": "com.google.javascript.jscomp.FunctionArgumentInjector.maybeAddTempsForCallArguments(fnNode, args, allNamesToAlias, compiler.getCodingConvention())",
            "src_parent_type": "Invocation",
            "src_type": "VariableRead"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Invocation",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "fnParam",
            "dst_parent": "fnParam.getString()",
            "dst_parent_type": "Invocation",
            "dst_type": "VariableRead",
            "operator": "MOV",
            "src": "args",
            "src_parent": "com.google.javascript.jscomp.FunctionArgumentInjector.maybeAddTempsForCallArguments(fnNode, args, allNamesToAlias, compiler.getCodingConvention())",
            "src_parent_type": "Invocation",
            "src_type": "VariableRead"
          }
        }
      ],
      "file_name": "FunctionInjector"
    }
  ],
  "id": "Closure_175"
}