{
  "files": [
    {
      "features": [
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Return",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "com.fasterxml.jackson.databind.ser.std.StdKeySerializers.EnumKeySerializer.construct(rawKeyType, com.fasterxml.jackson.databind.util.EnumValues.constructFromName(config, ((java.lang.Class<java.lang.Enum<?>>) (rawKeyType))))",
            "src_parent": "return com.fasterxml.jackson.databind.ser.std.StdKeySerializers.EnumKeySerializer.construct(rawKeyType, com.fasterxml.jackson.databind.util.EnumValues.constructFromName(config, ((java.lang.Class<java.lang.Enum<?>>) (rawKeyType))))",
            "src_parent_type": "Return",
            "src_type": "Invocation"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "true",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Class",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "public static class EnumKeySerializer extends com.fasterxml.jackson.databind.ser.std.StdSerializer<java.lang.Object> {\n    protected final com.fasterxml.jackson.databind.util.EnumValues _values;\n\n    protected EnumKeySerializer(java.lang.Class<?> enumType, com.fasterxml.jackson.databind.util.EnumValues values) {\n        super(enumType, false);\n        _values = values;\n    }\n\n    public static com.fasterxml.jackson.databind.ser.std.StdKeySerializers.EnumKeySerializer construct(java.lang.Class<?> enumType, com.fasterxml.jackson.databind.util.EnumValues enumValues) {\n        return new com.fasterxml.jackson.databind.ser.std.StdKeySerializers.EnumKeySerializer(enumType, enumValues);\n    }\n\n    @java.lang.Override\n    public void serialize(java.lang.Object value, com.fasterxml.jackson.core.JsonGenerator g, com.fasterxml.jackson.databind.SerializerProvider serializers) throws java.io.IOException {\n        if (serializers.isEnabled(com.fasterxml.jackson.databind.SerializationFeature.WRITE_ENUMS_USING_TO_STRING)) {\n            g.writeFieldName(value.toString());\n            return;\n        }\n        java.lang.Enum<?> en = ((java.lang.Enum<?>) (value));\n        g.writeFieldName(_values.serializedValueFor(en));\n    }\n}",
            "src_parent": "@java.lang.SuppressWarnings(\"serial\")\npublic class StdKeySerializers {\n    protected static final com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> DEFAULT_KEY_SERIALIZER = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer();\n\n    protected static final com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> DEFAULT_STRING_SERIALIZER = new com.fasterxml.jackson.databind.ser.std.StdKeySerializers.StringKeySerializer();\n\n    private StdKeySerializers() {\n    }\n\n    public static com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> getStdKeySerializer(com.fasterxml.jackson.databind.SerializationConfig config, java.lang.Class<?> rawKeyType, boolean useDefault) {\n        if ((rawKeyType == null) || (rawKeyType == java.lang.Object.class)) {\n            return new com.fasterxml.jackson.databind.ser.std.StdKeySerializers.Dynamic();\n        }\n        if (rawKeyType == java.lang.String.class) {\n            return com.fasterxml.jackson.databind.ser.std.StdKeySerializers.DEFAULT_STRING_SERIALIZER;\n        }\n        if (rawKeyType.isPrimitive() || java.lang.Number.class.isAssignableFrom(rawKeyType)) {\n            return com.fasterxml.jackson.databind.ser.std.StdKeySerializers.DEFAULT_KEY_SERIALIZER;\n        }\n        if (rawKeyType == java.lang.Class.class) {\n            return new com.fasterxml.jackson.databind.ser.std.StdKeySerializers.Default(com.fasterxml.jackson.databind.ser.std.StdKeySerializers.Default.TYPE_CLASS, rawKeyType);\n        }\n        if (java.util.Date.class.isAssignableFrom(rawKeyType)) {\n            return new com.fasterxml.jackson.databind.ser.std.StdKeySerializers.Default(com.fasterxml.jackson.databind.ser.std.StdKeySerializers.Default.TYPE_DATE, rawKeyType);\n        }\n        if (java.util.Calendar.class.isAssignableFrom(rawKeyType)) {\n            return new com.fasterxml.jackson.databind.ser.std.StdKeySerializers.Default(com.fasterxml.jackson.databind.ser.std.StdKeySerializers.Default.TYPE_CALENDAR, rawKeyType);\n        }\n        if (rawKeyType == java.util.UUID.class) {\n            return new com.fasterxml.jackson.databind.ser.std.StdKeySerializers.Default(com.fasterxml.jackson.databind.ser.std.StdKeySerializers.Default.TYPE_TO_STRING, rawKeyType);\n        }\n        return useDefault ? com.fasterxml.jackson.databind.ser.std.StdKeySerializers.DEFAULT_KEY_SERIALIZER : null;\n    }\n\n    @java.lang.SuppressWarnings(\"unchecked\")\n    public static com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> getFallbackKeySerializer(com.fasterxml.jackson.databind.SerializationConfig config, java.lang.Class<?> rawKeyType) {\n        if (rawKeyType != null) {\n            if (rawKeyType == java.lang.Enum.class) {\n                return new com.fasterxml.jackson.databind.ser.std.StdKeySerializers.Dynamic();\n            }\n            if (rawKeyType.isEnum()) {\n                return com.fasterxml.jackson.databind.ser.std.StdKeySerializers.EnumKeySerializer.construct(rawKeyType, com.fasterxml.jackson.databind.util.EnumValues.constructFromName(config, ((java.lang.Class<java.lang.Enum<?>>) (rawKeyType))));\n            }\n        }\n        return com.fasterxml.jackson.databind.ser.std.StdKeySerializers.DEFAULT_KEY_SERIALIZER;\n    }\n\n    @java.lang.Deprecated\n    public static com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> getDefault() {\n        return com.fasterxml.jackson.databind.ser.std.StdKeySerializers.DEFAULT_KEY_SERIALIZER;\n    }\n\n    public static class Default extends com.fasterxml.jackson.databind.ser.std.StdSerializer<java.lang.Object> {\n        static final int TYPE_DATE = 1;\n\n        static final int TYPE_CALENDAR = 2;\n\n        static final int TYPE_CLASS = 3;\n\n        static final int TYPE_ENUM = 4;\n\n        static final int TYPE_TO_STRING = 5;\n\n        protected final int _typeId;\n\n        public Default(int typeId, java.lang.Class<?> type) {\n            super(type, false);\n            _typeId = typeId;\n        }\n\n        @java.lang.Override\n        public void serialize(java.lang.Object value, com.fasterxml.jackson.core.JsonGenerator g, com.fasterxml.jackson.databind.SerializerProvider provider) throws java.io.IOException {\n            switch (_typeId) {\n                case com.fasterxml.jackson.databind.ser.std.StdKeySerializers.Default.TYPE_DATE :\n                    provider.defaultSerializeDateKey(((java.util.Date) (value)), g);\n                    break;\n                case com.fasterxml.jackson.databind.ser.std.StdKeySerializers.Default.TYPE_CALENDAR :\n                    provider.defaultSerializeDateKey(((java.util.Calendar) (value)).getTimeInMillis(), g);\n                    break;\n                case com.fasterxml.jackson.databind.ser.std.StdKeySerializers.Default.TYPE_CLASS :\n                    g.writeFieldName(((java.lang.Class<?>) (value)).getName());\n                    break;\n                case com.fasterxml.jackson.databind.ser.std.StdKeySerializers.Default.TYPE_ENUM :\n                    {\n                        java.lang.String str = (provider.isEnabled(com.fasterxml.jackson.databind.SerializationFeature.WRITE_ENUMS_USING_TO_STRING)) ? value.toString() : ((java.lang.Enum<?>) (value)).name();\n                        g.writeFieldName(str);\n                    }\n                    break;\n                case com.fasterxml.jackson.databind.ser.std.StdKeySerializers.Default.TYPE_TO_STRING :\n                default :\n                    g.writeFieldName(value.toString());\n            }\n        }\n    }\n\n    public static class Dynamic extends com.fasterxml.jackson.databind.ser.std.StdSerializer<java.lang.Object> {\n        protected transient com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap _dynamicSerializers;\n\n        public Dynamic() {\n            super(java.lang.String.class, false);\n            _dynamicSerializers = com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap.emptyForProperties();\n        }\n\n        java.lang.Object readResolve() {\n            _dynamicSerializers = com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap.emptyForProperties();\n            return this;\n        }\n\n        @java.lang.Override\n        public void serialize(java.lang.Object value, com.fasterxml.jackson.core.JsonGenerator g, com.fasterxml.jackson.databind.SerializerProvider provider) throws java.io.IOException {\n            java.lang.Class<?> cls = value.getClass();\n            com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap m = _dynamicSerializers;\n            com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> ser = m.serializerFor(cls);\n            if (ser == null) {\n                ser = _findAndAddDynamic(m, cls, provider);\n            }\n            ser.serialize(value, g, provider);\n        }\n\n        protected com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> _findAndAddDynamic(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap map, java.lang.Class<?> type, com.fasterxml.jackson.databind.SerializerProvider provider) throws com.fasterxml.jackson.databind.JsonMappingException {\n            com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap.SerializerAndMapResult result = map.findAndAddKeySerializer(type, provider, null);\n            if (map != result.map) {\n                _dynamicSerializers = result.map;\n            }\n            return result.serializer;\n        }\n    }\n\n    public static class StringKeySerializer extends com.fasterxml.jackson.databind.ser.std.StdSerializer<java.lang.Object> {\n        public StringKeySerializer() {\n            super(java.lang.String.class, false);\n        }\n\n        @java.lang.Override\n        public void serialize(java.lang.Object value, com.fasterxml.jackson.core.JsonGenerator g, com.fasterxml.jackson.databind.SerializerProvider provider) throws java.io.IOException {\n            g.writeFieldName(((java.lang.String) (value)));\n        }\n    }\n\n    public static class EnumKeySerializer extends com.fasterxml.jackson.databind.ser.std.StdSerializer<java.lang.Object> {\n        protected final com.fasterxml.jackson.databind.util.EnumValues _values;\n\n        protected EnumKeySerializer(java.lang.Class<?> enumType, com.fasterxml.jackson.databind.util.EnumValues values) {\n            super(enumType, false);\n            _values = values;\n        }\n\n        public static com.fasterxml.jackson.databind.ser.std.StdKeySerializers.EnumKeySerializer construct(java.lang.Class<?> enumType, com.fasterxml.jackson.databind.util.EnumValues enumValues) {\n            return new com.fasterxml.jackson.databind.ser.std.StdKeySerializers.EnumKeySerializer(enumType, enumValues);\n        }\n\n        @java.lang.Override\n        public void serialize(java.lang.Object value, com.fasterxml.jackson.core.JsonGenerator g, com.fasterxml.jackson.databind.SerializerProvider serializers) throws java.io.IOException {\n            if (serializers.isEnabled(com.fasterxml.jackson.databind.SerializationFeature.WRITE_ENUMS_USING_TO_STRING)) {\n                g.writeFieldName(value.toString());\n                return;\n            }\n            java.lang.Enum<?> en = ((java.lang.Enum<?>) (value));\n            g.writeFieldName(_values.serializedValueFor(en));\n        }\n    }\n}",
            "src_parent_type": "Class",
            "src_type": "Class"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "new com.fasterxml.jackson.databind.ser.std.StdKeySerializers.Default(com.fasterxml.jackson.databind.ser.std.StdKeySerializers.Default.TYPE_ENUM, rawKeyType)",
            "src_parent": "return new com.fasterxml.jackson.databind.ser.std.StdKeySerializers.Default(com.fasterxml.jackson.databind.ser.std.StdKeySerializers.Default.TYPE_ENUM, rawKeyType)",
            "src_parent_type": "Return",
            "src_type": "ConstructorCall"
          }
        }
      ],
      "file_name": "StdKeySerializers"
    }
  ],
  "id": "JacksonDatabind_55"
}