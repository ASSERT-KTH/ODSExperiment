{
  "files": [
    {
      "features": [
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "Assignment",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "Assignment",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "For",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "Assignment",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "if (patternMatcher.regionStart() != patternMatcher.regionEnd()) {\n    throw new java.lang.IllegalArgumentException(((\"Failed to parse \\\"\" + pattern) + \"\\\" ; gave up at index \") + patternMatcher.regionStart());\n}",
            "src_parent": "{\n    thisYear = java.util.Calendar.getInstance(timeZone, locale).get(java.util.Calendar.YEAR);\n    nameValues = new java.util.concurrent.ConcurrentHashMap<java.lang.Integer, org.apache.commons.lang3.time.FastDateParser.KeyValue[]>();\n    java.lang.StringBuilder regex = new java.lang.StringBuilder();\n    java.util.List<org.apache.commons.lang3.time.FastDateParser.Strategy> collector = new java.util.ArrayList<org.apache.commons.lang3.time.FastDateParser.Strategy>();\n    java.util.regex.Matcher patternMatcher = org.apache.commons.lang3.time.FastDateParser.formatPattern.matcher(pattern);\n    if (!patternMatcher.lookingAt()) {\n        throw new java.lang.IllegalArgumentException(\"Invalid pattern\");\n    }\n    currentFormatField = patternMatcher.group();\n    org.apache.commons.lang3.time.FastDateParser.Strategy currentStrategy = getStrategy(currentFormatField);\n    for (; ;) {\n        patternMatcher.region(patternMatcher.end(), patternMatcher.regionEnd());\n        if (!patternMatcher.lookingAt()) {\n            nextStrategy = null;\n            break;\n        }\n        java.lang.String nextFormatField = patternMatcher.group();\n        nextStrategy = getStrategy(nextFormatField);\n        if (currentStrategy.addRegex(this, regex)) {\n            collector.add(currentStrategy);\n        }\n        currentFormatField = nextFormatField;\n        currentStrategy = nextStrategy;\n    }\n    if (patternMatcher.regionStart() != patternMatcher.regionEnd()) {\n        throw new java.lang.IllegalArgumentException(((\"Failed to parse \\\"\" + pattern) + \"\\\" ; gave up at index \") + patternMatcher.regionStart());\n    }\n    if (currentStrategy.addRegex(this, regex)) {\n        collector.add(currentStrategy);\n    }\n    currentFormatField = null;\n    strategies = collector.toArray(new org.apache.commons.lang3.time.FastDateParser.Strategy[collector.size()]);\n    parsePattern = java.util.regex.Pattern.compile(regex.toString());\n}",
            "src_parent_type": "Block",
            "src_type": "If"
          }
        }
      ],
      "file_name": "FastDateParser"
    }
  ],
  "id": "Lang_9"
}