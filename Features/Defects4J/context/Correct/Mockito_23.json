{
  "files": [
    {
      "features": [
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Return",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Invocation",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "new org.mockito.stubbing.Answer<java.lang.Object>() {\n    public java.lang.Object answer(org.mockito.invocation.InvocationOnMock invocation) throws java.lang.Throwable {\n        return mock;\n    }\n}",
            "dst_parent": "container.addAnswer(new org.mockito.stubbing.Answer<java.lang.Object>() {\n    public java.lang.Object answer(org.mockito.invocation.InvocationOnMock invocation) throws java.lang.Throwable {\n        return mock;\n    }\n}, false)",
            "dst_parent_type": "Invocation",
            "dst_type": "NewClass",
            "operator": "UPD",
            "src": "new org.mockito.internal.stubbing.defaultanswers.ReturnsDeepStubs.SerializableAnswer() {\n    public java.lang.Object answer(org.mockito.invocation.InvocationOnMock invocation) throws java.lang.Throwable {\n        return mock;\n    }\n}",
            "src_parent": "container.addAnswer(new org.mockito.internal.stubbing.defaultanswers.ReturnsDeepStubs.SerializableAnswer() {\n    public java.lang.Object answer(org.mockito.invocation.InvocationOnMock invocation) throws java.lang.Throwable {\n        return mock;\n    }\n}, false)",
            "src_parent_type": "Invocation",
            "src_type": "NewClass"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Return",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Invocation",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "org.mockito.stubbing.Answer<java.lang.Object>",
            "dst_parent": "{\n    public java.lang.Object answer(org.mockito.invocation.InvocationOnMock invocation) throws java.lang.Throwable {\n        return mock;\n    }\n}",
            "dst_parent_type": "Class",
            "dst_type": "Wra",
            "operator": "UPD",
            "src": "org.mockito.internal.stubbing.defaultanswers.ReturnsDeepStubs.SerializableAnswer",
            "src_parent": "{\n    public java.lang.Object answer(org.mockito.invocation.InvocationOnMock invocation) throws java.lang.Throwable {\n        return mock;\n    }\n}",
            "src_parent_type": "Class",
            "src_type": "Wra"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Field",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Wrapper",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "transient",
            "src_parent": "private transient org.mockito.internal.MockitoCore mockitoCore;",
            "src_parent_type": "Field",
            "src_type": "Wra"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Field",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Wrapper",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "transient",
            "src_parent": "private transient org.mockito.internal.stubbing.defaultanswers.ReturnsEmptyValues delegate;",
            "src_parent_type": "Field",
            "src_type": "Wra"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "Return",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Invocation",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "instantiateMockitoCoreIfNeeded()",
            "src_parent": "{\n    org.mockito.internal.util.reflection.GenericMetadataSupport returnTypeGenericMetadata = actualParameterizedType(invocation.getMock()).resolveGenericReturnType(invocation.getMethod());\n    java.lang.Class<?> rawType = returnTypeGenericMetadata.rawType();\n    instantiateMockitoCoreIfNeeded();\n    instantiateDelegateIfNeeded();\n    if (!mockitoCore.isTypeMockable(rawType)) {\n        return delegate.returnValueFor(rawType);\n    }\n    return getMock(invocation, returnTypeGenericMetadata);\n}",
            "src_parent_type": "Block",
            "src_type": "Invocation"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "Return",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "LocalVariable",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Invocation",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "instantiateDelegateIfNeeded()",
            "src_parent": "{\n    org.mockito.internal.util.reflection.GenericMetadataSupport returnTypeGenericMetadata = actualParameterizedType(invocation.getMock()).resolveGenericReturnType(invocation.getMethod());\n    java.lang.Class<?> rawType = returnTypeGenericMetadata.rawType();\n    instantiateMockitoCoreIfNeeded();\n    instantiateDelegateIfNeeded();\n    if (!mockitoCore.isTypeMockable(rawType)) {\n        return delegate.returnValueFor(rawType);\n    }\n    return getMock(invocation, returnTypeGenericMetadata);\n}",
            "src_parent_type": "Block",
            "src_type": "Invocation"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Method",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "private synchronized void instantiateMockitoCoreIfNeeded() {\n    if (mockitoCore == null) {\n        mockitoCore = new org.mockito.internal.MockitoCore();\n    }\n}",
            "src_parent": "public class ReturnsDeepStubs implements java.io.Serializable , org.mockito.stubbing.Answer<java.lang.Object> {\n    private static final long serialVersionUID = -7105341425736035847L;\n\n    private transient org.mockito.internal.MockitoCore mockitoCore;\n\n    private transient org.mockito.internal.stubbing.defaultanswers.ReturnsEmptyValues delegate;\n\n    public java.lang.Object answer(org.mockito.invocation.InvocationOnMock invocation) throws java.lang.Throwable {\n        org.mockito.internal.util.reflection.GenericMetadataSupport returnTypeGenericMetadata = actualParameterizedType(invocation.getMock()).resolveGenericReturnType(invocation.getMethod());\n        java.lang.Class<?> rawType = returnTypeGenericMetadata.rawType();\n        instantiateMockitoCoreIfNeeded();\n        instantiateDelegateIfNeeded();\n        if (!mockitoCore.isTypeMockable(rawType)) {\n            return delegate.returnValueFor(rawType);\n        }\n        return getMock(invocation, returnTypeGenericMetadata);\n    }\n\n    private synchronized void instantiateMockitoCoreIfNeeded() {\n        if (mockitoCore == null) {\n            mockitoCore = new org.mockito.internal.MockitoCore();\n        }\n    }\n\n    private synchronized void instantiateDelegateIfNeeded() {\n        if (delegate == null) {\n            delegate = new org.mockito.internal.stubbing.defaultanswers.ReturnsEmptyValues();\n        }\n    }\n\n    private java.lang.Object getMock(org.mockito.invocation.InvocationOnMock invocation, org.mockito.internal.util.reflection.GenericMetadataSupport returnTypeGenericMetadata) throws java.lang.Throwable {\n        org.mockito.internal.InternalMockHandler<java.lang.Object> handler = new org.mockito.internal.util.MockUtil().getMockHandler(invocation.getMock());\n        org.mockito.internal.stubbing.InvocationContainerImpl container = ((org.mockito.internal.stubbing.InvocationContainerImpl) (handler.getInvocationContainer()));\n        for (org.mockito.internal.stubbing.StubbedInvocationMatcher stubbedInvocationMatcher : container.getStubbedInvocations()) {\n            if (container.getInvocationForStubbing().matches(stubbedInvocationMatcher.getInvocation())) {\n                return stubbedInvocationMatcher.answer(invocation);\n            }\n        }\n        return recordDeepStubMock(createNewDeepStubMock(returnTypeGenericMetadata), container);\n    }\n\n    private java.lang.Object createNewDeepStubMock(org.mockito.internal.util.reflection.GenericMetadataSupport returnTypeGenericMetadata) {\n        return mockitoCore.mock(returnTypeGenericMetadata.rawType(), withSettingsUsing(returnTypeGenericMetadata));\n    }\n\n    private org.mockito.MockSettings withSettingsUsing(org.mockito.internal.util.reflection.GenericMetadataSupport returnTypeGenericMetadata) {\n        org.mockito.MockSettings mockSettings = (returnTypeGenericMetadata.rawExtraInterfaces().length > 0) ? withSettings().extraInterfaces(returnTypeGenericMetadata.rawExtraInterfaces()) : withSettings();\n        return mockSettings.serializable().defaultAnswer(returnsDeepStubsAnswerUsing(returnTypeGenericMetadata));\n    }\n\n    private org.mockito.internal.stubbing.defaultanswers.ReturnsDeepStubs returnsDeepStubsAnswerUsing(final org.mockito.internal.util.reflection.GenericMetadataSupport returnTypeGenericMetadata) {\n        return new org.mockito.internal.stubbing.defaultanswers.ReturnsDeepStubs() {\n            @java.lang.Override\n            protected org.mockito.internal.util.reflection.GenericMetadataSupport actualParameterizedType(java.lang.Object mock) {\n                return returnTypeGenericMetadata;\n            }\n        };\n    }\n\n    private java.lang.Object recordDeepStubMock(final java.lang.Object mock, org.mockito.internal.stubbing.InvocationContainerImpl container) throws java.lang.Throwable {\n        container.addAnswer(new org.mockito.internal.stubbing.defaultanswers.ReturnsDeepStubs.SerializableAnswer() {\n            public java.lang.Object answer(org.mockito.invocation.InvocationOnMock invocation) throws java.lang.Throwable {\n                return mock;\n            }\n        }, false);\n        return mock;\n    }\n\n    abstract class SerializableAnswer implements java.io.Serializable , org.mockito.stubbing.Answer<java.lang.Object> {}\n\n    protected org.mockito.internal.util.reflection.GenericMetadataSupport actualParameterizedType(java.lang.Object mock) {\n        org.mockito.internal.creation.settings.CreationSettings mockSettings = ((org.mockito.internal.creation.settings.CreationSettings) (new org.mockito.internal.util.MockUtil().getMockHandler(mock).getMockSettings()));\n        return org.mockito.internal.util.reflection.GenericMetadataSupport.inferFrom(mockSettings.getTypeToMock());\n    }\n}",
            "src_parent_type": "Class",
            "src_type": "Method"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Method",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "private synchronized void instantiateDelegateIfNeeded() {\n    if (delegate == null) {\n        delegate = new org.mockito.internal.stubbing.defaultanswers.ReturnsEmptyValues();\n    }\n}",
            "src_parent": "public class ReturnsDeepStubs implements java.io.Serializable , org.mockito.stubbing.Answer<java.lang.Object> {\n    private static final long serialVersionUID = -7105341425736035847L;\n\n    private transient org.mockito.internal.MockitoCore mockitoCore;\n\n    private transient org.mockito.internal.stubbing.defaultanswers.ReturnsEmptyValues delegate;\n\n    public java.lang.Object answer(org.mockito.invocation.InvocationOnMock invocation) throws java.lang.Throwable {\n        org.mockito.internal.util.reflection.GenericMetadataSupport returnTypeGenericMetadata = actualParameterizedType(invocation.getMock()).resolveGenericReturnType(invocation.getMethod());\n        java.lang.Class<?> rawType = returnTypeGenericMetadata.rawType();\n        instantiateMockitoCoreIfNeeded();\n        instantiateDelegateIfNeeded();\n        if (!mockitoCore.isTypeMockable(rawType)) {\n            return delegate.returnValueFor(rawType);\n        }\n        return getMock(invocation, returnTypeGenericMetadata);\n    }\n\n    private synchronized void instantiateMockitoCoreIfNeeded() {\n        if (mockitoCore == null) {\n            mockitoCore = new org.mockito.internal.MockitoCore();\n        }\n    }\n\n    private synchronized void instantiateDelegateIfNeeded() {\n        if (delegate == null) {\n            delegate = new org.mockito.internal.stubbing.defaultanswers.ReturnsEmptyValues();\n        }\n    }\n\n    private java.lang.Object getMock(org.mockito.invocation.InvocationOnMock invocation, org.mockito.internal.util.reflection.GenericMetadataSupport returnTypeGenericMetadata) throws java.lang.Throwable {\n        org.mockito.internal.InternalMockHandler<java.lang.Object> handler = new org.mockito.internal.util.MockUtil().getMockHandler(invocation.getMock());\n        org.mockito.internal.stubbing.InvocationContainerImpl container = ((org.mockito.internal.stubbing.InvocationContainerImpl) (handler.getInvocationContainer()));\n        for (org.mockito.internal.stubbing.StubbedInvocationMatcher stubbedInvocationMatcher : container.getStubbedInvocations()) {\n            if (container.getInvocationForStubbing().matches(stubbedInvocationMatcher.getInvocation())) {\n                return stubbedInvocationMatcher.answer(invocation);\n            }\n        }\n        return recordDeepStubMock(createNewDeepStubMock(returnTypeGenericMetadata), container);\n    }\n\n    private java.lang.Object createNewDeepStubMock(org.mockito.internal.util.reflection.GenericMetadataSupport returnTypeGenericMetadata) {\n        return mockitoCore.mock(returnTypeGenericMetadata.rawType(), withSettingsUsing(returnTypeGenericMetadata));\n    }\n\n    private org.mockito.MockSettings withSettingsUsing(org.mockito.internal.util.reflection.GenericMetadataSupport returnTypeGenericMetadata) {\n        org.mockito.MockSettings mockSettings = (returnTypeGenericMetadata.rawExtraInterfaces().length > 0) ? withSettings().extraInterfaces(returnTypeGenericMetadata.rawExtraInterfaces()) : withSettings();\n        return mockSettings.serializable().defaultAnswer(returnsDeepStubsAnswerUsing(returnTypeGenericMetadata));\n    }\n\n    private org.mockito.internal.stubbing.defaultanswers.ReturnsDeepStubs returnsDeepStubsAnswerUsing(final org.mockito.internal.util.reflection.GenericMetadataSupport returnTypeGenericMetadata) {\n        return new org.mockito.internal.stubbing.defaultanswers.ReturnsDeepStubs() {\n            @java.lang.Override\n            protected org.mockito.internal.util.reflection.GenericMetadataSupport actualParameterizedType(java.lang.Object mock) {\n                return returnTypeGenericMetadata;\n            }\n        };\n    }\n\n    private java.lang.Object recordDeepStubMock(final java.lang.Object mock, org.mockito.internal.stubbing.InvocationContainerImpl container) throws java.lang.Throwable {\n        container.addAnswer(new org.mockito.internal.stubbing.defaultanswers.ReturnsDeepStubs.SerializableAnswer() {\n            public java.lang.Object answer(org.mockito.invocation.InvocationOnMock invocation) throws java.lang.Throwable {\n                return mock;\n            }\n        }, false);\n        return mock;\n    }\n\n    abstract class SerializableAnswer implements java.io.Serializable , org.mockito.stubbing.Answer<java.lang.Object> {}\n\n    protected org.mockito.internal.util.reflection.GenericMetadataSupport actualParameterizedType(java.lang.Object mock) {\n        org.mockito.internal.creation.settings.CreationSettings mockSettings = ((org.mockito.internal.creation.settings.CreationSettings) (new org.mockito.internal.util.MockUtil().getMockHandler(mock).getMockSettings()));\n        return org.mockito.internal.util.reflection.GenericMetadataSupport.inferFrom(mockSettings.getTypeToMock());\n    }\n}",
            "src_parent_type": "Class",
            "src_type": "Method"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Return",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "mockSettings.serializable()",
            "src_parent": "mockSettings.serializable().defaultAnswer(returnsDeepStubsAnswerUsing(returnTypeGenericMetadata))",
            "src_parent_type": "Invocation",
            "src_type": "Invocation"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Class",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "abstract class SerializableAnswer implements java.io.Serializable , org.mockito.stubbing.Answer<java.lang.Object> {}",
            "src_parent": "public class ReturnsDeepStubs implements java.io.Serializable , org.mockito.stubbing.Answer<java.lang.Object> {\n    private static final long serialVersionUID = -7105341425736035847L;\n\n    private transient org.mockito.internal.MockitoCore mockitoCore;\n\n    private transient org.mockito.internal.stubbing.defaultanswers.ReturnsEmptyValues delegate;\n\n    public java.lang.Object answer(org.mockito.invocation.InvocationOnMock invocation) throws java.lang.Throwable {\n        org.mockito.internal.util.reflection.GenericMetadataSupport returnTypeGenericMetadata = actualParameterizedType(invocation.getMock()).resolveGenericReturnType(invocation.getMethod());\n        java.lang.Class<?> rawType = returnTypeGenericMetadata.rawType();\n        instantiateMockitoCoreIfNeeded();\n        instantiateDelegateIfNeeded();\n        if (!mockitoCore.isTypeMockable(rawType)) {\n            return delegate.returnValueFor(rawType);\n        }\n        return getMock(invocation, returnTypeGenericMetadata);\n    }\n\n    private synchronized void instantiateMockitoCoreIfNeeded() {\n        if (mockitoCore == null) {\n            mockitoCore = new org.mockito.internal.MockitoCore();\n        }\n    }\n\n    private synchronized void instantiateDelegateIfNeeded() {\n        if (delegate == null) {\n            delegate = new org.mockito.internal.stubbing.defaultanswers.ReturnsEmptyValues();\n        }\n    }\n\n    private java.lang.Object getMock(org.mockito.invocation.InvocationOnMock invocation, org.mockito.internal.util.reflection.GenericMetadataSupport returnTypeGenericMetadata) throws java.lang.Throwable {\n        org.mockito.internal.InternalMockHandler<java.lang.Object> handler = new org.mockito.internal.util.MockUtil().getMockHandler(invocation.getMock());\n        org.mockito.internal.stubbing.InvocationContainerImpl container = ((org.mockito.internal.stubbing.InvocationContainerImpl) (handler.getInvocationContainer()));\n        for (org.mockito.internal.stubbing.StubbedInvocationMatcher stubbedInvocationMatcher : container.getStubbedInvocations()) {\n            if (container.getInvocationForStubbing().matches(stubbedInvocationMatcher.getInvocation())) {\n                return stubbedInvocationMatcher.answer(invocation);\n            }\n        }\n        return recordDeepStubMock(createNewDeepStubMock(returnTypeGenericMetadata), container);\n    }\n\n    private java.lang.Object createNewDeepStubMock(org.mockito.internal.util.reflection.GenericMetadataSupport returnTypeGenericMetadata) {\n        return mockitoCore.mock(returnTypeGenericMetadata.rawType(), withSettingsUsing(returnTypeGenericMetadata));\n    }\n\n    private org.mockito.MockSettings withSettingsUsing(org.mockito.internal.util.reflection.GenericMetadataSupport returnTypeGenericMetadata) {\n        org.mockito.MockSettings mockSettings = (returnTypeGenericMetadata.rawExtraInterfaces().length > 0) ? withSettings().extraInterfaces(returnTypeGenericMetadata.rawExtraInterfaces()) : withSettings();\n        return mockSettings.serializable().defaultAnswer(returnsDeepStubsAnswerUsing(returnTypeGenericMetadata));\n    }\n\n    private org.mockito.internal.stubbing.defaultanswers.ReturnsDeepStubs returnsDeepStubsAnswerUsing(final org.mockito.internal.util.reflection.GenericMetadataSupport returnTypeGenericMetadata) {\n        return new org.mockito.internal.stubbing.defaultanswers.ReturnsDeepStubs() {\n            @java.lang.Override\n            protected org.mockito.internal.util.reflection.GenericMetadataSupport actualParameterizedType(java.lang.Object mock) {\n                return returnTypeGenericMetadata;\n            }\n        };\n    }\n\n    private java.lang.Object recordDeepStubMock(final java.lang.Object mock, org.mockito.internal.stubbing.InvocationContainerImpl container) throws java.lang.Throwable {\n        container.addAnswer(new org.mockito.internal.stubbing.defaultanswers.ReturnsDeepStubs.SerializableAnswer() {\n            public java.lang.Object answer(org.mockito.invocation.InvocationOnMock invocation) throws java.lang.Throwable {\n                return mock;\n            }\n        }, false);\n        return mock;\n    }\n\n    abstract class SerializableAnswer implements java.io.Serializable , org.mockito.stubbing.Answer<java.lang.Object> {}\n\n    protected org.mockito.internal.util.reflection.GenericMetadataSupport actualParameterizedType(java.lang.Object mock) {\n        org.mockito.internal.creation.settings.CreationSettings mockSettings = ((org.mockito.internal.creation.settings.CreationSettings) (new org.mockito.internal.util.MockUtil().getMockHandler(mock).getMockSettings()));\n        return org.mockito.internal.util.reflection.GenericMetadataSupport.inferFrom(mockSettings.getTypeToMock());\n    }\n}",
            "src_parent_type": "Class",
            "src_type": "Class"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Field",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "new org.mockito.internal.MockitoCore()",
            "src_parent": "private org.mockito.internal.MockitoCore mockitoCore = new org.mockito.internal.MockitoCore();",
            "src_parent_type": "Field",
            "src_type": "ConstructorCall"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Field",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "new org.mockito.internal.stubbing.defaultanswers.ReturnsEmptyValues()",
            "src_parent": "private org.mockito.internal.stubbing.defaultanswers.ReturnsEmptyValues delegate = new org.mockito.internal.stubbing.defaultanswers.ReturnsEmptyValues();",
            "src_parent_type": "Field",
            "src_type": "ConstructorCall"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Return",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "mockSettings",
            "dst_parent": "mockSettings.defaultAnswer(returnsDeepStubsAnswerUsing(returnTypeGenericMetadata))",
            "dst_parent_type": "Invocation",
            "dst_type": "VariableRead",
            "operator": "MOV",
            "src": "mockSettings",
            "src_parent": "mockSettings.serializable()",
            "src_parent_type": "Invocation",
            "src_type": "VariableRead"
          }
        }
      ],
      "file_name": "ReturnsDeepStubs"
    }
  ],
  "id": "Mockito_23"
}