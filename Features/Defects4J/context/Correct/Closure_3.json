{
  "files": [
    {
      "features": [
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "ForEach",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "t.getScope()",
            "src_parent": "c.canInline(t.getScope())",
            "src_parent_type": "Invocation",
            "src_type": "Invocation"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Parameter",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "final com.google.javascript.jscomp.Scope scope",
            "src_parent": "private boolean canInline(final com.google.javascript.jscomp.Scope scope) {\n    if (getDefCfgNode().isFunction()) {\n        return false;\n    }\n    for (com.google.javascript.jscomp.Scope.Var dependency : defMetadata.depends) {\n        if (inlinedNewDependencies.contains(dependency)) {\n            return false;\n        }\n    }\n    getDefinition(getDefCfgNode(), null);\n    getNumUseInUseCfgNode(useCfgNode, null);\n    if (def == null) {\n        return false;\n    }\n    if (def.isAssign() && (!com.google.javascript.jscomp.NodeUtil.isExprAssign(def.getParent()))) {\n        return false;\n    }\n    if (com.google.javascript.jscomp.FlowSensitiveInlineVariables.checkRightOf(def, getDefCfgNode(), com.google.javascript.jscomp.FlowSensitiveInlineVariables.SIDE_EFFECT_PREDICATE)) {\n        return false;\n    }\n    if (com.google.javascript.jscomp.FlowSensitiveInlineVariables.checkLeftOf(use, useCfgNode, com.google.javascript.jscomp.FlowSensitiveInlineVariables.SIDE_EFFECT_PREDICATE)) {\n        return false;\n    }\n    if (com.google.javascript.jscomp.NodeUtil.mayHaveSideEffects(def.getLastChild(), compiler)) {\n        return false;\n    }\n    if (numUseWithinUseCfgNode != 1) {\n        return false;\n    }\n    if (com.google.javascript.jscomp.NodeUtil.isWithinLoop(use)) {\n        return false;\n    }\n    java.util.Collection<com.google.javascript.rhino.Node> uses = reachingUses.getUses(varName, getDefCfgNode());\n    if (uses.size() != 1) {\n        return false;\n    }\n    if (com.google.javascript.jscomp.NodeUtil.has(def.getLastChild(), new com.google.common.base.Predicate<com.google.javascript.rhino.Node>() {\n        @java.lang.Override\n        public boolean apply(com.google.javascript.rhino.Node input) {\n            switch (input.getType()) {\n                case com.google.javascript.rhino.Token.GETELEM :\n                case com.google.javascript.rhino.Token.GETPROP :\n                case com.google.javascript.rhino.Token.ARRAYLIT :\n                case com.google.javascript.rhino.Token.OBJECTLIT :\n                case com.google.javascript.rhino.Token.REGEXP :\n                case com.google.javascript.rhino.Token.NEW :\n                    return true;\n                case com.google.javascript.rhino.Token.NAME :\n                    com.google.javascript.jscomp.Scope.Var var = scope.getOwnSlot(input.getString());\n                    if ((var != null) && var.getParentNode().isCatch()) {\n                        return true;\n                    }\n            }\n            return false;\n        }\n    }, new com.google.common.base.Predicate<com.google.javascript.rhino.Node>() {\n        @java.lang.Override\n        public boolean apply(com.google.javascript.rhino.Node input) {\n            return !input.isFunction();\n        }\n    })) {\n        return false;\n    }\n    if (com.google.javascript.jscomp.NodeUtil.isStatementBlock(getDefCfgNode().getParent()) && (getDefCfgNode().getNext() != useCfgNode)) {\n        com.google.javascript.jscomp.CheckPathsBetweenNodes<com.google.javascript.rhino.Node, com.google.javascript.jscomp.ControlFlowGraph.Branch> pathCheck = new com.google.javascript.jscomp.CheckPathsBetweenNodes<com.google.javascript.rhino.Node, com.google.javascript.jscomp.ControlFlowGraph.Branch>(cfg, cfg.getDirectedGraphNode(getDefCfgNode()), cfg.getDirectedGraphNode(useCfgNode), com.google.javascript.jscomp.FlowSensitiveInlineVariables.SIDE_EFFECT_PREDICATE, com.google.common.base.Predicates.<com.google.javascript.jscomp.graph.DiGraph.DiGraphEdge<com.google.javascript.rhino.Node, com.google.javascript.jscomp.ControlFlowGraph.Branch>>alwaysTrue(), false);\n        if (pathCheck.somePathsSatisfyPredicate()) {\n            return false;\n        }\n    }\n    return true;\n}",
            "src_parent_type": "Method",
            "src_type": "Parameter"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Return",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Switch",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "case com.google.javascript.rhino.Token.NAME :\n    com.google.javascript.jscomp.Scope.Var var = scope.getOwnSlot(input.getString());\n    if ((var != null) && var.getParentNode().isCatch()) {\n        return true;\n    }",
            "src_parent": "switch (input.getType()) {\n    case com.google.javascript.rhino.Token.GETELEM :\n    case com.google.javascript.rhino.Token.GETPROP :\n    case com.google.javascript.rhino.Token.ARRAYLIT :\n    case com.google.javascript.rhino.Token.OBJECTLIT :\n    case com.google.javascript.rhino.Token.REGEXP :\n    case com.google.javascript.rhino.Token.NEW :\n        return true;\n    case com.google.javascript.rhino.Token.NAME :\n        com.google.javascript.jscomp.Scope.Var var = scope.getOwnSlot(input.getString());\n        if ((var != null) && var.getParentNode().isCatch()) {\n            return true;\n        }\n}",
            "src_parent_type": "Switch",
            "src_type": "Case"
          }
        }
      ],
      "file_name": "FlowSensitiveInlineVariables"
    }
  ],
  "id": "Closure_3"
}