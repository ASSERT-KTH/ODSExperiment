{
  "files": [
    {
      "features": [
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "if (((!_allowMultipleMatches) && (_currToken != null)) && (_exposedContext == null)) {\n    if (_currToken.isStructEnd() && _headContext.isStartHandled()) {\n        return _currToken = null;\n    } else if (((_currToken.isScalarValue() && (!_headContext.isStartHandled())) && (!_includePath)) && (_itemFilter == com.fasterxml.jackson.core.filter.TokenFilter.INCLUDE_ALL)) {\n        return _currToken = null;\n    }\n}",
            "src_parent": "{\n    if (((!_allowMultipleMatches) && (_currToken != null)) && (_exposedContext == null)) {\n        if (_currToken.isStructEnd() && _headContext.isStartHandled()) {\n            return _currToken = null;\n        } else if (((_currToken.isScalarValue() && (!_headContext.isStartHandled())) && (!_includePath)) && (_itemFilter == com.fasterxml.jackson.core.filter.TokenFilter.INCLUDE_ALL)) {\n            return _currToken = null;\n        }\n    }\n    com.fasterxml.jackson.core.filter.TokenFilterContext ctxt = _exposedContext;\n    if (ctxt != null) {\n        while (true) {\n            com.fasterxml.jackson.core.JsonToken t = ctxt.nextTokenToRead();\n            if (t != null) {\n                _currToken = t;\n                return t;\n            }\n            if (ctxt == _headContext) {\n                _exposedContext = null;\n                if (ctxt.inArray()) {\n                    t = delegate.getCurrentToken();\n                    _currToken = t;\n                    return t;\n                }\n                break;\n            }\n            ctxt = _headContext.findChildOf(ctxt);\n            _exposedContext = ctxt;\n            if (ctxt == null) {\n                throw _constructError(\"Unexpected problem: chain of filtered context broken\");\n            }\n        } \n    }\n    com.fasterxml.jackson.core.JsonToken t = delegate.nextToken();\n    if (t == null) {\n        return _currToken = t;\n    }\n    com.fasterxml.jackson.core.filter.TokenFilter f;\n    switch (t.id()) {\n        case com.fasterxml.jackson.core.JsonTokenId.ID_START_ARRAY :\n            f = _itemFilter;\n            if (f == com.fasterxml.jackson.core.filter.TokenFilter.INCLUDE_ALL) {\n                _headContext = _headContext.createChildArrayContext(f, true);\n                return _currToken = t;\n            }\n            if (f == null) {\n                delegate.skipChildren();\n                break;\n            }\n            f = _headContext.checkValue(f);\n            if (f == null) {\n                delegate.skipChildren();\n                break;\n            }\n            if (f != com.fasterxml.jackson.core.filter.TokenFilter.INCLUDE_ALL) {\n                f = f.filterStartArray();\n            }\n            _itemFilter = f;\n            if (f == com.fasterxml.jackson.core.filter.TokenFilter.INCLUDE_ALL) {\n                _headContext = _headContext.createChildArrayContext(f, true);\n                return _currToken = t;\n            }\n            _headContext = _headContext.createChildArrayContext(f, false);\n            if (_includePath) {\n                t = _nextTokenWithBuffering(_headContext);\n                if (t != null) {\n                    _currToken = t;\n                    return t;\n                }\n            }\n            break;\n        case com.fasterxml.jackson.core.JsonTokenId.ID_START_OBJECT :\n            f = _itemFilter;\n            if (f == com.fasterxml.jackson.core.filter.TokenFilter.INCLUDE_ALL) {\n                _headContext = _headContext.createChildObjectContext(f, true);\n                return _currToken = t;\n            }\n            if (f == null) {\n                delegate.skipChildren();\n                break;\n            }\n            f = _headContext.checkValue(f);\n            if (f == null) {\n                delegate.skipChildren();\n                break;\n            }\n            if (f != com.fasterxml.jackson.core.filter.TokenFilter.INCLUDE_ALL) {\n                f = f.filterStartObject();\n            }\n            _itemFilter = f;\n            if (f == com.fasterxml.jackson.core.filter.TokenFilter.INCLUDE_ALL) {\n                _headContext = _headContext.createChildObjectContext(f, true);\n                return _currToken = t;\n            }\n            _headContext = _headContext.createChildObjectContext(f, false);\n            if (_includePath) {\n                t = _nextTokenWithBuffering(_headContext);\n                if (t != null) {\n                    _currToken = t;\n                    return t;\n                }\n            }\n            break;\n        case com.fasterxml.jackson.core.JsonTokenId.ID_END_ARRAY :\n        case com.fasterxml.jackson.core.JsonTokenId.ID_END_OBJECT :\n            {\n                boolean returnEnd = _headContext.isStartHandled();\n                f = _headContext.getFilter();\n                if ((f != null) && (f != com.fasterxml.jackson.core.filter.TokenFilter.INCLUDE_ALL)) {\n                    f.filterFinishArray();\n                }\n                _headContext = _headContext.getParent();\n                _itemFilter = _headContext.getFilter();\n                if (returnEnd) {\n                    return _currToken = t;\n                }\n            }\n            break;\n        case com.fasterxml.jackson.core.JsonTokenId.ID_FIELD_NAME :\n            {\n                final java.lang.String name = delegate.getCurrentName();\n                f = _headContext.setFieldName(name);\n                if (f == com.fasterxml.jackson.core.filter.TokenFilter.INCLUDE_ALL) {\n                    _itemFilter = f;\n                    if (!_includePath) {\n                        if (_includeImmediateParent && (!_headContext.isStartHandled())) {\n                            t = _headContext.nextTokenToRead();\n                            _exposedContext = _headContext;\n                        }\n                    }\n                    return _currToken = t;\n                }\n                if (f == null) {\n                    delegate.nextToken();\n                    delegate.skipChildren();\n                    break;\n                }\n                f = f.includeProperty(name);\n                if (f == null) {\n                    delegate.nextToken();\n                    delegate.skipChildren();\n                    break;\n                }\n                _itemFilter = f;\n                if (f == com.fasterxml.jackson.core.filter.TokenFilter.INCLUDE_ALL) {\n                    if (_includePath) {\n                        return _currToken = t;\n                    }\n                }\n                if (_includePath) {\n                    t = _nextTokenWithBuffering(_headContext);\n                    if (t != null) {\n                        _currToken = t;\n                        return t;\n                    }\n                }\n                break;\n            }\n        default :\n            f = _itemFilter;\n            if (f == com.fasterxml.jackson.core.filter.TokenFilter.INCLUDE_ALL) {\n                return _currToken = t;\n            }\n            if (f != null) {\n                f = _headContext.checkValue(f);\n                if ((f == com.fasterxml.jackson.core.filter.TokenFilter.INCLUDE_ALL) || ((f != null) && f.includeValue(delegate))) {\n                    return _currToken = t;\n                }\n            }\n            break;\n    }\n    return _nextToken2();\n}",
            "src_parent_type": "Block",
            "src_type": "If"
          }
        }
      ],
      "file_name": "FilteringParserDelegate"
    }
  ],
  "id": "JacksonCore_15"
}