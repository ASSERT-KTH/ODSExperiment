{
  "files": [
    {
      "features": [
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Field",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "protected static final java.lang.Integer EMPTY_INTEGER = java.lang.Integer.valueOf(0);",
            "src_parent": "protected static abstract class Base<T> extends com.fasterxml.jackson.databind.ser.std.StdScalarSerializer<T> implements com.fasterxml.jackson.databind.ser.ContextualSerializer {\n    protected static final java.lang.Integer EMPTY_INTEGER = java.lang.Integer.valueOf(0);\n\n    protected final com.fasterxml.jackson.core.JsonParser.NumberType _numberType;\n\n    protected final java.lang.String _schemaType;\n\n    protected final boolean _isInt;\n\n    protected Base(java.lang.Class<?> cls, com.fasterxml.jackson.core.JsonParser.NumberType numberType, java.lang.String schemaType) {\n        super(cls, false);\n        _numberType = numberType;\n        _schemaType = schemaType;\n        _isInt = ((numberType == com.fasterxml.jackson.core.JsonParser.NumberType.INT) || (numberType == com.fasterxml.jackson.core.JsonParser.NumberType.LONG)) || (numberType == com.fasterxml.jackson.core.JsonParser.NumberType.BIG_INTEGER);\n    }\n\n    @java.lang.Override\n    public com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider provider, java.lang.reflect.Type typeHint) {\n        return createSchemaNode(_schemaType, true);\n    }\n\n    @java.lang.Override\n    public void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper visitor, com.fasterxml.jackson.databind.JavaType typeHint) throws com.fasterxml.jackson.databind.JsonMappingException {\n        if (_isInt) {\n            com.fasterxml.jackson.databind.jsonFormatVisitors.JsonIntegerFormatVisitor v2 = visitor.expectIntegerFormat(typeHint);\n            if (v2 != null) {\n                v2.numberType(_numberType);\n            }\n        } else {\n            com.fasterxml.jackson.databind.jsonFormatVisitors.JsonNumberFormatVisitor v2 = visitor.expectNumberFormat(typeHint);\n            if (v2 != null) {\n                v2.numberType(_numberType);\n            }\n        }\n    }\n\n    @java.lang.Override\n    public com.fasterxml.jackson.databind.JsonSerializer<?> createContextual(com.fasterxml.jackson.databind.SerializerProvider prov, com.fasterxml.jackson.databind.BeanProperty property) throws com.fasterxml.jackson.databind.JsonMappingException {\n        if (property != null) {\n            com.fasterxml.jackson.databind.introspect.AnnotatedMember m = property.getMember();\n            if (m != null) {\n                com.fasterxml.jackson.annotation.JsonFormat.Value format = prov.getAnnotationIntrospector().findFormat(m);\n                if (format != null) {\n                    switch (format.getShape()) {\n                        case STRING :\n                            return com.fasterxml.jackson.databind.ser.std.ToStringSerializer.instance;\n                        default :\n                    }\n                }\n            }\n        }\n        return this;\n    }\n}",
            "src_parent_type": "Class",
            "src_type": "Field"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Field",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "private static final java.lang.Short EMPTY = ((short) (0));",
            "src_parent": "@com.fasterxml.jackson.databind.annotation.JacksonStdImpl\npublic static final class ShortSerializer extends com.fasterxml.jackson.databind.ser.std.NumberSerializers.Base<java.lang.Short> {\n    private static final java.lang.Short EMPTY = ((short) (0));\n\n    static final com.fasterxml.jackson.databind.ser.std.NumberSerializers.ShortSerializer instance = new com.fasterxml.jackson.databind.ser.std.NumberSerializers.ShortSerializer();\n\n    public ShortSerializer() {\n        super(java.lang.Short.class, com.fasterxml.jackson.core.JsonParser.NumberType.INT, \"number\");\n    }\n\n    @java.lang.Override\n    public boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider prov, java.lang.Short value) {\n        return com.fasterxml.jackson.databind.ser.std.NumberSerializers.ShortSerializer.EMPTY.equals(value);\n    }\n\n    @java.lang.Override\n    public void serialize(java.lang.Short value, com.fasterxml.jackson.core.JsonGenerator gen, com.fasterxml.jackson.databind.SerializerProvider provider) throws java.io.IOException {\n        gen.writeNumber(value.shortValue());\n    }\n}",
            "src_parent_type": "Class",
            "src_type": "Field"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Method",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "@java.lang.Override\npublic boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider prov, java.lang.Short value) {\n    return com.fasterxml.jackson.databind.ser.std.NumberSerializers.ShortSerializer.EMPTY.equals(value);\n}",
            "src_parent": "@com.fasterxml.jackson.databind.annotation.JacksonStdImpl\npublic static final class ShortSerializer extends com.fasterxml.jackson.databind.ser.std.NumberSerializers.Base<java.lang.Short> {\n    private static final java.lang.Short EMPTY = ((short) (0));\n\n    static final com.fasterxml.jackson.databind.ser.std.NumberSerializers.ShortSerializer instance = new com.fasterxml.jackson.databind.ser.std.NumberSerializers.ShortSerializer();\n\n    public ShortSerializer() {\n        super(java.lang.Short.class, com.fasterxml.jackson.core.JsonParser.NumberType.INT, \"number\");\n    }\n\n    @java.lang.Override\n    public boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider prov, java.lang.Short value) {\n        return com.fasterxml.jackson.databind.ser.std.NumberSerializers.ShortSerializer.EMPTY.equals(value);\n    }\n\n    @java.lang.Override\n    public void serialize(java.lang.Short value, com.fasterxml.jackson.core.JsonGenerator gen, com.fasterxml.jackson.databind.SerializerProvider provider) throws java.io.IOException {\n        gen.writeNumber(value.shortValue());\n    }\n}",
            "src_parent_type": "Class",
            "src_type": "Method"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Method",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "@java.lang.Override\npublic boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider prov, java.lang.Object value) {\n    return com.fasterxml.jackson.databind.ser.std.NumberSerializers.Base.EMPTY_INTEGER.equals(value);\n}",
            "src_parent": "@com.fasterxml.jackson.databind.annotation.JacksonStdImpl\npublic static final class IntegerSerializer extends com.fasterxml.jackson.databind.ser.std.NumberSerializers.Base<java.lang.Object> {\n    public IntegerSerializer() {\n        super(java.lang.Integer.class, com.fasterxml.jackson.core.JsonParser.NumberType.INT, \"integer\");\n    }\n\n    @java.lang.Override\n    public void serialize(java.lang.Object value, com.fasterxml.jackson.core.JsonGenerator gen, com.fasterxml.jackson.databind.SerializerProvider provider) throws java.io.IOException {\n        gen.writeNumber(((java.lang.Integer) (value)).intValue());\n    }\n\n    @java.lang.Override\n    public void serializeWithType(java.lang.Object value, com.fasterxml.jackson.core.JsonGenerator gen, com.fasterxml.jackson.databind.SerializerProvider provider, com.fasterxml.jackson.databind.jsontype.TypeSerializer typeSer) throws java.io.IOException {\n        serialize(value, gen, provider);\n    }\n\n    @java.lang.Override\n    public boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider prov, java.lang.Object value) {\n        return com.fasterxml.jackson.databind.ser.std.NumberSerializers.Base.EMPTY_INTEGER.equals(value);\n    }\n}",
            "src_parent_type": "Class",
            "src_type": "Method"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Method",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "@java.lang.Override\npublic boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider prov, java.lang.Number value) {\n    return value.intValue() == 0;\n}",
            "src_parent": "@com.fasterxml.jackson.databind.annotation.JacksonStdImpl\npublic static final class IntLikeSerializer extends com.fasterxml.jackson.databind.ser.std.NumberSerializers.Base<java.lang.Number> {\n    static final com.fasterxml.jackson.databind.ser.std.NumberSerializers.IntLikeSerializer instance = new com.fasterxml.jackson.databind.ser.std.NumberSerializers.IntLikeSerializer();\n\n    public IntLikeSerializer() {\n        super(java.lang.Number.class, com.fasterxml.jackson.core.JsonParser.NumberType.INT, \"integer\");\n    }\n\n    @java.lang.Override\n    public boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider prov, java.lang.Number value) {\n        return value.intValue() == 0;\n    }\n\n    @java.lang.Override\n    public void serialize(java.lang.Number value, com.fasterxml.jackson.core.JsonGenerator gen, com.fasterxml.jackson.databind.SerializerProvider provider) throws java.io.IOException {\n        gen.writeNumber(value.intValue());\n    }\n}",
            "src_parent_type": "Class",
            "src_type": "Method"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Field",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "private static final java.lang.Long EMPTY = 0L;",
            "src_parent": "@com.fasterxml.jackson.databind.annotation.JacksonStdImpl\npublic static final class LongSerializer extends com.fasterxml.jackson.databind.ser.std.NumberSerializers.Base<java.lang.Object> {\n    private static final java.lang.Long EMPTY = 0L;\n\n    static final com.fasterxml.jackson.databind.ser.std.NumberSerializers.LongSerializer instance = new com.fasterxml.jackson.databind.ser.std.NumberSerializers.LongSerializer();\n\n    public LongSerializer() {\n        super(java.lang.Long.class, com.fasterxml.jackson.core.JsonParser.NumberType.LONG, \"number\");\n    }\n\n    @java.lang.Override\n    public boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider prov, java.lang.Object value) {\n        return com.fasterxml.jackson.databind.ser.std.NumberSerializers.LongSerializer.EMPTY.equals(value);\n    }\n\n    @java.lang.Override\n    public void serialize(java.lang.Object value, com.fasterxml.jackson.core.JsonGenerator gen, com.fasterxml.jackson.databind.SerializerProvider provider) throws java.io.IOException {\n        gen.writeNumber(((java.lang.Long) (value)).longValue());\n    }\n}",
            "src_parent_type": "Class",
            "src_type": "Field"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Method",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "@java.lang.Override\npublic boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider prov, java.lang.Object value) {\n    return com.fasterxml.jackson.databind.ser.std.NumberSerializers.LongSerializer.EMPTY.equals(value);\n}",
            "src_parent": "@com.fasterxml.jackson.databind.annotation.JacksonStdImpl\npublic static final class LongSerializer extends com.fasterxml.jackson.databind.ser.std.NumberSerializers.Base<java.lang.Object> {\n    private static final java.lang.Long EMPTY = 0L;\n\n    static final com.fasterxml.jackson.databind.ser.std.NumberSerializers.LongSerializer instance = new com.fasterxml.jackson.databind.ser.std.NumberSerializers.LongSerializer();\n\n    public LongSerializer() {\n        super(java.lang.Long.class, com.fasterxml.jackson.core.JsonParser.NumberType.LONG, \"number\");\n    }\n\n    @java.lang.Override\n    public boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider prov, java.lang.Object value) {\n        return com.fasterxml.jackson.databind.ser.std.NumberSerializers.LongSerializer.EMPTY.equals(value);\n    }\n\n    @java.lang.Override\n    public void serialize(java.lang.Object value, com.fasterxml.jackson.core.JsonGenerator gen, com.fasterxml.jackson.databind.SerializerProvider provider) throws java.io.IOException {\n        gen.writeNumber(((java.lang.Long) (value)).longValue());\n    }\n}",
            "src_parent_type": "Class",
            "src_type": "Method"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Field",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "private static final java.lang.Float EMPTY = 0.0F;",
            "src_parent": "@com.fasterxml.jackson.databind.annotation.JacksonStdImpl\npublic static final class FloatSerializer extends com.fasterxml.jackson.databind.ser.std.NumberSerializers.Base<java.lang.Object> {\n    private static final java.lang.Float EMPTY = 0.0F;\n\n    static final com.fasterxml.jackson.databind.ser.std.NumberSerializers.FloatSerializer instance = new com.fasterxml.jackson.databind.ser.std.NumberSerializers.FloatSerializer();\n\n    public FloatSerializer() {\n        super(java.lang.Float.class, com.fasterxml.jackson.core.JsonParser.NumberType.FLOAT, \"number\");\n    }\n\n    @java.lang.Override\n    public boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider prov, java.lang.Object value) {\n        return com.fasterxml.jackson.databind.ser.std.NumberSerializers.FloatSerializer.EMPTY.equals(value);\n    }\n\n    @java.lang.Override\n    public void serialize(java.lang.Object value, com.fasterxml.jackson.core.JsonGenerator gen, com.fasterxml.jackson.databind.SerializerProvider provider) throws java.io.IOException {\n        gen.writeNumber(((java.lang.Float) (value)).floatValue());\n    }\n}",
            "src_parent_type": "Class",
            "src_type": "Field"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Method",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "@java.lang.Override\npublic boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider prov, java.lang.Object value) {\n    return com.fasterxml.jackson.databind.ser.std.NumberSerializers.FloatSerializer.EMPTY.equals(value);\n}",
            "src_parent": "@com.fasterxml.jackson.databind.annotation.JacksonStdImpl\npublic static final class FloatSerializer extends com.fasterxml.jackson.databind.ser.std.NumberSerializers.Base<java.lang.Object> {\n    private static final java.lang.Float EMPTY = 0.0F;\n\n    static final com.fasterxml.jackson.databind.ser.std.NumberSerializers.FloatSerializer instance = new com.fasterxml.jackson.databind.ser.std.NumberSerializers.FloatSerializer();\n\n    public FloatSerializer() {\n        super(java.lang.Float.class, com.fasterxml.jackson.core.JsonParser.NumberType.FLOAT, \"number\");\n    }\n\n    @java.lang.Override\n    public boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider prov, java.lang.Object value) {\n        return com.fasterxml.jackson.databind.ser.std.NumberSerializers.FloatSerializer.EMPTY.equals(value);\n    }\n\n    @java.lang.Override\n    public void serialize(java.lang.Object value, com.fasterxml.jackson.core.JsonGenerator gen, com.fasterxml.jackson.databind.SerializerProvider provider) throws java.io.IOException {\n        gen.writeNumber(((java.lang.Float) (value)).floatValue());\n    }\n}",
            "src_parent_type": "Class",
            "src_type": "Method"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Field",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "private static final java.lang.Double EMPTY = 0.0;",
            "src_parent": "@com.fasterxml.jackson.databind.annotation.JacksonStdImpl\npublic static final class DoubleSerializer extends com.fasterxml.jackson.databind.ser.std.NumberSerializers.Base<java.lang.Object> {\n    private static final java.lang.Double EMPTY = 0.0;\n\n    static final com.fasterxml.jackson.databind.ser.std.NumberSerializers.DoubleSerializer instance = new com.fasterxml.jackson.databind.ser.std.NumberSerializers.DoubleSerializer();\n\n    public DoubleSerializer() {\n        super(java.lang.Double.class, com.fasterxml.jackson.core.JsonParser.NumberType.DOUBLE, \"number\");\n    }\n\n    @java.lang.Override\n    public boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider prov, java.lang.Object value) {\n        return com.fasterxml.jackson.databind.ser.std.NumberSerializers.DoubleSerializer.EMPTY.equals(value);\n    }\n\n    @java.lang.Override\n    public void serialize(java.lang.Object value, com.fasterxml.jackson.core.JsonGenerator gen, com.fasterxml.jackson.databind.SerializerProvider provider) throws java.io.IOException {\n        gen.writeNumber(((java.lang.Double) (value)).doubleValue());\n    }\n\n    @java.lang.Override\n    public void serializeWithType(java.lang.Object value, com.fasterxml.jackson.core.JsonGenerator gen, com.fasterxml.jackson.databind.SerializerProvider provider, com.fasterxml.jackson.databind.jsontype.TypeSerializer typeSer) throws java.io.IOException {\n        serialize(value, gen, provider);\n    }\n}",
            "src_parent_type": "Class",
            "src_type": "Field"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Method",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "@java.lang.Override\npublic boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider prov, java.lang.Object value) {\n    return com.fasterxml.jackson.databind.ser.std.NumberSerializers.DoubleSerializer.EMPTY.equals(value);\n}",
            "src_parent": "@com.fasterxml.jackson.databind.annotation.JacksonStdImpl\npublic static final class DoubleSerializer extends com.fasterxml.jackson.databind.ser.std.NumberSerializers.Base<java.lang.Object> {\n    private static final java.lang.Double EMPTY = 0.0;\n\n    static final com.fasterxml.jackson.databind.ser.std.NumberSerializers.DoubleSerializer instance = new com.fasterxml.jackson.databind.ser.std.NumberSerializers.DoubleSerializer();\n\n    public DoubleSerializer() {\n        super(java.lang.Double.class, com.fasterxml.jackson.core.JsonParser.NumberType.DOUBLE, \"number\");\n    }\n\n    @java.lang.Override\n    public boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider prov, java.lang.Object value) {\n        return com.fasterxml.jackson.databind.ser.std.NumberSerializers.DoubleSerializer.EMPTY.equals(value);\n    }\n\n    @java.lang.Override\n    public void serialize(java.lang.Object value, com.fasterxml.jackson.core.JsonGenerator gen, com.fasterxml.jackson.databind.SerializerProvider provider) throws java.io.IOException {\n        gen.writeNumber(((java.lang.Double) (value)).doubleValue());\n    }\n\n    @java.lang.Override\n    public void serializeWithType(java.lang.Object value, com.fasterxml.jackson.core.JsonGenerator gen, com.fasterxml.jackson.databind.SerializerProvider provider, com.fasterxml.jackson.databind.jsontype.TypeSerializer typeSer) throws java.io.IOException {\n        serialize(value, gen, provider);\n    }\n}",
            "src_parent_type": "Class",
            "src_type": "Method"
          }
        }
      ],
      "file_name": "NumberSerializers"
    }
  ],
  "id": "JacksonDatabind_23"
}