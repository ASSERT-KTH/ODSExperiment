{
  "files": [
    {
      "features": [
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "doc.childNodeSize() > 0",
            "src_parent": "if (doc.childNodeSize() > 0) {\n    org.jsoup.parser.Element el = doc.child(0);\n    insert = new org.jsoup.parser.XmlDeclaration(settings.normalizeTag(el.tagName()), data.startsWith(\"!\"));\n    insert.attributes().addAll(el.attributes());\n}",
            "src_parent_type": "If",
            "src_type": "BinaryOperator"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "if (commentToken.bogus) {\n    java.lang.String data = comment.getData();\n    if ((data.length() > 1) && (data.startsWith(\"!\") || data.startsWith(\"?\"))) {\n        org.jsoup.parser.Document doc = org.jsoup.Jsoup.parse((\"<\" + data.substring(1, data.length() - 1)) + \">\", baseUri, org.jsoup.parser.Parser.xmlParser());\n        if (doc.childNodeSize() > 0) {\n            org.jsoup.parser.Element el = doc.child(0);\n            insert = new org.jsoup.parser.XmlDeclaration(settings.normalizeTag(el.tagName()), data.startsWith(\"!\"));\n            insert.attributes().addAll(el.attributes());\n        }\n    }\n}",
            "src_parent": "{\n    org.jsoup.parser.Comment comment = new org.jsoup.parser.Comment(commentToken.getData());\n    org.jsoup.parser.Node insert = comment;\n    if (commentToken.bogus) {\n        java.lang.String data = comment.getData();\n        if ((data.length() > 1) && (data.startsWith(\"!\") || data.startsWith(\"?\"))) {\n            org.jsoup.parser.Document doc = org.jsoup.Jsoup.parse((\"<\" + data.substring(1, data.length() - 1)) + \">\", baseUri, org.jsoup.parser.Parser.xmlParser());\n            if (doc.childNodeSize() > 0) {\n                org.jsoup.parser.Element el = doc.child(0);\n                insert = new org.jsoup.parser.XmlDeclaration(settings.normalizeTag(el.tagName()), data.startsWith(\"!\"));\n                insert.attributes().addAll(el.attributes());\n            }\n        }\n    }\n    insertNode(insert);\n}",
            "src_parent_type": "Block",
            "src_type": "If"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "if (commentToken.bogus) {\n    java.lang.String data = comment.getData();\n    if ((data.length() > 1) && (data.startsWith(\"!\") || data.startsWith(\"?\"))) {\n        org.jsoup.parser.Document doc = org.jsoup.Jsoup.parse((\"<\" + data.substring(1, data.length() - 1)) + \">\", baseUri, org.jsoup.parser.Parser.xmlParser());\n        org.jsoup.parser.Element el = doc.child(0);\n        insert = new org.jsoup.parser.XmlDeclaration(settings.normalizeTag(el.tagName()), data.startsWith(\"!\"));\n        insert.attributes().addAll(el.attributes());\n    }\n}",
            "dst_parent": "{\n    org.jsoup.parser.Comment comment = new org.jsoup.parser.Comment(commentToken.getData());\n    org.jsoup.parser.Node insert = comment;\n    if (commentToken.bogus) {\n        java.lang.String data = comment.getData();\n        if ((data.length() > 1) && (data.startsWith(\"!\") || data.startsWith(\"?\"))) {\n            org.jsoup.parser.Document doc = org.jsoup.Jsoup.parse((\"<\" + data.substring(1, data.length() - 1)) + \">\", baseUri, org.jsoup.parser.Parser.xmlParser());\n            org.jsoup.parser.Element el = doc.child(0);\n            insert = new org.jsoup.parser.XmlDeclaration(settings.normalizeTag(el.tagName()), data.startsWith(\"!\"));\n            insert.attributes().addAll(el.attributes());\n        }\n    }\n    insertNode(insert);\n}",
            "dst_parent_type": "Block",
            "dst_type": "If",
            "operator": "MOV",
            "src": "if ((data.length() > 1) && (data.startsWith(\"!\") || data.startsWith(\"?\"))) {\n    org.jsoup.parser.Document doc = org.jsoup.Jsoup.parse((\"<\" + data.substring(1, data.length() - 1)) + \">\", baseUri, org.jsoup.parser.Parser.xmlParser());\n    if (doc.childNodeSize() > 0) {\n        org.jsoup.parser.Element el = doc.child(0);\n        insert = new org.jsoup.parser.XmlDeclaration(settings.normalizeTag(el.tagName()), data.startsWith(\"!\"));\n        insert.attributes().addAll(el.attributes());\n    }\n}",
            "src_parent": "{\n    java.lang.String data = comment.getData();\n    if ((data.length() > 1) && (data.startsWith(\"!\") || data.startsWith(\"?\"))) {\n        org.jsoup.parser.Document doc = org.jsoup.Jsoup.parse((\"<\" + data.substring(1, data.length() - 1)) + \">\", baseUri, org.jsoup.parser.Parser.xmlParser());\n        if (doc.childNodeSize() > 0) {\n            org.jsoup.parser.Element el = doc.child(0);\n            insert = new org.jsoup.parser.XmlDeclaration(settings.normalizeTag(el.tagName()), data.startsWith(\"!\"));\n            insert.attributes().addAll(el.attributes());\n        }\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "If"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "java.lang.String data = comment.getData()",
            "dst_parent": "{\n    java.lang.String data = comment.getData();\n    if ((data.length() > 1) && (data.startsWith(\"!\") || data.startsWith(\"?\"))) {\n        org.jsoup.parser.Document doc = org.jsoup.Jsoup.parse((\"<\" + data.substring(1, data.length() - 1)) + \">\", baseUri, org.jsoup.parser.Parser.xmlParser());\n        org.jsoup.parser.Element el = doc.child(0);\n        insert = new org.jsoup.parser.XmlDeclaration(settings.normalizeTag(el.tagName()), data.startsWith(\"!\"));\n        insert.attributes().addAll(el.attributes());\n    }\n}",
            "dst_parent_type": "Block",
            "dst_type": "LocalVariable",
            "operator": "MOV",
            "src": "java.lang.String data = comment.getData()",
            "src_parent": "{\n    java.lang.String data = comment.getData();\n    if ((data.length() > 1) && (data.startsWith(\"!\") || data.startsWith(\"?\"))) {\n        org.jsoup.parser.Document doc = org.jsoup.Jsoup.parse((\"<\" + data.substring(1, data.length() - 1)) + \">\", baseUri, org.jsoup.parser.Parser.xmlParser());\n        if (doc.childNodeSize() > 0) {\n            org.jsoup.parser.Element el = doc.child(0);\n            insert = new org.jsoup.parser.XmlDeclaration(settings.normalizeTag(el.tagName()), data.startsWith(\"!\"));\n            insert.attributes().addAll(el.attributes());\n        }\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "LocalVariable"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "(data.length() > 1) && (data.startsWith(\"!\") || data.startsWith(\"?\"))",
            "dst_parent": "if ((data.length() > 1) && (data.startsWith(\"!\") || data.startsWith(\"?\"))) {\n    org.jsoup.parser.Document doc = org.jsoup.Jsoup.parse((\"<\" + data.substring(1, data.length() - 1)) + \">\", baseUri, org.jsoup.parser.Parser.xmlParser());\n    org.jsoup.parser.Element el = doc.child(0);\n    insert = new org.jsoup.parser.XmlDeclaration(settings.normalizeTag(el.tagName()), data.startsWith(\"!\"));\n    insert.attributes().addAll(el.attributes());\n}",
            "dst_parent_type": "If",
            "dst_type": "BinaryOperator",
            "operator": "MOV",
            "src": "(data.length() > 1) && (data.startsWith(\"!\") || data.startsWith(\"?\"))",
            "src_parent": "if ((data.length() > 1) && (data.startsWith(\"!\") || data.startsWith(\"?\"))) {\n    org.jsoup.parser.Document doc = org.jsoup.Jsoup.parse((\"<\" + data.substring(1, data.length() - 1)) + \">\", baseUri, org.jsoup.parser.Parser.xmlParser());\n    if (doc.childNodeSize() > 0) {\n        org.jsoup.parser.Element el = doc.child(0);\n        insert = new org.jsoup.parser.XmlDeclaration(settings.normalizeTag(el.tagName()), data.startsWith(\"!\"));\n        insert.attributes().addAll(el.attributes());\n    }\n}",
            "src_parent_type": "If",
            "src_type": "BinaryOperator"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "org.jsoup.parser.Document doc = org.jsoup.Jsoup.parse((\"<\" + data.substring(1, data.length() - 1)) + \">\", baseUri, org.jsoup.parser.Parser.xmlParser())",
            "dst_parent": "{\n    org.jsoup.parser.Document doc = org.jsoup.Jsoup.parse((\"<\" + data.substring(1, data.length() - 1)) + \">\", baseUri, org.jsoup.parser.Parser.xmlParser());\n    org.jsoup.parser.Element el = doc.child(0);\n    insert = new org.jsoup.parser.XmlDeclaration(settings.normalizeTag(el.tagName()), data.startsWith(\"!\"));\n    insert.attributes().addAll(el.attributes());\n}",
            "dst_parent_type": "Block",
            "dst_type": "LocalVariable",
            "operator": "MOV",
            "src": "org.jsoup.parser.Document doc = org.jsoup.Jsoup.parse((\"<\" + data.substring(1, data.length() - 1)) + \">\", baseUri, org.jsoup.parser.Parser.xmlParser())",
            "src_parent": "{\n    org.jsoup.parser.Document doc = org.jsoup.Jsoup.parse((\"<\" + data.substring(1, data.length() - 1)) + \">\", baseUri, org.jsoup.parser.Parser.xmlParser());\n    if (doc.childNodeSize() > 0) {\n        org.jsoup.parser.Element el = doc.child(0);\n        insert = new org.jsoup.parser.XmlDeclaration(settings.normalizeTag(el.tagName()), data.startsWith(\"!\"));\n        insert.attributes().addAll(el.attributes());\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "LocalVariable"
          }
        }
      ],
      "file_name": "XmlTreeBuilder"
    }
  ],
  "id": "Jsoup_80"
}