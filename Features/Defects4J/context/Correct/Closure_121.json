{
  "files": [
    {
      "features": [
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "LocalVariable",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "((((!maybeModifiedArguments) && (!staleVars.contains(v))) && referenceInfo.isWellDefined()) && referenceInfo.isAssignedOnceInLifetime()) && (isInlineableDeclaredConstant(v, referenceInfo) || referenceInfo.isOnlyAssignmentSameScopeAsDeclaration())",
            "src_parent": "if (((((!maybeModifiedArguments) && (!staleVars.contains(v))) && referenceInfo.isWellDefined()) && referenceInfo.isAssignedOnceInLifetime()) && (isInlineableDeclaredConstant(v, referenceInfo) || referenceInfo.isOnlyAssignmentSameScopeAsDeclaration())) {\n    java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference> refs = referenceInfo.references;\n    for (int i = 1; i < refs.size(); i++) {\n        com.google.javascript.rhino.Node nameNode = refs.get(i).getNode();\n        if (aliasCandidates.containsKey(nameNode)) {\n            com.google.javascript.jscomp.InlineVariables.AliasCandidate candidate = aliasCandidates.get(nameNode);\n            if ((!staleVars.contains(candidate.alias)) && (!isVarInlineForbidden(candidate.alias))) {\n                com.google.javascript.jscomp.ReferenceCollectingCallback.Reference aliasInit;\n                aliasInit = candidate.refInfo.getInitializingReference();\n                com.google.javascript.rhino.Node value = aliasInit.getAssignedValue();\n                com.google.common.base.Preconditions.checkNotNull(value);\n                inlineWellDefinedVariable(candidate.alias, value, candidate.refInfo.references);\n                staleVars.add(candidate.alias);\n            }\n        }\n    }\n}",
            "src_parent_type": "If",
            "src_type": "BinaryOperator"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "LocalVariable",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "(((!maybeModifiedArguments) && (!staleVars.contains(v))) && referenceInfo.isWellDefined()) && referenceInfo.isAssignedOnceInLifetime()",
            "dst_parent": "if ((((!maybeModifiedArguments) && (!staleVars.contains(v))) && referenceInfo.isWellDefined()) && referenceInfo.isAssignedOnceInLifetime()) {\n    java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference> refs = referenceInfo.references;\n    for (int i = 1; i < refs.size(); i++) {\n        com.google.javascript.rhino.Node nameNode = refs.get(i).getNode();\n        if (aliasCandidates.containsKey(nameNode)) {\n            com.google.javascript.jscomp.InlineVariables.AliasCandidate candidate = aliasCandidates.get(nameNode);\n            if ((!staleVars.contains(candidate.alias)) && (!isVarInlineForbidden(candidate.alias))) {\n                com.google.javascript.jscomp.ReferenceCollectingCallback.Reference aliasInit;\n                aliasInit = candidate.refInfo.getInitializingReference();\n                com.google.javascript.rhino.Node value = aliasInit.getAssignedValue();\n                com.google.common.base.Preconditions.checkNotNull(value);\n                inlineWellDefinedVariable(candidate.alias, value, candidate.refInfo.references);\n                staleVars.add(candidate.alias);\n            }\n        }\n    }\n}",
            "dst_parent_type": "If",
            "dst_type": "BinaryOperator",
            "operator": "MOV",
            "src": "((((!maybeModifiedArguments) && (!staleVars.contains(v))) && referenceInfo.isWellDefined()) && referenceInfo.isAssignedOnceInLifetime())",
            "src_parent": "((((!maybeModifiedArguments) && (!staleVars.contains(v))) && referenceInfo.isWellDefined()) && referenceInfo.isAssignedOnceInLifetime()) && (isInlineableDeclaredConstant(v, referenceInfo) || referenceInfo.isOnlyAssignmentSameScopeAsDeclaration())",
            "src_parent_type": "BinaryOperator",
            "src_type": "BinaryOperator"
          }
        }
      ],
      "file_name": "InlineVariables"
    }
  ],
  "id": "Closure_121"
}