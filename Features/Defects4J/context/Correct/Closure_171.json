{
  "files": [
    {
      "features": [
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "For",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "Return",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "For",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "Invocation",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "(objectType == null) || n.getBooleanProp(Node.REFLECTED_OBJECT)",
            "src_parent": "if ((objectType == null) || n.getBooleanProp(Node.REFLECTED_OBJECT)) {\n    return scope;\n}",
            "src_parent_type": "If",
            "src_type": "BinaryOperator"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Method",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "boolean hasLendsName = (n.getJSDocInfo() != null) && (n.getJSDocInfo().getLendsName() != null)",
            "src_parent": "{\n    com.google.javascript.rhino.jstype.JSType type = n.getJSType();\n    com.google.common.base.Preconditions.checkNotNull(type);\n    for (com.google.javascript.rhino.Node name = n.getFirstChild(); name != null; name = name.getNext()) {\n        scope = traverse(name.getFirstChild(), scope);\n    }\n    com.google.javascript.rhino.jstype.ObjectType objectType = com.google.javascript.rhino.jstype.ObjectType.cast(type);\n    if (objectType == null) {\n        return scope;\n    }\n    boolean hasLendsName = (n.getJSDocInfo() != null) && (n.getJSDocInfo().getLendsName() != null);\n    if (objectType.hasReferenceName() && (!hasLendsName)) {\n        return scope;\n    }\n    java.lang.String qObjName = com.google.javascript.jscomp.NodeUtil.getBestLValueName(com.google.javascript.jscomp.NodeUtil.getBestLValue(n));\n    for (com.google.javascript.rhino.Node name = n.getFirstChild(); name != null; name = name.getNext()) {\n        java.lang.String memberName = com.google.javascript.jscomp.NodeUtil.getObjectLitKeyName(name);\n        if (memberName != null) {\n            com.google.javascript.rhino.jstype.JSType rawValueType = name.getFirstChild().getJSType();\n            com.google.javascript.rhino.jstype.JSType valueType = com.google.javascript.jscomp.NodeUtil.getObjectLitKeyTypeFromValueType(name, rawValueType);\n            if (valueType == null) {\n                valueType = unknownType;\n            }\n            objectType.defineInferredProperty(memberName, valueType, name);\n            if ((qObjName != null) && name.isStringKey()) {\n                java.lang.String qKeyName = (qObjName + \".\") + memberName;\n                com.google.javascript.jscomp.Scope.Var var = syntacticScope.getVar(qKeyName);\n                com.google.javascript.rhino.jstype.JSType oldType = (var == null) ? null : var.getType();\n                if ((var != null) && var.isTypeInferred()) {\n                    var.setType(oldType == null ? valueType : oldType.getLeastSupertype(oldType));\n                }\n                scope.inferQualifiedSlot(name, qKeyName, oldType == null ? unknownType : oldType, valueType);\n            }\n        } else {\n            n.setJSType(unknownType);\n        }\n    }\n    return scope;\n}",
            "src_parent_type": "Block",
            "src_type": "LocalVariable"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Method",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "if (objectType.hasReferenceName() && (!hasLendsName)) {\n    return scope;\n}",
            "src_parent": "{\n    com.google.javascript.rhino.jstype.JSType type = n.getJSType();\n    com.google.common.base.Preconditions.checkNotNull(type);\n    for (com.google.javascript.rhino.Node name = n.getFirstChild(); name != null; name = name.getNext()) {\n        scope = traverse(name.getFirstChild(), scope);\n    }\n    com.google.javascript.rhino.jstype.ObjectType objectType = com.google.javascript.rhino.jstype.ObjectType.cast(type);\n    if (objectType == null) {\n        return scope;\n    }\n    boolean hasLendsName = (n.getJSDocInfo() != null) && (n.getJSDocInfo().getLendsName() != null);\n    if (objectType.hasReferenceName() && (!hasLendsName)) {\n        return scope;\n    }\n    java.lang.String qObjName = com.google.javascript.jscomp.NodeUtil.getBestLValueName(com.google.javascript.jscomp.NodeUtil.getBestLValue(n));\n    for (com.google.javascript.rhino.Node name = n.getFirstChild(); name != null; name = name.getNext()) {\n        java.lang.String memberName = com.google.javascript.jscomp.NodeUtil.getObjectLitKeyName(name);\n        if (memberName != null) {\n            com.google.javascript.rhino.jstype.JSType rawValueType = name.getFirstChild().getJSType();\n            com.google.javascript.rhino.jstype.JSType valueType = com.google.javascript.jscomp.NodeUtil.getObjectLitKeyTypeFromValueType(name, rawValueType);\n            if (valueType == null) {\n                valueType = unknownType;\n            }\n            objectType.defineInferredProperty(memberName, valueType, name);\n            if ((qObjName != null) && name.isStringKey()) {\n                java.lang.String qKeyName = (qObjName + \".\") + memberName;\n                com.google.javascript.jscomp.Scope.Var var = syntacticScope.getVar(qKeyName);\n                com.google.javascript.rhino.jstype.JSType oldType = (var == null) ? null : var.getType();\n                if ((var != null) && var.isTypeInferred()) {\n                    var.setType(oldType == null ? valueType : oldType.getLeastSupertype(oldType));\n                }\n                scope.inferQualifiedSlot(name, qKeyName, oldType == null ? unknownType : oldType, valueType);\n            }\n        } else {\n            n.setJSType(unknownType);\n        }\n    }\n    return scope;\n}",
            "src_parent_type": "Block",
            "src_type": "If"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "For",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "Return",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "For",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "Invocation",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "objectType == null",
            "dst_parent": "if (objectType == null) {\n    return scope;\n}",
            "dst_parent_type": "If",
            "dst_type": "BinaryOperator",
            "operator": "MOV",
            "src": "(objectType == null)",
            "src_parent": "(objectType == null) || n.getBooleanProp(Node.REFLECTED_OBJECT)",
            "src_parent_type": "BinaryOperator",
            "src_type": "BinaryOperator"
          }
        }
      ],
      "file_name": "TypeInference"
    },
    {
      "features": [
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "if ((qName != null) && qName.endsWith(\".prototype\")) {\n    return false;\n}",
            "src_parent": "{\n    if (valueType == null) {\n        return true;\n    }\n    if ((qName != null) && qName.endsWith(\".prototype\")) {\n        return false;\n    }\n    boolean inferred = true;\n    if (info != null) {\n        inferred = !(((info.hasType() || info.hasEnumParameterType()) || ((isConstantSymbol(info, n) && (valueType != null)) && (!valueType.isUnknownType()))) || com.google.javascript.jscomp.FunctionTypeBuilder.isFunctionTypeDeclaration(info));\n    }\n    if ((inferred && (rhsValue != null)) && rhsValue.isFunction()) {\n        if (info != null) {\n            return false;\n        } else if ((!scope.isDeclared(qName, false)) && n.isUnscopedQualifiedName()) {\n            for (com.google.javascript.rhino.Node current = n.getParent(); !(current.isScript() || current.isFunction()); current = current.getParent()) {\n                if (com.google.javascript.jscomp.NodeUtil.isControlStructure(current)) {\n                    return true;\n                }\n            }\n            com.google.javascript.jscomp.FunctionTypeBuilder.AstFunctionContents contents = getFunctionAnalysisResults(scope.getRootNode());\n            if ((contents == null) || (!contents.getEscapedQualifiedNames().contains(qName))) {\n                return false;\n            }\n        }\n    }\n    return inferred;\n}",
            "src_parent_type": "Block",
            "src_type": "If"
          }
        }
      ],
      "file_name": "TypedScopeCreator"
    }
  ],
  "id": "Closure_171"
}