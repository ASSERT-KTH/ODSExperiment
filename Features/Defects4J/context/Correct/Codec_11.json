{
  "files": [
    {
      "features": [
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "TypeReference",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "void",
            "dst_parent": "private static final void encodeQuotedPrintable(int b, java.io.ByteArrayOutputStream buffer) {\n    buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.ESCAPE_CHAR);\n    char hex1 = java.lang.Character.toUpperCase(java.lang.Character.forDigit((b >> 4) & 0xf, 16));\n    char hex2 = java.lang.Character.toUpperCase(java.lang.Character.forDigit(b & 0xf, 16));\n    buffer.write(hex1);\n    buffer.write(hex2);\n}",
            "dst_parent_type": "Method",
            "dst_type": "TypeReference",
            "operator": "UPD",
            "src": "int",
            "src_parent": "private static final int encodeQuotedPrintable(int b, java.io.ByteArrayOutputStream buffer) {\n    buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.ESCAPE_CHAR);\n    char hex1 = java.lang.Character.toUpperCase(java.lang.Character.forDigit((b >> 4) & 0xf, 16));\n    char hex2 = java.lang.Character.toUpperCase(java.lang.Character.forDigit(b & 0xf, 16));\n    buffer.write(hex1);\n    buffer.write(hex2);\n    return 3;\n}",
            "src_parent_type": "Method",
            "src_type": "TypeReference"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "For",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "If",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "LocalVariable",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "byte",
            "dst_parent": "byte c",
            "dst_parent_type": "LocalVariable",
            "dst_type": "TypeReference",
            "operator": "UPD",
            "src": "int",
            "src_parent": "int pos = 1",
            "src_parent_type": "LocalVariable",
            "src_type": "TypeReference"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Field",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "private static final byte CR = 13;",
            "src_parent": "public class QuotedPrintableCodec implements org.apache.commons.codec.BinaryDecoder , org.apache.commons.codec.BinaryEncoder , org.apache.commons.codec.StringDecoder , org.apache.commons.codec.StringEncoder {\n    private final java.lang.String charset;\n\n    private static final java.util.BitSet PRINTABLE_CHARS = new java.util.BitSet(256);\n\n    private static final byte ESCAPE_CHAR = '=';\n\n    private static final byte TAB = 9;\n\n    private static final byte SPACE = 32;\n\n    private static final byte CR = 13;\n\n    private static final byte LF = 10;\n\n    private static final int SAFE_LENGTH = 73;\n\n    static {\n        for (int i = 33; i <= 60; i++) {\n            PRINTABLE_CHARS.set(i);\n        }\n        for (int i = 62; i <= 126; i++) {\n            PRINTABLE_CHARS.set(i);\n        }\n        PRINTABLE_CHARS.set(TAB);\n        PRINTABLE_CHARS.set(SPACE);\n    }\n\n    public QuotedPrintableCodec() {\n        this(org.apache.commons.codec.CharEncoding.UTF_8);\n    }\n\n    public QuotedPrintableCodec(java.lang.String charset) {\n        super();\n        this.charset = charset;\n    }\n\n    private static final int encodeQuotedPrintable(int b, java.io.ByteArrayOutputStream buffer) {\n        buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.ESCAPE_CHAR);\n        char hex1 = java.lang.Character.toUpperCase(java.lang.Character.forDigit((b >> 4) & 0xf, 16));\n        char hex2 = java.lang.Character.toUpperCase(java.lang.Character.forDigit(b & 0xf, 16));\n        buffer.write(hex1);\n        buffer.write(hex2);\n        return 3;\n    }\n\n    private static int getUnsignedOctet(final int index, final byte[] bytes) {\n        int b = bytes[index];\n        if (b < 0) {\n            b = 256 + b;\n        }\n        return b;\n    }\n\n    private static int encodeByte(final int b, final boolean encode, final java.io.ByteArrayOutputStream buffer) {\n        if (encode) {\n            return org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(b, buffer);\n        } else {\n            buffer.write(b);\n            return 1;\n        }\n    }\n\n    private static boolean isWhitespace(final int b) {\n        return (b == org.apache.commons.codec.net.QuotedPrintableCodec.SPACE) || (b == org.apache.commons.codec.net.QuotedPrintableCodec.TAB);\n    }\n\n    public static final byte[] encodeQuotedPrintable(java.util.BitSet printable, byte[] bytes) {\n        if (bytes == null) {\n            return null;\n        }\n        if (printable == null) {\n            printable = org.apache.commons.codec.net.QuotedPrintableCodec.PRINTABLE_CHARS;\n        }\n        java.io.ByteArrayOutputStream buffer = new java.io.ByteArrayOutputStream();\n        int pos = 1;\n        for (int i = 0; i < (bytes.length - 3); i++) {\n            int b = org.apache.commons.codec.net.QuotedPrintableCodec.getUnsignedOctet(i, bytes);\n            if (pos < org.apache.commons.codec.net.QuotedPrintableCodec.SAFE_LENGTH) {\n                pos += org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte(b, !printable.get(b), buffer);\n            } else {\n                org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte(b, (!printable.get(b)) || org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace(b), buffer);\n                buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.ESCAPE_CHAR);\n                buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.CR);\n                buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.LF);\n                pos = 1;\n            }\n        }\n        int b = org.apache.commons.codec.net.QuotedPrintableCodec.getUnsignedOctet(bytes.length - 3, bytes);\n        boolean encode = (!printable.get(b)) || (org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace(b) && (pos > (org.apache.commons.codec.net.QuotedPrintableCodec.SAFE_LENGTH - 5)));\n        pos += org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte(b, encode, buffer);\n        if (pos > (org.apache.commons.codec.net.QuotedPrintableCodec.SAFE_LENGTH - 2)) {\n            buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.ESCAPE_CHAR);\n            buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.CR);\n            buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.LF);\n        }\n        for (int i = bytes.length - 2; i < bytes.length; i++) {\n            b = org.apache.commons.codec.net.QuotedPrintableCodec.getUnsignedOctet(i, bytes);\n            encode = (!printable.get(b)) || ((i > (bytes.length - 2)) && org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace(b));\n            org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte(b, encode, buffer);\n        }\n        return buffer.toByteArray();\n    }\n\n    public static final byte[] decodeQuotedPrintable(byte[] bytes) throws org.apache.commons.codec.DecoderException {\n        if (bytes == null) {\n            return null;\n        }\n        java.io.ByteArrayOutputStream buffer = new java.io.ByteArrayOutputStream();\n        for (int i = 0; i < bytes.length; i++) {\n            final int b = bytes[i];\n            if (b == org.apache.commons.codec.net.QuotedPrintableCodec.ESCAPE_CHAR) {\n                try {\n                    if (bytes[++i] == org.apache.commons.codec.net.QuotedPrintableCodec.CR) {\n                        continue;\n                    }\n                    int u = org.apache.commons.codec.net.Utils.digit16(bytes[i]);\n                    int l = org.apache.commons.codec.net.Utils.digit16(bytes[++i]);\n                    buffer.write(((char) ((u << 4) + l)));\n                } catch (java.lang.ArrayIndexOutOfBoundsException e) {\n                    throw new org.apache.commons.codec.DecoderException(\"Invalid quoted-printable encoding\", e);\n                }\n            } else if ((b != org.apache.commons.codec.net.QuotedPrintableCodec.CR) && (b != org.apache.commons.codec.net.QuotedPrintableCodec.LF)) {\n                buffer.write(b);\n            }\n        }\n        return buffer.toByteArray();\n    }\n\n    public byte[] encode(byte[] bytes) {\n        return org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(org.apache.commons.codec.net.QuotedPrintableCodec.PRINTABLE_CHARS, bytes);\n    }\n\n    public byte[] decode(byte[] bytes) throws org.apache.commons.codec.DecoderException {\n        return org.apache.commons.codec.net.QuotedPrintableCodec.decodeQuotedPrintable(bytes);\n    }\n\n    public java.lang.String encode(java.lang.String pString) throws org.apache.commons.codec.EncoderException {\n        if (pString == null) {\n            return null;\n        }\n        try {\n            return encode(pString, getDefaultCharset());\n        } catch (java.io.UnsupportedEncodingException e) {\n            throw new org.apache.commons.codec.EncoderException(e.getMessage(), e);\n        }\n    }\n\n    public java.lang.String decode(java.lang.String pString, java.lang.String charset) throws java.io.UnsupportedEncodingException, org.apache.commons.codec.DecoderException {\n        if (pString == null) {\n            return null;\n        }\n        return new java.lang.String(decode(org.apache.commons.codec.binary.StringUtils.getBytesUsAscii(pString)), charset);\n    }\n\n    public java.lang.String decode(java.lang.String pString) throws org.apache.commons.codec.DecoderException {\n        if (pString == null) {\n            return null;\n        }\n        try {\n            return decode(pString, getDefaultCharset());\n        } catch (java.io.UnsupportedEncodingException e) {\n            throw new org.apache.commons.codec.DecoderException(e.getMessage(), e);\n        }\n    }\n\n    public java.lang.Object encode(java.lang.Object pObject) throws org.apache.commons.codec.EncoderException {\n        if (pObject == null) {\n            return null;\n        } else if (pObject instanceof byte[]) {\n            return encode(((byte[]) (pObject)));\n        } else if (pObject instanceof java.lang.String) {\n            return encode(((java.lang.String) (pObject)));\n        } else {\n            throw new org.apache.commons.codec.EncoderException((\"Objects of type \" + pObject.getClass().getName()) + \" cannot be quoted-printable encoded\");\n        }\n    }\n\n    public java.lang.Object decode(java.lang.Object pObject) throws org.apache.commons.codec.DecoderException {\n        if (pObject == null) {\n            return null;\n        } else if (pObject instanceof byte[]) {\n            return decode(((byte[]) (pObject)));\n        } else if (pObject instanceof java.lang.String) {\n            return decode(((java.lang.String) (pObject)));\n        } else {\n            throw new org.apache.commons.codec.DecoderException((\"Objects of type \" + pObject.getClass().getName()) + \" cannot be quoted-printable decoded\");\n        }\n    }\n\n    public java.lang.String getDefaultCharset() {\n        return this.charset;\n    }\n\n    public java.lang.String encode(java.lang.String pString, java.lang.String charset) throws java.io.UnsupportedEncodingException {\n        if (pString == null) {\n            return null;\n        }\n        return org.apache.commons.codec.binary.StringUtils.newStringUsAscii(encode(pString.getBytes(charset)));\n    }\n}",
            "src_parent_type": "Class",
            "src_type": "Field"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Field",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "private static final byte LF = 10;",
            "src_parent": "public class QuotedPrintableCodec implements org.apache.commons.codec.BinaryDecoder , org.apache.commons.codec.BinaryEncoder , org.apache.commons.codec.StringDecoder , org.apache.commons.codec.StringEncoder {\n    private final java.lang.String charset;\n\n    private static final java.util.BitSet PRINTABLE_CHARS = new java.util.BitSet(256);\n\n    private static final byte ESCAPE_CHAR = '=';\n\n    private static final byte TAB = 9;\n\n    private static final byte SPACE = 32;\n\n    private static final byte CR = 13;\n\n    private static final byte LF = 10;\n\n    private static final int SAFE_LENGTH = 73;\n\n    static {\n        for (int i = 33; i <= 60; i++) {\n            PRINTABLE_CHARS.set(i);\n        }\n        for (int i = 62; i <= 126; i++) {\n            PRINTABLE_CHARS.set(i);\n        }\n        PRINTABLE_CHARS.set(TAB);\n        PRINTABLE_CHARS.set(SPACE);\n    }\n\n    public QuotedPrintableCodec() {\n        this(org.apache.commons.codec.CharEncoding.UTF_8);\n    }\n\n    public QuotedPrintableCodec(java.lang.String charset) {\n        super();\n        this.charset = charset;\n    }\n\n    private static final int encodeQuotedPrintable(int b, java.io.ByteArrayOutputStream buffer) {\n        buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.ESCAPE_CHAR);\n        char hex1 = java.lang.Character.toUpperCase(java.lang.Character.forDigit((b >> 4) & 0xf, 16));\n        char hex2 = java.lang.Character.toUpperCase(java.lang.Character.forDigit(b & 0xf, 16));\n        buffer.write(hex1);\n        buffer.write(hex2);\n        return 3;\n    }\n\n    private static int getUnsignedOctet(final int index, final byte[] bytes) {\n        int b = bytes[index];\n        if (b < 0) {\n            b = 256 + b;\n        }\n        return b;\n    }\n\n    private static int encodeByte(final int b, final boolean encode, final java.io.ByteArrayOutputStream buffer) {\n        if (encode) {\n            return org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(b, buffer);\n        } else {\n            buffer.write(b);\n            return 1;\n        }\n    }\n\n    private static boolean isWhitespace(final int b) {\n        return (b == org.apache.commons.codec.net.QuotedPrintableCodec.SPACE) || (b == org.apache.commons.codec.net.QuotedPrintableCodec.TAB);\n    }\n\n    public static final byte[] encodeQuotedPrintable(java.util.BitSet printable, byte[] bytes) {\n        if (bytes == null) {\n            return null;\n        }\n        if (printable == null) {\n            printable = org.apache.commons.codec.net.QuotedPrintableCodec.PRINTABLE_CHARS;\n        }\n        java.io.ByteArrayOutputStream buffer = new java.io.ByteArrayOutputStream();\n        int pos = 1;\n        for (int i = 0; i < (bytes.length - 3); i++) {\n            int b = org.apache.commons.codec.net.QuotedPrintableCodec.getUnsignedOctet(i, bytes);\n            if (pos < org.apache.commons.codec.net.QuotedPrintableCodec.SAFE_LENGTH) {\n                pos += org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte(b, !printable.get(b), buffer);\n            } else {\n                org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte(b, (!printable.get(b)) || org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace(b), buffer);\n                buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.ESCAPE_CHAR);\n                buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.CR);\n                buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.LF);\n                pos = 1;\n            }\n        }\n        int b = org.apache.commons.codec.net.QuotedPrintableCodec.getUnsignedOctet(bytes.length - 3, bytes);\n        boolean encode = (!printable.get(b)) || (org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace(b) && (pos > (org.apache.commons.codec.net.QuotedPrintableCodec.SAFE_LENGTH - 5)));\n        pos += org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte(b, encode, buffer);\n        if (pos > (org.apache.commons.codec.net.QuotedPrintableCodec.SAFE_LENGTH - 2)) {\n            buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.ESCAPE_CHAR);\n            buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.CR);\n            buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.LF);\n        }\n        for (int i = bytes.length - 2; i < bytes.length; i++) {\n            b = org.apache.commons.codec.net.QuotedPrintableCodec.getUnsignedOctet(i, bytes);\n            encode = (!printable.get(b)) || ((i > (bytes.length - 2)) && org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace(b));\n            org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte(b, encode, buffer);\n        }\n        return buffer.toByteArray();\n    }\n\n    public static final byte[] decodeQuotedPrintable(byte[] bytes) throws org.apache.commons.codec.DecoderException {\n        if (bytes == null) {\n            return null;\n        }\n        java.io.ByteArrayOutputStream buffer = new java.io.ByteArrayOutputStream();\n        for (int i = 0; i < bytes.length; i++) {\n            final int b = bytes[i];\n            if (b == org.apache.commons.codec.net.QuotedPrintableCodec.ESCAPE_CHAR) {\n                try {\n                    if (bytes[++i] == org.apache.commons.codec.net.QuotedPrintableCodec.CR) {\n                        continue;\n                    }\n                    int u = org.apache.commons.codec.net.Utils.digit16(bytes[i]);\n                    int l = org.apache.commons.codec.net.Utils.digit16(bytes[++i]);\n                    buffer.write(((char) ((u << 4) + l)));\n                } catch (java.lang.ArrayIndexOutOfBoundsException e) {\n                    throw new org.apache.commons.codec.DecoderException(\"Invalid quoted-printable encoding\", e);\n                }\n            } else if ((b != org.apache.commons.codec.net.QuotedPrintableCodec.CR) && (b != org.apache.commons.codec.net.QuotedPrintableCodec.LF)) {\n                buffer.write(b);\n            }\n        }\n        return buffer.toByteArray();\n    }\n\n    public byte[] encode(byte[] bytes) {\n        return org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(org.apache.commons.codec.net.QuotedPrintableCodec.PRINTABLE_CHARS, bytes);\n    }\n\n    public byte[] decode(byte[] bytes) throws org.apache.commons.codec.DecoderException {\n        return org.apache.commons.codec.net.QuotedPrintableCodec.decodeQuotedPrintable(bytes);\n    }\n\n    public java.lang.String encode(java.lang.String pString) throws org.apache.commons.codec.EncoderException {\n        if (pString == null) {\n            return null;\n        }\n        try {\n            return encode(pString, getDefaultCharset());\n        } catch (java.io.UnsupportedEncodingException e) {\n            throw new org.apache.commons.codec.EncoderException(e.getMessage(), e);\n        }\n    }\n\n    public java.lang.String decode(java.lang.String pString, java.lang.String charset) throws java.io.UnsupportedEncodingException, org.apache.commons.codec.DecoderException {\n        if (pString == null) {\n            return null;\n        }\n        return new java.lang.String(decode(org.apache.commons.codec.binary.StringUtils.getBytesUsAscii(pString)), charset);\n    }\n\n    public java.lang.String decode(java.lang.String pString) throws org.apache.commons.codec.DecoderException {\n        if (pString == null) {\n            return null;\n        }\n        try {\n            return decode(pString, getDefaultCharset());\n        } catch (java.io.UnsupportedEncodingException e) {\n            throw new org.apache.commons.codec.DecoderException(e.getMessage(), e);\n        }\n    }\n\n    public java.lang.Object encode(java.lang.Object pObject) throws org.apache.commons.codec.EncoderException {\n        if (pObject == null) {\n            return null;\n        } else if (pObject instanceof byte[]) {\n            return encode(((byte[]) (pObject)));\n        } else if (pObject instanceof java.lang.String) {\n            return encode(((java.lang.String) (pObject)));\n        } else {\n            throw new org.apache.commons.codec.EncoderException((\"Objects of type \" + pObject.getClass().getName()) + \" cannot be quoted-printable encoded\");\n        }\n    }\n\n    public java.lang.Object decode(java.lang.Object pObject) throws org.apache.commons.codec.DecoderException {\n        if (pObject == null) {\n            return null;\n        } else if (pObject instanceof byte[]) {\n            return decode(((byte[]) (pObject)));\n        } else if (pObject instanceof java.lang.String) {\n            return decode(((java.lang.String) (pObject)));\n        } else {\n            throw new org.apache.commons.codec.DecoderException((\"Objects of type \" + pObject.getClass().getName()) + \" cannot be quoted-printable decoded\");\n        }\n    }\n\n    public java.lang.String getDefaultCharset() {\n        return this.charset;\n    }\n\n    public java.lang.String encode(java.lang.String pString, java.lang.String charset) throws java.io.UnsupportedEncodingException {\n        if (pString == null) {\n            return null;\n        }\n        return org.apache.commons.codec.binary.StringUtils.newStringUsAscii(encode(pString.getBytes(charset)));\n    }\n}",
            "src_parent_type": "Class",
            "src_type": "Field"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Field",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "private static final int SAFE_LENGTH = 73;",
            "src_parent": "public class QuotedPrintableCodec implements org.apache.commons.codec.BinaryDecoder , org.apache.commons.codec.BinaryEncoder , org.apache.commons.codec.StringDecoder , org.apache.commons.codec.StringEncoder {\n    private final java.lang.String charset;\n\n    private static final java.util.BitSet PRINTABLE_CHARS = new java.util.BitSet(256);\n\n    private static final byte ESCAPE_CHAR = '=';\n\n    private static final byte TAB = 9;\n\n    private static final byte SPACE = 32;\n\n    private static final byte CR = 13;\n\n    private static final byte LF = 10;\n\n    private static final int SAFE_LENGTH = 73;\n\n    static {\n        for (int i = 33; i <= 60; i++) {\n            PRINTABLE_CHARS.set(i);\n        }\n        for (int i = 62; i <= 126; i++) {\n            PRINTABLE_CHARS.set(i);\n        }\n        PRINTABLE_CHARS.set(TAB);\n        PRINTABLE_CHARS.set(SPACE);\n    }\n\n    public QuotedPrintableCodec() {\n        this(org.apache.commons.codec.CharEncoding.UTF_8);\n    }\n\n    public QuotedPrintableCodec(java.lang.String charset) {\n        super();\n        this.charset = charset;\n    }\n\n    private static final int encodeQuotedPrintable(int b, java.io.ByteArrayOutputStream buffer) {\n        buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.ESCAPE_CHAR);\n        char hex1 = java.lang.Character.toUpperCase(java.lang.Character.forDigit((b >> 4) & 0xf, 16));\n        char hex2 = java.lang.Character.toUpperCase(java.lang.Character.forDigit(b & 0xf, 16));\n        buffer.write(hex1);\n        buffer.write(hex2);\n        return 3;\n    }\n\n    private static int getUnsignedOctet(final int index, final byte[] bytes) {\n        int b = bytes[index];\n        if (b < 0) {\n            b = 256 + b;\n        }\n        return b;\n    }\n\n    private static int encodeByte(final int b, final boolean encode, final java.io.ByteArrayOutputStream buffer) {\n        if (encode) {\n            return org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(b, buffer);\n        } else {\n            buffer.write(b);\n            return 1;\n        }\n    }\n\n    private static boolean isWhitespace(final int b) {\n        return (b == org.apache.commons.codec.net.QuotedPrintableCodec.SPACE) || (b == org.apache.commons.codec.net.QuotedPrintableCodec.TAB);\n    }\n\n    public static final byte[] encodeQuotedPrintable(java.util.BitSet printable, byte[] bytes) {\n        if (bytes == null) {\n            return null;\n        }\n        if (printable == null) {\n            printable = org.apache.commons.codec.net.QuotedPrintableCodec.PRINTABLE_CHARS;\n        }\n        java.io.ByteArrayOutputStream buffer = new java.io.ByteArrayOutputStream();\n        int pos = 1;\n        for (int i = 0; i < (bytes.length - 3); i++) {\n            int b = org.apache.commons.codec.net.QuotedPrintableCodec.getUnsignedOctet(i, bytes);\n            if (pos < org.apache.commons.codec.net.QuotedPrintableCodec.SAFE_LENGTH) {\n                pos += org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte(b, !printable.get(b), buffer);\n            } else {\n                org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte(b, (!printable.get(b)) || org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace(b), buffer);\n                buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.ESCAPE_CHAR);\n                buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.CR);\n                buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.LF);\n                pos = 1;\n            }\n        }\n        int b = org.apache.commons.codec.net.QuotedPrintableCodec.getUnsignedOctet(bytes.length - 3, bytes);\n        boolean encode = (!printable.get(b)) || (org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace(b) && (pos > (org.apache.commons.codec.net.QuotedPrintableCodec.SAFE_LENGTH - 5)));\n        pos += org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte(b, encode, buffer);\n        if (pos > (org.apache.commons.codec.net.QuotedPrintableCodec.SAFE_LENGTH - 2)) {\n            buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.ESCAPE_CHAR);\n            buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.CR);\n            buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.LF);\n        }\n        for (int i = bytes.length - 2; i < bytes.length; i++) {\n            b = org.apache.commons.codec.net.QuotedPrintableCodec.getUnsignedOctet(i, bytes);\n            encode = (!printable.get(b)) || ((i > (bytes.length - 2)) && org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace(b));\n            org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte(b, encode, buffer);\n        }\n        return buffer.toByteArray();\n    }\n\n    public static final byte[] decodeQuotedPrintable(byte[] bytes) throws org.apache.commons.codec.DecoderException {\n        if (bytes == null) {\n            return null;\n        }\n        java.io.ByteArrayOutputStream buffer = new java.io.ByteArrayOutputStream();\n        for (int i = 0; i < bytes.length; i++) {\n            final int b = bytes[i];\n            if (b == org.apache.commons.codec.net.QuotedPrintableCodec.ESCAPE_CHAR) {\n                try {\n                    if (bytes[++i] == org.apache.commons.codec.net.QuotedPrintableCodec.CR) {\n                        continue;\n                    }\n                    int u = org.apache.commons.codec.net.Utils.digit16(bytes[i]);\n                    int l = org.apache.commons.codec.net.Utils.digit16(bytes[++i]);\n                    buffer.write(((char) ((u << 4) + l)));\n                } catch (java.lang.ArrayIndexOutOfBoundsException e) {\n                    throw new org.apache.commons.codec.DecoderException(\"Invalid quoted-printable encoding\", e);\n                }\n            } else if ((b != org.apache.commons.codec.net.QuotedPrintableCodec.CR) && (b != org.apache.commons.codec.net.QuotedPrintableCodec.LF)) {\n                buffer.write(b);\n            }\n        }\n        return buffer.toByteArray();\n    }\n\n    public byte[] encode(byte[] bytes) {\n        return org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(org.apache.commons.codec.net.QuotedPrintableCodec.PRINTABLE_CHARS, bytes);\n    }\n\n    public byte[] decode(byte[] bytes) throws org.apache.commons.codec.DecoderException {\n        return org.apache.commons.codec.net.QuotedPrintableCodec.decodeQuotedPrintable(bytes);\n    }\n\n    public java.lang.String encode(java.lang.String pString) throws org.apache.commons.codec.EncoderException {\n        if (pString == null) {\n            return null;\n        }\n        try {\n            return encode(pString, getDefaultCharset());\n        } catch (java.io.UnsupportedEncodingException e) {\n            throw new org.apache.commons.codec.EncoderException(e.getMessage(), e);\n        }\n    }\n\n    public java.lang.String decode(java.lang.String pString, java.lang.String charset) throws java.io.UnsupportedEncodingException, org.apache.commons.codec.DecoderException {\n        if (pString == null) {\n            return null;\n        }\n        return new java.lang.String(decode(org.apache.commons.codec.binary.StringUtils.getBytesUsAscii(pString)), charset);\n    }\n\n    public java.lang.String decode(java.lang.String pString) throws org.apache.commons.codec.DecoderException {\n        if (pString == null) {\n            return null;\n        }\n        try {\n            return decode(pString, getDefaultCharset());\n        } catch (java.io.UnsupportedEncodingException e) {\n            throw new org.apache.commons.codec.DecoderException(e.getMessage(), e);\n        }\n    }\n\n    public java.lang.Object encode(java.lang.Object pObject) throws org.apache.commons.codec.EncoderException {\n        if (pObject == null) {\n            return null;\n        } else if (pObject instanceof byte[]) {\n            return encode(((byte[]) (pObject)));\n        } else if (pObject instanceof java.lang.String) {\n            return encode(((java.lang.String) (pObject)));\n        } else {\n            throw new org.apache.commons.codec.EncoderException((\"Objects of type \" + pObject.getClass().getName()) + \" cannot be quoted-printable encoded\");\n        }\n    }\n\n    public java.lang.Object decode(java.lang.Object pObject) throws org.apache.commons.codec.DecoderException {\n        if (pObject == null) {\n            return null;\n        } else if (pObject instanceof byte[]) {\n            return decode(((byte[]) (pObject)));\n        } else if (pObject instanceof java.lang.String) {\n            return decode(((java.lang.String) (pObject)));\n        } else {\n            throw new org.apache.commons.codec.DecoderException((\"Objects of type \" + pObject.getClass().getName()) + \" cannot be quoted-printable decoded\");\n        }\n    }\n\n    public java.lang.String getDefaultCharset() {\n        return this.charset;\n    }\n\n    public java.lang.String encode(java.lang.String pString, java.lang.String charset) throws java.io.UnsupportedEncodingException {\n        if (pString == null) {\n            return null;\n        }\n        return org.apache.commons.codec.binary.StringUtils.newStringUsAscii(encode(pString.getBytes(charset)));\n    }\n}",
            "src_parent_type": "Class",
            "src_type": "Field"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "LocalVariable",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Return",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "return 3",
            "src_parent": "{\n    buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.ESCAPE_CHAR);\n    char hex1 = java.lang.Character.toUpperCase(java.lang.Character.forDigit((b >> 4) & 0xf, 16));\n    char hex2 = java.lang.Character.toUpperCase(java.lang.Character.forDigit(b & 0xf, 16));\n    buffer.write(hex1);\n    buffer.write(hex2);\n    return 3;\n}",
            "src_parent_type": "Block",
            "src_type": "Return"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Method",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "private static int getUnsignedOctet(final int index, final byte[] bytes) {\n    int b = bytes[index];\n    if (b < 0) {\n        b = 256 + b;\n    }\n    return b;\n}",
            "src_parent": "public class QuotedPrintableCodec implements org.apache.commons.codec.BinaryDecoder , org.apache.commons.codec.BinaryEncoder , org.apache.commons.codec.StringDecoder , org.apache.commons.codec.StringEncoder {\n    private final java.lang.String charset;\n\n    private static final java.util.BitSet PRINTABLE_CHARS = new java.util.BitSet(256);\n\n    private static final byte ESCAPE_CHAR = '=';\n\n    private static final byte TAB = 9;\n\n    private static final byte SPACE = 32;\n\n    private static final byte CR = 13;\n\n    private static final byte LF = 10;\n\n    private static final int SAFE_LENGTH = 73;\n\n    static {\n        for (int i = 33; i <= 60; i++) {\n            PRINTABLE_CHARS.set(i);\n        }\n        for (int i = 62; i <= 126; i++) {\n            PRINTABLE_CHARS.set(i);\n        }\n        PRINTABLE_CHARS.set(TAB);\n        PRINTABLE_CHARS.set(SPACE);\n    }\n\n    public QuotedPrintableCodec() {\n        this(org.apache.commons.codec.CharEncoding.UTF_8);\n    }\n\n    public QuotedPrintableCodec(java.lang.String charset) {\n        super();\n        this.charset = charset;\n    }\n\n    private static final int encodeQuotedPrintable(int b, java.io.ByteArrayOutputStream buffer) {\n        buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.ESCAPE_CHAR);\n        char hex1 = java.lang.Character.toUpperCase(java.lang.Character.forDigit((b >> 4) & 0xf, 16));\n        char hex2 = java.lang.Character.toUpperCase(java.lang.Character.forDigit(b & 0xf, 16));\n        buffer.write(hex1);\n        buffer.write(hex2);\n        return 3;\n    }\n\n    private static int getUnsignedOctet(final int index, final byte[] bytes) {\n        int b = bytes[index];\n        if (b < 0) {\n            b = 256 + b;\n        }\n        return b;\n    }\n\n    private static int encodeByte(final int b, final boolean encode, final java.io.ByteArrayOutputStream buffer) {\n        if (encode) {\n            return org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(b, buffer);\n        } else {\n            buffer.write(b);\n            return 1;\n        }\n    }\n\n    private static boolean isWhitespace(final int b) {\n        return (b == org.apache.commons.codec.net.QuotedPrintableCodec.SPACE) || (b == org.apache.commons.codec.net.QuotedPrintableCodec.TAB);\n    }\n\n    public static final byte[] encodeQuotedPrintable(java.util.BitSet printable, byte[] bytes) {\n        if (bytes == null) {\n            return null;\n        }\n        if (printable == null) {\n            printable = org.apache.commons.codec.net.QuotedPrintableCodec.PRINTABLE_CHARS;\n        }\n        java.io.ByteArrayOutputStream buffer = new java.io.ByteArrayOutputStream();\n        int pos = 1;\n        for (int i = 0; i < (bytes.length - 3); i++) {\n            int b = org.apache.commons.codec.net.QuotedPrintableCodec.getUnsignedOctet(i, bytes);\n            if (pos < org.apache.commons.codec.net.QuotedPrintableCodec.SAFE_LENGTH) {\n                pos += org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte(b, !printable.get(b), buffer);\n            } else {\n                org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte(b, (!printable.get(b)) || org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace(b), buffer);\n                buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.ESCAPE_CHAR);\n                buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.CR);\n                buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.LF);\n                pos = 1;\n            }\n        }\n        int b = org.apache.commons.codec.net.QuotedPrintableCodec.getUnsignedOctet(bytes.length - 3, bytes);\n        boolean encode = (!printable.get(b)) || (org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace(b) && (pos > (org.apache.commons.codec.net.QuotedPrintableCodec.SAFE_LENGTH - 5)));\n        pos += org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte(b, encode, buffer);\n        if (pos > (org.apache.commons.codec.net.QuotedPrintableCodec.SAFE_LENGTH - 2)) {\n            buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.ESCAPE_CHAR);\n            buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.CR);\n            buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.LF);\n        }\n        for (int i = bytes.length - 2; i < bytes.length; i++) {\n            b = org.apache.commons.codec.net.QuotedPrintableCodec.getUnsignedOctet(i, bytes);\n            encode = (!printable.get(b)) || ((i > (bytes.length - 2)) && org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace(b));\n            org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte(b, encode, buffer);\n        }\n        return buffer.toByteArray();\n    }\n\n    public static final byte[] decodeQuotedPrintable(byte[] bytes) throws org.apache.commons.codec.DecoderException {\n        if (bytes == null) {\n            return null;\n        }\n        java.io.ByteArrayOutputStream buffer = new java.io.ByteArrayOutputStream();\n        for (int i = 0; i < bytes.length; i++) {\n            final int b = bytes[i];\n            if (b == org.apache.commons.codec.net.QuotedPrintableCodec.ESCAPE_CHAR) {\n                try {\n                    if (bytes[++i] == org.apache.commons.codec.net.QuotedPrintableCodec.CR) {\n                        continue;\n                    }\n                    int u = org.apache.commons.codec.net.Utils.digit16(bytes[i]);\n                    int l = org.apache.commons.codec.net.Utils.digit16(bytes[++i]);\n                    buffer.write(((char) ((u << 4) + l)));\n                } catch (java.lang.ArrayIndexOutOfBoundsException e) {\n                    throw new org.apache.commons.codec.DecoderException(\"Invalid quoted-printable encoding\", e);\n                }\n            } else if ((b != org.apache.commons.codec.net.QuotedPrintableCodec.CR) && (b != org.apache.commons.codec.net.QuotedPrintableCodec.LF)) {\n                buffer.write(b);\n            }\n        }\n        return buffer.toByteArray();\n    }\n\n    public byte[] encode(byte[] bytes) {\n        return org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(org.apache.commons.codec.net.QuotedPrintableCodec.PRINTABLE_CHARS, bytes);\n    }\n\n    public byte[] decode(byte[] bytes) throws org.apache.commons.codec.DecoderException {\n        return org.apache.commons.codec.net.QuotedPrintableCodec.decodeQuotedPrintable(bytes);\n    }\n\n    public java.lang.String encode(java.lang.String pString) throws org.apache.commons.codec.EncoderException {\n        if (pString == null) {\n            return null;\n        }\n        try {\n            return encode(pString, getDefaultCharset());\n        } catch (java.io.UnsupportedEncodingException e) {\n            throw new org.apache.commons.codec.EncoderException(e.getMessage(), e);\n        }\n    }\n\n    public java.lang.String decode(java.lang.String pString, java.lang.String charset) throws java.io.UnsupportedEncodingException, org.apache.commons.codec.DecoderException {\n        if (pString == null) {\n            return null;\n        }\n        return new java.lang.String(decode(org.apache.commons.codec.binary.StringUtils.getBytesUsAscii(pString)), charset);\n    }\n\n    public java.lang.String decode(java.lang.String pString) throws org.apache.commons.codec.DecoderException {\n        if (pString == null) {\n            return null;\n        }\n        try {\n            return decode(pString, getDefaultCharset());\n        } catch (java.io.UnsupportedEncodingException e) {\n            throw new org.apache.commons.codec.DecoderException(e.getMessage(), e);\n        }\n    }\n\n    public java.lang.Object encode(java.lang.Object pObject) throws org.apache.commons.codec.EncoderException {\n        if (pObject == null) {\n            return null;\n        } else if (pObject instanceof byte[]) {\n            return encode(((byte[]) (pObject)));\n        } else if (pObject instanceof java.lang.String) {\n            return encode(((java.lang.String) (pObject)));\n        } else {\n            throw new org.apache.commons.codec.EncoderException((\"Objects of type \" + pObject.getClass().getName()) + \" cannot be quoted-printable encoded\");\n        }\n    }\n\n    public java.lang.Object decode(java.lang.Object pObject) throws org.apache.commons.codec.DecoderException {\n        if (pObject == null) {\n            return null;\n        } else if (pObject instanceof byte[]) {\n            return decode(((byte[]) (pObject)));\n        } else if (pObject instanceof java.lang.String) {\n            return decode(((java.lang.String) (pObject)));\n        } else {\n            throw new org.apache.commons.codec.DecoderException((\"Objects of type \" + pObject.getClass().getName()) + \" cannot be quoted-printable decoded\");\n        }\n    }\n\n    public java.lang.String getDefaultCharset() {\n        return this.charset;\n    }\n\n    public java.lang.String encode(java.lang.String pString, java.lang.String charset) throws java.io.UnsupportedEncodingException {\n        if (pString == null) {\n            return null;\n        }\n        return org.apache.commons.codec.binary.StringUtils.newStringUsAscii(encode(pString.getBytes(charset)));\n    }\n}",
            "src_parent_type": "Class",
            "src_type": "Method"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "true",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Method",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "private static int encodeByte(final int b, final boolean encode, final java.io.ByteArrayOutputStream buffer) {\n    if (encode) {\n        return org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(b, buffer);\n    } else {\n        buffer.write(b);\n        return 1;\n    }\n}",
            "src_parent": "public class QuotedPrintableCodec implements org.apache.commons.codec.BinaryDecoder , org.apache.commons.codec.BinaryEncoder , org.apache.commons.codec.StringDecoder , org.apache.commons.codec.StringEncoder {\n    private final java.lang.String charset;\n\n    private static final java.util.BitSet PRINTABLE_CHARS = new java.util.BitSet(256);\n\n    private static final byte ESCAPE_CHAR = '=';\n\n    private static final byte TAB = 9;\n\n    private static final byte SPACE = 32;\n\n    private static final byte CR = 13;\n\n    private static final byte LF = 10;\n\n    private static final int SAFE_LENGTH = 73;\n\n    static {\n        for (int i = 33; i <= 60; i++) {\n            PRINTABLE_CHARS.set(i);\n        }\n        for (int i = 62; i <= 126; i++) {\n            PRINTABLE_CHARS.set(i);\n        }\n        PRINTABLE_CHARS.set(TAB);\n        PRINTABLE_CHARS.set(SPACE);\n    }\n\n    public QuotedPrintableCodec() {\n        this(org.apache.commons.codec.CharEncoding.UTF_8);\n    }\n\n    public QuotedPrintableCodec(java.lang.String charset) {\n        super();\n        this.charset = charset;\n    }\n\n    private static final int encodeQuotedPrintable(int b, java.io.ByteArrayOutputStream buffer) {\n        buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.ESCAPE_CHAR);\n        char hex1 = java.lang.Character.toUpperCase(java.lang.Character.forDigit((b >> 4) & 0xf, 16));\n        char hex2 = java.lang.Character.toUpperCase(java.lang.Character.forDigit(b & 0xf, 16));\n        buffer.write(hex1);\n        buffer.write(hex2);\n        return 3;\n    }\n\n    private static int getUnsignedOctet(final int index, final byte[] bytes) {\n        int b = bytes[index];\n        if (b < 0) {\n            b = 256 + b;\n        }\n        return b;\n    }\n\n    private static int encodeByte(final int b, final boolean encode, final java.io.ByteArrayOutputStream buffer) {\n        if (encode) {\n            return org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(b, buffer);\n        } else {\n            buffer.write(b);\n            return 1;\n        }\n    }\n\n    private static boolean isWhitespace(final int b) {\n        return (b == org.apache.commons.codec.net.QuotedPrintableCodec.SPACE) || (b == org.apache.commons.codec.net.QuotedPrintableCodec.TAB);\n    }\n\n    public static final byte[] encodeQuotedPrintable(java.util.BitSet printable, byte[] bytes) {\n        if (bytes == null) {\n            return null;\n        }\n        if (printable == null) {\n            printable = org.apache.commons.codec.net.QuotedPrintableCodec.PRINTABLE_CHARS;\n        }\n        java.io.ByteArrayOutputStream buffer = new java.io.ByteArrayOutputStream();\n        int pos = 1;\n        for (int i = 0; i < (bytes.length - 3); i++) {\n            int b = org.apache.commons.codec.net.QuotedPrintableCodec.getUnsignedOctet(i, bytes);\n            if (pos < org.apache.commons.codec.net.QuotedPrintableCodec.SAFE_LENGTH) {\n                pos += org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte(b, !printable.get(b), buffer);\n            } else {\n                org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte(b, (!printable.get(b)) || org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace(b), buffer);\n                buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.ESCAPE_CHAR);\n                buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.CR);\n                buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.LF);\n                pos = 1;\n            }\n        }\n        int b = org.apache.commons.codec.net.QuotedPrintableCodec.getUnsignedOctet(bytes.length - 3, bytes);\n        boolean encode = (!printable.get(b)) || (org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace(b) && (pos > (org.apache.commons.codec.net.QuotedPrintableCodec.SAFE_LENGTH - 5)));\n        pos += org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte(b, encode, buffer);\n        if (pos > (org.apache.commons.codec.net.QuotedPrintableCodec.SAFE_LENGTH - 2)) {\n            buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.ESCAPE_CHAR);\n            buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.CR);\n            buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.LF);\n        }\n        for (int i = bytes.length - 2; i < bytes.length; i++) {\n            b = org.apache.commons.codec.net.QuotedPrintableCodec.getUnsignedOctet(i, bytes);\n            encode = (!printable.get(b)) || ((i > (bytes.length - 2)) && org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace(b));\n            org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte(b, encode, buffer);\n        }\n        return buffer.toByteArray();\n    }\n\n    public static final byte[] decodeQuotedPrintable(byte[] bytes) throws org.apache.commons.codec.DecoderException {\n        if (bytes == null) {\n            return null;\n        }\n        java.io.ByteArrayOutputStream buffer = new java.io.ByteArrayOutputStream();\n        for (int i = 0; i < bytes.length; i++) {\n            final int b = bytes[i];\n            if (b == org.apache.commons.codec.net.QuotedPrintableCodec.ESCAPE_CHAR) {\n                try {\n                    if (bytes[++i] == org.apache.commons.codec.net.QuotedPrintableCodec.CR) {\n                        continue;\n                    }\n                    int u = org.apache.commons.codec.net.Utils.digit16(bytes[i]);\n                    int l = org.apache.commons.codec.net.Utils.digit16(bytes[++i]);\n                    buffer.write(((char) ((u << 4) + l)));\n                } catch (java.lang.ArrayIndexOutOfBoundsException e) {\n                    throw new org.apache.commons.codec.DecoderException(\"Invalid quoted-printable encoding\", e);\n                }\n            } else if ((b != org.apache.commons.codec.net.QuotedPrintableCodec.CR) && (b != org.apache.commons.codec.net.QuotedPrintableCodec.LF)) {\n                buffer.write(b);\n            }\n        }\n        return buffer.toByteArray();\n    }\n\n    public byte[] encode(byte[] bytes) {\n        return org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(org.apache.commons.codec.net.QuotedPrintableCodec.PRINTABLE_CHARS, bytes);\n    }\n\n    public byte[] decode(byte[] bytes) throws org.apache.commons.codec.DecoderException {\n        return org.apache.commons.codec.net.QuotedPrintableCodec.decodeQuotedPrintable(bytes);\n    }\n\n    public java.lang.String encode(java.lang.String pString) throws org.apache.commons.codec.EncoderException {\n        if (pString == null) {\n            return null;\n        }\n        try {\n            return encode(pString, getDefaultCharset());\n        } catch (java.io.UnsupportedEncodingException e) {\n            throw new org.apache.commons.codec.EncoderException(e.getMessage(), e);\n        }\n    }\n\n    public java.lang.String decode(java.lang.String pString, java.lang.String charset) throws java.io.UnsupportedEncodingException, org.apache.commons.codec.DecoderException {\n        if (pString == null) {\n            return null;\n        }\n        return new java.lang.String(decode(org.apache.commons.codec.binary.StringUtils.getBytesUsAscii(pString)), charset);\n    }\n\n    public java.lang.String decode(java.lang.String pString) throws org.apache.commons.codec.DecoderException {\n        if (pString == null) {\n            return null;\n        }\n        try {\n            return decode(pString, getDefaultCharset());\n        } catch (java.io.UnsupportedEncodingException e) {\n            throw new org.apache.commons.codec.DecoderException(e.getMessage(), e);\n        }\n    }\n\n    public java.lang.Object encode(java.lang.Object pObject) throws org.apache.commons.codec.EncoderException {\n        if (pObject == null) {\n            return null;\n        } else if (pObject instanceof byte[]) {\n            return encode(((byte[]) (pObject)));\n        } else if (pObject instanceof java.lang.String) {\n            return encode(((java.lang.String) (pObject)));\n        } else {\n            throw new org.apache.commons.codec.EncoderException((\"Objects of type \" + pObject.getClass().getName()) + \" cannot be quoted-printable encoded\");\n        }\n    }\n\n    public java.lang.Object decode(java.lang.Object pObject) throws org.apache.commons.codec.DecoderException {\n        if (pObject == null) {\n            return null;\n        } else if (pObject instanceof byte[]) {\n            return decode(((byte[]) (pObject)));\n        } else if (pObject instanceof java.lang.String) {\n            return decode(((java.lang.String) (pObject)));\n        } else {\n            throw new org.apache.commons.codec.DecoderException((\"Objects of type \" + pObject.getClass().getName()) + \" cannot be quoted-printable decoded\");\n        }\n    }\n\n    public java.lang.String getDefaultCharset() {\n        return this.charset;\n    }\n\n    public java.lang.String encode(java.lang.String pString, java.lang.String charset) throws java.io.UnsupportedEncodingException {\n        if (pString == null) {\n            return null;\n        }\n        return org.apache.commons.codec.binary.StringUtils.newStringUsAscii(encode(pString.getBytes(charset)));\n    }\n}",
            "src_parent_type": "Class",
            "src_type": "Method"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Method",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "private static boolean isWhitespace(final int b) {\n    return (b == org.apache.commons.codec.net.QuotedPrintableCodec.SPACE) || (b == org.apache.commons.codec.net.QuotedPrintableCodec.TAB);\n}",
            "src_parent": "public class QuotedPrintableCodec implements org.apache.commons.codec.BinaryDecoder , org.apache.commons.codec.BinaryEncoder , org.apache.commons.codec.StringDecoder , org.apache.commons.codec.StringEncoder {\n    private final java.lang.String charset;\n\n    private static final java.util.BitSet PRINTABLE_CHARS = new java.util.BitSet(256);\n\n    private static final byte ESCAPE_CHAR = '=';\n\n    private static final byte TAB = 9;\n\n    private static final byte SPACE = 32;\n\n    private static final byte CR = 13;\n\n    private static final byte LF = 10;\n\n    private static final int SAFE_LENGTH = 73;\n\n    static {\n        for (int i = 33; i <= 60; i++) {\n            PRINTABLE_CHARS.set(i);\n        }\n        for (int i = 62; i <= 126; i++) {\n            PRINTABLE_CHARS.set(i);\n        }\n        PRINTABLE_CHARS.set(TAB);\n        PRINTABLE_CHARS.set(SPACE);\n    }\n\n    public QuotedPrintableCodec() {\n        this(org.apache.commons.codec.CharEncoding.UTF_8);\n    }\n\n    public QuotedPrintableCodec(java.lang.String charset) {\n        super();\n        this.charset = charset;\n    }\n\n    private static final int encodeQuotedPrintable(int b, java.io.ByteArrayOutputStream buffer) {\n        buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.ESCAPE_CHAR);\n        char hex1 = java.lang.Character.toUpperCase(java.lang.Character.forDigit((b >> 4) & 0xf, 16));\n        char hex2 = java.lang.Character.toUpperCase(java.lang.Character.forDigit(b & 0xf, 16));\n        buffer.write(hex1);\n        buffer.write(hex2);\n        return 3;\n    }\n\n    private static int getUnsignedOctet(final int index, final byte[] bytes) {\n        int b = bytes[index];\n        if (b < 0) {\n            b = 256 + b;\n        }\n        return b;\n    }\n\n    private static int encodeByte(final int b, final boolean encode, final java.io.ByteArrayOutputStream buffer) {\n        if (encode) {\n            return org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(b, buffer);\n        } else {\n            buffer.write(b);\n            return 1;\n        }\n    }\n\n    private static boolean isWhitespace(final int b) {\n        return (b == org.apache.commons.codec.net.QuotedPrintableCodec.SPACE) || (b == org.apache.commons.codec.net.QuotedPrintableCodec.TAB);\n    }\n\n    public static final byte[] encodeQuotedPrintable(java.util.BitSet printable, byte[] bytes) {\n        if (bytes == null) {\n            return null;\n        }\n        if (printable == null) {\n            printable = org.apache.commons.codec.net.QuotedPrintableCodec.PRINTABLE_CHARS;\n        }\n        java.io.ByteArrayOutputStream buffer = new java.io.ByteArrayOutputStream();\n        int pos = 1;\n        for (int i = 0; i < (bytes.length - 3); i++) {\n            int b = org.apache.commons.codec.net.QuotedPrintableCodec.getUnsignedOctet(i, bytes);\n            if (pos < org.apache.commons.codec.net.QuotedPrintableCodec.SAFE_LENGTH) {\n                pos += org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte(b, !printable.get(b), buffer);\n            } else {\n                org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte(b, (!printable.get(b)) || org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace(b), buffer);\n                buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.ESCAPE_CHAR);\n                buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.CR);\n                buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.LF);\n                pos = 1;\n            }\n        }\n        int b = org.apache.commons.codec.net.QuotedPrintableCodec.getUnsignedOctet(bytes.length - 3, bytes);\n        boolean encode = (!printable.get(b)) || (org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace(b) && (pos > (org.apache.commons.codec.net.QuotedPrintableCodec.SAFE_LENGTH - 5)));\n        pos += org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte(b, encode, buffer);\n        if (pos > (org.apache.commons.codec.net.QuotedPrintableCodec.SAFE_LENGTH - 2)) {\n            buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.ESCAPE_CHAR);\n            buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.CR);\n            buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.LF);\n        }\n        for (int i = bytes.length - 2; i < bytes.length; i++) {\n            b = org.apache.commons.codec.net.QuotedPrintableCodec.getUnsignedOctet(i, bytes);\n            encode = (!printable.get(b)) || ((i > (bytes.length - 2)) && org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace(b));\n            org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte(b, encode, buffer);\n        }\n        return buffer.toByteArray();\n    }\n\n    public static final byte[] decodeQuotedPrintable(byte[] bytes) throws org.apache.commons.codec.DecoderException {\n        if (bytes == null) {\n            return null;\n        }\n        java.io.ByteArrayOutputStream buffer = new java.io.ByteArrayOutputStream();\n        for (int i = 0; i < bytes.length; i++) {\n            final int b = bytes[i];\n            if (b == org.apache.commons.codec.net.QuotedPrintableCodec.ESCAPE_CHAR) {\n                try {\n                    if (bytes[++i] == org.apache.commons.codec.net.QuotedPrintableCodec.CR) {\n                        continue;\n                    }\n                    int u = org.apache.commons.codec.net.Utils.digit16(bytes[i]);\n                    int l = org.apache.commons.codec.net.Utils.digit16(bytes[++i]);\n                    buffer.write(((char) ((u << 4) + l)));\n                } catch (java.lang.ArrayIndexOutOfBoundsException e) {\n                    throw new org.apache.commons.codec.DecoderException(\"Invalid quoted-printable encoding\", e);\n                }\n            } else if ((b != org.apache.commons.codec.net.QuotedPrintableCodec.CR) && (b != org.apache.commons.codec.net.QuotedPrintableCodec.LF)) {\n                buffer.write(b);\n            }\n        }\n        return buffer.toByteArray();\n    }\n\n    public byte[] encode(byte[] bytes) {\n        return org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(org.apache.commons.codec.net.QuotedPrintableCodec.PRINTABLE_CHARS, bytes);\n    }\n\n    public byte[] decode(byte[] bytes) throws org.apache.commons.codec.DecoderException {\n        return org.apache.commons.codec.net.QuotedPrintableCodec.decodeQuotedPrintable(bytes);\n    }\n\n    public java.lang.String encode(java.lang.String pString) throws org.apache.commons.codec.EncoderException {\n        if (pString == null) {\n            return null;\n        }\n        try {\n            return encode(pString, getDefaultCharset());\n        } catch (java.io.UnsupportedEncodingException e) {\n            throw new org.apache.commons.codec.EncoderException(e.getMessage(), e);\n        }\n    }\n\n    public java.lang.String decode(java.lang.String pString, java.lang.String charset) throws java.io.UnsupportedEncodingException, org.apache.commons.codec.DecoderException {\n        if (pString == null) {\n            return null;\n        }\n        return new java.lang.String(decode(org.apache.commons.codec.binary.StringUtils.getBytesUsAscii(pString)), charset);\n    }\n\n    public java.lang.String decode(java.lang.String pString) throws org.apache.commons.codec.DecoderException {\n        if (pString == null) {\n            return null;\n        }\n        try {\n            return decode(pString, getDefaultCharset());\n        } catch (java.io.UnsupportedEncodingException e) {\n            throw new org.apache.commons.codec.DecoderException(e.getMessage(), e);\n        }\n    }\n\n    public java.lang.Object encode(java.lang.Object pObject) throws org.apache.commons.codec.EncoderException {\n        if (pObject == null) {\n            return null;\n        } else if (pObject instanceof byte[]) {\n            return encode(((byte[]) (pObject)));\n        } else if (pObject instanceof java.lang.String) {\n            return encode(((java.lang.String) (pObject)));\n        } else {\n            throw new org.apache.commons.codec.EncoderException((\"Objects of type \" + pObject.getClass().getName()) + \" cannot be quoted-printable encoded\");\n        }\n    }\n\n    public java.lang.Object decode(java.lang.Object pObject) throws org.apache.commons.codec.DecoderException {\n        if (pObject == null) {\n            return null;\n        } else if (pObject instanceof byte[]) {\n            return decode(((byte[]) (pObject)));\n        } else if (pObject instanceof java.lang.String) {\n            return decode(((java.lang.String) (pObject)));\n        } else {\n            throw new org.apache.commons.codec.DecoderException((\"Objects of type \" + pObject.getClass().getName()) + \" cannot be quoted-printable decoded\");\n        }\n    }\n\n    public java.lang.String getDefaultCharset() {\n        return this.charset;\n    }\n\n    public java.lang.String encode(java.lang.String pString, java.lang.String charset) throws java.io.UnsupportedEncodingException {\n        if (pString == null) {\n            return null;\n        }\n        return org.apache.commons.codec.binary.StringUtils.newStringUsAscii(encode(pString.getBytes(charset)));\n    }\n}",
            "src_parent_type": "Class",
            "src_type": "Method"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "For",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte(b, (!printable.get(b)) || org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace(b), buffer)",
            "src_parent": "{\n    org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte(b, (!printable.get(b)) || org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace(b), buffer);\n    buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.ESCAPE_CHAR);\n    buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.CR);\n    buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.LF);\n    pos = 1;\n}",
            "src_parent_type": "Block",
            "src_type": "Invocation"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "For",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.ESCAPE_CHAR)",
            "src_parent": "{\n    org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte(b, (!printable.get(b)) || org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace(b), buffer);\n    buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.ESCAPE_CHAR);\n    buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.CR);\n    buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.LF);\n    pos = 1;\n}",
            "src_parent_type": "Block",
            "src_type": "Invocation"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "For",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.CR)",
            "src_parent": "{\n    org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte(b, (!printable.get(b)) || org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace(b), buffer);\n    buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.ESCAPE_CHAR);\n    buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.CR);\n    buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.LF);\n    pos = 1;\n}",
            "src_parent_type": "Block",
            "src_type": "Invocation"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "For",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.LF)",
            "src_parent": "{\n    org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte(b, (!printable.get(b)) || org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace(b), buffer);\n    buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.ESCAPE_CHAR);\n    buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.CR);\n    buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.LF);\n    pos = 1;\n}",
            "src_parent_type": "Block",
            "src_type": "Invocation"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "For",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "pos = 1",
            "src_parent": "{\n    org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte(b, (!printable.get(b)) || org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace(b), buffer);\n    buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.ESCAPE_CHAR);\n    buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.CR);\n    buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.LF);\n    pos = 1;\n}",
            "src_parent_type": "Block",
            "src_type": "Assignment"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "For",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "If",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "LocalVariable",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "int pos = 1",
            "src_parent": "{\n    if (bytes == null) {\n        return null;\n    }\n    if (printable == null) {\n        printable = org.apache.commons.codec.net.QuotedPrintableCodec.PRINTABLE_CHARS;\n    }\n    java.io.ByteArrayOutputStream buffer = new java.io.ByteArrayOutputStream();\n    int pos = 1;\n    for (int i = 0; i < (bytes.length - 3); i++) {\n        int b = org.apache.commons.codec.net.QuotedPrintableCodec.getUnsignedOctet(i, bytes);\n        if (pos < org.apache.commons.codec.net.QuotedPrintableCodec.SAFE_LENGTH) {\n            pos += org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte(b, !printable.get(b), buffer);\n        } else {\n            org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte(b, (!printable.get(b)) || org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace(b), buffer);\n            buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.ESCAPE_CHAR);\n            buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.CR);\n            buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.LF);\n            pos = 1;\n        }\n    }\n    int b = org.apache.commons.codec.net.QuotedPrintableCodec.getUnsignedOctet(bytes.length - 3, bytes);\n    boolean encode = (!printable.get(b)) || (org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace(b) && (pos > (org.apache.commons.codec.net.QuotedPrintableCodec.SAFE_LENGTH - 5)));\n    pos += org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte(b, encode, buffer);\n    if (pos > (org.apache.commons.codec.net.QuotedPrintableCodec.SAFE_LENGTH - 2)) {\n        buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.ESCAPE_CHAR);\n        buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.CR);\n        buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.LF);\n    }\n    for (int i = bytes.length - 2; i < bytes.length; i++) {\n        b = org.apache.commons.codec.net.QuotedPrintableCodec.getUnsignedOctet(i, bytes);\n        encode = (!printable.get(b)) || ((i > (bytes.length - 2)) && org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace(b));\n        org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte(b, encode, buffer);\n    }\n    return buffer.toByteArray();\n}",
            "src_parent_type": "Block",
            "src_type": "LocalVariable"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "OperatorAssignment",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "If",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "For",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "for (int i = 0; i < (bytes.length - 3); i++) {\n    int b = org.apache.commons.codec.net.QuotedPrintableCodec.getUnsignedOctet(i, bytes);\n    if (pos < org.apache.commons.codec.net.QuotedPrintableCodec.SAFE_LENGTH) {\n        pos += org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte(b, !printable.get(b), buffer);\n    } else {\n        org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte(b, (!printable.get(b)) || org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace(b), buffer);\n        buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.ESCAPE_CHAR);\n        buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.CR);\n        buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.LF);\n        pos = 1;\n    }\n}",
            "src_parent": "{\n    if (bytes == null) {\n        return null;\n    }\n    if (printable == null) {\n        printable = org.apache.commons.codec.net.QuotedPrintableCodec.PRINTABLE_CHARS;\n    }\n    java.io.ByteArrayOutputStream buffer = new java.io.ByteArrayOutputStream();\n    int pos = 1;\n    for (int i = 0; i < (bytes.length - 3); i++) {\n        int b = org.apache.commons.codec.net.QuotedPrintableCodec.getUnsignedOctet(i, bytes);\n        if (pos < org.apache.commons.codec.net.QuotedPrintableCodec.SAFE_LENGTH) {\n            pos += org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte(b, !printable.get(b), buffer);\n        } else {\n            org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte(b, (!printable.get(b)) || org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace(b), buffer);\n            buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.ESCAPE_CHAR);\n            buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.CR);\n            buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.LF);\n            pos = 1;\n        }\n    }\n    int b = org.apache.commons.codec.net.QuotedPrintableCodec.getUnsignedOctet(bytes.length - 3, bytes);\n    boolean encode = (!printable.get(b)) || (org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace(b) && (pos > (org.apache.commons.codec.net.QuotedPrintableCodec.SAFE_LENGTH - 5)));\n    pos += org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte(b, encode, buffer);\n    if (pos > (org.apache.commons.codec.net.QuotedPrintableCodec.SAFE_LENGTH - 2)) {\n        buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.ESCAPE_CHAR);\n        buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.CR);\n        buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.LF);\n    }\n    for (int i = bytes.length - 2; i < bytes.length; i++) {\n        b = org.apache.commons.codec.net.QuotedPrintableCodec.getUnsignedOctet(i, bytes);\n        encode = (!printable.get(b)) || ((i > (bytes.length - 2)) && org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace(b));\n        org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte(b, encode, buffer);\n    }\n    return buffer.toByteArray();\n}",
            "src_parent_type": "Block",
            "src_type": "For"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "OperatorAssignment",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "For",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "LocalVariable",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "LocalVariable",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "int b = org.apache.commons.codec.net.QuotedPrintableCodec.getUnsignedOctet(bytes.length - 3, bytes)",
            "src_parent": "{\n    if (bytes == null) {\n        return null;\n    }\n    if (printable == null) {\n        printable = org.apache.commons.codec.net.QuotedPrintableCodec.PRINTABLE_CHARS;\n    }\n    java.io.ByteArrayOutputStream buffer = new java.io.ByteArrayOutputStream();\n    int pos = 1;\n    for (int i = 0; i < (bytes.length - 3); i++) {\n        int b = org.apache.commons.codec.net.QuotedPrintableCodec.getUnsignedOctet(i, bytes);\n        if (pos < org.apache.commons.codec.net.QuotedPrintableCodec.SAFE_LENGTH) {\n            pos += org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte(b, !printable.get(b), buffer);\n        } else {\n            org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte(b, (!printable.get(b)) || org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace(b), buffer);\n            buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.ESCAPE_CHAR);\n            buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.CR);\n            buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.LF);\n            pos = 1;\n        }\n    }\n    int b = org.apache.commons.codec.net.QuotedPrintableCodec.getUnsignedOctet(bytes.length - 3, bytes);\n    boolean encode = (!printable.get(b)) || (org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace(b) && (pos > (org.apache.commons.codec.net.QuotedPrintableCodec.SAFE_LENGTH - 5)));\n    pos += org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte(b, encode, buffer);\n    if (pos > (org.apache.commons.codec.net.QuotedPrintableCodec.SAFE_LENGTH - 2)) {\n        buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.ESCAPE_CHAR);\n        buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.CR);\n        buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.LF);\n    }\n    for (int i = bytes.length - 2; i < bytes.length; i++) {\n        b = org.apache.commons.codec.net.QuotedPrintableCodec.getUnsignedOctet(i, bytes);\n        encode = (!printable.get(b)) || ((i > (bytes.length - 2)) && org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace(b));\n        org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte(b, encode, buffer);\n    }\n    return buffer.toByteArray();\n}",
            "src_parent_type": "Block",
            "src_type": "LocalVariable"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "OperatorAssignment",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "For",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "For",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "LocalVariable",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "LocalVariable",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "boolean encode = (!printable.get(b)) || (org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace(b) && (pos > (org.apache.commons.codec.net.QuotedPrintableCodec.SAFE_LENGTH - 5)))",
            "src_parent": "{\n    if (bytes == null) {\n        return null;\n    }\n    if (printable == null) {\n        printable = org.apache.commons.codec.net.QuotedPrintableCodec.PRINTABLE_CHARS;\n    }\n    java.io.ByteArrayOutputStream buffer = new java.io.ByteArrayOutputStream();\n    int pos = 1;\n    for (int i = 0; i < (bytes.length - 3); i++) {\n        int b = org.apache.commons.codec.net.QuotedPrintableCodec.getUnsignedOctet(i, bytes);\n        if (pos < org.apache.commons.codec.net.QuotedPrintableCodec.SAFE_LENGTH) {\n            pos += org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte(b, !printable.get(b), buffer);\n        } else {\n            org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte(b, (!printable.get(b)) || org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace(b), buffer);\n            buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.ESCAPE_CHAR);\n            buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.CR);\n            buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.LF);\n            pos = 1;\n        }\n    }\n    int b = org.apache.commons.codec.net.QuotedPrintableCodec.getUnsignedOctet(bytes.length - 3, bytes);\n    boolean encode = (!printable.get(b)) || (org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace(b) && (pos > (org.apache.commons.codec.net.QuotedPrintableCodec.SAFE_LENGTH - 5)));\n    pos += org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte(b, encode, buffer);\n    if (pos > (org.apache.commons.codec.net.QuotedPrintableCodec.SAFE_LENGTH - 2)) {\n        buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.ESCAPE_CHAR);\n        buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.CR);\n        buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.LF);\n    }\n    for (int i = bytes.length - 2; i < bytes.length; i++) {\n        b = org.apache.commons.codec.net.QuotedPrintableCodec.getUnsignedOctet(i, bytes);\n        encode = (!printable.get(b)) || ((i > (bytes.length - 2)) && org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace(b));\n        org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte(b, encode, buffer);\n    }\n    return buffer.toByteArray();\n}",
            "src_parent_type": "Block",
            "src_type": "LocalVariable"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "For",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "Return",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "For",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "OperatorAssignment",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "pos += org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte(b, encode, buffer)",
            "src_parent": "{\n    if (bytes == null) {\n        return null;\n    }\n    if (printable == null) {\n        printable = org.apache.commons.codec.net.QuotedPrintableCodec.PRINTABLE_CHARS;\n    }\n    java.io.ByteArrayOutputStream buffer = new java.io.ByteArrayOutputStream();\n    int pos = 1;\n    for (int i = 0; i < (bytes.length - 3); i++) {\n        int b = org.apache.commons.codec.net.QuotedPrintableCodec.getUnsignedOctet(i, bytes);\n        if (pos < org.apache.commons.codec.net.QuotedPrintableCodec.SAFE_LENGTH) {\n            pos += org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte(b, !printable.get(b), buffer);\n        } else {\n            org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte(b, (!printable.get(b)) || org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace(b), buffer);\n            buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.ESCAPE_CHAR);\n            buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.CR);\n            buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.LF);\n            pos = 1;\n        }\n    }\n    int b = org.apache.commons.codec.net.QuotedPrintableCodec.getUnsignedOctet(bytes.length - 3, bytes);\n    boolean encode = (!printable.get(b)) || (org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace(b) && (pos > (org.apache.commons.codec.net.QuotedPrintableCodec.SAFE_LENGTH - 5)));\n    pos += org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte(b, encode, buffer);\n    if (pos > (org.apache.commons.codec.net.QuotedPrintableCodec.SAFE_LENGTH - 2)) {\n        buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.ESCAPE_CHAR);\n        buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.CR);\n        buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.LF);\n    }\n    for (int i = bytes.length - 2; i < bytes.length; i++) {\n        b = org.apache.commons.codec.net.QuotedPrintableCodec.getUnsignedOctet(i, bytes);\n        encode = (!printable.get(b)) || ((i > (bytes.length - 2)) && org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace(b));\n        org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte(b, encode, buffer);\n    }\n    return buffer.toByteArray();\n}",
            "src_parent_type": "Block",
            "src_type": "OperatorAssignment"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "For",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "Return",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "OperatorAssignment",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "LocalVariable",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "if (pos > (org.apache.commons.codec.net.QuotedPrintableCodec.SAFE_LENGTH - 2)) {\n    buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.ESCAPE_CHAR);\n    buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.CR);\n    buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.LF);\n}",
            "src_parent": "{\n    if (bytes == null) {\n        return null;\n    }\n    if (printable == null) {\n        printable = org.apache.commons.codec.net.QuotedPrintableCodec.PRINTABLE_CHARS;\n    }\n    java.io.ByteArrayOutputStream buffer = new java.io.ByteArrayOutputStream();\n    int pos = 1;\n    for (int i = 0; i < (bytes.length - 3); i++) {\n        int b = org.apache.commons.codec.net.QuotedPrintableCodec.getUnsignedOctet(i, bytes);\n        if (pos < org.apache.commons.codec.net.QuotedPrintableCodec.SAFE_LENGTH) {\n            pos += org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte(b, !printable.get(b), buffer);\n        } else {\n            org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte(b, (!printable.get(b)) || org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace(b), buffer);\n            buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.ESCAPE_CHAR);\n            buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.CR);\n            buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.LF);\n            pos = 1;\n        }\n    }\n    int b = org.apache.commons.codec.net.QuotedPrintableCodec.getUnsignedOctet(bytes.length - 3, bytes);\n    boolean encode = (!printable.get(b)) || (org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace(b) && (pos > (org.apache.commons.codec.net.QuotedPrintableCodec.SAFE_LENGTH - 5)));\n    pos += org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte(b, encode, buffer);\n    if (pos > (org.apache.commons.codec.net.QuotedPrintableCodec.SAFE_LENGTH - 2)) {\n        buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.ESCAPE_CHAR);\n        buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.CR);\n        buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.LF);\n    }\n    for (int i = bytes.length - 2; i < bytes.length; i++) {\n        b = org.apache.commons.codec.net.QuotedPrintableCodec.getUnsignedOctet(i, bytes);\n        encode = (!printable.get(b)) || ((i > (bytes.length - 2)) && org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace(b));\n        org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte(b, encode, buffer);\n    }\n    return buffer.toByteArray();\n}",
            "src_parent_type": "Block",
            "src_type": "If"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Return",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "OperatorAssignment",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "LocalVariable",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "For",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "for (int i = bytes.length - 2; i < bytes.length; i++) {\n    b = org.apache.commons.codec.net.QuotedPrintableCodec.getUnsignedOctet(i, bytes);\n    encode = (!printable.get(b)) || ((i > (bytes.length - 2)) && org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace(b));\n    org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte(b, encode, buffer);\n}",
            "src_parent": "{\n    if (bytes == null) {\n        return null;\n    }\n    if (printable == null) {\n        printable = org.apache.commons.codec.net.QuotedPrintableCodec.PRINTABLE_CHARS;\n    }\n    java.io.ByteArrayOutputStream buffer = new java.io.ByteArrayOutputStream();\n    int pos = 1;\n    for (int i = 0; i < (bytes.length - 3); i++) {\n        int b = org.apache.commons.codec.net.QuotedPrintableCodec.getUnsignedOctet(i, bytes);\n        if (pos < org.apache.commons.codec.net.QuotedPrintableCodec.SAFE_LENGTH) {\n            pos += org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte(b, !printable.get(b), buffer);\n        } else {\n            org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte(b, (!printable.get(b)) || org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace(b), buffer);\n            buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.ESCAPE_CHAR);\n            buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.CR);\n            buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.LF);\n            pos = 1;\n        }\n    }\n    int b = org.apache.commons.codec.net.QuotedPrintableCodec.getUnsignedOctet(bytes.length - 3, bytes);\n    boolean encode = (!printable.get(b)) || (org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace(b) && (pos > (org.apache.commons.codec.net.QuotedPrintableCodec.SAFE_LENGTH - 5)));\n    pos += org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte(b, encode, buffer);\n    if (pos > (org.apache.commons.codec.net.QuotedPrintableCodec.SAFE_LENGTH - 2)) {\n        buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.ESCAPE_CHAR);\n        buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.CR);\n        buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.LF);\n    }\n    for (int i = bytes.length - 2; i < bytes.length; i++) {\n        b = org.apache.commons.codec.net.QuotedPrintableCodec.getUnsignedOctet(i, bytes);\n        encode = (!printable.get(b)) || ((i > (bytes.length - 2)) && org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace(b));\n        org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte(b, encode, buffer);\n    }\n    return buffer.toByteArray();\n}",
            "src_parent_type": "Block",
            "src_type": "For"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "true",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Try",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "if (bytes[++i] == org.apache.commons.codec.net.QuotedPrintableCodec.CR) {\n    continue;\n}",
            "src_parent": "{\n    if (bytes[++i] == org.apache.commons.codec.net.QuotedPrintableCodec.CR) {\n        continue;\n    }\n    int u = org.apache.commons.codec.net.Utils.digit16(bytes[i]);\n    int l = org.apache.commons.codec.net.Utils.digit16(bytes[++i]);\n    buffer.write(((char) ((u << 4) + l)));\n}",
            "src_parent_type": "Block",
            "src_type": "If"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Try",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "LocalVariable",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "bytes[i]",
            "src_parent": "org.apache.commons.codec.net.Utils.digit16(bytes[i])",
            "src_parent_type": "Invocation",
            "src_type": "ArrayRead"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "return 1",
            "src_parent": "{\n    buffer.write(b);\n    return 1;\n}",
            "src_parent_type": "Block",
            "src_type": "Return"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "For",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "{\n    if ((b != org.apache.commons.codec.net.QuotedPrintableCodec.CR) && (b != org.apache.commons.codec.net.QuotedPrintableCodec.LF)) {\n        buffer.write(b);\n    }\n}",
            "src_parent": "if (b == org.apache.commons.codec.net.QuotedPrintableCodec.ESCAPE_CHAR) {\n    try {\n        if (bytes[++i] == org.apache.commons.codec.net.QuotedPrintableCodec.CR) {\n            continue;\n        }\n        int u = org.apache.commons.codec.net.Utils.digit16(bytes[i]);\n        int l = org.apache.commons.codec.net.Utils.digit16(bytes[++i]);\n        buffer.write(((char) ((u << 4) + l)));\n    } catch (java.lang.ArrayIndexOutOfBoundsException e) {\n        throw new org.apache.commons.codec.DecoderException(\"Invalid quoted-printable encoding\", e);\n    }\n} else if ((b != org.apache.commons.codec.net.QuotedPrintableCodec.CR) && (b != org.apache.commons.codec.net.QuotedPrintableCodec.LF)) {\n    buffer.write(b);\n}",
            "src_parent_type": "If",
            "src_type": "Block"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "true",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Method",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "for (byte c : bytes) {\n    int b = c;\n    if (b < 0) {\n        b = 256 + b;\n    }\n    if (printable.get(b)) {\n        buffer.write(b);\n    } else {\n        org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(b, buffer);\n    }\n}",
            "src_parent": "{\n    if (bytes == null) {\n        return null;\n    }\n    if (printable == null) {\n        printable = org.apache.commons.codec.net.QuotedPrintableCodec.PRINTABLE_CHARS;\n    }\n    java.io.ByteArrayOutputStream buffer = new java.io.ByteArrayOutputStream();\n    for (byte c : bytes) {\n        int b = c;\n        if (b < 0) {\n            b = 256 + b;\n        }\n        if (printable.get(b)) {\n            buffer.write(b);\n        } else {\n            org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(b, buffer);\n        }\n    }\n    return buffer.toByteArray();\n}",
            "src_parent_type": "Block",
            "src_type": "ForEach"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Return",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "if (b < 0) {\n    b = 256 + b;\n}",
            "dst_parent": "{\n    int b = c;\n    if (b < 0) {\n        b = 256 + b;\n    }\n    if (printable.get(b)) {\n        buffer.write(b);\n    } else {\n        org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(b, buffer);\n    }\n}",
            "dst_parent_type": "Block",
            "dst_type": "If",
            "operator": "MOV",
            "src": "if (b < 0) {\n    b = 256 + b;\n}",
            "src_parent": "{\n    int b = bytes[index];\n    if (b < 0) {\n        b = 256 + b;\n    }\n    return b;\n}",
            "src_parent_type": "Block",
            "src_type": "If"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "For",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "If",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "LocalVariable",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "byte",
            "dst_parent": "byte c",
            "dst_parent_type": "LocalVariable",
            "dst_type": "TypeReference",
            "operator": "MOV",
            "src": "int",
            "src_parent": "int pos = 1",
            "src_parent_type": "LocalVariable",
            "src_type": "TypeReference"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "For",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "LocalVariable",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "int",
            "dst_parent": "int b = c",
            "dst_parent_type": "LocalVariable",
            "dst_type": "TypeReference",
            "operator": "MOV",
            "src": "int",
            "src_parent": "int b = org.apache.commons.codec.net.QuotedPrintableCodec.getUnsignedOctet(i, bytes)",
            "src_parent_type": "LocalVariable",
            "src_type": "TypeReference"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "OperatorAssignment",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "printable.get(b)",
            "dst_parent": "if (printable.get(b)) {\n    buffer.write(b);\n} else {\n    org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(b, buffer);\n}",
            "dst_parent_type": "If",
            "dst_type": "Invocation",
            "operator": "MOV",
            "src": "printable.get(b)",
            "src_parent": "!printable.get(b)",
            "src_parent_type": "UnaryOperator",
            "src_type": "Invocation"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "{\n    buffer.write(b);\n}",
            "dst_parent": "if (printable.get(b)) {\n    buffer.write(b);\n} else {\n    org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(b, buffer);\n}",
            "dst_parent_type": "If",
            "dst_type": "Block",
            "operator": "MOV",
            "src": "{\n    buffer.write(b);\n}",
            "src_parent": "if ((b != org.apache.commons.codec.net.QuotedPrintableCodec.CR) && (b != org.apache.commons.codec.net.QuotedPrintableCodec.LF)) {\n    buffer.write(b);\n}",
            "src_parent_type": "If",
            "src_type": "Block"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "For",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "{\n    org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(b, buffer);\n}",
            "dst_parent": "if (printable.get(b)) {\n    buffer.write(b);\n} else {\n    org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(b, buffer);\n}",
            "dst_parent_type": "If",
            "dst_type": "Block",
            "operator": "MOV",
            "src": "{\n    org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte(b, (!printable.get(b)) || org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace(b), buffer);\n    buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.ESCAPE_CHAR);\n    buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.CR);\n    buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.LF);\n    pos = 1;\n}",
            "src_parent": "if (pos < org.apache.commons.codec.net.QuotedPrintableCodec.SAFE_LENGTH) {\n    pos += org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte(b, !printable.get(b), buffer);\n} else {\n    org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte(b, (!printable.get(b)) || org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace(b), buffer);\n    buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.ESCAPE_CHAR);\n    buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.CR);\n    buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.LF);\n    pos = 1;\n}",
            "src_parent_type": "If",
            "src_type": "Block"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "{\n    buffer.write(b);\n}",
            "dst_parent": "if (b == org.apache.commons.codec.net.QuotedPrintableCodec.ESCAPE_CHAR) {\n    try {\n        int u = org.apache.commons.codec.net.Utils.digit16(bytes[++i]);\n        int l = org.apache.commons.codec.net.Utils.digit16(bytes[++i]);\n        buffer.write(((char) ((u << 4) + l)));\n    } catch (java.lang.ArrayIndexOutOfBoundsException e) {\n        throw new org.apache.commons.codec.DecoderException(\"Invalid quoted-printable encoding\", e);\n    }\n} else {\n    buffer.write(b);\n}",
            "dst_parent_type": "If",
            "dst_type": "Block",
            "operator": "MOV",
            "src": "{\n    buffer.write(b);\n    return 1;\n}",
            "src_parent": "if (encode) {\n    return org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(b, buffer);\n} else {\n    buffer.write(b);\n    return 1;\n}",
            "src_parent_type": "If",
            "src_type": "Block"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Try",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "bytes[++i]",
            "dst_parent": "org.apache.commons.codec.net.Utils.digit16(bytes[++i])",
            "dst_parent_type": "Invocation",
            "dst_type": "ArrayRead",
            "operator": "MOV",
            "src": "bytes[++i]",
            "src_parent": "bytes[++i] == org.apache.commons.codec.net.QuotedPrintableCodec.CR",
            "src_parent_type": "BinaryOperator",
            "src_type": "ArrayRead"
          }
        }
      ],
      "file_name": "QuotedPrintableCodec"
    }
  ],
  "id": "Codec_11"
}