{
  "files": [
    {
      "features": [
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "While",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "LocalVariable",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Switch",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "{\n    char c = value.charAt(pos);\n    if (newRecord && ((((c < 0x20) || ((c > 0x21) && (c < 0x23))) || ((c > 0x2b) && (c < 0x2d))) || (c > 0x7e))) {\n        quote = true;\n    } else if (c <= org.apache.commons.csv.Constants.COMMENT) {\n        quote = true;\n    } else {\n        while (pos < end) {\n            c = value.charAt(pos);\n            if ((((c == org.apache.commons.csv.Constants.LF) || (c == org.apache.commons.csv.Constants.CR)) || (c == quoteChar)) || (c == delimChar)) {\n                quote = true;\n                break;\n            }\n            pos++;\n        } \n        if (!quote) {\n            pos = end - 1;\n            c = value.charAt(pos);\n            if (c <= org.apache.commons.csv.Constants.SP) {\n                quote = true;\n            }\n        }\n    }\n}",
            "src_parent": "if (len <= 0) {\n    if (newRecord) {\n        quote = true;\n    }\n} else {\n    char c = value.charAt(pos);\n    if (newRecord && ((((c < 0x20) || ((c > 0x21) && (c < 0x23))) || ((c > 0x2b) && (c < 0x2d))) || (c > 0x7e))) {\n        quote = true;\n    } else if (c <= org.apache.commons.csv.Constants.COMMENT) {\n        quote = true;\n    } else {\n        while (pos < end) {\n            c = value.charAt(pos);\n            if ((((c == org.apache.commons.csv.Constants.LF) || (c == org.apache.commons.csv.Constants.CR)) || (c == quoteChar)) || (c == delimChar)) {\n                quote = true;\n                break;\n            }\n            pos++;\n        } \n        if (!quote) {\n            pos = end - 1;\n            c = value.charAt(pos);\n            if (c <= org.apache.commons.csv.Constants.SP) {\n                quote = true;\n            }\n        }\n    }\n}",
            "src_parent_type": "If",
            "src_type": "Block"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "Break",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Case",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "char c = value.charAt(pos)",
            "dst_parent": "{\n    char c = value.charAt(pos);\n    if (newRecord && ((((c < 0x20) || ((c > 0x21) && (c < 0x23))) || ((c > 0x2b) && (c < 0x2d))) || (c > 0x7e))) {\n        quote = true;\n    } else if (c <= org.apache.commons.csv.Constants.COMMENT) {\n        quote = true;\n    } else {\n        while (pos < end) {\n            c = value.charAt(pos);\n            if ((((c == org.apache.commons.csv.Constants.LF) || (c == org.apache.commons.csv.Constants.CR)) || (c == quoteChar)) || (c == delimChar)) {\n                quote = true;\n                break;\n            }\n            pos++;\n        } \n        if (!quote) {\n            pos = end - 1;\n            c = value.charAt(pos);\n            if (c <= org.apache.commons.csv.Constants.SP) {\n                quote = true;\n            }\n        }\n    }\n}",
            "dst_parent_type": "Block",
            "dst_type": "LocalVariable",
            "operator": "MOV",
            "src": "char c = value.charAt(pos)",
            "src_parent": "{\n    char c = value.charAt(pos);\n    if (c <= org.apache.commons.csv.Constants.COMMENT) {\n        quote = true;\n    } else {\n        while (pos < end) {\n            c = value.charAt(pos);\n            if ((((c == org.apache.commons.csv.Constants.LF) || (c == org.apache.commons.csv.Constants.CR)) || (c == quoteChar)) || (c == delimChar)) {\n                quote = true;\n                break;\n            }\n            pos++;\n        } \n        if (!quote) {\n            pos = end - 1;\n            c = value.charAt(pos);\n            if (c <= org.apache.commons.csv.Constants.SP) {\n                quote = true;\n            }\n        }\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "LocalVariable"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "Break",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Case",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "{\n    if (c <= org.apache.commons.csv.Constants.COMMENT) {\n        quote = true;\n    } else {\n        while (pos < end) {\n            c = value.charAt(pos);\n            if ((((c == org.apache.commons.csv.Constants.LF) || (c == org.apache.commons.csv.Constants.CR)) || (c == quoteChar)) || (c == delimChar)) {\n                quote = true;\n                break;\n            }\n            pos++;\n        } \n        if (!quote) {\n            pos = end - 1;\n            c = value.charAt(pos);\n            if (c <= org.apache.commons.csv.Constants.SP) {\n                quote = true;\n            }\n        }\n    }\n}",
            "dst_parent": "if (newRecord && ((((c < 0x20) || ((c > 0x21) && (c < 0x23))) || ((c > 0x2b) && (c < 0x2d))) || (c > 0x7e))) {\n    quote = true;\n} else if (c <= org.apache.commons.csv.Constants.COMMENT) {\n    quote = true;\n} else {\n    while (pos < end) {\n        c = value.charAt(pos);\n        if ((((c == org.apache.commons.csv.Constants.LF) || (c == org.apache.commons.csv.Constants.CR)) || (c == quoteChar)) || (c == delimChar)) {\n            quote = true;\n            break;\n        }\n        pos++;\n    } \n    if (!quote) {\n        pos = end - 1;\n        c = value.charAt(pos);\n        if (c <= org.apache.commons.csv.Constants.SP) {\n            quote = true;\n        }\n    }\n}",
            "dst_parent_type": "If",
            "dst_type": "Block",
            "operator": "MOV",
            "src": "{\n    char c = value.charAt(pos);\n    if (c <= org.apache.commons.csv.Constants.COMMENT) {\n        quote = true;\n    } else {\n        while (pos < end) {\n            c = value.charAt(pos);\n            if ((((c == org.apache.commons.csv.Constants.LF) || (c == org.apache.commons.csv.Constants.CR)) || (c == quoteChar)) || (c == delimChar)) {\n                quote = true;\n                break;\n            }\n            pos++;\n        } \n        if (!quote) {\n            pos = end - 1;\n            c = value.charAt(pos);\n            if (c <= org.apache.commons.csv.Constants.SP) {\n                quote = true;\n            }\n        }\n    }\n}",
            "src_parent": "if (len <= 0) {\n    if (newRecord) {\n        quote = true;\n    }\n} else {\n    char c = value.charAt(pos);\n    if (c <= org.apache.commons.csv.Constants.COMMENT) {\n        quote = true;\n    } else {\n        while (pos < end) {\n            c = value.charAt(pos);\n            if ((((c == org.apache.commons.csv.Constants.LF) || (c == org.apache.commons.csv.Constants.CR)) || (c == quoteChar)) || (c == delimChar)) {\n                quote = true;\n                break;\n            }\n            pos++;\n        } \n        if (!quote) {\n            pos = end - 1;\n            c = value.charAt(pos);\n            if (c <= org.apache.commons.csv.Constants.SP) {\n                quote = true;\n            }\n        }\n    }\n}",
            "src_parent_type": "If",
            "src_type": "Block"
          }
        }
      ],
      "file_name": "CSVFormat"
    }
  ],
  "id": "Csv_15"
}