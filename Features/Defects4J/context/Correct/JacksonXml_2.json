{
  "files": [
    {
      "features": [
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Field",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "protected boolean _mixedText;",
            "src_parent": "public class XmlTokenStream {\n    public static final int XML_START_ELEMENT = 1;\n\n    public static final int XML_END_ELEMENT = 2;\n\n    public static final int XML_ATTRIBUTE_NAME = 3;\n\n    public static final int XML_ATTRIBUTE_VALUE = 4;\n\n    public static final int XML_TEXT = 5;\n\n    public static final int XML_END = 6;\n\n    private static final int REPLAY_START_DUP = 1;\n\n    private static final int REPLAY_END = 2;\n\n    private static final int REPLAY_START_DELAYED = 3;\n\n    protected final org.codehaus.stax2.XMLStreamReader2 _xmlReader;\n\n    protected final java.lang.Object _sourceReference;\n\n    protected int _currentState;\n\n    protected int _attributeCount;\n\n    protected boolean _mixedText;\n\n    protected int _nextAttributeIndex = 0;\n\n    protected java.lang.String _localName;\n\n    protected java.lang.String _namespaceURI;\n\n    protected java.lang.String _textValue;\n\n    protected int _repeatElement;\n\n    protected com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper _currentWrapper;\n\n    protected java.lang.String _nextLocalName;\n\n    protected java.lang.String _nextNamespaceURI;\n\n    public XmlTokenStream(javax.xml.stream.XMLStreamReader xmlReader, java.lang.Object sourceRef) {\n        _sourceReference = sourceRef;\n        if (xmlReader.getEventType() != javax.xml.stream.XMLStreamConstants.START_ELEMENT) {\n            throw new java.lang.IllegalArgumentException(((\"Invalid XMLStreamReader passed: should be pointing to START_ELEMENT (\" + javax.xml.stream.XMLStreamConstants.START_ELEMENT) + \"), instead got \") + xmlReader.getEventType());\n        }\n        _xmlReader = org.codehaus.stax2.ri.Stax2ReaderAdapter.wrapIfNecessary(xmlReader);\n        _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_START_ELEMENT;\n        _localName = _xmlReader.getLocalName();\n        _namespaceURI = _xmlReader.getNamespaceURI();\n        _attributeCount = _xmlReader.getAttributeCount();\n    }\n\n    public org.codehaus.stax2.XMLStreamReader2 getXmlReader() {\n        return _xmlReader;\n    }\n\n    public int next() throws java.io.IOException {\n        if (_repeatElement != 0) {\n            return _currentState = _handleRepeatElement();\n        }\n        try {\n            return _next();\n        } catch (javax.xml.stream.XMLStreamException e) {\n            com.fasterxml.jackson.dataformat.xml.util.StaxUtil.throwXmlAsIOException(e);\n            return -1;\n        }\n    }\n\n    public void skipEndElement() throws java.io.IOException {\n        int type = next();\n        if (type != com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_END_ELEMENT) {\n            throw new java.io.IOException(\"Expected END_ELEMENT, got event of type \" + type);\n        }\n    }\n\n    public int getCurrentToken() {\n        return _currentState;\n    }\n\n    public java.lang.String getText() {\n        return _textValue;\n    }\n\n    public java.lang.String getLocalName() {\n        return _localName;\n    }\n\n    public java.lang.String getNamespaceURI() {\n        return _namespaceURI;\n    }\n\n    public boolean hasAttributes() {\n        return (_currentState == com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_START_ELEMENT) && (_attributeCount > 0);\n    }\n\n    public void closeCompletely() throws java.io.IOException {\n        try {\n            _xmlReader.closeCompletely();\n        } catch (javax.xml.stream.XMLStreamException e) {\n            com.fasterxml.jackson.dataformat.xml.util.StaxUtil.throwXmlAsIOException(e);\n        }\n    }\n\n    public void close() throws java.io.IOException {\n        try {\n            _xmlReader.close();\n        } catch (javax.xml.stream.XMLStreamException e) {\n            com.fasterxml.jackson.dataformat.xml.util.StaxUtil.throwXmlAsIOException(e);\n        }\n    }\n\n    public com.fasterxml.jackson.core.JsonLocation getCurrentLocation() {\n        return _extractLocation(_xmlReader.getLocationInfo().getCurrentLocation());\n    }\n\n    public com.fasterxml.jackson.core.JsonLocation getTokenLocation() {\n        return _extractLocation(_xmlReader.getLocationInfo().getStartLocation());\n    }\n\n    protected void repeatStartElement() {\n        if (_currentState != com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_START_ELEMENT) {\n            throw new java.lang.IllegalStateException(((\"Current state not XML_START_ELEMENT (\" + com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_START_ELEMENT) + \") but \") + _currentState);\n        }\n        if (_currentWrapper == null) {\n            _currentWrapper = com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper.matchingWrapper(_currentWrapper, _localName, _namespaceURI);\n        } else {\n            _currentWrapper = com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper.matchingWrapper(_currentWrapper.getParent(), _localName, _namespaceURI);\n        }\n        _repeatElement = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.REPLAY_START_DUP;\n    }\n\n    protected void skipAttributes() {\n        if (_currentState == com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_ATTRIBUTE_NAME) {\n            _attributeCount = 0;\n            _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_START_ELEMENT;\n        } else if (_currentState == com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_START_ELEMENT) {\n        } else if (_currentState == com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_TEXT) {\n        } else {\n            throw new java.lang.IllegalStateException(((\"Current state not XML_START_ELEMENT or XML_ATTRIBUTE_NAME (\" + com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_START_ELEMENT) + \") but \") + _currentState);\n        }\n    }\n\n    protected java.lang.String convertToString() throws java.io.IOException {\n        if ((_currentState != com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_ATTRIBUTE_NAME) || (_nextAttributeIndex != 0)) {\n            return null;\n        }\n        try {\n            java.lang.String text = _collectUntilTag();\n            if (_xmlReader.getEventType() == javax.xml.stream.XMLStreamReader.END_ELEMENT) {\n                if (text == null) {\n                    text = \"\";\n                }\n                if (_currentWrapper != null) {\n                    _currentWrapper = _currentWrapper.getParent();\n                }\n                _localName = _xmlReader.getLocalName();\n                _namespaceURI = _xmlReader.getNamespaceURI();\n                _attributeCount = 0;\n                _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_TEXT;\n                _textValue = text;\n                return text;\n            }\n        } catch (javax.xml.stream.XMLStreamException e) {\n            com.fasterxml.jackson.dataformat.xml.util.StaxUtil.throwXmlAsIOException(e);\n        }\n        return null;\n    }\n\n    private final int _next() throws javax.xml.stream.XMLStreamException {\n        switch (_currentState) {\n            case com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_ATTRIBUTE_VALUE :\n                ++_nextAttributeIndex;\n            case com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_START_ELEMENT :\n                if (_nextAttributeIndex < _attributeCount) {\n                    _localName = _xmlReader.getAttributeLocalName(_nextAttributeIndex);\n                    _namespaceURI = _xmlReader.getAttributeNamespace(_nextAttributeIndex);\n                    _textValue = _xmlReader.getAttributeValue(_nextAttributeIndex);\n                    return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_ATTRIBUTE_NAME;\n                }\n                java.lang.String text = _collectUntilTag();\n                final boolean startElementNext = _xmlReader.getEventType() == javax.xml.stream.XMLStreamReader.START_ELEMENT;\n                if (startElementNext) {\n                    if ((text == null) || _allWs(text)) {\n                        _mixedText = false;\n                        return _initStartElement();\n                    }\n                    _mixedText = true;\n                    _textValue = text;\n                    return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_TEXT;\n                }\n                if (text != null) {\n                    _mixedText = false;\n                    _textValue = text;\n                    return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_TEXT;\n                }\n                _mixedText = false;\n                return _handleEndElement();\n            case com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_ATTRIBUTE_NAME :\n                return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_ATTRIBUTE_VALUE;\n            case com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_TEXT :\n                if (_mixedText) {\n                    _mixedText = false;\n                    return _initStartElement();\n                }\n                return _handleEndElement();\n            case com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_END :\n                return com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_END;\n        }\n        switch (_skipUntilTag()) {\n            case javax.xml.stream.XMLStreamConstants.END_DOCUMENT :\n                return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_END;\n            case javax.xml.stream.XMLStreamConstants.END_ELEMENT :\n                return _handleEndElement();\n        }\n        return _initStartElement();\n    }\n\n    private final java.lang.String _collectUntilTag() throws javax.xml.stream.XMLStreamException {\n        java.lang.String text = null;\n        while (true) {\n            switch (_xmlReader.next()) {\n                case javax.xml.stream.XMLStreamConstants.START_ELEMENT :\n                case javax.xml.stream.XMLStreamConstants.END_ELEMENT :\n                case javax.xml.stream.XMLStreamConstants.END_DOCUMENT :\n                    return text;\n                case javax.xml.stream.XMLStreamConstants.CHARACTERS :\n                case javax.xml.stream.XMLStreamConstants.CDATA :\n                    if (text == null) {\n                        text = _xmlReader.getText();\n                    } else {\n                        text += _xmlReader.getText();\n                    }\n                    break;\n                default :\n            }\n        } \n    }\n\n    private final int _skipUntilTag() throws javax.xml.stream.XMLStreamException {\n        while (_xmlReader.hasNext()) {\n            int type;\n            switch (type = _xmlReader.next()) {\n                case javax.xml.stream.XMLStreamConstants.START_ELEMENT :\n                case javax.xml.stream.XMLStreamConstants.END_ELEMENT :\n                case javax.xml.stream.XMLStreamConstants.END_DOCUMENT :\n                    return type;\n                default :\n            }\n        } \n        throw new java.lang.IllegalStateException(\"Expected to find a tag, instead reached end of input\");\n    }\n\n    private final int _initStartElement() throws javax.xml.stream.XMLStreamException {\n        final java.lang.String ns = _xmlReader.getNamespaceURI();\n        final java.lang.String localName = _xmlReader.getLocalName();\n        _attributeCount = _xmlReader.getAttributeCount();\n        _nextAttributeIndex = 0;\n        if (_currentWrapper != null) {\n            if (_currentWrapper.matchesWrapper(localName, ns)) {\n                _currentWrapper = _currentWrapper.intermediateWrapper();\n            } else {\n                _localName = _currentWrapper.getWrapperLocalName();\n                _namespaceURI = _currentWrapper.getWrapperNamespace();\n                _currentWrapper = _currentWrapper.getParent();\n                _nextLocalName = localName;\n                _nextNamespaceURI = ns;\n                _repeatElement = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.REPLAY_START_DELAYED;\n                return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_END_ELEMENT;\n            }\n        }\n        _localName = localName;\n        _namespaceURI = ns;\n        return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_START_ELEMENT;\n    }\n\n    protected int _handleRepeatElement() throws java.io.IOException {\n        int type = _repeatElement;\n        _repeatElement = 0;\n        if (type == com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.REPLAY_START_DUP) {\n            _currentWrapper = _currentWrapper.intermediateWrapper();\n            return com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_START_ELEMENT;\n        }\n        if (type == com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.REPLAY_END) {\n            _localName = _xmlReader.getLocalName();\n            _namespaceURI = _xmlReader.getNamespaceURI();\n            if (_currentWrapper != null) {\n                _currentWrapper = _currentWrapper.getParent();\n            }\n            return com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_END_ELEMENT;\n        }\n        if (type == com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.REPLAY_START_DELAYED) {\n            if (_currentWrapper != null) {\n                _currentWrapper = _currentWrapper.intermediateWrapper();\n            }\n            _localName = _nextLocalName;\n            _namespaceURI = _nextNamespaceURI;\n            _nextLocalName = null;\n            _nextNamespaceURI = null;\n            return com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_START_ELEMENT;\n        }\n        throw new java.lang.IllegalStateException(\"Unrecognized type to repeat: \" + type);\n    }\n\n    private final int _handleEndElement() {\n        if (_currentWrapper != null) {\n            com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper w = _currentWrapper;\n            if (w.isMatching()) {\n                _repeatElement = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.REPLAY_END;\n                _localName = w.getWrapperLocalName();\n                _namespaceURI = w.getWrapperNamespace();\n                _currentWrapper = _currentWrapper.getParent();\n            } else {\n                _currentWrapper = _currentWrapper.getParent();\n            }\n        }\n        return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_END_ELEMENT;\n    }\n\n    private com.fasterxml.jackson.core.JsonLocation _extractLocation(org.codehaus.stax2.XMLStreamLocation2 location) {\n        if (location == null) {\n            return new com.fasterxml.jackson.core.JsonLocation(_sourceReference, -1, -1, -1);\n        }\n        return new com.fasterxml.jackson.core.JsonLocation(_sourceReference, location.getCharacterOffset(), location.getLineNumber(), location.getColumnNumber());\n    }\n\n    protected boolean _allWs(java.lang.String str) {\n        final int len = (str == null) ? 0 : str.length();\n        if (len > 0) {\n            for (int i = 0; i < len; ++i) {\n                if (str.charAt(i) > ' ') {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n\n    @java.lang.Override\n    public java.lang.String toString() {\n        java.lang.StringBuilder sb = new java.lang.StringBuilder();\n        sb.append(\"(Token stream:\");\n        sb.append(\" state=\").append(_currentState);\n        sb.append(\" attr#=\").append(_attributeCount);\n        sb.append(\" nextAttr#=\").append(_nextAttributeIndex);\n        sb.append(\" name=\").append(_localName);\n        sb.append(\" text=\").append(_textValue);\n        sb.append(\" repeat?=\").append(_repeatElement);\n        sb.append(\" wrapper=[\").append(_currentWrapper);\n        sb.append(\"] repeatElement=\").append(_repeatElement);\n        sb.append(\" nextName=\").append(_nextLocalName);\n        sb.append(\")\");\n        return sb.toString();\n    }\n}",
            "src_parent_type": "Class",
            "src_type": "Field"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Assignment",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "Assignment",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "Return",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "_mixedText = false",
            "src_parent": "{\n    _mixedText = false;\n    return _initStartElement();\n}",
            "src_parent_type": "Block",
            "src_type": "Assignment"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Switch",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "Return",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Switch",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "final boolean startElementNext = _xmlReader.getEventType() == javax.xml.stream.XMLStreamReader.START_ELEMENT",
            "src_parent": "case com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_START_ELEMENT :\n    if (_nextAttributeIndex < _attributeCount) {\n        _localName = _xmlReader.getAttributeLocalName(_nextAttributeIndex);\n        _namespaceURI = _xmlReader.getAttributeNamespace(_nextAttributeIndex);\n        _textValue = _xmlReader.getAttributeValue(_nextAttributeIndex);\n        return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_ATTRIBUTE_NAME;\n    }\n    java.lang.String text = _collectUntilTag();\n    final boolean startElementNext = _xmlReader.getEventType() == javax.xml.stream.XMLStreamReader.START_ELEMENT;\n    if (startElementNext) {\n        if ((text == null) || _allWs(text)) {\n            _mixedText = false;\n            return _initStartElement();\n        }\n        _mixedText = true;\n        _textValue = text;\n        return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_TEXT;\n    }\n    if (text != null) {\n        _mixedText = false;\n        _textValue = text;\n        return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_TEXT;\n    }\n    _mixedText = false;\n    return _handleEndElement();",
            "src_parent_type": "Case",
            "src_type": "LocalVariable"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Switch",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "Return",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Switch",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "if (startElementNext) {\n    if ((text == null) || _allWs(text)) {\n        _mixedText = false;\n        return _initStartElement();\n    }\n    _mixedText = true;\n    _textValue = text;\n    return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_TEXT;\n}",
            "src_parent": "case com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_START_ELEMENT :\n    if (_nextAttributeIndex < _attributeCount) {\n        _localName = _xmlReader.getAttributeLocalName(_nextAttributeIndex);\n        _namespaceURI = _xmlReader.getAttributeNamespace(_nextAttributeIndex);\n        _textValue = _xmlReader.getAttributeValue(_nextAttributeIndex);\n        return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_ATTRIBUTE_NAME;\n    }\n    java.lang.String text = _collectUntilTag();\n    final boolean startElementNext = _xmlReader.getEventType() == javax.xml.stream.XMLStreamReader.START_ELEMENT;\n    if (startElementNext) {\n        if ((text == null) || _allWs(text)) {\n            _mixedText = false;\n            return _initStartElement();\n        }\n        _mixedText = true;\n        _textValue = text;\n        return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_TEXT;\n    }\n    if (text != null) {\n        _mixedText = false;\n        _textValue = text;\n        return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_TEXT;\n    }\n    _mixedText = false;\n    return _handleEndElement();",
            "src_parent_type": "Case",
            "src_type": "If"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Assignment",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "Return",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "LocalVariable",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Case",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "_mixedText = false",
            "src_parent": "{\n    _mixedText = false;\n    _textValue = text;\n    return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_TEXT;\n}",
            "src_parent_type": "Block",
            "src_type": "Assignment"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Switch",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "Return",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Switch",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "_mixedText = false",
            "src_parent": "case com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_START_ELEMENT :\n    if (_nextAttributeIndex < _attributeCount) {\n        _localName = _xmlReader.getAttributeLocalName(_nextAttributeIndex);\n        _namespaceURI = _xmlReader.getAttributeNamespace(_nextAttributeIndex);\n        _textValue = _xmlReader.getAttributeValue(_nextAttributeIndex);\n        return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_ATTRIBUTE_NAME;\n    }\n    java.lang.String text = _collectUntilTag();\n    final boolean startElementNext = _xmlReader.getEventType() == javax.xml.stream.XMLStreamReader.START_ELEMENT;\n    if (startElementNext) {\n        if ((text == null) || _allWs(text)) {\n            _mixedText = false;\n            return _initStartElement();\n        }\n        _mixedText = true;\n        _textValue = text;\n        return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_TEXT;\n    }\n    if (text != null) {\n        _mixedText = false;\n        _textValue = text;\n        return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_TEXT;\n    }\n    _mixedText = false;\n    return _handleEndElement();",
            "src_parent_type": "Case",
            "src_type": "Assignment"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Switch",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "Return",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Switch",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "if (_mixedText) {\n    _mixedText = false;\n    return _initStartElement();\n}",
            "src_parent": "case com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_TEXT :\n    if (_mixedText) {\n        _mixedText = false;\n        return _initStartElement();\n    }\n    return _handleEndElement();",
            "src_parent_type": "Case",
            "src_type": "If"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Method",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "protected boolean _allWs(java.lang.String str) {\n    final int len = (str == null) ? 0 : str.length();\n    if (len > 0) {\n        for (int i = 0; i < len; ++i) {\n            if (str.charAt(i) > ' ') {\n                return false;\n            }\n        }\n    }\n    return true;\n}",
            "src_parent": "public class XmlTokenStream {\n    public static final int XML_START_ELEMENT = 1;\n\n    public static final int XML_END_ELEMENT = 2;\n\n    public static final int XML_ATTRIBUTE_NAME = 3;\n\n    public static final int XML_ATTRIBUTE_VALUE = 4;\n\n    public static final int XML_TEXT = 5;\n\n    public static final int XML_END = 6;\n\n    private static final int REPLAY_START_DUP = 1;\n\n    private static final int REPLAY_END = 2;\n\n    private static final int REPLAY_START_DELAYED = 3;\n\n    protected final org.codehaus.stax2.XMLStreamReader2 _xmlReader;\n\n    protected final java.lang.Object _sourceReference;\n\n    protected int _currentState;\n\n    protected int _attributeCount;\n\n    protected boolean _mixedText;\n\n    protected int _nextAttributeIndex = 0;\n\n    protected java.lang.String _localName;\n\n    protected java.lang.String _namespaceURI;\n\n    protected java.lang.String _textValue;\n\n    protected int _repeatElement;\n\n    protected com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper _currentWrapper;\n\n    protected java.lang.String _nextLocalName;\n\n    protected java.lang.String _nextNamespaceURI;\n\n    public XmlTokenStream(javax.xml.stream.XMLStreamReader xmlReader, java.lang.Object sourceRef) {\n        _sourceReference = sourceRef;\n        if (xmlReader.getEventType() != javax.xml.stream.XMLStreamConstants.START_ELEMENT) {\n            throw new java.lang.IllegalArgumentException(((\"Invalid XMLStreamReader passed: should be pointing to START_ELEMENT (\" + javax.xml.stream.XMLStreamConstants.START_ELEMENT) + \"), instead got \") + xmlReader.getEventType());\n        }\n        _xmlReader = org.codehaus.stax2.ri.Stax2ReaderAdapter.wrapIfNecessary(xmlReader);\n        _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_START_ELEMENT;\n        _localName = _xmlReader.getLocalName();\n        _namespaceURI = _xmlReader.getNamespaceURI();\n        _attributeCount = _xmlReader.getAttributeCount();\n    }\n\n    public org.codehaus.stax2.XMLStreamReader2 getXmlReader() {\n        return _xmlReader;\n    }\n\n    public int next() throws java.io.IOException {\n        if (_repeatElement != 0) {\n            return _currentState = _handleRepeatElement();\n        }\n        try {\n            return _next();\n        } catch (javax.xml.stream.XMLStreamException e) {\n            com.fasterxml.jackson.dataformat.xml.util.StaxUtil.throwXmlAsIOException(e);\n            return -1;\n        }\n    }\n\n    public void skipEndElement() throws java.io.IOException {\n        int type = next();\n        if (type != com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_END_ELEMENT) {\n            throw new java.io.IOException(\"Expected END_ELEMENT, got event of type \" + type);\n        }\n    }\n\n    public int getCurrentToken() {\n        return _currentState;\n    }\n\n    public java.lang.String getText() {\n        return _textValue;\n    }\n\n    public java.lang.String getLocalName() {\n        return _localName;\n    }\n\n    public java.lang.String getNamespaceURI() {\n        return _namespaceURI;\n    }\n\n    public boolean hasAttributes() {\n        return (_currentState == com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_START_ELEMENT) && (_attributeCount > 0);\n    }\n\n    public void closeCompletely() throws java.io.IOException {\n        try {\n            _xmlReader.closeCompletely();\n        } catch (javax.xml.stream.XMLStreamException e) {\n            com.fasterxml.jackson.dataformat.xml.util.StaxUtil.throwXmlAsIOException(e);\n        }\n    }\n\n    public void close() throws java.io.IOException {\n        try {\n            _xmlReader.close();\n        } catch (javax.xml.stream.XMLStreamException e) {\n            com.fasterxml.jackson.dataformat.xml.util.StaxUtil.throwXmlAsIOException(e);\n        }\n    }\n\n    public com.fasterxml.jackson.core.JsonLocation getCurrentLocation() {\n        return _extractLocation(_xmlReader.getLocationInfo().getCurrentLocation());\n    }\n\n    public com.fasterxml.jackson.core.JsonLocation getTokenLocation() {\n        return _extractLocation(_xmlReader.getLocationInfo().getStartLocation());\n    }\n\n    protected void repeatStartElement() {\n        if (_currentState != com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_START_ELEMENT) {\n            throw new java.lang.IllegalStateException(((\"Current state not XML_START_ELEMENT (\" + com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_START_ELEMENT) + \") but \") + _currentState);\n        }\n        if (_currentWrapper == null) {\n            _currentWrapper = com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper.matchingWrapper(_currentWrapper, _localName, _namespaceURI);\n        } else {\n            _currentWrapper = com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper.matchingWrapper(_currentWrapper.getParent(), _localName, _namespaceURI);\n        }\n        _repeatElement = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.REPLAY_START_DUP;\n    }\n\n    protected void skipAttributes() {\n        if (_currentState == com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_ATTRIBUTE_NAME) {\n            _attributeCount = 0;\n            _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_START_ELEMENT;\n        } else if (_currentState == com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_START_ELEMENT) {\n        } else if (_currentState == com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_TEXT) {\n        } else {\n            throw new java.lang.IllegalStateException(((\"Current state not XML_START_ELEMENT or XML_ATTRIBUTE_NAME (\" + com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_START_ELEMENT) + \") but \") + _currentState);\n        }\n    }\n\n    protected java.lang.String convertToString() throws java.io.IOException {\n        if ((_currentState != com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_ATTRIBUTE_NAME) || (_nextAttributeIndex != 0)) {\n            return null;\n        }\n        try {\n            java.lang.String text = _collectUntilTag();\n            if (_xmlReader.getEventType() == javax.xml.stream.XMLStreamReader.END_ELEMENT) {\n                if (text == null) {\n                    text = \"\";\n                }\n                if (_currentWrapper != null) {\n                    _currentWrapper = _currentWrapper.getParent();\n                }\n                _localName = _xmlReader.getLocalName();\n                _namespaceURI = _xmlReader.getNamespaceURI();\n                _attributeCount = 0;\n                _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_TEXT;\n                _textValue = text;\n                return text;\n            }\n        } catch (javax.xml.stream.XMLStreamException e) {\n            com.fasterxml.jackson.dataformat.xml.util.StaxUtil.throwXmlAsIOException(e);\n        }\n        return null;\n    }\n\n    private final int _next() throws javax.xml.stream.XMLStreamException {\n        switch (_currentState) {\n            case com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_ATTRIBUTE_VALUE :\n                ++_nextAttributeIndex;\n            case com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_START_ELEMENT :\n                if (_nextAttributeIndex < _attributeCount) {\n                    _localName = _xmlReader.getAttributeLocalName(_nextAttributeIndex);\n                    _namespaceURI = _xmlReader.getAttributeNamespace(_nextAttributeIndex);\n                    _textValue = _xmlReader.getAttributeValue(_nextAttributeIndex);\n                    return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_ATTRIBUTE_NAME;\n                }\n                java.lang.String text = _collectUntilTag();\n                final boolean startElementNext = _xmlReader.getEventType() == javax.xml.stream.XMLStreamReader.START_ELEMENT;\n                if (startElementNext) {\n                    if ((text == null) || _allWs(text)) {\n                        _mixedText = false;\n                        return _initStartElement();\n                    }\n                    _mixedText = true;\n                    _textValue = text;\n                    return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_TEXT;\n                }\n                if (text != null) {\n                    _mixedText = false;\n                    _textValue = text;\n                    return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_TEXT;\n                }\n                _mixedText = false;\n                return _handleEndElement();\n            case com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_ATTRIBUTE_NAME :\n                return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_ATTRIBUTE_VALUE;\n            case com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_TEXT :\n                if (_mixedText) {\n                    _mixedText = false;\n                    return _initStartElement();\n                }\n                return _handleEndElement();\n            case com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_END :\n                return com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_END;\n        }\n        switch (_skipUntilTag()) {\n            case javax.xml.stream.XMLStreamConstants.END_DOCUMENT :\n                return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_END;\n            case javax.xml.stream.XMLStreamConstants.END_ELEMENT :\n                return _handleEndElement();\n        }\n        return _initStartElement();\n    }\n\n    private final java.lang.String _collectUntilTag() throws javax.xml.stream.XMLStreamException {\n        java.lang.String text = null;\n        while (true) {\n            switch (_xmlReader.next()) {\n                case javax.xml.stream.XMLStreamConstants.START_ELEMENT :\n                case javax.xml.stream.XMLStreamConstants.END_ELEMENT :\n                case javax.xml.stream.XMLStreamConstants.END_DOCUMENT :\n                    return text;\n                case javax.xml.stream.XMLStreamConstants.CHARACTERS :\n                case javax.xml.stream.XMLStreamConstants.CDATA :\n                    if (text == null) {\n                        text = _xmlReader.getText();\n                    } else {\n                        text += _xmlReader.getText();\n                    }\n                    break;\n                default :\n            }\n        } \n    }\n\n    private final int _skipUntilTag() throws javax.xml.stream.XMLStreamException {\n        while (_xmlReader.hasNext()) {\n            int type;\n            switch (type = _xmlReader.next()) {\n                case javax.xml.stream.XMLStreamConstants.START_ELEMENT :\n                case javax.xml.stream.XMLStreamConstants.END_ELEMENT :\n                case javax.xml.stream.XMLStreamConstants.END_DOCUMENT :\n                    return type;\n                default :\n            }\n        } \n        throw new java.lang.IllegalStateException(\"Expected to find a tag, instead reached end of input\");\n    }\n\n    private final int _initStartElement() throws javax.xml.stream.XMLStreamException {\n        final java.lang.String ns = _xmlReader.getNamespaceURI();\n        final java.lang.String localName = _xmlReader.getLocalName();\n        _attributeCount = _xmlReader.getAttributeCount();\n        _nextAttributeIndex = 0;\n        if (_currentWrapper != null) {\n            if (_currentWrapper.matchesWrapper(localName, ns)) {\n                _currentWrapper = _currentWrapper.intermediateWrapper();\n            } else {\n                _localName = _currentWrapper.getWrapperLocalName();\n                _namespaceURI = _currentWrapper.getWrapperNamespace();\n                _currentWrapper = _currentWrapper.getParent();\n                _nextLocalName = localName;\n                _nextNamespaceURI = ns;\n                _repeatElement = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.REPLAY_START_DELAYED;\n                return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_END_ELEMENT;\n            }\n        }\n        _localName = localName;\n        _namespaceURI = ns;\n        return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_START_ELEMENT;\n    }\n\n    protected int _handleRepeatElement() throws java.io.IOException {\n        int type = _repeatElement;\n        _repeatElement = 0;\n        if (type == com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.REPLAY_START_DUP) {\n            _currentWrapper = _currentWrapper.intermediateWrapper();\n            return com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_START_ELEMENT;\n        }\n        if (type == com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.REPLAY_END) {\n            _localName = _xmlReader.getLocalName();\n            _namespaceURI = _xmlReader.getNamespaceURI();\n            if (_currentWrapper != null) {\n                _currentWrapper = _currentWrapper.getParent();\n            }\n            return com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_END_ELEMENT;\n        }\n        if (type == com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.REPLAY_START_DELAYED) {\n            if (_currentWrapper != null) {\n                _currentWrapper = _currentWrapper.intermediateWrapper();\n            }\n            _localName = _nextLocalName;\n            _namespaceURI = _nextNamespaceURI;\n            _nextLocalName = null;\n            _nextNamespaceURI = null;\n            return com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_START_ELEMENT;\n        }\n        throw new java.lang.IllegalStateException(\"Unrecognized type to repeat: \" + type);\n    }\n\n    private final int _handleEndElement() {\n        if (_currentWrapper != null) {\n            com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper w = _currentWrapper;\n            if (w.isMatching()) {\n                _repeatElement = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.REPLAY_END;\n                _localName = w.getWrapperLocalName();\n                _namespaceURI = w.getWrapperNamespace();\n                _currentWrapper = _currentWrapper.getParent();\n            } else {\n                _currentWrapper = _currentWrapper.getParent();\n            }\n        }\n        return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_END_ELEMENT;\n    }\n\n    private com.fasterxml.jackson.core.JsonLocation _extractLocation(org.codehaus.stax2.XMLStreamLocation2 location) {\n        if (location == null) {\n            return new com.fasterxml.jackson.core.JsonLocation(_sourceReference, -1, -1, -1);\n        }\n        return new com.fasterxml.jackson.core.JsonLocation(_sourceReference, location.getCharacterOffset(), location.getLineNumber(), location.getColumnNumber());\n    }\n\n    protected boolean _allWs(java.lang.String str) {\n        final int len = (str == null) ? 0 : str.length();\n        if (len > 0) {\n            for (int i = 0; i < len; ++i) {\n                if (str.charAt(i) > ' ') {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n\n    @java.lang.Override\n    public java.lang.String toString() {\n        java.lang.StringBuilder sb = new java.lang.StringBuilder();\n        sb.append(\"(Token stream:\");\n        sb.append(\" state=\").append(_currentState);\n        sb.append(\" attr#=\").append(_attributeCount);\n        sb.append(\" nextAttr#=\").append(_nextAttributeIndex);\n        sb.append(\" name=\").append(_localName);\n        sb.append(\" text=\").append(_textValue);\n        sb.append(\" repeat?=\").append(_repeatElement);\n        sb.append(\" wrapper=[\").append(_currentWrapper);\n        sb.append(\"] repeatElement=\").append(_repeatElement);\n        sb.append(\" nextName=\").append(_nextLocalName);\n        sb.append(\")\");\n        return sb.toString();\n    }\n}",
            "src_parent_type": "Class",
            "src_type": "Method"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Switch",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "Return",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Switch",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "if (_xmlReader.getEventType() == javax.xml.stream.XMLStreamReader.START_ELEMENT) {\n    return _initStartElement();\n}",
            "src_parent": "case com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_START_ELEMENT :\n    if (_nextAttributeIndex < _attributeCount) {\n        _localName = _xmlReader.getAttributeLocalName(_nextAttributeIndex);\n        _namespaceURI = _xmlReader.getAttributeNamespace(_nextAttributeIndex);\n        _textValue = _xmlReader.getAttributeValue(_nextAttributeIndex);\n        return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_ATTRIBUTE_NAME;\n    }\n    java.lang.String text = _collectUntilTag();\n    if (_xmlReader.getEventType() == javax.xml.stream.XMLStreamReader.START_ELEMENT) {\n        return _initStartElement();\n    }\n    if (text != null) {\n        _textValue = text;\n        return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_TEXT;\n    }\n    return _handleEndElement();",
            "src_parent_type": "Case",
            "src_type": "If"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "Assignment",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Case",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "LocalVariable",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "_xmlReader.getEventType() == javax.xml.stream.XMLStreamReader.START_ELEMENT",
            "dst_parent": "if (_xmlReader.getEventType() == javax.xml.stream.XMLStreamReader.START_ELEMENT) {\n    return _initStartElement();\n}",
            "dst_parent_type": "If",
            "dst_type": "BinaryOperator",
            "operator": "MOV",
            "src": "_xmlReader.getEventType() == javax.xml.stream.XMLStreamReader.START_ELEMENT",
            "src_parent": "final boolean startElementNext = _xmlReader.getEventType() == javax.xml.stream.XMLStreamReader.START_ELEMENT",
            "src_parent_type": "LocalVariable",
            "src_type": "BinaryOperator"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Assignment",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "Assignment",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "Return",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "{\n    return _initStartElement();\n}",
            "dst_parent": "if (_xmlReader.getEventType() == javax.xml.stream.XMLStreamReader.START_ELEMENT) {\n    return _initStartElement();\n}",
            "dst_parent_type": "If",
            "dst_type": "Block",
            "operator": "MOV",
            "src": "{\n    _mixedText = false;\n    return _initStartElement();\n}",
            "src_parent": "if ((text == null) || _allWs(text)) {\n    _mixedText = false;\n    return _initStartElement();\n}",
            "src_parent_type": "If",
            "src_type": "Block"
          }
        }
      ],
      "file_name": "XmlTokenStream"
    }
  ],
  "id": "JacksonXml_2"
}