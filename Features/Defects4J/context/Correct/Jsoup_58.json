{
  "files": [
    {
      "features": [
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Return",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "new org.jsoup.safety.Cleaner(whitelist).isValid(org.jsoup.Jsoup.parseBodyFragment(bodyHtml, \"\"))",
            "dst_parent": "return new org.jsoup.safety.Cleaner(whitelist).isValid(org.jsoup.Jsoup.parseBodyFragment(bodyHtml, \"\"))",
            "dst_parent_type": "Return",
            "dst_type": "Invocation",
            "operator": "UPD",
            "src": "new org.jsoup.safety.Cleaner(whitelist).isValidBodyHtml(bodyHtml)",
            "src_parent": "return new org.jsoup.safety.Cleaner(whitelist).isValidBodyHtml(bodyHtml)",
            "src_parent_type": "Return",
            "src_type": "Invocation"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Return",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "bodyHtml",
            "dst_parent": "org.jsoup.Jsoup.parseBodyFragment(bodyHtml, \"\")",
            "dst_parent_type": "Invocation",
            "dst_type": "VariableRead",
            "operator": "MOV",
            "src": "bodyHtml",
            "src_parent": "new org.jsoup.safety.Cleaner(whitelist).isValidBodyHtml(bodyHtml)",
            "src_parent_type": "Invocation",
            "src_type": "VariableRead"
          }
        }
      ],
      "file_name": "Jsoup"
    },
    {
      "features": [
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "true",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Method",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "public static java.util.List<org.jsoup.nodes.Node> parseFragment(java.lang.String fragmentHtml, org.jsoup.nodes.Element context, java.lang.String baseUri, org.jsoup.parser.ParseErrorList errorList) {\n    org.jsoup.parser.HtmlTreeBuilder treeBuilder = new org.jsoup.parser.HtmlTreeBuilder();\n    return treeBuilder.parseFragment(fragmentHtml, context, baseUri, errorList, treeBuilder.defaultSettings());\n}",
            "src_parent": "public class Parser {\n    private static final int DEFAULT_MAX_ERRORS = 0;\n\n    private org.jsoup.parser.TreeBuilder treeBuilder;\n\n    private int maxErrors = org.jsoup.parser.Parser.DEFAULT_MAX_ERRORS;\n\n    private org.jsoup.parser.ParseErrorList errors;\n\n    private org.jsoup.parser.ParseSettings settings;\n\n    public Parser(org.jsoup.parser.TreeBuilder treeBuilder) {\n        this.treeBuilder = treeBuilder;\n        settings = treeBuilder.defaultSettings();\n    }\n\n    public org.jsoup.nodes.Document parseInput(java.lang.String html, java.lang.String baseUri) {\n        errors = (isTrackErrors()) ? org.jsoup.parser.ParseErrorList.tracking(maxErrors) : org.jsoup.parser.ParseErrorList.noTracking();\n        return treeBuilder.parse(html, baseUri, errors, settings);\n    }\n\n    public org.jsoup.parser.TreeBuilder getTreeBuilder() {\n        return treeBuilder;\n    }\n\n    public org.jsoup.parser.Parser setTreeBuilder(org.jsoup.parser.TreeBuilder treeBuilder) {\n        this.treeBuilder = treeBuilder;\n        return this;\n    }\n\n    public boolean isTrackErrors() {\n        return maxErrors > 0;\n    }\n\n    public org.jsoup.parser.Parser setTrackErrors(int maxErrors) {\n        this.maxErrors = maxErrors;\n        return this;\n    }\n\n    public java.util.List<org.jsoup.parser.ParseError> getErrors() {\n        return errors;\n    }\n\n    public org.jsoup.parser.Parser settings(org.jsoup.parser.ParseSettings settings) {\n        this.settings = settings;\n        return this;\n    }\n\n    public org.jsoup.parser.ParseSettings settings() {\n        return settings;\n    }\n\n    public static org.jsoup.nodes.Document parse(java.lang.String html, java.lang.String baseUri) {\n        org.jsoup.parser.TreeBuilder treeBuilder = new org.jsoup.parser.HtmlTreeBuilder();\n        return treeBuilder.parse(html, baseUri, org.jsoup.parser.ParseErrorList.noTracking(), treeBuilder.defaultSettings());\n    }\n\n    public static java.util.List<org.jsoup.nodes.Node> parseFragment(java.lang.String fragmentHtml, org.jsoup.nodes.Element context, java.lang.String baseUri) {\n        org.jsoup.parser.HtmlTreeBuilder treeBuilder = new org.jsoup.parser.HtmlTreeBuilder();\n        return treeBuilder.parseFragment(fragmentHtml, context, baseUri, org.jsoup.parser.ParseErrorList.noTracking(), treeBuilder.defaultSettings());\n    }\n\n    public static java.util.List<org.jsoup.nodes.Node> parseFragment(java.lang.String fragmentHtml, org.jsoup.nodes.Element context, java.lang.String baseUri, org.jsoup.parser.ParseErrorList errorList) {\n        org.jsoup.parser.HtmlTreeBuilder treeBuilder = new org.jsoup.parser.HtmlTreeBuilder();\n        return treeBuilder.parseFragment(fragmentHtml, context, baseUri, errorList, treeBuilder.defaultSettings());\n    }\n\n    public static java.util.List<org.jsoup.nodes.Node> parseXmlFragment(java.lang.String fragmentXml, java.lang.String baseUri) {\n        org.jsoup.parser.XmlTreeBuilder treeBuilder = new org.jsoup.parser.XmlTreeBuilder();\n        return treeBuilder.parseFragment(fragmentXml, baseUri, org.jsoup.parser.ParseErrorList.noTracking(), treeBuilder.defaultSettings());\n    }\n\n    public static org.jsoup.nodes.Document parseBodyFragment(java.lang.String bodyHtml, java.lang.String baseUri) {\n        org.jsoup.nodes.Document doc = org.jsoup.nodes.Document.createShell(baseUri);\n        org.jsoup.nodes.Element body = doc.body();\n        java.util.List<org.jsoup.nodes.Node> nodeList = org.jsoup.parser.Parser.parseFragment(bodyHtml, body, baseUri);\n        org.jsoup.nodes.Node[] nodes = nodeList.toArray(new org.jsoup.nodes.Node[nodeList.size()]);\n        for (int i = nodes.length - 1; i > 0; i--) {\n            nodes[i].remove();\n        }\n        for (org.jsoup.nodes.Node node : nodes) {\n            body.appendChild(node);\n        }\n        return doc;\n    }\n\n    public static java.lang.String unescapeEntities(java.lang.String string, boolean inAttribute) {\n        org.jsoup.parser.Tokeniser tokeniser = new org.jsoup.parser.Tokeniser(new org.jsoup.parser.CharacterReader(string), org.jsoup.parser.ParseErrorList.noTracking());\n        return tokeniser.unescapeEntities(inAttribute);\n    }\n\n    public static org.jsoup.nodes.Document parseBodyFragmentRelaxed(java.lang.String bodyHtml, java.lang.String baseUri) {\n        return org.jsoup.parser.Parser.parse(bodyHtml, baseUri);\n    }\n\n    public static org.jsoup.parser.Parser htmlParser() {\n        return new org.jsoup.parser.Parser(new org.jsoup.parser.HtmlTreeBuilder());\n    }\n\n    public static org.jsoup.parser.Parser xmlParser() {\n        return new org.jsoup.parser.Parser(new org.jsoup.parser.XmlTreeBuilder());\n    }\n}",
            "src_parent_type": "Class",
            "src_type": "Method"
          }
        }
      ],
      "file_name": "Parser"
    },
    {
      "features": [
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "Invocation",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Return",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "(numDiscarded == 0) && (dirtyDocument.head().childNodes().size() == 0)",
            "src_parent": "return (numDiscarded == 0) && (dirtyDocument.head().childNodes().size() == 0)",
            "src_parent_type": "Return",
            "src_type": "BinaryOperator"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "true",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Method",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "public boolean isValidBodyHtml(java.lang.String bodyHtml) {\n    org.jsoup.nodes.Document clean = org.jsoup.nodes.Document.createShell(\"\");\n    org.jsoup.nodes.Document dirty = org.jsoup.nodes.Document.createShell(\"\");\n    org.jsoup.parser.ParseErrorList errorList = org.jsoup.parser.ParseErrorList.tracking(1);\n    java.util.List<org.jsoup.nodes.Node> nodes = org.jsoup.parser.Parser.parseFragment(bodyHtml, dirty.body(), \"\", errorList);\n    dirty.body().insertChildren(0, nodes);\n    int numDiscarded = copySafeNodes(dirty.body(), clean.body());\n    return (numDiscarded == 0) && (errorList.size() == 0);\n}",
            "src_parent": "public class Cleaner {\n    private org.jsoup.safety.Whitelist whitelist;\n\n    public Cleaner(org.jsoup.safety.Whitelist whitelist) {\n        org.jsoup.helper.Validate.notNull(whitelist);\n        this.whitelist = whitelist;\n    }\n\n    public org.jsoup.nodes.Document clean(org.jsoup.nodes.Document dirtyDocument) {\n        org.jsoup.helper.Validate.notNull(dirtyDocument);\n        org.jsoup.nodes.Document clean = org.jsoup.nodes.Document.createShell(dirtyDocument.baseUri());\n        if (dirtyDocument.body() != null) {\n            copySafeNodes(dirtyDocument.body(), clean.body());\n        }\n        return clean;\n    }\n\n    public boolean isValid(org.jsoup.nodes.Document dirtyDocument) {\n        org.jsoup.helper.Validate.notNull(dirtyDocument);\n        org.jsoup.nodes.Document clean = org.jsoup.nodes.Document.createShell(dirtyDocument.baseUri());\n        int numDiscarded = copySafeNodes(dirtyDocument.body(), clean.body());\n        return (numDiscarded == 0) && (dirtyDocument.head().childNodes().size() == 0);\n    }\n\n    public boolean isValidBodyHtml(java.lang.String bodyHtml) {\n        org.jsoup.nodes.Document clean = org.jsoup.nodes.Document.createShell(\"\");\n        org.jsoup.nodes.Document dirty = org.jsoup.nodes.Document.createShell(\"\");\n        org.jsoup.parser.ParseErrorList errorList = org.jsoup.parser.ParseErrorList.tracking(1);\n        java.util.List<org.jsoup.nodes.Node> nodes = org.jsoup.parser.Parser.parseFragment(bodyHtml, dirty.body(), \"\", errorList);\n        dirty.body().insertChildren(0, nodes);\n        int numDiscarded = copySafeNodes(dirty.body(), clean.body());\n        return (numDiscarded == 0) && (errorList.size() == 0);\n    }\n\n    private final class CleaningVisitor implements org.jsoup.select.NodeVisitor {\n        private int numDiscarded = 0;\n\n        private final org.jsoup.nodes.Element root;\n\n        private org.jsoup.nodes.Element destination;\n\n        private CleaningVisitor(org.jsoup.nodes.Element root, org.jsoup.nodes.Element destination) {\n            this.root = root;\n            this.destination = destination;\n        }\n\n        public void head(org.jsoup.nodes.Node source, int depth) {\n            if (source instanceof org.jsoup.nodes.Element) {\n                org.jsoup.nodes.Element sourceEl = ((org.jsoup.nodes.Element) (source));\n                if (whitelist.isSafeTag(sourceEl.tagName())) {\n                    org.jsoup.safety.Cleaner.ElementMeta meta = createSafeElement(sourceEl);\n                    org.jsoup.nodes.Element destChild = meta.el;\n                    destination.appendChild(destChild);\n                    numDiscarded += meta.numAttribsDiscarded;\n                    destination = destChild;\n                } else if (source != root) {\n                    numDiscarded++;\n                }\n            } else if (source instanceof org.jsoup.nodes.TextNode) {\n                org.jsoup.nodes.TextNode sourceText = ((org.jsoup.nodes.TextNode) (source));\n                org.jsoup.nodes.TextNode destText = new org.jsoup.nodes.TextNode(sourceText.getWholeText(), source.baseUri());\n                destination.appendChild(destText);\n            } else if ((source instanceof org.jsoup.nodes.DataNode) && whitelist.isSafeTag(source.parent().nodeName())) {\n                org.jsoup.nodes.DataNode sourceData = ((org.jsoup.nodes.DataNode) (source));\n                org.jsoup.nodes.DataNode destData = new org.jsoup.nodes.DataNode(sourceData.getWholeData(), source.baseUri());\n                destination.appendChild(destData);\n            } else {\n                numDiscarded++;\n            }\n        }\n\n        public void tail(org.jsoup.nodes.Node source, int depth) {\n            if ((source instanceof org.jsoup.nodes.Element) && whitelist.isSafeTag(source.nodeName())) {\n                destination = destination.parent();\n            }\n        }\n    }\n\n    private int copySafeNodes(org.jsoup.nodes.Element source, org.jsoup.nodes.Element dest) {\n        org.jsoup.safety.Cleaner.CleaningVisitor cleaningVisitor = new org.jsoup.safety.Cleaner.CleaningVisitor(source, dest);\n        org.jsoup.select.NodeTraversor traversor = new org.jsoup.select.NodeTraversor(cleaningVisitor);\n        traversor.traverse(source);\n        return cleaningVisitor.numDiscarded;\n    }\n\n    private org.jsoup.safety.Cleaner.ElementMeta createSafeElement(org.jsoup.nodes.Element sourceEl) {\n        java.lang.String sourceTag = sourceEl.tagName();\n        org.jsoup.nodes.Attributes destAttrs = new org.jsoup.nodes.Attributes();\n        org.jsoup.nodes.Element dest = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(sourceTag), sourceEl.baseUri(), destAttrs);\n        int numDiscarded = 0;\n        org.jsoup.nodes.Attributes sourceAttrs = sourceEl.attributes();\n        for (org.jsoup.nodes.Attribute sourceAttr : sourceAttrs) {\n            if (whitelist.isSafeAttribute(sourceTag, sourceEl, sourceAttr)) {\n                destAttrs.put(sourceAttr);\n            } else {\n                numDiscarded++;\n            }\n        }\n        org.jsoup.nodes.Attributes enforcedAttrs = whitelist.getEnforcedAttributes(sourceTag);\n        destAttrs.addAll(enforcedAttrs);\n        return new org.jsoup.safety.Cleaner.ElementMeta(dest, numDiscarded);\n    }\n\n    private static class ElementMeta {\n        org.jsoup.nodes.Element el;\n\n        int numAttribsDiscarded;\n\n        ElementMeta(org.jsoup.nodes.Element el, int numAttribsDiscarded) {\n            this.el = el;\n            this.numAttribsDiscarded = numAttribsDiscarded;\n        }\n    }\n}",
            "src_parent_type": "Class",
            "src_type": "Method"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "Invocation",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Return",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "numDiscarded == 0",
            "dst_parent": "return numDiscarded == 0",
            "dst_parent_type": "Return",
            "dst_type": "BinaryOperator",
            "operator": "MOV",
            "src": "(numDiscarded == 0)",
            "src_parent": "(numDiscarded == 0) && (dirtyDocument.head().childNodes().size() == 0)",
            "src_parent_type": "BinaryOperator",
            "src_type": "BinaryOperator"
          }
        }
      ],
      "file_name": "Cleaner"
    }
  ],
  "id": "Jsoup_58"
}