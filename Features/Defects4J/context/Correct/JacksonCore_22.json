{
  "files": [
    {
      "features": [
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "_verifyAllowedMatches() && _includePath",
            "src_parent": "if (_verifyAllowedMatches() && _includePath) {\n    return _currToken = t;\n}",
            "src_parent_type": "If",
            "src_type": "BinaryOperator"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "Assignment",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "{\n    if (_verifyAllowedMatches()) {\n        return _currToken = t;\n    }\n}",
            "src_parent": "if ((f == com.fasterxml.jackson.core.filter.TokenFilter.INCLUDE_ALL) || ((f != null) && f.includeValue(delegate))) {\n    if (_verifyAllowedMatches()) {\n        return _currToken = t;\n    }\n}",
            "src_parent_type": "If",
            "src_type": "Block"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Continue",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "_verifyAllowedMatches() && _includePath",
            "src_parent": "if (_verifyAllowedMatches() && _includePath) {\n    return _currToken = t;\n}",
            "src_parent_type": "If",
            "src_type": "BinaryOperator"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "Assignment",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "{\n    if (_verifyAllowedMatches()) {\n        return _currToken = t;\n    }\n}",
            "src_parent": "if ((f == com.fasterxml.jackson.core.filter.TokenFilter.INCLUDE_ALL) || ((f != null) && f.includeValue(delegate))) {\n    if (_verifyAllowedMatches()) {\n        return _currToken = t;\n    }\n}",
            "src_parent_type": "If",
            "src_type": "Block"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "Assignment",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "Assignment",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Case",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "(f == com.fasterxml.jackson.core.filter.TokenFilter.INCLUDE_ALL) && _verifyAllowedMatches()",
            "src_parent": "if ((f == com.fasterxml.jackson.core.filter.TokenFilter.INCLUDE_ALL) && _verifyAllowedMatches()) {\n    return _nextBuffered(buffRoot);\n}",
            "src_parent_type": "If",
            "src_type": "BinaryOperator"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "Assignment",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "{\n    if (_verifyAllowedMatches()) {\n        return _nextBuffered(buffRoot);\n    }\n}",
            "src_parent": "if ((f == com.fasterxml.jackson.core.filter.TokenFilter.INCLUDE_ALL) || ((f != null) && f.includeValue(delegate))) {\n    if (_verifyAllowedMatches()) {\n        return _nextBuffered(buffRoot);\n    }\n}",
            "src_parent_type": "If",
            "src_type": "Block"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Method",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "private final boolean _verifyAllowedMatches() throws java.io.IOException {\n    if ((_matchCount == 0) || _allowMultipleMatches) {\n        ++_matchCount;\n        return true;\n    }\n    return false;\n}",
            "src_parent": "public class FilteringParserDelegate extends com.fasterxml.jackson.core.util.JsonParserDelegate {\n    protected com.fasterxml.jackson.core.filter.TokenFilter rootFilter;\n\n    protected boolean _allowMultipleMatches;\n\n    protected boolean _includePath;\n\n    @java.lang.Deprecated\n    protected boolean _includeImmediateParent;\n\n    protected com.fasterxml.jackson.core.JsonToken _currToken;\n\n    protected com.fasterxml.jackson.core.JsonToken _lastClearedToken;\n\n    protected com.fasterxml.jackson.core.filter.TokenFilterContext _headContext;\n\n    protected com.fasterxml.jackson.core.filter.TokenFilterContext _exposedContext;\n\n    protected com.fasterxml.jackson.core.filter.TokenFilter _itemFilter;\n\n    protected int _matchCount;\n\n    public FilteringParserDelegate(com.fasterxml.jackson.core.JsonParser p, com.fasterxml.jackson.core.filter.TokenFilter f, boolean includePath, boolean allowMultipleMatches) {\n        super(p);\n        rootFilter = f;\n        _itemFilter = f;\n        _headContext = com.fasterxml.jackson.core.filter.TokenFilterContext.createRootContext(f);\n        _includePath = includePath;\n        _allowMultipleMatches = allowMultipleMatches;\n    }\n\n    public com.fasterxml.jackson.core.filter.TokenFilter getFilter() {\n        return rootFilter;\n    }\n\n    public int getMatchCount() {\n        return _matchCount;\n    }\n\n    @java.lang.Override\n    public com.fasterxml.jackson.core.JsonToken getCurrentToken() {\n        return _currToken;\n    }\n\n    @java.lang.Override\n    public com.fasterxml.jackson.core.JsonToken currentToken() {\n        return _currToken;\n    }\n\n    @java.lang.Override\n    public final int getCurrentTokenId() {\n        final com.fasterxml.jackson.core.JsonToken t = _currToken;\n        return t == null ? com.fasterxml.jackson.core.JsonTokenId.ID_NO_TOKEN : t.id();\n    }\n\n    @java.lang.Override\n    public final int currentTokenId() {\n        final com.fasterxml.jackson.core.JsonToken t = _currToken;\n        return t == null ? com.fasterxml.jackson.core.JsonTokenId.ID_NO_TOKEN : t.id();\n    }\n\n    @java.lang.Override\n    public boolean hasCurrentToken() {\n        return _currToken != null;\n    }\n\n    @java.lang.Override\n    public boolean hasTokenId(int id) {\n        final com.fasterxml.jackson.core.JsonToken t = _currToken;\n        if (t == null) {\n            return com.fasterxml.jackson.core.JsonTokenId.ID_NO_TOKEN == id;\n        }\n        return t.id() == id;\n    }\n\n    @java.lang.Override\n    public final boolean hasToken(com.fasterxml.jackson.core.JsonToken t) {\n        return _currToken == t;\n    }\n\n    @java.lang.Override\n    public boolean isExpectedStartArrayToken() {\n        return _currToken == com.fasterxml.jackson.core.JsonToken.START_ARRAY;\n    }\n\n    @java.lang.Override\n    public boolean isExpectedStartObjectToken() {\n        return _currToken == com.fasterxml.jackson.core.JsonToken.START_OBJECT;\n    }\n\n    @java.lang.Override\n    public com.fasterxml.jackson.core.JsonLocation getCurrentLocation() {\n        return delegate.getCurrentLocation();\n    }\n\n    @java.lang.Override\n    public com.fasterxml.jackson.core.JsonStreamContext getParsingContext() {\n        return _filterContext();\n    }\n\n    @java.lang.Override\n    public java.lang.String getCurrentName() throws java.io.IOException {\n        com.fasterxml.jackson.core.JsonStreamContext ctxt = _filterContext();\n        if ((_currToken == com.fasterxml.jackson.core.JsonToken.START_OBJECT) || (_currToken == com.fasterxml.jackson.core.JsonToken.START_ARRAY)) {\n            com.fasterxml.jackson.core.JsonStreamContext parent = ctxt.getParent();\n            return parent == null ? null : parent.getCurrentName();\n        }\n        return ctxt.getCurrentName();\n    }\n\n    @java.lang.Override\n    public void clearCurrentToken() {\n        if (_currToken != null) {\n            _lastClearedToken = _currToken;\n            _currToken = null;\n        }\n    }\n\n    @java.lang.Override\n    public com.fasterxml.jackson.core.JsonToken getLastClearedToken() {\n        return _lastClearedToken;\n    }\n\n    @java.lang.Override\n    public void overrideCurrentName(java.lang.String name) {\n        throw new java.lang.UnsupportedOperationException(\"Can not currently override name during filtering read\");\n    }\n\n    @java.lang.Override\n    public com.fasterxml.jackson.core.JsonToken nextToken() throws java.io.IOException {\n        if (((!_allowMultipleMatches) && (_currToken != null)) && (_exposedContext == null)) {\n            if (((_currToken.isScalarValue() && (!_headContext.isStartHandled())) && (!_includePath)) && (_itemFilter == com.fasterxml.jackson.core.filter.TokenFilter.INCLUDE_ALL)) {\n                return _currToken = null;\n            }\n        }\n        com.fasterxml.jackson.core.filter.TokenFilterContext ctxt = _exposedContext;\n        if (ctxt != null) {\n            while (true) {\n                com.fasterxml.jackson.core.JsonToken t = ctxt.nextTokenToRead();\n                if (t != null) {\n                    _currToken = t;\n                    return t;\n                }\n                if (ctxt == _headContext) {\n                    _exposedContext = null;\n                    if (ctxt.inArray()) {\n                        t = delegate.getCurrentToken();\n                        _currToken = t;\n                        return t;\n                    }\n                    break;\n                }\n                ctxt = _headContext.findChildOf(ctxt);\n                _exposedContext = ctxt;\n                if (ctxt == null) {\n                    throw _constructError(\"Unexpected problem: chain of filtered context broken\");\n                }\n            } \n        }\n        com.fasterxml.jackson.core.JsonToken t = delegate.nextToken();\n        if (t == null) {\n            _currToken = t;\n            return t;\n        }\n        com.fasterxml.jackson.core.filter.TokenFilter f;\n        switch (t.id()) {\n            case com.fasterxml.jackson.core.JsonTokenId.ID_START_ARRAY :\n                f = _itemFilter;\n                if (f == com.fasterxml.jackson.core.filter.TokenFilter.INCLUDE_ALL) {\n                    _headContext = _headContext.createChildArrayContext(f, true);\n                    return _currToken = t;\n                }\n                if (f == null) {\n                    delegate.skipChildren();\n                    break;\n                }\n                f = _headContext.checkValue(f);\n                if (f == null) {\n                    delegate.skipChildren();\n                    break;\n                }\n                if (f != com.fasterxml.jackson.core.filter.TokenFilter.INCLUDE_ALL) {\n                    f = f.filterStartArray();\n                }\n                _itemFilter = f;\n                if (f == com.fasterxml.jackson.core.filter.TokenFilter.INCLUDE_ALL) {\n                    _headContext = _headContext.createChildArrayContext(f, true);\n                    return _currToken = t;\n                }\n                _headContext = _headContext.createChildArrayContext(f, false);\n                if (_includePath) {\n                    t = _nextTokenWithBuffering(_headContext);\n                    if (t != null) {\n                        _currToken = t;\n                        return t;\n                    }\n                }\n                break;\n            case com.fasterxml.jackson.core.JsonTokenId.ID_START_OBJECT :\n                f = _itemFilter;\n                if (f == com.fasterxml.jackson.core.filter.TokenFilter.INCLUDE_ALL) {\n                    _headContext = _headContext.createChildObjectContext(f, true);\n                    return _currToken = t;\n                }\n                if (f == null) {\n                    delegate.skipChildren();\n                    break;\n                }\n                f = _headContext.checkValue(f);\n                if (f == null) {\n                    delegate.skipChildren();\n                    break;\n                }\n                if (f != com.fasterxml.jackson.core.filter.TokenFilter.INCLUDE_ALL) {\n                    f = f.filterStartObject();\n                }\n                _itemFilter = f;\n                if (f == com.fasterxml.jackson.core.filter.TokenFilter.INCLUDE_ALL) {\n                    _headContext = _headContext.createChildObjectContext(f, true);\n                    return _currToken = t;\n                }\n                _headContext = _headContext.createChildObjectContext(f, false);\n                if (_includePath) {\n                    t = _nextTokenWithBuffering(_headContext);\n                    if (t != null) {\n                        _currToken = t;\n                        return t;\n                    }\n                }\n                break;\n            case com.fasterxml.jackson.core.JsonTokenId.ID_END_ARRAY :\n            case com.fasterxml.jackson.core.JsonTokenId.ID_END_OBJECT :\n                {\n                    boolean returnEnd = _headContext.isStartHandled();\n                    f = _headContext.getFilter();\n                    if ((f != null) && (f != com.fasterxml.jackson.core.filter.TokenFilter.INCLUDE_ALL)) {\n                        f.filterFinishArray();\n                    }\n                    _headContext = _headContext.getParent();\n                    _itemFilter = _headContext.getFilter();\n                    if (returnEnd) {\n                        return _currToken = t;\n                    }\n                }\n                break;\n            case com.fasterxml.jackson.core.JsonTokenId.ID_FIELD_NAME :\n                {\n                    final java.lang.String name = delegate.getCurrentName();\n                    f = _headContext.setFieldName(name);\n                    if (f == com.fasterxml.jackson.core.filter.TokenFilter.INCLUDE_ALL) {\n                        _itemFilter = f;\n                        if (!_includePath) {\n                            if (_includeImmediateParent && (!_headContext.isStartHandled())) {\n                                t = _headContext.nextTokenToRead();\n                                _exposedContext = _headContext;\n                            }\n                        }\n                        return _currToken = t;\n                    }\n                    if (f == null) {\n                        delegate.nextToken();\n                        delegate.skipChildren();\n                        break;\n                    }\n                    f = f.includeProperty(name);\n                    if (f == null) {\n                        delegate.nextToken();\n                        delegate.skipChildren();\n                        break;\n                    }\n                    _itemFilter = f;\n                    if (f == com.fasterxml.jackson.core.filter.TokenFilter.INCLUDE_ALL) {\n                        if (_verifyAllowedMatches() && _includePath) {\n                            return _currToken = t;\n                        }\n                    }\n                    if (_includePath) {\n                        t = _nextTokenWithBuffering(_headContext);\n                        if (t != null) {\n                            _currToken = t;\n                            return t;\n                        }\n                    }\n                    break;\n                }\n            default :\n                f = _itemFilter;\n                if (f == com.fasterxml.jackson.core.filter.TokenFilter.INCLUDE_ALL) {\n                    return _currToken = t;\n                }\n                if (f != null) {\n                    f = _headContext.checkValue(f);\n                    if ((f == com.fasterxml.jackson.core.filter.TokenFilter.INCLUDE_ALL) || ((f != null) && f.includeValue(delegate))) {\n                        if (_verifyAllowedMatches()) {\n                            return _currToken = t;\n                        }\n                    }\n                }\n                break;\n        }\n        return _nextToken2();\n    }\n\n    protected final com.fasterxml.jackson.core.JsonToken _nextToken2() throws java.io.IOException {\n        main_loop : while (true) {\n            com.fasterxml.jackson.core.JsonToken t = delegate.nextToken();\n            if (t == null) {\n                _currToken = t;\n                return t;\n            }\n            com.fasterxml.jackson.core.filter.TokenFilter f;\n            switch (t.id()) {\n                case com.fasterxml.jackson.core.JsonTokenId.ID_START_ARRAY :\n                    f = _itemFilter;\n                    if (f == com.fasterxml.jackson.core.filter.TokenFilter.INCLUDE_ALL) {\n                        _headContext = _headContext.createChildArrayContext(f, true);\n                        return _currToken = t;\n                    }\n                    if (f == null) {\n                        delegate.skipChildren();\n                        continue main_loop;\n                    }\n                    f = _headContext.checkValue(f);\n                    if (f == null) {\n                        delegate.skipChildren();\n                        continue main_loop;\n                    }\n                    if (f != com.fasterxml.jackson.core.filter.TokenFilter.INCLUDE_ALL) {\n                        f = f.filterStartArray();\n                    }\n                    _itemFilter = f;\n                    if (f == com.fasterxml.jackson.core.filter.TokenFilter.INCLUDE_ALL) {\n                        _headContext = _headContext.createChildArrayContext(f, true);\n                        return _currToken = t;\n                    }\n                    _headContext = _headContext.createChildArrayContext(f, false);\n                    if (_includePath) {\n                        t = _nextTokenWithBuffering(_headContext);\n                        if (t != null) {\n                            _currToken = t;\n                            return t;\n                        }\n                    }\n                    continue main_loop;\n                case com.fasterxml.jackson.core.JsonTokenId.ID_START_OBJECT :\n                    f = _itemFilter;\n                    if (f == com.fasterxml.jackson.core.filter.TokenFilter.INCLUDE_ALL) {\n                        _headContext = _headContext.createChildObjectContext(f, true);\n                        return _currToken = t;\n                    }\n                    if (f == null) {\n                        delegate.skipChildren();\n                        continue main_loop;\n                    }\n                    f = _headContext.checkValue(f);\n                    if (f == null) {\n                        delegate.skipChildren();\n                        continue main_loop;\n                    }\n                    if (f != com.fasterxml.jackson.core.filter.TokenFilter.INCLUDE_ALL) {\n                        f = f.filterStartObject();\n                    }\n                    _itemFilter = f;\n                    if (f == com.fasterxml.jackson.core.filter.TokenFilter.INCLUDE_ALL) {\n                        _headContext = _headContext.createChildObjectContext(f, true);\n                        return _currToken = t;\n                    }\n                    _headContext = _headContext.createChildObjectContext(f, false);\n                    if (_includePath) {\n                        t = _nextTokenWithBuffering(_headContext);\n                        if (t != null) {\n                            _currToken = t;\n                            return t;\n                        }\n                    }\n                    continue main_loop;\n                case com.fasterxml.jackson.core.JsonTokenId.ID_END_ARRAY :\n                case com.fasterxml.jackson.core.JsonTokenId.ID_END_OBJECT :\n                    {\n                        boolean returnEnd = _headContext.isStartHandled();\n                        f = _headContext.getFilter();\n                        if ((f != null) && (f != com.fasterxml.jackson.core.filter.TokenFilter.INCLUDE_ALL)) {\n                            f.filterFinishArray();\n                        }\n                        _headContext = _headContext.getParent();\n                        _itemFilter = _headContext.getFilter();\n                        if (returnEnd) {\n                            return _currToken = t;\n                        }\n                    }\n                    continue main_loop;\n                case com.fasterxml.jackson.core.JsonTokenId.ID_FIELD_NAME :\n                    {\n                        final java.lang.String name = delegate.getCurrentName();\n                        f = _headContext.setFieldName(name);\n                        if (f == com.fasterxml.jackson.core.filter.TokenFilter.INCLUDE_ALL) {\n                            _itemFilter = f;\n                            return _currToken = t;\n                        }\n                        if (f == null) {\n                            delegate.nextToken();\n                            delegate.skipChildren();\n                            continue main_loop;\n                        }\n                        f = f.includeProperty(name);\n                        if (f == null) {\n                            delegate.nextToken();\n                            delegate.skipChildren();\n                            continue main_loop;\n                        }\n                        _itemFilter = f;\n                        if (f == com.fasterxml.jackson.core.filter.TokenFilter.INCLUDE_ALL) {\n                            if (_verifyAllowedMatches() && _includePath) {\n                                return _currToken = t;\n                            }\n                            continue main_loop;\n                        }\n                        if (_includePath) {\n                            t = _nextTokenWithBuffering(_headContext);\n                            if (t != null) {\n                                _currToken = t;\n                                return t;\n                            }\n                        }\n                    }\n                    continue main_loop;\n                default :\n                    f = _itemFilter;\n                    if (f == com.fasterxml.jackson.core.filter.TokenFilter.INCLUDE_ALL) {\n                        return _currToken = t;\n                    }\n                    if (f != null) {\n                        f = _headContext.checkValue(f);\n                        if ((f == com.fasterxml.jackson.core.filter.TokenFilter.INCLUDE_ALL) || ((f != null) && f.includeValue(delegate))) {\n                            if (_verifyAllowedMatches()) {\n                                return _currToken = t;\n                            }\n                        }\n                    }\n                    break;\n            }\n        } \n    }\n\n    protected final com.fasterxml.jackson.core.JsonToken _nextTokenWithBuffering(final com.fasterxml.jackson.core.filter.TokenFilterContext buffRoot) throws java.io.IOException {\n        main_loop : while (true) {\n            com.fasterxml.jackson.core.JsonToken t = delegate.nextToken();\n            if (t == null) {\n                return t;\n            }\n            com.fasterxml.jackson.core.filter.TokenFilter f;\n            switch (t.id()) {\n                case com.fasterxml.jackson.core.JsonTokenId.ID_START_ARRAY :\n                    f = _headContext.checkValue(_itemFilter);\n                    if (f == null) {\n                        delegate.skipChildren();\n                        continue main_loop;\n                    }\n                    if (f != com.fasterxml.jackson.core.filter.TokenFilter.INCLUDE_ALL) {\n                        f = f.filterStartArray();\n                    }\n                    _itemFilter = f;\n                    if (f == com.fasterxml.jackson.core.filter.TokenFilter.INCLUDE_ALL) {\n                        _headContext = _headContext.createChildArrayContext(f, true);\n                        return _nextBuffered(buffRoot);\n                    }\n                    _headContext = _headContext.createChildArrayContext(f, false);\n                    continue main_loop;\n                case com.fasterxml.jackson.core.JsonTokenId.ID_START_OBJECT :\n                    f = _itemFilter;\n                    if (f == com.fasterxml.jackson.core.filter.TokenFilter.INCLUDE_ALL) {\n                        _headContext = _headContext.createChildObjectContext(f, true);\n                        return t;\n                    }\n                    if (f == null) {\n                        delegate.skipChildren();\n                        continue main_loop;\n                    }\n                    f = _headContext.checkValue(f);\n                    if (f == null) {\n                        delegate.skipChildren();\n                        continue main_loop;\n                    }\n                    if (f != com.fasterxml.jackson.core.filter.TokenFilter.INCLUDE_ALL) {\n                        f = f.filterStartObject();\n                    }\n                    _itemFilter = f;\n                    if (f == com.fasterxml.jackson.core.filter.TokenFilter.INCLUDE_ALL) {\n                        _headContext = _headContext.createChildObjectContext(f, true);\n                        return _nextBuffered(buffRoot);\n                    }\n                    _headContext = _headContext.createChildObjectContext(f, false);\n                    continue main_loop;\n                case com.fasterxml.jackson.core.JsonTokenId.ID_END_ARRAY :\n                case com.fasterxml.jackson.core.JsonTokenId.ID_END_OBJECT :\n                    {\n                        f = _headContext.getFilter();\n                        if ((f != null) && (f != com.fasterxml.jackson.core.filter.TokenFilter.INCLUDE_ALL)) {\n                            f.filterFinishArray();\n                        }\n                        boolean gotEnd = _headContext == buffRoot;\n                        boolean returnEnd = gotEnd && _headContext.isStartHandled();\n                        _headContext = _headContext.getParent();\n                        _itemFilter = _headContext.getFilter();\n                        if (returnEnd) {\n                            return t;\n                        }\n                        if (gotEnd || (_headContext == buffRoot)) {\n                            return null;\n                        }\n                    }\n                    continue main_loop;\n                case com.fasterxml.jackson.core.JsonTokenId.ID_FIELD_NAME :\n                    {\n                        final java.lang.String name = delegate.getCurrentName();\n                        f = _headContext.setFieldName(name);\n                        if (f == com.fasterxml.jackson.core.filter.TokenFilter.INCLUDE_ALL) {\n                            _itemFilter = f;\n                            return _nextBuffered(buffRoot);\n                        }\n                        if (f == null) {\n                            delegate.nextToken();\n                            delegate.skipChildren();\n                            continue main_loop;\n                        }\n                        f = f.includeProperty(name);\n                        if (f == null) {\n                            delegate.nextToken();\n                            delegate.skipChildren();\n                            continue main_loop;\n                        }\n                        _itemFilter = f;\n                        if ((f == com.fasterxml.jackson.core.filter.TokenFilter.INCLUDE_ALL) && _verifyAllowedMatches()) {\n                            return _nextBuffered(buffRoot);\n                        }\n                    }\n                    continue main_loop;\n                default :\n                    f = _itemFilter;\n                    if (f == com.fasterxml.jackson.core.filter.TokenFilter.INCLUDE_ALL) {\n                        return _nextBuffered(buffRoot);\n                    }\n                    if (f != null) {\n                        f = _headContext.checkValue(f);\n                        if ((f == com.fasterxml.jackson.core.filter.TokenFilter.INCLUDE_ALL) || ((f != null) && f.includeValue(delegate))) {\n                            if (_verifyAllowedMatches()) {\n                                return _nextBuffered(buffRoot);\n                            }\n                        }\n                    }\n                    continue main_loop;\n            }\n        } \n    }\n\n    private com.fasterxml.jackson.core.JsonToken _nextBuffered(com.fasterxml.jackson.core.filter.TokenFilterContext buffRoot) throws java.io.IOException {\n        _exposedContext = buffRoot;\n        com.fasterxml.jackson.core.filter.TokenFilterContext ctxt = buffRoot;\n        com.fasterxml.jackson.core.JsonToken t = ctxt.nextTokenToRead();\n        if (t != null) {\n            return t;\n        }\n        while (true) {\n            if (ctxt == _headContext) {\n                throw _constructError(\"Internal error: failed to locate expected buffered tokens\");\n            }\n            ctxt = _exposedContext.findChildOf(ctxt);\n            _exposedContext = ctxt;\n            if (ctxt == null) {\n                throw _constructError(\"Unexpected problem: chain of filtered context broken\");\n            }\n            t = _exposedContext.nextTokenToRead();\n            if (t != null) {\n                return t;\n            }\n        } \n    }\n\n    private final boolean _verifyAllowedMatches() throws java.io.IOException {\n        if ((_matchCount == 0) || _allowMultipleMatches) {\n            ++_matchCount;\n            return true;\n        }\n        return false;\n    }\n\n    @java.lang.Override\n    public com.fasterxml.jackson.core.JsonToken nextValue() throws java.io.IOException {\n        com.fasterxml.jackson.core.JsonToken t = nextToken();\n        if (t == com.fasterxml.jackson.core.JsonToken.FIELD_NAME) {\n            t = nextToken();\n        }\n        return t;\n    }\n\n    @java.lang.Override\n    public com.fasterxml.jackson.core.JsonParser skipChildren() throws java.io.IOException {\n        if ((_currToken != com.fasterxml.jackson.core.JsonToken.START_OBJECT) && (_currToken != com.fasterxml.jackson.core.JsonToken.START_ARRAY)) {\n            return this;\n        }\n        int open = 1;\n        while (true) {\n            com.fasterxml.jackson.core.JsonToken t = nextToken();\n            if (t == null) {\n                return this;\n            }\n            if (t.isStructStart()) {\n                ++open;\n            } else if (t.isStructEnd()) {\n                if ((--open) == 0) {\n                    return this;\n                }\n            }\n        } \n    }\n\n    @java.lang.Override\n    public java.lang.String getText() throws java.io.IOException {\n        return delegate.getText();\n    }\n\n    @java.lang.Override\n    public boolean hasTextCharacters() {\n        return delegate.hasTextCharacters();\n    }\n\n    @java.lang.Override\n    public char[] getTextCharacters() throws java.io.IOException {\n        return delegate.getTextCharacters();\n    }\n\n    @java.lang.Override\n    public int getTextLength() throws java.io.IOException {\n        return delegate.getTextLength();\n    }\n\n    @java.lang.Override\n    public int getTextOffset() throws java.io.IOException {\n        return delegate.getTextOffset();\n    }\n\n    @java.lang.Override\n    public java.math.BigInteger getBigIntegerValue() throws java.io.IOException {\n        return delegate.getBigIntegerValue();\n    }\n\n    @java.lang.Override\n    public boolean getBooleanValue() throws java.io.IOException {\n        return delegate.getBooleanValue();\n    }\n\n    @java.lang.Override\n    public byte getByteValue() throws java.io.IOException {\n        return delegate.getByteValue();\n    }\n\n    @java.lang.Override\n    public short getShortValue() throws java.io.IOException {\n        return delegate.getShortValue();\n    }\n\n    @java.lang.Override\n    public java.math.BigDecimal getDecimalValue() throws java.io.IOException {\n        return delegate.getDecimalValue();\n    }\n\n    @java.lang.Override\n    public double getDoubleValue() throws java.io.IOException {\n        return delegate.getDoubleValue();\n    }\n\n    @java.lang.Override\n    public float getFloatValue() throws java.io.IOException {\n        return delegate.getFloatValue();\n    }\n\n    @java.lang.Override\n    public int getIntValue() throws java.io.IOException {\n        return delegate.getIntValue();\n    }\n\n    @java.lang.Override\n    public long getLongValue() throws java.io.IOException {\n        return delegate.getLongValue();\n    }\n\n    @java.lang.Override\n    public com.fasterxml.jackson.core.JsonParser.NumberType getNumberType() throws java.io.IOException {\n        return delegate.getNumberType();\n    }\n\n    @java.lang.Override\n    public java.lang.Number getNumberValue() throws java.io.IOException {\n        return delegate.getNumberValue();\n    }\n\n    @java.lang.Override\n    public int getValueAsInt() throws java.io.IOException {\n        return delegate.getValueAsInt();\n    }\n\n    @java.lang.Override\n    public int getValueAsInt(int defaultValue) throws java.io.IOException {\n        return delegate.getValueAsInt(defaultValue);\n    }\n\n    @java.lang.Override\n    public long getValueAsLong() throws java.io.IOException {\n        return delegate.getValueAsLong();\n    }\n\n    @java.lang.Override\n    public long getValueAsLong(long defaultValue) throws java.io.IOException {\n        return delegate.getValueAsLong(defaultValue);\n    }\n\n    @java.lang.Override\n    public double getValueAsDouble() throws java.io.IOException {\n        return delegate.getValueAsDouble();\n    }\n\n    @java.lang.Override\n    public double getValueAsDouble(double defaultValue) throws java.io.IOException {\n        return delegate.getValueAsDouble(defaultValue);\n    }\n\n    @java.lang.Override\n    public boolean getValueAsBoolean() throws java.io.IOException {\n        return delegate.getValueAsBoolean();\n    }\n\n    @java.lang.Override\n    public boolean getValueAsBoolean(boolean defaultValue) throws java.io.IOException {\n        return delegate.getValueAsBoolean(defaultValue);\n    }\n\n    @java.lang.Override\n    public java.lang.String getValueAsString() throws java.io.IOException {\n        return delegate.getValueAsString();\n    }\n\n    @java.lang.Override\n    public java.lang.String getValueAsString(java.lang.String defaultValue) throws java.io.IOException {\n        return delegate.getValueAsString(defaultValue);\n    }\n\n    @java.lang.Override\n    public java.lang.Object getEmbeddedObject() throws java.io.IOException {\n        return delegate.getEmbeddedObject();\n    }\n\n    @java.lang.Override\n    public byte[] getBinaryValue(com.fasterxml.jackson.core.Base64Variant b64variant) throws java.io.IOException {\n        return delegate.getBinaryValue(b64variant);\n    }\n\n    @java.lang.Override\n    public int readBinaryValue(com.fasterxml.jackson.core.Base64Variant b64variant, java.io.OutputStream out) throws java.io.IOException {\n        return delegate.readBinaryValue(b64variant, out);\n    }\n\n    @java.lang.Override\n    public com.fasterxml.jackson.core.JsonLocation getTokenLocation() {\n        return delegate.getTokenLocation();\n    }\n\n    protected com.fasterxml.jackson.core.JsonStreamContext _filterContext() {\n        if (_exposedContext != null) {\n            return _exposedContext;\n        }\n        return _headContext;\n    }\n}",
            "src_parent_type": "Class",
            "src_type": "Method"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "LocalVariable",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "While",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Switch",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "f == com.fasterxml.jackson.core.filter.TokenFilter.INCLUDE_ALL",
            "src_parent": "if (f == com.fasterxml.jackson.core.filter.TokenFilter.INCLUDE_ALL) {\n    return _nextBuffered(buffRoot);\n}",
            "src_parent_type": "If",
            "src_type": "BinaryOperator"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "_includePath",
            "dst_parent": "if (_includePath) {\n    return _currToken = t;\n}",
            "dst_parent_type": "If",
            "dst_type": "FieldRead",
            "operator": "MOV",
            "src": "_includePath",
            "src_parent": "_verifyAllowedMatches() && _includePath",
            "src_parent_type": "BinaryOperator",
            "src_type": "FieldRead"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "{\n    return _currToken = t;\n}",
            "dst_parent": "if ((f == com.fasterxml.jackson.core.filter.TokenFilter.INCLUDE_ALL) || ((f != null) && f.includeValue(delegate))) {\n    return _currToken = t;\n}",
            "dst_parent_type": "If",
            "dst_type": "Block",
            "operator": "MOV",
            "src": "{\n    return _currToken = t;\n}",
            "src_parent": "if (_verifyAllowedMatches()) {\n    return _currToken = t;\n}",
            "src_parent_type": "If",
            "src_type": "Block"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "Assignment",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "Assignment",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Case",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "f",
            "dst_parent": "f == com.fasterxml.jackson.core.filter.TokenFilter.INCLUDE_ALL",
            "dst_parent_type": "BinaryOperator",
            "dst_type": "VariableRead",
            "operator": "MOV",
            "src": "f",
            "src_parent": "(f == com.fasterxml.jackson.core.filter.TokenFilter.INCLUDE_ALL)",
            "src_parent_type": "BinaryOperator",
            "src_type": "VariableRead"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "Assignment",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "Assignment",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Case",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "com.fasterxml.jackson.core.filter.TokenFilter.INCLUDE_ALL",
            "dst_parent": "f == com.fasterxml.jackson.core.filter.TokenFilter.INCLUDE_ALL",
            "dst_parent_type": "BinaryOperator",
            "dst_type": "FieldRead",
            "operator": "MOV",
            "src": "com.fasterxml.jackson.core.filter.TokenFilter.INCLUDE_ALL",
            "src_parent": "(f == com.fasterxml.jackson.core.filter.TokenFilter.INCLUDE_ALL)",
            "src_parent_type": "BinaryOperator",
            "src_type": "FieldRead"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Continue",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "_includePath",
            "dst_parent": "if (_includePath) {\n    return _currToken = t;\n}",
            "dst_parent_type": "If",
            "dst_type": "FieldRead",
            "operator": "MOV",
            "src": "_includePath",
            "src_parent": "_verifyAllowedMatches() && _includePath",
            "src_parent_type": "BinaryOperator",
            "src_type": "FieldRead"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "{\n    return _currToken = t;\n}",
            "dst_parent": "if ((f == com.fasterxml.jackson.core.filter.TokenFilter.INCLUDE_ALL) || ((f != null) && f.includeValue(delegate))) {\n    return _currToken = t;\n}",
            "dst_parent_type": "If",
            "dst_type": "Block",
            "operator": "MOV",
            "src": "{\n    return _currToken = t;\n}",
            "src_parent": "if (_verifyAllowedMatches()) {\n    return _currToken = t;\n}",
            "src_parent_type": "If",
            "src_type": "Block"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "{\n    return _nextBuffered(buffRoot);\n}",
            "dst_parent": "if ((f == com.fasterxml.jackson.core.filter.TokenFilter.INCLUDE_ALL) || ((f != null) && f.includeValue(delegate))) {\n    return _nextBuffered(buffRoot);\n}",
            "dst_parent_type": "If",
            "dst_type": "Block",
            "operator": "MOV",
            "src": "{\n    return _nextBuffered(buffRoot);\n}",
            "src_parent": "if (_verifyAllowedMatches()) {\n    return _nextBuffered(buffRoot);\n}",
            "src_parent_type": "If",
            "src_type": "Block"
          }
        }
      ],
      "file_name": "FilteringParserDelegate"
    }
  ],
  "id": "JacksonCore_22"
}