{
  "files": [
    {
      "features": [
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "type == java.lang.Iterable.class",
            "src_parent": "if (type == java.lang.Iterable.class) {\n    return new java.util.ArrayList<java.lang.Object>(0);\n} else if (type == java.util.Collection.class) {\n    return new java.util.LinkedList<java.lang.Object>();\n} else if (type == java.util.Set.class) {\n    return new java.util.HashSet<java.lang.Object>();\n} else if (type == java.util.HashSet.class) {\n    return new java.util.HashSet<java.lang.Object>();\n} else if (type == java.util.SortedSet.class) {\n    return new java.util.TreeSet<java.lang.Object>();\n} else if (type == java.util.TreeSet.class) {\n    return new java.util.TreeSet<java.lang.Object>();\n} else if (type == java.util.LinkedHashSet.class) {\n    return new java.util.LinkedHashSet<java.lang.Object>();\n} else if (type == java.util.List.class) {\n    return new java.util.LinkedList<java.lang.Object>();\n} else if (type == java.util.LinkedList.class) {\n    return new java.util.LinkedList<java.lang.Object>();\n} else if (type == java.util.ArrayList.class) {\n    return new java.util.ArrayList<java.lang.Object>();\n} else if (type == java.util.Map.class) {\n    return new java.util.HashMap<java.lang.Object, java.lang.Object>();\n} else if (type == java.util.HashMap.class) {\n    return new java.util.HashMap<java.lang.Object, java.lang.Object>();\n} else if (type == java.util.SortedMap.class) {\n    return new java.util.TreeMap<java.lang.Object, java.lang.Object>();\n} else if (type == java.util.TreeMap.class) {\n    return new java.util.TreeMap<java.lang.Object, java.lang.Object>();\n} else if (type == java.util.LinkedHashMap.class) {\n    return new java.util.LinkedHashMap<java.lang.Object, java.lang.Object>();\n}",
            "src_parent_type": "If",
            "src_type": "BinaryOperator"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "{\n    return new java.util.ArrayList<java.lang.Object>(0);\n}",
            "src_parent": "if (type == java.lang.Iterable.class) {\n    return new java.util.ArrayList<java.lang.Object>(0);\n} else if (type == java.util.Collection.class) {\n    return new java.util.LinkedList<java.lang.Object>();\n} else if (type == java.util.Set.class) {\n    return new java.util.HashSet<java.lang.Object>();\n} else if (type == java.util.HashSet.class) {\n    return new java.util.HashSet<java.lang.Object>();\n} else if (type == java.util.SortedSet.class) {\n    return new java.util.TreeSet<java.lang.Object>();\n} else if (type == java.util.TreeSet.class) {\n    return new java.util.TreeSet<java.lang.Object>();\n} else if (type == java.util.LinkedHashSet.class) {\n    return new java.util.LinkedHashSet<java.lang.Object>();\n} else if (type == java.util.List.class) {\n    return new java.util.LinkedList<java.lang.Object>();\n} else if (type == java.util.LinkedList.class) {\n    return new java.util.LinkedList<java.lang.Object>();\n} else if (type == java.util.ArrayList.class) {\n    return new java.util.ArrayList<java.lang.Object>();\n} else if (type == java.util.Map.class) {\n    return new java.util.HashMap<java.lang.Object, java.lang.Object>();\n} else if (type == java.util.HashMap.class) {\n    return new java.util.HashMap<java.lang.Object, java.lang.Object>();\n} else if (type == java.util.SortedMap.class) {\n    return new java.util.TreeMap<java.lang.Object, java.lang.Object>();\n} else if (type == java.util.TreeMap.class) {\n    return new java.util.TreeMap<java.lang.Object, java.lang.Object>();\n} else if (type == java.util.LinkedHashMap.class) {\n    return new java.util.LinkedHashMap<java.lang.Object, java.lang.Object>();\n}",
            "src_parent_type": "If",
            "src_type": "Block"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Return",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "if (org.mockito.internal.util.Primitives.isPrimitiveOrWrapper(type)) {\n    return org.mockito.internal.util.Primitives.defaultValueForPrimitiveOrWrapper(type);\n} else if (type == java.lang.Iterable.class) {\n    return new java.util.ArrayList<java.lang.Object>(0);\n} else if (type == java.util.Collection.class) {\n    return new java.util.LinkedList<java.lang.Object>();\n} else if (type == java.util.Set.class) {\n    return new java.util.HashSet<java.lang.Object>();\n} else if (type == java.util.HashSet.class) {\n    return new java.util.HashSet<java.lang.Object>();\n} else if (type == java.util.SortedSet.class) {\n    return new java.util.TreeSet<java.lang.Object>();\n} else if (type == java.util.TreeSet.class) {\n    return new java.util.TreeSet<java.lang.Object>();\n} else if (type == java.util.LinkedHashSet.class) {\n    return new java.util.LinkedHashSet<java.lang.Object>();\n} else if (type == java.util.List.class) {\n    return new java.util.LinkedList<java.lang.Object>();\n} else if (type == java.util.LinkedList.class) {\n    return new java.util.LinkedList<java.lang.Object>();\n} else if (type == java.util.ArrayList.class) {\n    return new java.util.ArrayList<java.lang.Object>();\n} else if (type == java.util.Map.class) {\n    return new java.util.HashMap<java.lang.Object, java.lang.Object>();\n} else if (type == java.util.HashMap.class) {\n    return new java.util.HashMap<java.lang.Object, java.lang.Object>();\n} else if (type == java.util.SortedMap.class) {\n    return new java.util.TreeMap<java.lang.Object, java.lang.Object>();\n} else if (type == java.util.TreeMap.class) {\n    return new java.util.TreeMap<java.lang.Object, java.lang.Object>();\n} else if (type == java.util.LinkedHashMap.class) {\n    return new java.util.LinkedHashMap<java.lang.Object, java.lang.Object>();\n}",
            "src_parent": "{\n    if (org.mockito.internal.util.Primitives.isPrimitiveOrWrapper(type)) {\n        return org.mockito.internal.util.Primitives.defaultValueForPrimitiveOrWrapper(type);\n    } else if (type == java.lang.Iterable.class) {\n        return new java.util.ArrayList<java.lang.Object>(0);\n    } else if (type == java.util.Collection.class) {\n        return new java.util.LinkedList<java.lang.Object>();\n    } else if (type == java.util.Set.class) {\n        return new java.util.HashSet<java.lang.Object>();\n    } else if (type == java.util.HashSet.class) {\n        return new java.util.HashSet<java.lang.Object>();\n    } else if (type == java.util.SortedSet.class) {\n        return new java.util.TreeSet<java.lang.Object>();\n    } else if (type == java.util.TreeSet.class) {\n        return new java.util.TreeSet<java.lang.Object>();\n    } else if (type == java.util.LinkedHashSet.class) {\n        return new java.util.LinkedHashSet<java.lang.Object>();\n    } else if (type == java.util.List.class) {\n        return new java.util.LinkedList<java.lang.Object>();\n    } else if (type == java.util.LinkedList.class) {\n        return new java.util.LinkedList<java.lang.Object>();\n    } else if (type == java.util.ArrayList.class) {\n        return new java.util.ArrayList<java.lang.Object>();\n    } else if (type == java.util.Map.class) {\n        return new java.util.HashMap<java.lang.Object, java.lang.Object>();\n    } else if (type == java.util.HashMap.class) {\n        return new java.util.HashMap<java.lang.Object, java.lang.Object>();\n    } else if (type == java.util.SortedMap.class) {\n        return new java.util.TreeMap<java.lang.Object, java.lang.Object>();\n    } else if (type == java.util.TreeMap.class) {\n        return new java.util.TreeMap<java.lang.Object, java.lang.Object>();\n    } else if (type == java.util.LinkedHashMap.class) {\n        return new java.util.LinkedHashMap<java.lang.Object, java.lang.Object>();\n    }\n    return null;\n}",
            "src_parent_type": "Block",
            "src_type": "If"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Return",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "if (org.mockito.internal.util.Primitives.isPrimitiveOrWrapper(type)) {\n    return org.mockito.internal.util.Primitives.defaultValueForPrimitiveOrWrapper(type);\n} else if (type == java.util.Collection.class) {\n    return new java.util.LinkedList<java.lang.Object>();\n} else if (type == java.util.Set.class) {\n    return new java.util.HashSet<java.lang.Object>();\n} else if (type == java.util.HashSet.class) {\n    return new java.util.HashSet<java.lang.Object>();\n} else if (type == java.util.SortedSet.class) {\n    return new java.util.TreeSet<java.lang.Object>();\n} else if (type == java.util.TreeSet.class) {\n    return new java.util.TreeSet<java.lang.Object>();\n} else if (type == java.util.LinkedHashSet.class) {\n    return new java.util.LinkedHashSet<java.lang.Object>();\n} else if (type == java.util.List.class) {\n    return new java.util.LinkedList<java.lang.Object>();\n} else if (type == java.util.LinkedList.class) {\n    return new java.util.LinkedList<java.lang.Object>();\n} else if (type == java.util.ArrayList.class) {\n    return new java.util.ArrayList<java.lang.Object>();\n} else if (type == java.util.Map.class) {\n    return new java.util.HashMap<java.lang.Object, java.lang.Object>();\n} else if (type == java.util.HashMap.class) {\n    return new java.util.HashMap<java.lang.Object, java.lang.Object>();\n} else if (type == java.util.SortedMap.class) {\n    return new java.util.TreeMap<java.lang.Object, java.lang.Object>();\n} else if (type == java.util.TreeMap.class) {\n    return new java.util.TreeMap<java.lang.Object, java.lang.Object>();\n} else if (type == java.util.LinkedHashMap.class) {\n    return new java.util.LinkedHashMap<java.lang.Object, java.lang.Object>();\n}",
            "dst_parent": "{\n    if (org.mockito.internal.util.Primitives.isPrimitiveOrWrapper(type)) {\n        return org.mockito.internal.util.Primitives.defaultValueForPrimitiveOrWrapper(type);\n    } else if (type == java.util.Collection.class) {\n        return new java.util.LinkedList<java.lang.Object>();\n    } else if (type == java.util.Set.class) {\n        return new java.util.HashSet<java.lang.Object>();\n    } else if (type == java.util.HashSet.class) {\n        return new java.util.HashSet<java.lang.Object>();\n    } else if (type == java.util.SortedSet.class) {\n        return new java.util.TreeSet<java.lang.Object>();\n    } else if (type == java.util.TreeSet.class) {\n        return new java.util.TreeSet<java.lang.Object>();\n    } else if (type == java.util.LinkedHashSet.class) {\n        return new java.util.LinkedHashSet<java.lang.Object>();\n    } else if (type == java.util.List.class) {\n        return new java.util.LinkedList<java.lang.Object>();\n    } else if (type == java.util.LinkedList.class) {\n        return new java.util.LinkedList<java.lang.Object>();\n    } else if (type == java.util.ArrayList.class) {\n        return new java.util.ArrayList<java.lang.Object>();\n    } else if (type == java.util.Map.class) {\n        return new java.util.HashMap<java.lang.Object, java.lang.Object>();\n    } else if (type == java.util.HashMap.class) {\n        return new java.util.HashMap<java.lang.Object, java.lang.Object>();\n    } else if (type == java.util.SortedMap.class) {\n        return new java.util.TreeMap<java.lang.Object, java.lang.Object>();\n    } else if (type == java.util.TreeMap.class) {\n        return new java.util.TreeMap<java.lang.Object, java.lang.Object>();\n    } else if (type == java.util.LinkedHashMap.class) {\n        return new java.util.LinkedHashMap<java.lang.Object, java.lang.Object>();\n    }\n    return null;\n}",
            "dst_parent_type": "Block",
            "dst_type": "If",
            "operator": "MOV",
            "src": "if (type == java.lang.Iterable.class) {\n    return new java.util.ArrayList<java.lang.Object>(0);\n} else if (type == java.util.Collection.class) {\n    return new java.util.LinkedList<java.lang.Object>();\n} else if (type == java.util.Set.class) {\n    return new java.util.HashSet<java.lang.Object>();\n} else if (type == java.util.HashSet.class) {\n    return new java.util.HashSet<java.lang.Object>();\n} else if (type == java.util.SortedSet.class) {\n    return new java.util.TreeSet<java.lang.Object>();\n} else if (type == java.util.TreeSet.class) {\n    return new java.util.TreeSet<java.lang.Object>();\n} else if (type == java.util.LinkedHashSet.class) {\n    return new java.util.LinkedHashSet<java.lang.Object>();\n} else if (type == java.util.List.class) {\n    return new java.util.LinkedList<java.lang.Object>();\n} else if (type == java.util.LinkedList.class) {\n    return new java.util.LinkedList<java.lang.Object>();\n} else if (type == java.util.ArrayList.class) {\n    return new java.util.ArrayList<java.lang.Object>();\n} else if (type == java.util.Map.class) {\n    return new java.util.HashMap<java.lang.Object, java.lang.Object>();\n} else if (type == java.util.HashMap.class) {\n    return new java.util.HashMap<java.lang.Object, java.lang.Object>();\n} else if (type == java.util.SortedMap.class) {\n    return new java.util.TreeMap<java.lang.Object, java.lang.Object>();\n} else if (type == java.util.TreeMap.class) {\n    return new java.util.TreeMap<java.lang.Object, java.lang.Object>();\n} else if (type == java.util.LinkedHashMap.class) {\n    return new java.util.LinkedHashMap<java.lang.Object, java.lang.Object>();\n}",
            "src_parent": "{\n    if (type == java.lang.Iterable.class) {\n        return new java.util.ArrayList<java.lang.Object>(0);\n    } else if (type == java.util.Collection.class) {\n        return new java.util.LinkedList<java.lang.Object>();\n    } else if (type == java.util.Set.class) {\n        return new java.util.HashSet<java.lang.Object>();\n    } else if (type == java.util.HashSet.class) {\n        return new java.util.HashSet<java.lang.Object>();\n    } else if (type == java.util.SortedSet.class) {\n        return new java.util.TreeSet<java.lang.Object>();\n    } else if (type == java.util.TreeSet.class) {\n        return new java.util.TreeSet<java.lang.Object>();\n    } else if (type == java.util.LinkedHashSet.class) {\n        return new java.util.LinkedHashSet<java.lang.Object>();\n    } else if (type == java.util.List.class) {\n        return new java.util.LinkedList<java.lang.Object>();\n    } else if (type == java.util.LinkedList.class) {\n        return new java.util.LinkedList<java.lang.Object>();\n    } else if (type == java.util.ArrayList.class) {\n        return new java.util.ArrayList<java.lang.Object>();\n    } else if (type == java.util.Map.class) {\n        return new java.util.HashMap<java.lang.Object, java.lang.Object>();\n    } else if (type == java.util.HashMap.class) {\n        return new java.util.HashMap<java.lang.Object, java.lang.Object>();\n    } else if (type == java.util.SortedMap.class) {\n        return new java.util.TreeMap<java.lang.Object, java.lang.Object>();\n    } else if (type == java.util.TreeMap.class) {\n        return new java.util.TreeMap<java.lang.Object, java.lang.Object>();\n    } else if (type == java.util.LinkedHashMap.class) {\n        return new java.util.LinkedHashMap<java.lang.Object, java.lang.Object>();\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "If"
          }
        }
      ],
      "file_name": "ReturnsEmptyValues"
    }
  ],
  "id": "Mockito_18"
}