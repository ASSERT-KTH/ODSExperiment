{
  "files": [
    {
      "features": [
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "{\n    org.joda.time.format.PeriodFormatterBuilder.Separator sep = ((org.joda.time.format.PeriodFormatterBuilder.Separator) (elementPairs.get(0)));\n    if ((sep.iAfterParser == null) && (sep.iAfterPrinter == null)) {\n        org.joda.time.format.PeriodFormatter f = org.joda.time.format.PeriodFormatterBuilder.toFormatter(elementPairs.subList(2, size), notPrinter, notParser);\n        sep = sep.finish(f.getPrinter(), f.getParser());\n        return new org.joda.time.format.PeriodFormatter(sep, sep);\n    }\n}",
            "src_parent": "if ((size >= 2) && (elementPairs.get(0) instanceof org.joda.time.format.PeriodFormatterBuilder.Separator)) {\n    org.joda.time.format.PeriodFormatterBuilder.Separator sep = ((org.joda.time.format.PeriodFormatterBuilder.Separator) (elementPairs.get(0)));\n    if ((sep.iAfterParser == null) && (sep.iAfterPrinter == null)) {\n        org.joda.time.format.PeriodFormatter f = org.joda.time.format.PeriodFormatterBuilder.toFormatter(elementPairs.subList(2, size), notPrinter, notParser);\n        sep = sep.finish(f.getPrinter(), f.getParser());\n        return new org.joda.time.format.PeriodFormatter(sep, sep);\n    }\n}",
            "src_parent_type": "If",
            "src_type": "Block"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "{\n    org.joda.time.format.PeriodFormatterBuilder.Separator sep = ((org.joda.time.format.PeriodFormatterBuilder.Separator) (elementPairs.get(0)));\n    org.joda.time.format.PeriodFormatter f = org.joda.time.format.PeriodFormatterBuilder.toFormatter(elementPairs.subList(2, size), notPrinter, notParser);\n    sep = sep.finish(f.getPrinter(), f.getParser());\n    return new org.joda.time.format.PeriodFormatter(sep, sep);\n}",
            "dst_parent": "if ((size >= 2) && (elementPairs.get(0) instanceof org.joda.time.format.PeriodFormatterBuilder.Separator)) {\n    org.joda.time.format.PeriodFormatterBuilder.Separator sep = ((org.joda.time.format.PeriodFormatterBuilder.Separator) (elementPairs.get(0)));\n    org.joda.time.format.PeriodFormatter f = org.joda.time.format.PeriodFormatterBuilder.toFormatter(elementPairs.subList(2, size), notPrinter, notParser);\n    sep = sep.finish(f.getPrinter(), f.getParser());\n    return new org.joda.time.format.PeriodFormatter(sep, sep);\n}",
            "dst_parent_type": "If",
            "dst_type": "Block",
            "operator": "MOV",
            "src": "{\n    org.joda.time.format.PeriodFormatter f = org.joda.time.format.PeriodFormatterBuilder.toFormatter(elementPairs.subList(2, size), notPrinter, notParser);\n    sep = sep.finish(f.getPrinter(), f.getParser());\n    return new org.joda.time.format.PeriodFormatter(sep, sep);\n}",
            "src_parent": "if ((sep.iAfterParser == null) && (sep.iAfterPrinter == null)) {\n    org.joda.time.format.PeriodFormatter f = org.joda.time.format.PeriodFormatterBuilder.toFormatter(elementPairs.subList(2, size), notPrinter, notParser);\n    sep = sep.finish(f.getPrinter(), f.getParser());\n    return new org.joda.time.format.PeriodFormatter(sep, sep);\n}",
            "src_parent_type": "If",
            "src_type": "Block"
          }
        }
      ],
      "file_name": "PeriodFormatterBuilder"
    }
  ],
  "id": "Time_27"
}