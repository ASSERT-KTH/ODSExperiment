{
  "files": [
    {
      "features": [
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "if ((parent instanceof org.apache.commons.jxpath.ri.model.beans.NullPointer) && parent.equals(newParent)) {\n    throw createBadFactoryException(context.getFactory());\n}",
            "src_parent": "{\n    if ((parent instanceof org.apache.commons.jxpath.ri.model.beans.NullPointer) && parent.equals(newParent)) {\n        throw createBadFactoryException(context.getFactory());\n    }\n    if (newParent instanceof org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer) {\n        org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer pop = ((org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer) (newParent));\n        newParent = pop.getPropertyPointer();\n    }\n    return newParent.createChild(context, getName(), getIndex());\n}",
            "src_parent_type": "Block",
            "src_type": "If"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "if ((parent instanceof org.apache.commons.jxpath.ri.model.beans.NullPointer) && parent.equals(newParent)) {\n    throw createBadFactoryException(context.getFactory());\n}",
            "src_parent": "{\n    if ((parent instanceof org.apache.commons.jxpath.ri.model.beans.NullPointer) && parent.equals(newParent)) {\n        throw createBadFactoryException(context.getFactory());\n    }\n    if (newParent instanceof org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer) {\n        org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer pop = ((org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer) (newParent));\n        newParent = pop.getPropertyPointer();\n    }\n    return newParent.createChild(context, getName(), index, value);\n}",
            "src_parent_type": "Block",
            "src_type": "If"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Method",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "private org.apache.commons.jxpath.JXPathAbstractFactoryException createBadFactoryException(org.apache.commons.jxpath.AbstractFactory factory) {\n    return new org.apache.commons.jxpath.JXPathAbstractFactoryException((((\"Factory \" + factory) + \" reported success creating object for path: \") + asPath()) + \" but object was null.  Terminating to avoid stack recursion.\");\n}",
            "src_parent": "public class NullPropertyPointer extends org.apache.commons.jxpath.ri.model.beans.PropertyPointer {\n    private java.lang.String propertyName = \"*\";\n\n    private boolean byNameAttribute = false;\n\n    public NullPropertyPointer(org.apache.commons.jxpath.ri.model.NodePointer parent) {\n        super(parent);\n    }\n\n    public org.apache.commons.jxpath.ri.QName getName() {\n        return new org.apache.commons.jxpath.ri.QName(propertyName);\n    }\n\n    public void setPropertyIndex(int index) {\n    }\n\n    public int getLength() {\n        return 0;\n    }\n\n    public java.lang.Object getBaseValue() {\n        return null;\n    }\n\n    public java.lang.Object getImmediateNode() {\n        return null;\n    }\n\n    public boolean isLeaf() {\n        return true;\n    }\n\n    public org.apache.commons.jxpath.ri.model.NodePointer getValuePointer() {\n        return new org.apache.commons.jxpath.ri.model.beans.NullPointer(this, new org.apache.commons.jxpath.ri.QName(getPropertyName()));\n    }\n\n    protected boolean isActualProperty() {\n        return false;\n    }\n\n    public boolean isActual() {\n        return false;\n    }\n\n    public boolean isContainer() {\n        return true;\n    }\n\n    public void setValue(java.lang.Object value) {\n        if ((parent == null) || parent.isContainer()) {\n            throw new org.apache.commons.jxpath.JXPathInvalidAccessException((\"Cannot set property \" + asPath()) + \", the target object is null\");\n        } else if ((parent instanceof org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer) && ((org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer) (parent)).isDynamicPropertyDeclarationSupported()) {\n            org.apache.commons.jxpath.ri.model.beans.PropertyPointer propertyPointer = ((org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer) (parent)).getPropertyPointer();\n            propertyPointer.setPropertyName(propertyName);\n            propertyPointer.setValue(value);\n        } else {\n            throw new org.apache.commons.jxpath.JXPathInvalidAccessException((\"Cannot set property \" + asPath()) + \", path does not match a changeable location\");\n        }\n    }\n\n    public org.apache.commons.jxpath.ri.model.NodePointer createPath(org.apache.commons.jxpath.JXPathContext context) {\n        org.apache.commons.jxpath.ri.model.NodePointer newParent = parent.createPath(context);\n        if (isAttribute()) {\n            return newParent.createAttribute(context, getName());\n        } else {\n            if ((parent instanceof org.apache.commons.jxpath.ri.model.beans.NullPointer) && parent.equals(newParent)) {\n                throw createBadFactoryException(context.getFactory());\n            }\n            if (newParent instanceof org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer) {\n                org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer pop = ((org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer) (newParent));\n                newParent = pop.getPropertyPointer();\n            }\n            return newParent.createChild(context, getName(), getIndex());\n        }\n    }\n\n    public org.apache.commons.jxpath.ri.model.NodePointer createPath(org.apache.commons.jxpath.JXPathContext context, java.lang.Object value) {\n        org.apache.commons.jxpath.ri.model.NodePointer newParent = parent.createPath(context);\n        if (isAttribute()) {\n            org.apache.commons.jxpath.ri.model.NodePointer pointer = newParent.createAttribute(context, getName());\n            pointer.setValue(value);\n            return pointer;\n        } else {\n            if ((parent instanceof org.apache.commons.jxpath.ri.model.beans.NullPointer) && parent.equals(newParent)) {\n                throw createBadFactoryException(context.getFactory());\n            }\n            if (newParent instanceof org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer) {\n                org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer pop = ((org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer) (newParent));\n                newParent = pop.getPropertyPointer();\n            }\n            return newParent.createChild(context, getName(), index, value);\n        }\n    }\n\n    public org.apache.commons.jxpath.ri.model.NodePointer createChild(org.apache.commons.jxpath.JXPathContext context, org.apache.commons.jxpath.ri.QName name, int index) {\n        return createPath(context).createChild(context, name, index);\n    }\n\n    public org.apache.commons.jxpath.ri.model.NodePointer createChild(org.apache.commons.jxpath.JXPathContext context, org.apache.commons.jxpath.ri.QName name, int index, java.lang.Object value) {\n        return createPath(context).createChild(context, name, index, value);\n    }\n\n    public java.lang.String getPropertyName() {\n        return propertyName;\n    }\n\n    public void setPropertyName(java.lang.String propertyName) {\n        this.propertyName = propertyName;\n    }\n\n    public void setNameAttributeValue(java.lang.String attributeValue) {\n        this.propertyName = attributeValue;\n        byNameAttribute = true;\n    }\n\n    public boolean isCollection() {\n        return getIndex() != WHOLE_COLLECTION;\n    }\n\n    public int getPropertyCount() {\n        return 0;\n    }\n\n    public java.lang.String[] getPropertyNames() {\n        return new java.lang.String[0];\n    }\n\n    public java.lang.String asPath() {\n        if (!byNameAttribute) {\n            return super.asPath();\n        } else {\n            java.lang.StringBuffer buffer = new java.lang.StringBuffer();\n            buffer.append(getImmediateParentPointer().asPath());\n            buffer.append(\"[@name='\");\n            buffer.append(escape(getPropertyName()));\n            buffer.append(\"']\");\n            if (index != WHOLE_COLLECTION) {\n                buffer.append('[').append(index + 1).append(']');\n            }\n            return buffer.toString();\n        }\n    }\n\n    private java.lang.String escape(java.lang.String string) {\n        int index = string.indexOf('\\'');\n        while (index != (-1)) {\n            string = (string.substring(0, index) + \"&apos;\") + string.substring(index + 1);\n            index = string.indexOf('\\'');\n        } \n        index = string.indexOf('\\\"');\n        while (index != (-1)) {\n            string = (string.substring(0, index) + \"&quot;\") + string.substring(index + 1);\n            index = string.indexOf('\\\"');\n        } \n        return string;\n    }\n\n    private org.apache.commons.jxpath.JXPathAbstractFactoryException createBadFactoryException(org.apache.commons.jxpath.AbstractFactory factory) {\n        return new org.apache.commons.jxpath.JXPathAbstractFactoryException((((\"Factory \" + factory) + \" reported success creating object for path: \") + asPath()) + \" but object was null.  Terminating to avoid stack recursion.\");\n    }\n}",
            "src_parent_type": "Class",
            "src_type": "Method"
          }
        }
      ],
      "file_name": "NullPropertyPointer"
    }
  ],
  "id": "JxPath_3"
}