{
  "files": [
    {
      "features": [
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Field",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "protected boolean _hasNextChecked;",
            "dst_parent": "public class MappingIterator<T> implements java.io.Closeable , java.util.Iterator<T> {\n    protected static final com.fasterxml.jackson.databind.MappingIterator<?> EMPTY_ITERATOR = new com.fasterxml.jackson.databind.MappingIterator<java.lang.Object>(null, null, null, null, false, null);\n\n    protected final com.fasterxml.jackson.databind.JavaType _type;\n\n    protected final com.fasterxml.jackson.databind.DeserializationContext _context;\n\n    protected final com.fasterxml.jackson.databind.JsonDeserializer<T> _deserializer;\n\n    protected com.fasterxml.jackson.core.JsonParser _parser;\n\n    protected final T _updatedValue;\n\n    protected final boolean _closeParser;\n\n    protected boolean _hasNextChecked;\n\n    @java.lang.SuppressWarnings(\"unchecked\")\n    protected MappingIterator(com.fasterxml.jackson.databind.JavaType type, com.fasterxml.jackson.core.JsonParser p, com.fasterxml.jackson.databind.DeserializationContext ctxt, com.fasterxml.jackson.databind.JsonDeserializer<?> deser, boolean managedParser, java.lang.Object valueToUpdate) {\n        _type = type;\n        _parser = p;\n        _context = ctxt;\n        _deserializer = ((com.fasterxml.jackson.databind.JsonDeserializer<T>) (deser));\n        _closeParser = managedParser;\n        if (valueToUpdate == null) {\n            _updatedValue = null;\n        } else {\n            _updatedValue = ((T) (valueToUpdate));\n        }\n        if ((managedParser && (p != null)) && p.isExpectedStartArrayToken()) {\n            p.clearCurrentToken();\n        }\n    }\n\n    @java.lang.SuppressWarnings(\"unchecked\")\n    protected static <T> com.fasterxml.jackson.databind.MappingIterator<T> emptyIterator() {\n        return ((com.fasterxml.jackson.databind.MappingIterator<T>) (com.fasterxml.jackson.databind.MappingIterator.EMPTY_ITERATOR));\n    }\n\n    @java.lang.Override\n    public boolean hasNext() {\n        try {\n            return hasNextValue();\n        } catch (com.fasterxml.jackson.databind.JsonMappingException e) {\n            return ((java.lang.Boolean) (_handleMappingException(e)));\n        } catch (java.io.IOException e) {\n            return ((java.lang.Boolean) (_handleIOException(e)));\n        }\n    }\n\n    @java.lang.Override\n    public T next() {\n        try {\n            return nextValue();\n        } catch (com.fasterxml.jackson.databind.JsonMappingException e) {\n            throw new com.fasterxml.jackson.databind.RuntimeJsonMappingException(e.getMessage(), e);\n        } catch (java.io.IOException e) {\n            throw new java.lang.RuntimeException(e.getMessage(), e);\n        }\n    }\n\n    @java.lang.Override\n    public void remove() {\n        throw new java.lang.UnsupportedOperationException();\n    }\n\n    @java.lang.Override\n    public void close() throws java.io.IOException {\n        if (_parser != null) {\n            _parser.close();\n        }\n    }\n\n    public boolean hasNextValue() throws java.io.IOException {\n        if (_parser == null) {\n            return false;\n        }\n        if (!_hasNextChecked) {\n            com.fasterxml.jackson.core.JsonToken t = _parser.getCurrentToken();\n            _hasNextChecked = true;\n            if (t == null) {\n                t = _parser.nextToken();\n                if ((t == null) || (t == com.fasterxml.jackson.core.JsonToken.END_ARRAY)) {\n                    com.fasterxml.jackson.core.JsonParser jp = _parser;\n                    _parser = null;\n                    if (_closeParser) {\n                        jp.close();\n                    }\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n\n    public T nextValue() throws java.io.IOException {\n        if (!_hasNextChecked) {\n            if (!hasNextValue()) {\n                return _throwNoSuchElement();\n            }\n        }\n        if (_parser == null) {\n            return _throwNoSuchElement();\n        }\n        _hasNextChecked = false;\n        try {\n            T value;\n            if (_updatedValue == null) {\n                value = _deserializer.deserialize(_parser, _context);\n            } else {\n                _deserializer.deserialize(_parser, _context, _updatedValue);\n                value = _updatedValue;\n            }\n            return value;\n        } finally {\n            _parser.clearCurrentToken();\n        }\n    }\n\n    public java.util.List<T> readAll() throws java.io.IOException {\n        return readAll(new java.util.ArrayList<T>());\n    }\n\n    public <L extends java.util.List<? super T>> L readAll(L resultList) throws java.io.IOException {\n        while (hasNextValue()) {\n            resultList.add(nextValue());\n        } \n        return resultList;\n    }\n\n    public <C extends java.util.Collection<? super T>> C readAll(C results) throws java.io.IOException {\n        while (hasNextValue()) {\n            results.add(nextValue());\n        } \n        return results;\n    }\n\n    public com.fasterxml.jackson.core.JsonParser getParser() {\n        return _parser;\n    }\n\n    public com.fasterxml.jackson.core.FormatSchema getParserSchema() {\n        return _parser.getSchema();\n    }\n\n    public com.fasterxml.jackson.core.JsonLocation getCurrentLocation() {\n        return _parser.getCurrentLocation();\n    }\n\n    protected <R> R _throwNoSuchElement() {\n        throw new java.util.NoSuchElementException();\n    }\n\n    protected <R> R _handleMappingException(com.fasterxml.jackson.databind.JsonMappingException e) {\n        throw new com.fasterxml.jackson.databind.RuntimeJsonMappingException(e.getMessage(), e);\n    }\n\n    protected <R> R _handleIOException(java.io.IOException e) {\n        throw new java.lang.RuntimeException(e.getMessage(), e);\n    }\n}",
            "dst_parent_type": "Class",
            "dst_type": "Field",
            "operator": "UPD",
            "src": "protected int _state;",
            "src_parent": "public class MappingIterator<T> implements java.io.Closeable , java.util.Iterator<T> {\n    protected static final com.fasterxml.jackson.databind.MappingIterator<?> EMPTY_ITERATOR = new com.fasterxml.jackson.databind.MappingIterator<java.lang.Object>(null, null, null, null, false, null);\n\n    protected static final int STATE_CLOSED = 0;\n\n    protected static final int STATE_NEED_RESYNC = 1;\n\n    protected static final int STATE_MAY_HAVE_VALUE = 2;\n\n    protected static final int STATE_HAS_VALUE = 3;\n\n    protected final com.fasterxml.jackson.databind.JavaType _type;\n\n    protected final com.fasterxml.jackson.databind.DeserializationContext _context;\n\n    protected final com.fasterxml.jackson.databind.JsonDeserializer<T> _deserializer;\n\n    protected final com.fasterxml.jackson.core.JsonParser _parser;\n\n    protected final com.fasterxml.jackson.core.JsonStreamContext _seqContext;\n\n    protected final T _updatedValue;\n\n    protected final boolean _closeParser;\n\n    protected int _state;\n\n    @java.lang.SuppressWarnings(\"unchecked\")\n    protected MappingIterator(com.fasterxml.jackson.databind.JavaType type, com.fasterxml.jackson.core.JsonParser p, com.fasterxml.jackson.databind.DeserializationContext ctxt, com.fasterxml.jackson.databind.JsonDeserializer<?> deser, boolean managedParser, java.lang.Object valueToUpdate) {\n        _type = type;\n        _parser = p;\n        _context = ctxt;\n        _deserializer = ((com.fasterxml.jackson.databind.JsonDeserializer<T>) (deser));\n        _closeParser = managedParser;\n        if (valueToUpdate == null) {\n            _updatedValue = null;\n        } else {\n            _updatedValue = ((T) (valueToUpdate));\n        }\n        if (p == null) {\n            _seqContext = null;\n            _state = com.fasterxml.jackson.databind.MappingIterator.STATE_CLOSED;\n        } else {\n            com.fasterxml.jackson.core.JsonStreamContext sctxt = p.getParsingContext();\n            if (managedParser && p.isExpectedStartArrayToken()) {\n                p.clearCurrentToken();\n            } else {\n                com.fasterxml.jackson.core.JsonToken t = p.getCurrentToken();\n                if ((t == com.fasterxml.jackson.core.JsonToken.START_OBJECT) || (t == com.fasterxml.jackson.core.JsonToken.START_ARRAY)) {\n                    sctxt = sctxt.getParent();\n                }\n            }\n            _seqContext = sctxt;\n            _state = com.fasterxml.jackson.databind.MappingIterator.STATE_MAY_HAVE_VALUE;\n        }\n    }\n\n    @java.lang.SuppressWarnings(\"unchecked\")\n    protected static <T> com.fasterxml.jackson.databind.MappingIterator<T> emptyIterator() {\n        return ((com.fasterxml.jackson.databind.MappingIterator<T>) (com.fasterxml.jackson.databind.MappingIterator.EMPTY_ITERATOR));\n    }\n\n    @java.lang.Override\n    public boolean hasNext() {\n        try {\n            return hasNextValue();\n        } catch (com.fasterxml.jackson.databind.JsonMappingException e) {\n            return ((java.lang.Boolean) (_handleMappingException(e)));\n        } catch (java.io.IOException e) {\n            return ((java.lang.Boolean) (_handleIOException(e)));\n        }\n    }\n\n    @java.lang.Override\n    public T next() {\n        try {\n            return nextValue();\n        } catch (com.fasterxml.jackson.databind.JsonMappingException e) {\n            throw new com.fasterxml.jackson.databind.RuntimeJsonMappingException(e.getMessage(), e);\n        } catch (java.io.IOException e) {\n            throw new java.lang.RuntimeException(e.getMessage(), e);\n        }\n    }\n\n    @java.lang.Override\n    public void remove() {\n        throw new java.lang.UnsupportedOperationException();\n    }\n\n    @java.lang.Override\n    public void close() throws java.io.IOException {\n        if (_state != com.fasterxml.jackson.databind.MappingIterator.STATE_CLOSED) {\n            _state = com.fasterxml.jackson.databind.MappingIterator.STATE_CLOSED;\n            if (_parser != null) {\n                _parser.close();\n            }\n        }\n    }\n\n    public boolean hasNextValue() throws java.io.IOException {\n        switch (_state) {\n            case com.fasterxml.jackson.databind.MappingIterator.STATE_CLOSED :\n                return false;\n            case com.fasterxml.jackson.databind.MappingIterator.STATE_NEED_RESYNC :\n                _resync();\n            case com.fasterxml.jackson.databind.MappingIterator.STATE_MAY_HAVE_VALUE :\n                com.fasterxml.jackson.core.JsonToken t = _parser.getCurrentToken();\n                if (t == null) {\n                    t = _parser.nextToken();\n                    if ((t == null) || (t == com.fasterxml.jackson.core.JsonToken.END_ARRAY)) {\n                        _state = com.fasterxml.jackson.databind.MappingIterator.STATE_CLOSED;\n                        if (_closeParser && (_parser != null)) {\n                            _parser.close();\n                        }\n                        return false;\n                    }\n                }\n                _state = com.fasterxml.jackson.databind.MappingIterator.STATE_HAS_VALUE;\n                return true;\n            case com.fasterxml.jackson.databind.MappingIterator.STATE_HAS_VALUE :\n        }\n        return true;\n    }\n\n    public T nextValue() throws java.io.IOException {\n        switch (_state) {\n            case com.fasterxml.jackson.databind.MappingIterator.STATE_CLOSED :\n                return _throwNoSuchElement();\n            case com.fasterxml.jackson.databind.MappingIterator.STATE_NEED_RESYNC :\n            case com.fasterxml.jackson.databind.MappingIterator.STATE_MAY_HAVE_VALUE :\n                if (!hasNextValue()) {\n                    return _throwNoSuchElement();\n                }\n                break;\n            case com.fasterxml.jackson.databind.MappingIterator.STATE_HAS_VALUE :\n                break;\n        }\n        int nextState = com.fasterxml.jackson.databind.MappingIterator.STATE_NEED_RESYNC;\n        try {\n            T value;\n            if (_updatedValue == null) {\n                value = _deserializer.deserialize(_parser, _context);\n            } else {\n                _deserializer.deserialize(_parser, _context, _updatedValue);\n                value = _updatedValue;\n            }\n            nextState = com.fasterxml.jackson.databind.MappingIterator.STATE_MAY_HAVE_VALUE;\n            return value;\n        } finally {\n            _state = nextState;\n            _parser.clearCurrentToken();\n        }\n    }\n\n    public java.util.List<T> readAll() throws java.io.IOException {\n        return readAll(new java.util.ArrayList<T>());\n    }\n\n    public <L extends java.util.List<? super T>> L readAll(L resultList) throws java.io.IOException {\n        while (hasNextValue()) {\n            resultList.add(nextValue());\n        } \n        return resultList;\n    }\n\n    public <C extends java.util.Collection<? super T>> C readAll(C results) throws java.io.IOException {\n        while (hasNextValue()) {\n            results.add(nextValue());\n        } \n        return results;\n    }\n\n    public com.fasterxml.jackson.core.JsonParser getParser() {\n        return _parser;\n    }\n\n    public com.fasterxml.jackson.core.FormatSchema getParserSchema() {\n        return _parser.getSchema();\n    }\n\n    public com.fasterxml.jackson.core.JsonLocation getCurrentLocation() {\n        return _parser.getCurrentLocation();\n    }\n\n    protected void _resync() throws java.io.IOException {\n        final com.fasterxml.jackson.core.JsonParser p = _parser;\n        if (p.getParsingContext() == _seqContext) {\n            return;\n        }\n        while (true) {\n            com.fasterxml.jackson.core.JsonToken t = p.nextToken();\n            if ((t == com.fasterxml.jackson.core.JsonToken.END_ARRAY) || (t == com.fasterxml.jackson.core.JsonToken.END_OBJECT)) {\n                if (p.getParsingContext() == _seqContext) {\n                    p.clearCurrentToken();\n                    return;\n                }\n            } else if ((t == com.fasterxml.jackson.core.JsonToken.START_ARRAY) || (t == com.fasterxml.jackson.core.JsonToken.START_OBJECT)) {\n                p.skipChildren();\n            } else if (t == null) {\n                return;\n            }\n        } \n    }\n\n    protected <R> R _throwNoSuchElement() {\n        throw new java.util.NoSuchElementException();\n    }\n\n    protected <R> R _handleMappingException(com.fasterxml.jackson.databind.JsonMappingException e) {\n        throw new com.fasterxml.jackson.databind.RuntimeJsonMappingException(e.getMessage(), e);\n    }\n\n    protected <R> R _handleIOException(java.io.IOException e) {\n        throw new java.lang.RuntimeException(e.getMessage(), e);\n    }\n}",
            "src_parent_type": "Class",
            "src_type": "Field"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Field",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "TypeReference",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "boolean",
            "dst_parent": "protected boolean _hasNextChecked;",
            "dst_parent_type": "Field",
            "dst_type": "TypeReference",
            "operator": "UPD",
            "src": "int",
            "src_parent": "protected int _state;",
            "src_parent_type": "Field",
            "src_type": "TypeReference"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Return",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "Assignment",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "_parser == null",
            "dst_parent": "if (_parser == null) {\n    return _throwNoSuchElement();\n}",
            "dst_parent_type": "If",
            "dst_type": "BinaryOperator",
            "operator": "UPD",
            "src": "(_parser != null)",
            "src_parent": "_closeParser && (_parser != null)",
            "src_parent_type": "BinaryOperator",
            "src_type": "BinaryOperator"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "Return",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Assignment",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "_parser",
            "dst_parent": "_parser = null",
            "dst_parent_type": "Assignment",
            "dst_type": "FieldWrite",
            "operator": "UPD",
            "src": "_state",
            "src_parent": "_state = com.fasterxml.jackson.databind.MappingIterator.STATE_CLOSED",
            "src_parent_type": "Assignment",
            "src_type": "FieldWrite"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Field",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "protected static final int STATE_CLOSED = 0;",
            "src_parent": "public class MappingIterator<T> implements java.io.Closeable , java.util.Iterator<T> {\n    protected static final com.fasterxml.jackson.databind.MappingIterator<?> EMPTY_ITERATOR = new com.fasterxml.jackson.databind.MappingIterator<java.lang.Object>(null, null, null, null, false, null);\n\n    protected static final int STATE_CLOSED = 0;\n\n    protected static final int STATE_NEED_RESYNC = 1;\n\n    protected static final int STATE_MAY_HAVE_VALUE = 2;\n\n    protected static final int STATE_HAS_VALUE = 3;\n\n    protected final com.fasterxml.jackson.databind.JavaType _type;\n\n    protected final com.fasterxml.jackson.databind.DeserializationContext _context;\n\n    protected final com.fasterxml.jackson.databind.JsonDeserializer<T> _deserializer;\n\n    protected final com.fasterxml.jackson.core.JsonParser _parser;\n\n    protected final com.fasterxml.jackson.core.JsonStreamContext _seqContext;\n\n    protected final T _updatedValue;\n\n    protected final boolean _closeParser;\n\n    protected int _state;\n\n    @java.lang.SuppressWarnings(\"unchecked\")\n    protected MappingIterator(com.fasterxml.jackson.databind.JavaType type, com.fasterxml.jackson.core.JsonParser p, com.fasterxml.jackson.databind.DeserializationContext ctxt, com.fasterxml.jackson.databind.JsonDeserializer<?> deser, boolean managedParser, java.lang.Object valueToUpdate) {\n        _type = type;\n        _parser = p;\n        _context = ctxt;\n        _deserializer = ((com.fasterxml.jackson.databind.JsonDeserializer<T>) (deser));\n        _closeParser = managedParser;\n        if (valueToUpdate == null) {\n            _updatedValue = null;\n        } else {\n            _updatedValue = ((T) (valueToUpdate));\n        }\n        if (p == null) {\n            _seqContext = null;\n            _state = com.fasterxml.jackson.databind.MappingIterator.STATE_CLOSED;\n        } else {\n            com.fasterxml.jackson.core.JsonStreamContext sctxt = p.getParsingContext();\n            if (managedParser && p.isExpectedStartArrayToken()) {\n                p.clearCurrentToken();\n            } else {\n                com.fasterxml.jackson.core.JsonToken t = p.getCurrentToken();\n                if ((t == com.fasterxml.jackson.core.JsonToken.START_OBJECT) || (t == com.fasterxml.jackson.core.JsonToken.START_ARRAY)) {\n                    sctxt = sctxt.getParent();\n                }\n            }\n            _seqContext = sctxt;\n            _state = com.fasterxml.jackson.databind.MappingIterator.STATE_MAY_HAVE_VALUE;\n        }\n    }\n\n    @java.lang.SuppressWarnings(\"unchecked\")\n    protected static <T> com.fasterxml.jackson.databind.MappingIterator<T> emptyIterator() {\n        return ((com.fasterxml.jackson.databind.MappingIterator<T>) (com.fasterxml.jackson.databind.MappingIterator.EMPTY_ITERATOR));\n    }\n\n    @java.lang.Override\n    public boolean hasNext() {\n        try {\n            return hasNextValue();\n        } catch (com.fasterxml.jackson.databind.JsonMappingException e) {\n            return ((java.lang.Boolean) (_handleMappingException(e)));\n        } catch (java.io.IOException e) {\n            return ((java.lang.Boolean) (_handleIOException(e)));\n        }\n    }\n\n    @java.lang.Override\n    public T next() {\n        try {\n            return nextValue();\n        } catch (com.fasterxml.jackson.databind.JsonMappingException e) {\n            throw new com.fasterxml.jackson.databind.RuntimeJsonMappingException(e.getMessage(), e);\n        } catch (java.io.IOException e) {\n            throw new java.lang.RuntimeException(e.getMessage(), e);\n        }\n    }\n\n    @java.lang.Override\n    public void remove() {\n        throw new java.lang.UnsupportedOperationException();\n    }\n\n    @java.lang.Override\n    public void close() throws java.io.IOException {\n        if (_state != com.fasterxml.jackson.databind.MappingIterator.STATE_CLOSED) {\n            _state = com.fasterxml.jackson.databind.MappingIterator.STATE_CLOSED;\n            if (_parser != null) {\n                _parser.close();\n            }\n        }\n    }\n\n    public boolean hasNextValue() throws java.io.IOException {\n        switch (_state) {\n            case com.fasterxml.jackson.databind.MappingIterator.STATE_CLOSED :\n                return false;\n            case com.fasterxml.jackson.databind.MappingIterator.STATE_NEED_RESYNC :\n                _resync();\n            case com.fasterxml.jackson.databind.MappingIterator.STATE_MAY_HAVE_VALUE :\n                com.fasterxml.jackson.core.JsonToken t = _parser.getCurrentToken();\n                if (t == null) {\n                    t = _parser.nextToken();\n                    if ((t == null) || (t == com.fasterxml.jackson.core.JsonToken.END_ARRAY)) {\n                        _state = com.fasterxml.jackson.databind.MappingIterator.STATE_CLOSED;\n                        if (_closeParser && (_parser != null)) {\n                            _parser.close();\n                        }\n                        return false;\n                    }\n                }\n                _state = com.fasterxml.jackson.databind.MappingIterator.STATE_HAS_VALUE;\n                return true;\n            case com.fasterxml.jackson.databind.MappingIterator.STATE_HAS_VALUE :\n        }\n        return true;\n    }\n\n    public T nextValue() throws java.io.IOException {\n        switch (_state) {\n            case com.fasterxml.jackson.databind.MappingIterator.STATE_CLOSED :\n                return _throwNoSuchElement();\n            case com.fasterxml.jackson.databind.MappingIterator.STATE_NEED_RESYNC :\n            case com.fasterxml.jackson.databind.MappingIterator.STATE_MAY_HAVE_VALUE :\n                if (!hasNextValue()) {\n                    return _throwNoSuchElement();\n                }\n                break;\n            case com.fasterxml.jackson.databind.MappingIterator.STATE_HAS_VALUE :\n                break;\n        }\n        int nextState = com.fasterxml.jackson.databind.MappingIterator.STATE_NEED_RESYNC;\n        try {\n            T value;\n            if (_updatedValue == null) {\n                value = _deserializer.deserialize(_parser, _context);\n            } else {\n                _deserializer.deserialize(_parser, _context, _updatedValue);\n                value = _updatedValue;\n            }\n            nextState = com.fasterxml.jackson.databind.MappingIterator.STATE_MAY_HAVE_VALUE;\n            return value;\n        } finally {\n            _state = nextState;\n            _parser.clearCurrentToken();\n        }\n    }\n\n    public java.util.List<T> readAll() throws java.io.IOException {\n        return readAll(new java.util.ArrayList<T>());\n    }\n\n    public <L extends java.util.List<? super T>> L readAll(L resultList) throws java.io.IOException {\n        while (hasNextValue()) {\n            resultList.add(nextValue());\n        } \n        return resultList;\n    }\n\n    public <C extends java.util.Collection<? super T>> C readAll(C results) throws java.io.IOException {\n        while (hasNextValue()) {\n            results.add(nextValue());\n        } \n        return results;\n    }\n\n    public com.fasterxml.jackson.core.JsonParser getParser() {\n        return _parser;\n    }\n\n    public com.fasterxml.jackson.core.FormatSchema getParserSchema() {\n        return _parser.getSchema();\n    }\n\n    public com.fasterxml.jackson.core.JsonLocation getCurrentLocation() {\n        return _parser.getCurrentLocation();\n    }\n\n    protected void _resync() throws java.io.IOException {\n        final com.fasterxml.jackson.core.JsonParser p = _parser;\n        if (p.getParsingContext() == _seqContext) {\n            return;\n        }\n        while (true) {\n            com.fasterxml.jackson.core.JsonToken t = p.nextToken();\n            if ((t == com.fasterxml.jackson.core.JsonToken.END_ARRAY) || (t == com.fasterxml.jackson.core.JsonToken.END_OBJECT)) {\n                if (p.getParsingContext() == _seqContext) {\n                    p.clearCurrentToken();\n                    return;\n                }\n            } else if ((t == com.fasterxml.jackson.core.JsonToken.START_ARRAY) || (t == com.fasterxml.jackson.core.JsonToken.START_OBJECT)) {\n                p.skipChildren();\n            } else if (t == null) {\n                return;\n            }\n        } \n    }\n\n    protected <R> R _throwNoSuchElement() {\n        throw new java.util.NoSuchElementException();\n    }\n\n    protected <R> R _handleMappingException(com.fasterxml.jackson.databind.JsonMappingException e) {\n        throw new com.fasterxml.jackson.databind.RuntimeJsonMappingException(e.getMessage(), e);\n    }\n\n    protected <R> R _handleIOException(java.io.IOException e) {\n        throw new java.lang.RuntimeException(e.getMessage(), e);\n    }\n}",
            "src_parent_type": "Class",
            "src_type": "Field"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Field",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "protected static final int STATE_NEED_RESYNC = 1;",
            "src_parent": "public class MappingIterator<T> implements java.io.Closeable , java.util.Iterator<T> {\n    protected static final com.fasterxml.jackson.databind.MappingIterator<?> EMPTY_ITERATOR = new com.fasterxml.jackson.databind.MappingIterator<java.lang.Object>(null, null, null, null, false, null);\n\n    protected static final int STATE_CLOSED = 0;\n\n    protected static final int STATE_NEED_RESYNC = 1;\n\n    protected static final int STATE_MAY_HAVE_VALUE = 2;\n\n    protected static final int STATE_HAS_VALUE = 3;\n\n    protected final com.fasterxml.jackson.databind.JavaType _type;\n\n    protected final com.fasterxml.jackson.databind.DeserializationContext _context;\n\n    protected final com.fasterxml.jackson.databind.JsonDeserializer<T> _deserializer;\n\n    protected final com.fasterxml.jackson.core.JsonParser _parser;\n\n    protected final com.fasterxml.jackson.core.JsonStreamContext _seqContext;\n\n    protected final T _updatedValue;\n\n    protected final boolean _closeParser;\n\n    protected int _state;\n\n    @java.lang.SuppressWarnings(\"unchecked\")\n    protected MappingIterator(com.fasterxml.jackson.databind.JavaType type, com.fasterxml.jackson.core.JsonParser p, com.fasterxml.jackson.databind.DeserializationContext ctxt, com.fasterxml.jackson.databind.JsonDeserializer<?> deser, boolean managedParser, java.lang.Object valueToUpdate) {\n        _type = type;\n        _parser = p;\n        _context = ctxt;\n        _deserializer = ((com.fasterxml.jackson.databind.JsonDeserializer<T>) (deser));\n        _closeParser = managedParser;\n        if (valueToUpdate == null) {\n            _updatedValue = null;\n        } else {\n            _updatedValue = ((T) (valueToUpdate));\n        }\n        if (p == null) {\n            _seqContext = null;\n            _state = com.fasterxml.jackson.databind.MappingIterator.STATE_CLOSED;\n        } else {\n            com.fasterxml.jackson.core.JsonStreamContext sctxt = p.getParsingContext();\n            if (managedParser && p.isExpectedStartArrayToken()) {\n                p.clearCurrentToken();\n            } else {\n                com.fasterxml.jackson.core.JsonToken t = p.getCurrentToken();\n                if ((t == com.fasterxml.jackson.core.JsonToken.START_OBJECT) || (t == com.fasterxml.jackson.core.JsonToken.START_ARRAY)) {\n                    sctxt = sctxt.getParent();\n                }\n            }\n            _seqContext = sctxt;\n            _state = com.fasterxml.jackson.databind.MappingIterator.STATE_MAY_HAVE_VALUE;\n        }\n    }\n\n    @java.lang.SuppressWarnings(\"unchecked\")\n    protected static <T> com.fasterxml.jackson.databind.MappingIterator<T> emptyIterator() {\n        return ((com.fasterxml.jackson.databind.MappingIterator<T>) (com.fasterxml.jackson.databind.MappingIterator.EMPTY_ITERATOR));\n    }\n\n    @java.lang.Override\n    public boolean hasNext() {\n        try {\n            return hasNextValue();\n        } catch (com.fasterxml.jackson.databind.JsonMappingException e) {\n            return ((java.lang.Boolean) (_handleMappingException(e)));\n        } catch (java.io.IOException e) {\n            return ((java.lang.Boolean) (_handleIOException(e)));\n        }\n    }\n\n    @java.lang.Override\n    public T next() {\n        try {\n            return nextValue();\n        } catch (com.fasterxml.jackson.databind.JsonMappingException e) {\n            throw new com.fasterxml.jackson.databind.RuntimeJsonMappingException(e.getMessage(), e);\n        } catch (java.io.IOException e) {\n            throw new java.lang.RuntimeException(e.getMessage(), e);\n        }\n    }\n\n    @java.lang.Override\n    public void remove() {\n        throw new java.lang.UnsupportedOperationException();\n    }\n\n    @java.lang.Override\n    public void close() throws java.io.IOException {\n        if (_state != com.fasterxml.jackson.databind.MappingIterator.STATE_CLOSED) {\n            _state = com.fasterxml.jackson.databind.MappingIterator.STATE_CLOSED;\n            if (_parser != null) {\n                _parser.close();\n            }\n        }\n    }\n\n    public boolean hasNextValue() throws java.io.IOException {\n        switch (_state) {\n            case com.fasterxml.jackson.databind.MappingIterator.STATE_CLOSED :\n                return false;\n            case com.fasterxml.jackson.databind.MappingIterator.STATE_NEED_RESYNC :\n                _resync();\n            case com.fasterxml.jackson.databind.MappingIterator.STATE_MAY_HAVE_VALUE :\n                com.fasterxml.jackson.core.JsonToken t = _parser.getCurrentToken();\n                if (t == null) {\n                    t = _parser.nextToken();\n                    if ((t == null) || (t == com.fasterxml.jackson.core.JsonToken.END_ARRAY)) {\n                        _state = com.fasterxml.jackson.databind.MappingIterator.STATE_CLOSED;\n                        if (_closeParser && (_parser != null)) {\n                            _parser.close();\n                        }\n                        return false;\n                    }\n                }\n                _state = com.fasterxml.jackson.databind.MappingIterator.STATE_HAS_VALUE;\n                return true;\n            case com.fasterxml.jackson.databind.MappingIterator.STATE_HAS_VALUE :\n        }\n        return true;\n    }\n\n    public T nextValue() throws java.io.IOException {\n        switch (_state) {\n            case com.fasterxml.jackson.databind.MappingIterator.STATE_CLOSED :\n                return _throwNoSuchElement();\n            case com.fasterxml.jackson.databind.MappingIterator.STATE_NEED_RESYNC :\n            case com.fasterxml.jackson.databind.MappingIterator.STATE_MAY_HAVE_VALUE :\n                if (!hasNextValue()) {\n                    return _throwNoSuchElement();\n                }\n                break;\n            case com.fasterxml.jackson.databind.MappingIterator.STATE_HAS_VALUE :\n                break;\n        }\n        int nextState = com.fasterxml.jackson.databind.MappingIterator.STATE_NEED_RESYNC;\n        try {\n            T value;\n            if (_updatedValue == null) {\n                value = _deserializer.deserialize(_parser, _context);\n            } else {\n                _deserializer.deserialize(_parser, _context, _updatedValue);\n                value = _updatedValue;\n            }\n            nextState = com.fasterxml.jackson.databind.MappingIterator.STATE_MAY_HAVE_VALUE;\n            return value;\n        } finally {\n            _state = nextState;\n            _parser.clearCurrentToken();\n        }\n    }\n\n    public java.util.List<T> readAll() throws java.io.IOException {\n        return readAll(new java.util.ArrayList<T>());\n    }\n\n    public <L extends java.util.List<? super T>> L readAll(L resultList) throws java.io.IOException {\n        while (hasNextValue()) {\n            resultList.add(nextValue());\n        } \n        return resultList;\n    }\n\n    public <C extends java.util.Collection<? super T>> C readAll(C results) throws java.io.IOException {\n        while (hasNextValue()) {\n            results.add(nextValue());\n        } \n        return results;\n    }\n\n    public com.fasterxml.jackson.core.JsonParser getParser() {\n        return _parser;\n    }\n\n    public com.fasterxml.jackson.core.FormatSchema getParserSchema() {\n        return _parser.getSchema();\n    }\n\n    public com.fasterxml.jackson.core.JsonLocation getCurrentLocation() {\n        return _parser.getCurrentLocation();\n    }\n\n    protected void _resync() throws java.io.IOException {\n        final com.fasterxml.jackson.core.JsonParser p = _parser;\n        if (p.getParsingContext() == _seqContext) {\n            return;\n        }\n        while (true) {\n            com.fasterxml.jackson.core.JsonToken t = p.nextToken();\n            if ((t == com.fasterxml.jackson.core.JsonToken.END_ARRAY) || (t == com.fasterxml.jackson.core.JsonToken.END_OBJECT)) {\n                if (p.getParsingContext() == _seqContext) {\n                    p.clearCurrentToken();\n                    return;\n                }\n            } else if ((t == com.fasterxml.jackson.core.JsonToken.START_ARRAY) || (t == com.fasterxml.jackson.core.JsonToken.START_OBJECT)) {\n                p.skipChildren();\n            } else if (t == null) {\n                return;\n            }\n        } \n    }\n\n    protected <R> R _throwNoSuchElement() {\n        throw new java.util.NoSuchElementException();\n    }\n\n    protected <R> R _handleMappingException(com.fasterxml.jackson.databind.JsonMappingException e) {\n        throw new com.fasterxml.jackson.databind.RuntimeJsonMappingException(e.getMessage(), e);\n    }\n\n    protected <R> R _handleIOException(java.io.IOException e) {\n        throw new java.lang.RuntimeException(e.getMessage(), e);\n    }\n}",
            "src_parent_type": "Class",
            "src_type": "Field"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Field",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "protected static final int STATE_MAY_HAVE_VALUE = 2;",
            "src_parent": "public class MappingIterator<T> implements java.io.Closeable , java.util.Iterator<T> {\n    protected static final com.fasterxml.jackson.databind.MappingIterator<?> EMPTY_ITERATOR = new com.fasterxml.jackson.databind.MappingIterator<java.lang.Object>(null, null, null, null, false, null);\n\n    protected static final int STATE_CLOSED = 0;\n\n    protected static final int STATE_NEED_RESYNC = 1;\n\n    protected static final int STATE_MAY_HAVE_VALUE = 2;\n\n    protected static final int STATE_HAS_VALUE = 3;\n\n    protected final com.fasterxml.jackson.databind.JavaType _type;\n\n    protected final com.fasterxml.jackson.databind.DeserializationContext _context;\n\n    protected final com.fasterxml.jackson.databind.JsonDeserializer<T> _deserializer;\n\n    protected final com.fasterxml.jackson.core.JsonParser _parser;\n\n    protected final com.fasterxml.jackson.core.JsonStreamContext _seqContext;\n\n    protected final T _updatedValue;\n\n    protected final boolean _closeParser;\n\n    protected int _state;\n\n    @java.lang.SuppressWarnings(\"unchecked\")\n    protected MappingIterator(com.fasterxml.jackson.databind.JavaType type, com.fasterxml.jackson.core.JsonParser p, com.fasterxml.jackson.databind.DeserializationContext ctxt, com.fasterxml.jackson.databind.JsonDeserializer<?> deser, boolean managedParser, java.lang.Object valueToUpdate) {\n        _type = type;\n        _parser = p;\n        _context = ctxt;\n        _deserializer = ((com.fasterxml.jackson.databind.JsonDeserializer<T>) (deser));\n        _closeParser = managedParser;\n        if (valueToUpdate == null) {\n            _updatedValue = null;\n        } else {\n            _updatedValue = ((T) (valueToUpdate));\n        }\n        if (p == null) {\n            _seqContext = null;\n            _state = com.fasterxml.jackson.databind.MappingIterator.STATE_CLOSED;\n        } else {\n            com.fasterxml.jackson.core.JsonStreamContext sctxt = p.getParsingContext();\n            if (managedParser && p.isExpectedStartArrayToken()) {\n                p.clearCurrentToken();\n            } else {\n                com.fasterxml.jackson.core.JsonToken t = p.getCurrentToken();\n                if ((t == com.fasterxml.jackson.core.JsonToken.START_OBJECT) || (t == com.fasterxml.jackson.core.JsonToken.START_ARRAY)) {\n                    sctxt = sctxt.getParent();\n                }\n            }\n            _seqContext = sctxt;\n            _state = com.fasterxml.jackson.databind.MappingIterator.STATE_MAY_HAVE_VALUE;\n        }\n    }\n\n    @java.lang.SuppressWarnings(\"unchecked\")\n    protected static <T> com.fasterxml.jackson.databind.MappingIterator<T> emptyIterator() {\n        return ((com.fasterxml.jackson.databind.MappingIterator<T>) (com.fasterxml.jackson.databind.MappingIterator.EMPTY_ITERATOR));\n    }\n\n    @java.lang.Override\n    public boolean hasNext() {\n        try {\n            return hasNextValue();\n        } catch (com.fasterxml.jackson.databind.JsonMappingException e) {\n            return ((java.lang.Boolean) (_handleMappingException(e)));\n        } catch (java.io.IOException e) {\n            return ((java.lang.Boolean) (_handleIOException(e)));\n        }\n    }\n\n    @java.lang.Override\n    public T next() {\n        try {\n            return nextValue();\n        } catch (com.fasterxml.jackson.databind.JsonMappingException e) {\n            throw new com.fasterxml.jackson.databind.RuntimeJsonMappingException(e.getMessage(), e);\n        } catch (java.io.IOException e) {\n            throw new java.lang.RuntimeException(e.getMessage(), e);\n        }\n    }\n\n    @java.lang.Override\n    public void remove() {\n        throw new java.lang.UnsupportedOperationException();\n    }\n\n    @java.lang.Override\n    public void close() throws java.io.IOException {\n        if (_state != com.fasterxml.jackson.databind.MappingIterator.STATE_CLOSED) {\n            _state = com.fasterxml.jackson.databind.MappingIterator.STATE_CLOSED;\n            if (_parser != null) {\n                _parser.close();\n            }\n        }\n    }\n\n    public boolean hasNextValue() throws java.io.IOException {\n        switch (_state) {\n            case com.fasterxml.jackson.databind.MappingIterator.STATE_CLOSED :\n                return false;\n            case com.fasterxml.jackson.databind.MappingIterator.STATE_NEED_RESYNC :\n                _resync();\n            case com.fasterxml.jackson.databind.MappingIterator.STATE_MAY_HAVE_VALUE :\n                com.fasterxml.jackson.core.JsonToken t = _parser.getCurrentToken();\n                if (t == null) {\n                    t = _parser.nextToken();\n                    if ((t == null) || (t == com.fasterxml.jackson.core.JsonToken.END_ARRAY)) {\n                        _state = com.fasterxml.jackson.databind.MappingIterator.STATE_CLOSED;\n                        if (_closeParser && (_parser != null)) {\n                            _parser.close();\n                        }\n                        return false;\n                    }\n                }\n                _state = com.fasterxml.jackson.databind.MappingIterator.STATE_HAS_VALUE;\n                return true;\n            case com.fasterxml.jackson.databind.MappingIterator.STATE_HAS_VALUE :\n        }\n        return true;\n    }\n\n    public T nextValue() throws java.io.IOException {\n        switch (_state) {\n            case com.fasterxml.jackson.databind.MappingIterator.STATE_CLOSED :\n                return _throwNoSuchElement();\n            case com.fasterxml.jackson.databind.MappingIterator.STATE_NEED_RESYNC :\n            case com.fasterxml.jackson.databind.MappingIterator.STATE_MAY_HAVE_VALUE :\n                if (!hasNextValue()) {\n                    return _throwNoSuchElement();\n                }\n                break;\n            case com.fasterxml.jackson.databind.MappingIterator.STATE_HAS_VALUE :\n                break;\n        }\n        int nextState = com.fasterxml.jackson.databind.MappingIterator.STATE_NEED_RESYNC;\n        try {\n            T value;\n            if (_updatedValue == null) {\n                value = _deserializer.deserialize(_parser, _context);\n            } else {\n                _deserializer.deserialize(_parser, _context, _updatedValue);\n                value = _updatedValue;\n            }\n            nextState = com.fasterxml.jackson.databind.MappingIterator.STATE_MAY_HAVE_VALUE;\n            return value;\n        } finally {\n            _state = nextState;\n            _parser.clearCurrentToken();\n        }\n    }\n\n    public java.util.List<T> readAll() throws java.io.IOException {\n        return readAll(new java.util.ArrayList<T>());\n    }\n\n    public <L extends java.util.List<? super T>> L readAll(L resultList) throws java.io.IOException {\n        while (hasNextValue()) {\n            resultList.add(nextValue());\n        } \n        return resultList;\n    }\n\n    public <C extends java.util.Collection<? super T>> C readAll(C results) throws java.io.IOException {\n        while (hasNextValue()) {\n            results.add(nextValue());\n        } \n        return results;\n    }\n\n    public com.fasterxml.jackson.core.JsonParser getParser() {\n        return _parser;\n    }\n\n    public com.fasterxml.jackson.core.FormatSchema getParserSchema() {\n        return _parser.getSchema();\n    }\n\n    public com.fasterxml.jackson.core.JsonLocation getCurrentLocation() {\n        return _parser.getCurrentLocation();\n    }\n\n    protected void _resync() throws java.io.IOException {\n        final com.fasterxml.jackson.core.JsonParser p = _parser;\n        if (p.getParsingContext() == _seqContext) {\n            return;\n        }\n        while (true) {\n            com.fasterxml.jackson.core.JsonToken t = p.nextToken();\n            if ((t == com.fasterxml.jackson.core.JsonToken.END_ARRAY) || (t == com.fasterxml.jackson.core.JsonToken.END_OBJECT)) {\n                if (p.getParsingContext() == _seqContext) {\n                    p.clearCurrentToken();\n                    return;\n                }\n            } else if ((t == com.fasterxml.jackson.core.JsonToken.START_ARRAY) || (t == com.fasterxml.jackson.core.JsonToken.START_OBJECT)) {\n                p.skipChildren();\n            } else if (t == null) {\n                return;\n            }\n        } \n    }\n\n    protected <R> R _throwNoSuchElement() {\n        throw new java.util.NoSuchElementException();\n    }\n\n    protected <R> R _handleMappingException(com.fasterxml.jackson.databind.JsonMappingException e) {\n        throw new com.fasterxml.jackson.databind.RuntimeJsonMappingException(e.getMessage(), e);\n    }\n\n    protected <R> R _handleIOException(java.io.IOException e) {\n        throw new java.lang.RuntimeException(e.getMessage(), e);\n    }\n}",
            "src_parent_type": "Class",
            "src_type": "Field"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Field",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "protected static final int STATE_HAS_VALUE = 3;",
            "src_parent": "public class MappingIterator<T> implements java.io.Closeable , java.util.Iterator<T> {\n    protected static final com.fasterxml.jackson.databind.MappingIterator<?> EMPTY_ITERATOR = new com.fasterxml.jackson.databind.MappingIterator<java.lang.Object>(null, null, null, null, false, null);\n\n    protected static final int STATE_CLOSED = 0;\n\n    protected static final int STATE_NEED_RESYNC = 1;\n\n    protected static final int STATE_MAY_HAVE_VALUE = 2;\n\n    protected static final int STATE_HAS_VALUE = 3;\n\n    protected final com.fasterxml.jackson.databind.JavaType _type;\n\n    protected final com.fasterxml.jackson.databind.DeserializationContext _context;\n\n    protected final com.fasterxml.jackson.databind.JsonDeserializer<T> _deserializer;\n\n    protected final com.fasterxml.jackson.core.JsonParser _parser;\n\n    protected final com.fasterxml.jackson.core.JsonStreamContext _seqContext;\n\n    protected final T _updatedValue;\n\n    protected final boolean _closeParser;\n\n    protected int _state;\n\n    @java.lang.SuppressWarnings(\"unchecked\")\n    protected MappingIterator(com.fasterxml.jackson.databind.JavaType type, com.fasterxml.jackson.core.JsonParser p, com.fasterxml.jackson.databind.DeserializationContext ctxt, com.fasterxml.jackson.databind.JsonDeserializer<?> deser, boolean managedParser, java.lang.Object valueToUpdate) {\n        _type = type;\n        _parser = p;\n        _context = ctxt;\n        _deserializer = ((com.fasterxml.jackson.databind.JsonDeserializer<T>) (deser));\n        _closeParser = managedParser;\n        if (valueToUpdate == null) {\n            _updatedValue = null;\n        } else {\n            _updatedValue = ((T) (valueToUpdate));\n        }\n        if (p == null) {\n            _seqContext = null;\n            _state = com.fasterxml.jackson.databind.MappingIterator.STATE_CLOSED;\n        } else {\n            com.fasterxml.jackson.core.JsonStreamContext sctxt = p.getParsingContext();\n            if (managedParser && p.isExpectedStartArrayToken()) {\n                p.clearCurrentToken();\n            } else {\n                com.fasterxml.jackson.core.JsonToken t = p.getCurrentToken();\n                if ((t == com.fasterxml.jackson.core.JsonToken.START_OBJECT) || (t == com.fasterxml.jackson.core.JsonToken.START_ARRAY)) {\n                    sctxt = sctxt.getParent();\n                }\n            }\n            _seqContext = sctxt;\n            _state = com.fasterxml.jackson.databind.MappingIterator.STATE_MAY_HAVE_VALUE;\n        }\n    }\n\n    @java.lang.SuppressWarnings(\"unchecked\")\n    protected static <T> com.fasterxml.jackson.databind.MappingIterator<T> emptyIterator() {\n        return ((com.fasterxml.jackson.databind.MappingIterator<T>) (com.fasterxml.jackson.databind.MappingIterator.EMPTY_ITERATOR));\n    }\n\n    @java.lang.Override\n    public boolean hasNext() {\n        try {\n            return hasNextValue();\n        } catch (com.fasterxml.jackson.databind.JsonMappingException e) {\n            return ((java.lang.Boolean) (_handleMappingException(e)));\n        } catch (java.io.IOException e) {\n            return ((java.lang.Boolean) (_handleIOException(e)));\n        }\n    }\n\n    @java.lang.Override\n    public T next() {\n        try {\n            return nextValue();\n        } catch (com.fasterxml.jackson.databind.JsonMappingException e) {\n            throw new com.fasterxml.jackson.databind.RuntimeJsonMappingException(e.getMessage(), e);\n        } catch (java.io.IOException e) {\n            throw new java.lang.RuntimeException(e.getMessage(), e);\n        }\n    }\n\n    @java.lang.Override\n    public void remove() {\n        throw new java.lang.UnsupportedOperationException();\n    }\n\n    @java.lang.Override\n    public void close() throws java.io.IOException {\n        if (_state != com.fasterxml.jackson.databind.MappingIterator.STATE_CLOSED) {\n            _state = com.fasterxml.jackson.databind.MappingIterator.STATE_CLOSED;\n            if (_parser != null) {\n                _parser.close();\n            }\n        }\n    }\n\n    public boolean hasNextValue() throws java.io.IOException {\n        switch (_state) {\n            case com.fasterxml.jackson.databind.MappingIterator.STATE_CLOSED :\n                return false;\n            case com.fasterxml.jackson.databind.MappingIterator.STATE_NEED_RESYNC :\n                _resync();\n            case com.fasterxml.jackson.databind.MappingIterator.STATE_MAY_HAVE_VALUE :\n                com.fasterxml.jackson.core.JsonToken t = _parser.getCurrentToken();\n                if (t == null) {\n                    t = _parser.nextToken();\n                    if ((t == null) || (t == com.fasterxml.jackson.core.JsonToken.END_ARRAY)) {\n                        _state = com.fasterxml.jackson.databind.MappingIterator.STATE_CLOSED;\n                        if (_closeParser && (_parser != null)) {\n                            _parser.close();\n                        }\n                        return false;\n                    }\n                }\n                _state = com.fasterxml.jackson.databind.MappingIterator.STATE_HAS_VALUE;\n                return true;\n            case com.fasterxml.jackson.databind.MappingIterator.STATE_HAS_VALUE :\n        }\n        return true;\n    }\n\n    public T nextValue() throws java.io.IOException {\n        switch (_state) {\n            case com.fasterxml.jackson.databind.MappingIterator.STATE_CLOSED :\n                return _throwNoSuchElement();\n            case com.fasterxml.jackson.databind.MappingIterator.STATE_NEED_RESYNC :\n            case com.fasterxml.jackson.databind.MappingIterator.STATE_MAY_HAVE_VALUE :\n                if (!hasNextValue()) {\n                    return _throwNoSuchElement();\n                }\n                break;\n            case com.fasterxml.jackson.databind.MappingIterator.STATE_HAS_VALUE :\n                break;\n        }\n        int nextState = com.fasterxml.jackson.databind.MappingIterator.STATE_NEED_RESYNC;\n        try {\n            T value;\n            if (_updatedValue == null) {\n                value = _deserializer.deserialize(_parser, _context);\n            } else {\n                _deserializer.deserialize(_parser, _context, _updatedValue);\n                value = _updatedValue;\n            }\n            nextState = com.fasterxml.jackson.databind.MappingIterator.STATE_MAY_HAVE_VALUE;\n            return value;\n        } finally {\n            _state = nextState;\n            _parser.clearCurrentToken();\n        }\n    }\n\n    public java.util.List<T> readAll() throws java.io.IOException {\n        return readAll(new java.util.ArrayList<T>());\n    }\n\n    public <L extends java.util.List<? super T>> L readAll(L resultList) throws java.io.IOException {\n        while (hasNextValue()) {\n            resultList.add(nextValue());\n        } \n        return resultList;\n    }\n\n    public <C extends java.util.Collection<? super T>> C readAll(C results) throws java.io.IOException {\n        while (hasNextValue()) {\n            results.add(nextValue());\n        } \n        return results;\n    }\n\n    public com.fasterxml.jackson.core.JsonParser getParser() {\n        return _parser;\n    }\n\n    public com.fasterxml.jackson.core.FormatSchema getParserSchema() {\n        return _parser.getSchema();\n    }\n\n    public com.fasterxml.jackson.core.JsonLocation getCurrentLocation() {\n        return _parser.getCurrentLocation();\n    }\n\n    protected void _resync() throws java.io.IOException {\n        final com.fasterxml.jackson.core.JsonParser p = _parser;\n        if (p.getParsingContext() == _seqContext) {\n            return;\n        }\n        while (true) {\n            com.fasterxml.jackson.core.JsonToken t = p.nextToken();\n            if ((t == com.fasterxml.jackson.core.JsonToken.END_ARRAY) || (t == com.fasterxml.jackson.core.JsonToken.END_OBJECT)) {\n                if (p.getParsingContext() == _seqContext) {\n                    p.clearCurrentToken();\n                    return;\n                }\n            } else if ((t == com.fasterxml.jackson.core.JsonToken.START_ARRAY) || (t == com.fasterxml.jackson.core.JsonToken.START_OBJECT)) {\n                p.skipChildren();\n            } else if (t == null) {\n                return;\n            }\n        } \n    }\n\n    protected <R> R _throwNoSuchElement() {\n        throw new java.util.NoSuchElementException();\n    }\n\n    protected <R> R _handleMappingException(com.fasterxml.jackson.databind.JsonMappingException e) {\n        throw new com.fasterxml.jackson.databind.RuntimeJsonMappingException(e.getMessage(), e);\n    }\n\n    protected <R> R _handleIOException(java.io.IOException e) {\n        throw new java.lang.RuntimeException(e.getMessage(), e);\n    }\n}",
            "src_parent_type": "Class",
            "src_type": "Field"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Field",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Wrapper",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "final",
            "src_parent": "protected final com.fasterxml.jackson.core.JsonParser _parser;",
            "src_parent_type": "Field",
            "src_type": "Wra"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Field",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "protected final com.fasterxml.jackson.core.JsonStreamContext _seqContext;",
            "src_parent": "public class MappingIterator<T> implements java.io.Closeable , java.util.Iterator<T> {\n    protected static final com.fasterxml.jackson.databind.MappingIterator<?> EMPTY_ITERATOR = new com.fasterxml.jackson.databind.MappingIterator<java.lang.Object>(null, null, null, null, false, null);\n\n    protected static final int STATE_CLOSED = 0;\n\n    protected static final int STATE_NEED_RESYNC = 1;\n\n    protected static final int STATE_MAY_HAVE_VALUE = 2;\n\n    protected static final int STATE_HAS_VALUE = 3;\n\n    protected final com.fasterxml.jackson.databind.JavaType _type;\n\n    protected final com.fasterxml.jackson.databind.DeserializationContext _context;\n\n    protected final com.fasterxml.jackson.databind.JsonDeserializer<T> _deserializer;\n\n    protected final com.fasterxml.jackson.core.JsonParser _parser;\n\n    protected final com.fasterxml.jackson.core.JsonStreamContext _seqContext;\n\n    protected final T _updatedValue;\n\n    protected final boolean _closeParser;\n\n    protected int _state;\n\n    @java.lang.SuppressWarnings(\"unchecked\")\n    protected MappingIterator(com.fasterxml.jackson.databind.JavaType type, com.fasterxml.jackson.core.JsonParser p, com.fasterxml.jackson.databind.DeserializationContext ctxt, com.fasterxml.jackson.databind.JsonDeserializer<?> deser, boolean managedParser, java.lang.Object valueToUpdate) {\n        _type = type;\n        _parser = p;\n        _context = ctxt;\n        _deserializer = ((com.fasterxml.jackson.databind.JsonDeserializer<T>) (deser));\n        _closeParser = managedParser;\n        if (valueToUpdate == null) {\n            _updatedValue = null;\n        } else {\n            _updatedValue = ((T) (valueToUpdate));\n        }\n        if (p == null) {\n            _seqContext = null;\n            _state = com.fasterxml.jackson.databind.MappingIterator.STATE_CLOSED;\n        } else {\n            com.fasterxml.jackson.core.JsonStreamContext sctxt = p.getParsingContext();\n            if (managedParser && p.isExpectedStartArrayToken()) {\n                p.clearCurrentToken();\n            } else {\n                com.fasterxml.jackson.core.JsonToken t = p.getCurrentToken();\n                if ((t == com.fasterxml.jackson.core.JsonToken.START_OBJECT) || (t == com.fasterxml.jackson.core.JsonToken.START_ARRAY)) {\n                    sctxt = sctxt.getParent();\n                }\n            }\n            _seqContext = sctxt;\n            _state = com.fasterxml.jackson.databind.MappingIterator.STATE_MAY_HAVE_VALUE;\n        }\n    }\n\n    @java.lang.SuppressWarnings(\"unchecked\")\n    protected static <T> com.fasterxml.jackson.databind.MappingIterator<T> emptyIterator() {\n        return ((com.fasterxml.jackson.databind.MappingIterator<T>) (com.fasterxml.jackson.databind.MappingIterator.EMPTY_ITERATOR));\n    }\n\n    @java.lang.Override\n    public boolean hasNext() {\n        try {\n            return hasNextValue();\n        } catch (com.fasterxml.jackson.databind.JsonMappingException e) {\n            return ((java.lang.Boolean) (_handleMappingException(e)));\n        } catch (java.io.IOException e) {\n            return ((java.lang.Boolean) (_handleIOException(e)));\n        }\n    }\n\n    @java.lang.Override\n    public T next() {\n        try {\n            return nextValue();\n        } catch (com.fasterxml.jackson.databind.JsonMappingException e) {\n            throw new com.fasterxml.jackson.databind.RuntimeJsonMappingException(e.getMessage(), e);\n        } catch (java.io.IOException e) {\n            throw new java.lang.RuntimeException(e.getMessage(), e);\n        }\n    }\n\n    @java.lang.Override\n    public void remove() {\n        throw new java.lang.UnsupportedOperationException();\n    }\n\n    @java.lang.Override\n    public void close() throws java.io.IOException {\n        if (_state != com.fasterxml.jackson.databind.MappingIterator.STATE_CLOSED) {\n            _state = com.fasterxml.jackson.databind.MappingIterator.STATE_CLOSED;\n            if (_parser != null) {\n                _parser.close();\n            }\n        }\n    }\n\n    public boolean hasNextValue() throws java.io.IOException {\n        switch (_state) {\n            case com.fasterxml.jackson.databind.MappingIterator.STATE_CLOSED :\n                return false;\n            case com.fasterxml.jackson.databind.MappingIterator.STATE_NEED_RESYNC :\n                _resync();\n            case com.fasterxml.jackson.databind.MappingIterator.STATE_MAY_HAVE_VALUE :\n                com.fasterxml.jackson.core.JsonToken t = _parser.getCurrentToken();\n                if (t == null) {\n                    t = _parser.nextToken();\n                    if ((t == null) || (t == com.fasterxml.jackson.core.JsonToken.END_ARRAY)) {\n                        _state = com.fasterxml.jackson.databind.MappingIterator.STATE_CLOSED;\n                        if (_closeParser && (_parser != null)) {\n                            _parser.close();\n                        }\n                        return false;\n                    }\n                }\n                _state = com.fasterxml.jackson.databind.MappingIterator.STATE_HAS_VALUE;\n                return true;\n            case com.fasterxml.jackson.databind.MappingIterator.STATE_HAS_VALUE :\n        }\n        return true;\n    }\n\n    public T nextValue() throws java.io.IOException {\n        switch (_state) {\n            case com.fasterxml.jackson.databind.MappingIterator.STATE_CLOSED :\n                return _throwNoSuchElement();\n            case com.fasterxml.jackson.databind.MappingIterator.STATE_NEED_RESYNC :\n            case com.fasterxml.jackson.databind.MappingIterator.STATE_MAY_HAVE_VALUE :\n                if (!hasNextValue()) {\n                    return _throwNoSuchElement();\n                }\n                break;\n            case com.fasterxml.jackson.databind.MappingIterator.STATE_HAS_VALUE :\n                break;\n        }\n        int nextState = com.fasterxml.jackson.databind.MappingIterator.STATE_NEED_RESYNC;\n        try {\n            T value;\n            if (_updatedValue == null) {\n                value = _deserializer.deserialize(_parser, _context);\n            } else {\n                _deserializer.deserialize(_parser, _context, _updatedValue);\n                value = _updatedValue;\n            }\n            nextState = com.fasterxml.jackson.databind.MappingIterator.STATE_MAY_HAVE_VALUE;\n            return value;\n        } finally {\n            _state = nextState;\n            _parser.clearCurrentToken();\n        }\n    }\n\n    public java.util.List<T> readAll() throws java.io.IOException {\n        return readAll(new java.util.ArrayList<T>());\n    }\n\n    public <L extends java.util.List<? super T>> L readAll(L resultList) throws java.io.IOException {\n        while (hasNextValue()) {\n            resultList.add(nextValue());\n        } \n        return resultList;\n    }\n\n    public <C extends java.util.Collection<? super T>> C readAll(C results) throws java.io.IOException {\n        while (hasNextValue()) {\n            results.add(nextValue());\n        } \n        return results;\n    }\n\n    public com.fasterxml.jackson.core.JsonParser getParser() {\n        return _parser;\n    }\n\n    public com.fasterxml.jackson.core.FormatSchema getParserSchema() {\n        return _parser.getSchema();\n    }\n\n    public com.fasterxml.jackson.core.JsonLocation getCurrentLocation() {\n        return _parser.getCurrentLocation();\n    }\n\n    protected void _resync() throws java.io.IOException {\n        final com.fasterxml.jackson.core.JsonParser p = _parser;\n        if (p.getParsingContext() == _seqContext) {\n            return;\n        }\n        while (true) {\n            com.fasterxml.jackson.core.JsonToken t = p.nextToken();\n            if ((t == com.fasterxml.jackson.core.JsonToken.END_ARRAY) || (t == com.fasterxml.jackson.core.JsonToken.END_OBJECT)) {\n                if (p.getParsingContext() == _seqContext) {\n                    p.clearCurrentToken();\n                    return;\n                }\n            } else if ((t == com.fasterxml.jackson.core.JsonToken.START_ARRAY) || (t == com.fasterxml.jackson.core.JsonToken.START_OBJECT)) {\n                p.skipChildren();\n            } else if (t == null) {\n                return;\n            }\n        } \n    }\n\n    protected <R> R _throwNoSuchElement() {\n        throw new java.util.NoSuchElementException();\n    }\n\n    protected <R> R _handleMappingException(com.fasterxml.jackson.databind.JsonMappingException e) {\n        throw new com.fasterxml.jackson.databind.RuntimeJsonMappingException(e.getMessage(), e);\n    }\n\n    protected <R> R _handleIOException(java.io.IOException e) {\n        throw new java.lang.RuntimeException(e.getMessage(), e);\n    }\n}",
            "src_parent_type": "Class",
            "src_type": "Field"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "Assignment",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "Assignment",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Constructor",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "p == null",
            "src_parent": "if (p == null) {\n    _seqContext = null;\n    _state = com.fasterxml.jackson.databind.MappingIterator.STATE_CLOSED;\n} else {\n    com.fasterxml.jackson.core.JsonStreamContext sctxt = p.getParsingContext();\n    if (managedParser && p.isExpectedStartArrayToken()) {\n        p.clearCurrentToken();\n    } else {\n        com.fasterxml.jackson.core.JsonToken t = p.getCurrentToken();\n        if ((t == com.fasterxml.jackson.core.JsonToken.START_OBJECT) || (t == com.fasterxml.jackson.core.JsonToken.START_ARRAY)) {\n            sctxt = sctxt.getParent();\n        }\n    }\n    _seqContext = sctxt;\n    _state = com.fasterxml.jackson.databind.MappingIterator.STATE_MAY_HAVE_VALUE;\n}",
            "src_parent_type": "If",
            "src_type": "BinaryOperator"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "Assignment",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "Assignment",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Constructor",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "{\n    _seqContext = null;\n    _state = com.fasterxml.jackson.databind.MappingIterator.STATE_CLOSED;\n}",
            "src_parent": "if (p == null) {\n    _seqContext = null;\n    _state = com.fasterxml.jackson.databind.MappingIterator.STATE_CLOSED;\n} else {\n    com.fasterxml.jackson.core.JsonStreamContext sctxt = p.getParsingContext();\n    if (managedParser && p.isExpectedStartArrayToken()) {\n        p.clearCurrentToken();\n    } else {\n        com.fasterxml.jackson.core.JsonToken t = p.getCurrentToken();\n        if ((t == com.fasterxml.jackson.core.JsonToken.START_OBJECT) || (t == com.fasterxml.jackson.core.JsonToken.START_ARRAY)) {\n            sctxt = sctxt.getParent();\n        }\n    }\n    _seqContext = sctxt;\n    _state = com.fasterxml.jackson.databind.MappingIterator.STATE_MAY_HAVE_VALUE;\n}",
            "src_parent_type": "If",
            "src_type": "Block"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "Assignment",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "Assignment",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Constructor",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "{\n    com.fasterxml.jackson.core.JsonStreamContext sctxt = p.getParsingContext();\n    if (managedParser && p.isExpectedStartArrayToken()) {\n        p.clearCurrentToken();\n    } else {\n        com.fasterxml.jackson.core.JsonToken t = p.getCurrentToken();\n        if ((t == com.fasterxml.jackson.core.JsonToken.START_OBJECT) || (t == com.fasterxml.jackson.core.JsonToken.START_ARRAY)) {\n            sctxt = sctxt.getParent();\n        }\n    }\n    _seqContext = sctxt;\n    _state = com.fasterxml.jackson.databind.MappingIterator.STATE_MAY_HAVE_VALUE;\n}",
            "src_parent": "if (p == null) {\n    _seqContext = null;\n    _state = com.fasterxml.jackson.databind.MappingIterator.STATE_CLOSED;\n} else {\n    com.fasterxml.jackson.core.JsonStreamContext sctxt = p.getParsingContext();\n    if (managedParser && p.isExpectedStartArrayToken()) {\n        p.clearCurrentToken();\n    } else {\n        com.fasterxml.jackson.core.JsonToken t = p.getCurrentToken();\n        if ((t == com.fasterxml.jackson.core.JsonToken.START_OBJECT) || (t == com.fasterxml.jackson.core.JsonToken.START_ARRAY)) {\n            sctxt = sctxt.getParent();\n        }\n    }\n    _seqContext = sctxt;\n    _state = com.fasterxml.jackson.databind.MappingIterator.STATE_MAY_HAVE_VALUE;\n}",
            "src_parent_type": "If",
            "src_type": "Block"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "if (_state != com.fasterxml.jackson.databind.MappingIterator.STATE_CLOSED) {\n    _state = com.fasterxml.jackson.databind.MappingIterator.STATE_CLOSED;\n    if (_parser != null) {\n        _parser.close();\n    }\n}",
            "src_parent": "{\n    if (_state != com.fasterxml.jackson.databind.MappingIterator.STATE_CLOSED) {\n        _state = com.fasterxml.jackson.databind.MappingIterator.STATE_CLOSED;\n        if (_parser != null) {\n            _parser.close();\n        }\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "If"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "Return",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Assignment",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "com.fasterxml.jackson.databind.MappingIterator.STATE_CLOSED",
            "src_parent": "_state = com.fasterxml.jackson.databind.MappingIterator.STATE_CLOSED",
            "src_parent_type": "Assignment",
            "src_type": "FieldRead"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Return",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "Assignment",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "_closeParser && (_parser != null)",
            "src_parent": "if (_closeParser && (_parser != null)) {\n    _parser.close();\n}",
            "src_parent_type": "If",
            "src_type": "BinaryOperator"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Return",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Switch",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "switch (_state) {\n    case com.fasterxml.jackson.databind.MappingIterator.STATE_CLOSED :\n        return false;\n    case com.fasterxml.jackson.databind.MappingIterator.STATE_NEED_RESYNC :\n        _resync();\n    case com.fasterxml.jackson.databind.MappingIterator.STATE_MAY_HAVE_VALUE :\n        com.fasterxml.jackson.core.JsonToken t = _parser.getCurrentToken();\n        if (t == null) {\n            t = _parser.nextToken();\n            if ((t == null) || (t == com.fasterxml.jackson.core.JsonToken.END_ARRAY)) {\n                _state = com.fasterxml.jackson.databind.MappingIterator.STATE_CLOSED;\n                if (_closeParser && (_parser != null)) {\n                    _parser.close();\n                }\n                return false;\n            }\n        }\n        _state = com.fasterxml.jackson.databind.MappingIterator.STATE_HAS_VALUE;\n        return true;\n    case com.fasterxml.jackson.databind.MappingIterator.STATE_HAS_VALUE :\n}",
            "src_parent": "{\n    switch (_state) {\n        case com.fasterxml.jackson.databind.MappingIterator.STATE_CLOSED :\n            return false;\n        case com.fasterxml.jackson.databind.MappingIterator.STATE_NEED_RESYNC :\n            _resync();\n        case com.fasterxml.jackson.databind.MappingIterator.STATE_MAY_HAVE_VALUE :\n            com.fasterxml.jackson.core.JsonToken t = _parser.getCurrentToken();\n            if (t == null) {\n                t = _parser.nextToken();\n                if ((t == null) || (t == com.fasterxml.jackson.core.JsonToken.END_ARRAY)) {\n                    _state = com.fasterxml.jackson.databind.MappingIterator.STATE_CLOSED;\n                    if (_closeParser && (_parser != null)) {\n                        _parser.close();\n                    }\n                    return false;\n                }\n            }\n            _state = com.fasterxml.jackson.databind.MappingIterator.STATE_HAS_VALUE;\n            return true;\n        case com.fasterxml.jackson.databind.MappingIterator.STATE_HAS_VALUE :\n    }\n    return true;\n}",
            "src_parent_type": "Block",
            "src_type": "Switch"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "Switch",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Return",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "return true",
            "src_parent": "{\n    switch (_state) {\n        case com.fasterxml.jackson.databind.MappingIterator.STATE_CLOSED :\n            return false;\n        case com.fasterxml.jackson.databind.MappingIterator.STATE_NEED_RESYNC :\n            _resync();\n        case com.fasterxml.jackson.databind.MappingIterator.STATE_MAY_HAVE_VALUE :\n            com.fasterxml.jackson.core.JsonToken t = _parser.getCurrentToken();\n            if (t == null) {\n                t = _parser.nextToken();\n                if ((t == null) || (t == com.fasterxml.jackson.core.JsonToken.END_ARRAY)) {\n                    _state = com.fasterxml.jackson.databind.MappingIterator.STATE_CLOSED;\n                    if (_closeParser && (_parser != null)) {\n                        _parser.close();\n                    }\n                    return false;\n                }\n            }\n            _state = com.fasterxml.jackson.databind.MappingIterator.STATE_HAS_VALUE;\n            return true;\n        case com.fasterxml.jackson.databind.MappingIterator.STATE_HAS_VALUE :\n    }\n    return true;\n}",
            "src_parent_type": "Block",
            "src_type": "Return"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "Try",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Switch",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "switch (_state) {\n    case com.fasterxml.jackson.databind.MappingIterator.STATE_CLOSED :\n        return _throwNoSuchElement();\n    case com.fasterxml.jackson.databind.MappingIterator.STATE_NEED_RESYNC :\n    case com.fasterxml.jackson.databind.MappingIterator.STATE_MAY_HAVE_VALUE :\n        if (!hasNextValue()) {\n            return _throwNoSuchElement();\n        }\n        break;\n    case com.fasterxml.jackson.databind.MappingIterator.STATE_HAS_VALUE :\n        break;\n}",
            "src_parent": "{\n    switch (_state) {\n        case com.fasterxml.jackson.databind.MappingIterator.STATE_CLOSED :\n            return _throwNoSuchElement();\n        case com.fasterxml.jackson.databind.MappingIterator.STATE_NEED_RESYNC :\n        case com.fasterxml.jackson.databind.MappingIterator.STATE_MAY_HAVE_VALUE :\n            if (!hasNextValue()) {\n                return _throwNoSuchElement();\n            }\n            break;\n        case com.fasterxml.jackson.databind.MappingIterator.STATE_HAS_VALUE :\n            break;\n    }\n    int nextState = com.fasterxml.jackson.databind.MappingIterator.STATE_NEED_RESYNC;\n    try {\n        T value;\n        if (_updatedValue == null) {\n            value = _deserializer.deserialize(_parser, _context);\n        } else {\n            _deserializer.deserialize(_parser, _context, _updatedValue);\n            value = _updatedValue;\n        }\n        nextState = com.fasterxml.jackson.databind.MappingIterator.STATE_MAY_HAVE_VALUE;\n        return value;\n    } finally {\n        _state = nextState;\n        _parser.clearCurrentToken();\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "Switch"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Try",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "Switch",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "LocalVariable",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "int nextState = com.fasterxml.jackson.databind.MappingIterator.STATE_NEED_RESYNC",
            "src_parent": "{\n    switch (_state) {\n        case com.fasterxml.jackson.databind.MappingIterator.STATE_CLOSED :\n            return _throwNoSuchElement();\n        case com.fasterxml.jackson.databind.MappingIterator.STATE_NEED_RESYNC :\n        case com.fasterxml.jackson.databind.MappingIterator.STATE_MAY_HAVE_VALUE :\n            if (!hasNextValue()) {\n                return _throwNoSuchElement();\n            }\n            break;\n        case com.fasterxml.jackson.databind.MappingIterator.STATE_HAS_VALUE :\n            break;\n    }\n    int nextState = com.fasterxml.jackson.databind.MappingIterator.STATE_NEED_RESYNC;\n    try {\n        T value;\n        if (_updatedValue == null) {\n            value = _deserializer.deserialize(_parser, _context);\n        } else {\n            _deserializer.deserialize(_parser, _context, _updatedValue);\n            value = _updatedValue;\n        }\n        nextState = com.fasterxml.jackson.databind.MappingIterator.STATE_MAY_HAVE_VALUE;\n        return value;\n    } finally {\n        _state = nextState;\n        _parser.clearCurrentToken();\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "LocalVariable"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "Switch",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Try",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "nextState = com.fasterxml.jackson.databind.MappingIterator.STATE_MAY_HAVE_VALUE",
            "src_parent": "{\n    T value;\n    if (_updatedValue == null) {\n        value = _deserializer.deserialize(_parser, _context);\n    } else {\n        _deserializer.deserialize(_parser, _context, _updatedValue);\n        value = _updatedValue;\n    }\n    nextState = com.fasterxml.jackson.databind.MappingIterator.STATE_MAY_HAVE_VALUE;\n    return value;\n}",
            "src_parent_type": "Block",
            "src_type": "Assignment"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "Switch",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Try",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "_state = nextState",
            "src_parent": "{\n    _state = nextState;\n    _parser.clearCurrentToken();\n}",
            "src_parent_type": "Block",
            "src_type": "Assignment"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "true",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Method",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "protected void _resync() throws java.io.IOException {\n    final com.fasterxml.jackson.core.JsonParser p = _parser;\n    if (p.getParsingContext() == _seqContext) {\n        return;\n    }\n    while (true) {\n        com.fasterxml.jackson.core.JsonToken t = p.nextToken();\n        if ((t == com.fasterxml.jackson.core.JsonToken.END_ARRAY) || (t == com.fasterxml.jackson.core.JsonToken.END_OBJECT)) {\n            if (p.getParsingContext() == _seqContext) {\n                p.clearCurrentToken();\n                return;\n            }\n        } else if ((t == com.fasterxml.jackson.core.JsonToken.START_ARRAY) || (t == com.fasterxml.jackson.core.JsonToken.START_OBJECT)) {\n            p.skipChildren();\n        } else if (t == null) {\n            return;\n        }\n    } \n}",
            "src_parent": "public class MappingIterator<T> implements java.io.Closeable , java.util.Iterator<T> {\n    protected static final com.fasterxml.jackson.databind.MappingIterator<?> EMPTY_ITERATOR = new com.fasterxml.jackson.databind.MappingIterator<java.lang.Object>(null, null, null, null, false, null);\n\n    protected static final int STATE_CLOSED = 0;\n\n    protected static final int STATE_NEED_RESYNC = 1;\n\n    protected static final int STATE_MAY_HAVE_VALUE = 2;\n\n    protected static final int STATE_HAS_VALUE = 3;\n\n    protected final com.fasterxml.jackson.databind.JavaType _type;\n\n    protected final com.fasterxml.jackson.databind.DeserializationContext _context;\n\n    protected final com.fasterxml.jackson.databind.JsonDeserializer<T> _deserializer;\n\n    protected final com.fasterxml.jackson.core.JsonParser _parser;\n\n    protected final com.fasterxml.jackson.core.JsonStreamContext _seqContext;\n\n    protected final T _updatedValue;\n\n    protected final boolean _closeParser;\n\n    protected int _state;\n\n    @java.lang.SuppressWarnings(\"unchecked\")\n    protected MappingIterator(com.fasterxml.jackson.databind.JavaType type, com.fasterxml.jackson.core.JsonParser p, com.fasterxml.jackson.databind.DeserializationContext ctxt, com.fasterxml.jackson.databind.JsonDeserializer<?> deser, boolean managedParser, java.lang.Object valueToUpdate) {\n        _type = type;\n        _parser = p;\n        _context = ctxt;\n        _deserializer = ((com.fasterxml.jackson.databind.JsonDeserializer<T>) (deser));\n        _closeParser = managedParser;\n        if (valueToUpdate == null) {\n            _updatedValue = null;\n        } else {\n            _updatedValue = ((T) (valueToUpdate));\n        }\n        if (p == null) {\n            _seqContext = null;\n            _state = com.fasterxml.jackson.databind.MappingIterator.STATE_CLOSED;\n        } else {\n            com.fasterxml.jackson.core.JsonStreamContext sctxt = p.getParsingContext();\n            if (managedParser && p.isExpectedStartArrayToken()) {\n                p.clearCurrentToken();\n            } else {\n                com.fasterxml.jackson.core.JsonToken t = p.getCurrentToken();\n                if ((t == com.fasterxml.jackson.core.JsonToken.START_OBJECT) || (t == com.fasterxml.jackson.core.JsonToken.START_ARRAY)) {\n                    sctxt = sctxt.getParent();\n                }\n            }\n            _seqContext = sctxt;\n            _state = com.fasterxml.jackson.databind.MappingIterator.STATE_MAY_HAVE_VALUE;\n        }\n    }\n\n    @java.lang.SuppressWarnings(\"unchecked\")\n    protected static <T> com.fasterxml.jackson.databind.MappingIterator<T> emptyIterator() {\n        return ((com.fasterxml.jackson.databind.MappingIterator<T>) (com.fasterxml.jackson.databind.MappingIterator.EMPTY_ITERATOR));\n    }\n\n    @java.lang.Override\n    public boolean hasNext() {\n        try {\n            return hasNextValue();\n        } catch (com.fasterxml.jackson.databind.JsonMappingException e) {\n            return ((java.lang.Boolean) (_handleMappingException(e)));\n        } catch (java.io.IOException e) {\n            return ((java.lang.Boolean) (_handleIOException(e)));\n        }\n    }\n\n    @java.lang.Override\n    public T next() {\n        try {\n            return nextValue();\n        } catch (com.fasterxml.jackson.databind.JsonMappingException e) {\n            throw new com.fasterxml.jackson.databind.RuntimeJsonMappingException(e.getMessage(), e);\n        } catch (java.io.IOException e) {\n            throw new java.lang.RuntimeException(e.getMessage(), e);\n        }\n    }\n\n    @java.lang.Override\n    public void remove() {\n        throw new java.lang.UnsupportedOperationException();\n    }\n\n    @java.lang.Override\n    public void close() throws java.io.IOException {\n        if (_state != com.fasterxml.jackson.databind.MappingIterator.STATE_CLOSED) {\n            _state = com.fasterxml.jackson.databind.MappingIterator.STATE_CLOSED;\n            if (_parser != null) {\n                _parser.close();\n            }\n        }\n    }\n\n    public boolean hasNextValue() throws java.io.IOException {\n        switch (_state) {\n            case com.fasterxml.jackson.databind.MappingIterator.STATE_CLOSED :\n                return false;\n            case com.fasterxml.jackson.databind.MappingIterator.STATE_NEED_RESYNC :\n                _resync();\n            case com.fasterxml.jackson.databind.MappingIterator.STATE_MAY_HAVE_VALUE :\n                com.fasterxml.jackson.core.JsonToken t = _parser.getCurrentToken();\n                if (t == null) {\n                    t = _parser.nextToken();\n                    if ((t == null) || (t == com.fasterxml.jackson.core.JsonToken.END_ARRAY)) {\n                        _state = com.fasterxml.jackson.databind.MappingIterator.STATE_CLOSED;\n                        if (_closeParser && (_parser != null)) {\n                            _parser.close();\n                        }\n                        return false;\n                    }\n                }\n                _state = com.fasterxml.jackson.databind.MappingIterator.STATE_HAS_VALUE;\n                return true;\n            case com.fasterxml.jackson.databind.MappingIterator.STATE_HAS_VALUE :\n        }\n        return true;\n    }\n\n    public T nextValue() throws java.io.IOException {\n        switch (_state) {\n            case com.fasterxml.jackson.databind.MappingIterator.STATE_CLOSED :\n                return _throwNoSuchElement();\n            case com.fasterxml.jackson.databind.MappingIterator.STATE_NEED_RESYNC :\n            case com.fasterxml.jackson.databind.MappingIterator.STATE_MAY_HAVE_VALUE :\n                if (!hasNextValue()) {\n                    return _throwNoSuchElement();\n                }\n                break;\n            case com.fasterxml.jackson.databind.MappingIterator.STATE_HAS_VALUE :\n                break;\n        }\n        int nextState = com.fasterxml.jackson.databind.MappingIterator.STATE_NEED_RESYNC;\n        try {\n            T value;\n            if (_updatedValue == null) {\n                value = _deserializer.deserialize(_parser, _context);\n            } else {\n                _deserializer.deserialize(_parser, _context, _updatedValue);\n                value = _updatedValue;\n            }\n            nextState = com.fasterxml.jackson.databind.MappingIterator.STATE_MAY_HAVE_VALUE;\n            return value;\n        } finally {\n            _state = nextState;\n            _parser.clearCurrentToken();\n        }\n    }\n\n    public java.util.List<T> readAll() throws java.io.IOException {\n        return readAll(new java.util.ArrayList<T>());\n    }\n\n    public <L extends java.util.List<? super T>> L readAll(L resultList) throws java.io.IOException {\n        while (hasNextValue()) {\n            resultList.add(nextValue());\n        } \n        return resultList;\n    }\n\n    public <C extends java.util.Collection<? super T>> C readAll(C results) throws java.io.IOException {\n        while (hasNextValue()) {\n            results.add(nextValue());\n        } \n        return results;\n    }\n\n    public com.fasterxml.jackson.core.JsonParser getParser() {\n        return _parser;\n    }\n\n    public com.fasterxml.jackson.core.FormatSchema getParserSchema() {\n        return _parser.getSchema();\n    }\n\n    public com.fasterxml.jackson.core.JsonLocation getCurrentLocation() {\n        return _parser.getCurrentLocation();\n    }\n\n    protected void _resync() throws java.io.IOException {\n        final com.fasterxml.jackson.core.JsonParser p = _parser;\n        if (p.getParsingContext() == _seqContext) {\n            return;\n        }\n        while (true) {\n            com.fasterxml.jackson.core.JsonToken t = p.nextToken();\n            if ((t == com.fasterxml.jackson.core.JsonToken.END_ARRAY) || (t == com.fasterxml.jackson.core.JsonToken.END_OBJECT)) {\n                if (p.getParsingContext() == _seqContext) {\n                    p.clearCurrentToken();\n                    return;\n                }\n            } else if ((t == com.fasterxml.jackson.core.JsonToken.START_ARRAY) || (t == com.fasterxml.jackson.core.JsonToken.START_OBJECT)) {\n                p.skipChildren();\n            } else if (t == null) {\n                return;\n            }\n        } \n    }\n\n    protected <R> R _throwNoSuchElement() {\n        throw new java.util.NoSuchElementException();\n    }\n\n    protected <R> R _handleMappingException(com.fasterxml.jackson.databind.JsonMappingException e) {\n        throw new com.fasterxml.jackson.databind.RuntimeJsonMappingException(e.getMessage(), e);\n    }\n\n    protected <R> R _handleIOException(java.io.IOException e) {\n        throw new java.lang.RuntimeException(e.getMessage(), e);\n    }\n}",
            "src_parent_type": "Class",
            "src_type": "Method"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "true",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Method",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "if (_parser == null) {\n    return false;\n}",
            "src_parent": "{\n    if (_parser == null) {\n        return false;\n    }\n    if (!_hasNextChecked) {\n        com.fasterxml.jackson.core.JsonToken t = _parser.getCurrentToken();\n        _hasNextChecked = true;\n        if (t == null) {\n            t = _parser.nextToken();\n            if ((t == null) || (t == com.fasterxml.jackson.core.JsonToken.END_ARRAY)) {\n                com.fasterxml.jackson.core.JsonParser jp = _parser;\n                _parser = null;\n                if (_closeParser) {\n                    jp.close();\n                }\n                return false;\n            }\n        }\n    }\n    return true;\n}",
            "src_parent_type": "Block",
            "src_type": "If"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "true",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Method",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "if (!_hasNextChecked) {\n    com.fasterxml.jackson.core.JsonToken t = _parser.getCurrentToken();\n    _hasNextChecked = true;\n    if (t == null) {\n        t = _parser.nextToken();\n        if ((t == null) || (t == com.fasterxml.jackson.core.JsonToken.END_ARRAY)) {\n            com.fasterxml.jackson.core.JsonParser jp = _parser;\n            _parser = null;\n            if (_closeParser) {\n                jp.close();\n            }\n            return false;\n        }\n    }\n}",
            "src_parent": "{\n    if (_parser == null) {\n        return false;\n    }\n    if (!_hasNextChecked) {\n        com.fasterxml.jackson.core.JsonToken t = _parser.getCurrentToken();\n        _hasNextChecked = true;\n        if (t == null) {\n            t = _parser.nextToken();\n            if ((t == null) || (t == com.fasterxml.jackson.core.JsonToken.END_ARRAY)) {\n                com.fasterxml.jackson.core.JsonParser jp = _parser;\n                _parser = null;\n                if (_closeParser) {\n                    jp.close();\n                }\n                return false;\n            }\n        }\n    }\n    return true;\n}",
            "src_parent_type": "Block",
            "src_type": "If"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Method",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "if (!_hasNextChecked) {\n    if (!hasNextValue()) {\n        return _throwNoSuchElement();\n    }\n}",
            "src_parent": "{\n    if (!_hasNextChecked) {\n        if (!hasNextValue()) {\n            return _throwNoSuchElement();\n        }\n    }\n    if (_parser == null) {\n        return _throwNoSuchElement();\n    }\n    _hasNextChecked = false;\n    try {\n        T value;\n        if (_updatedValue == null) {\n            value = _deserializer.deserialize(_parser, _context);\n        } else {\n            _deserializer.deserialize(_parser, _context, _updatedValue);\n            value = _updatedValue;\n        }\n        return value;\n    } finally {\n        _parser.clearCurrentToken();\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "If"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Method",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "if (_parser == null) {\n    return _throwNoSuchElement();\n}",
            "src_parent": "{\n    if (!_hasNextChecked) {\n        if (!hasNextValue()) {\n            return _throwNoSuchElement();\n        }\n    }\n    if (_parser == null) {\n        return _throwNoSuchElement();\n    }\n    _hasNextChecked = false;\n    try {\n        T value;\n        if (_updatedValue == null) {\n            value = _deserializer.deserialize(_parser, _context);\n        } else {\n            _deserializer.deserialize(_parser, _context, _updatedValue);\n            value = _updatedValue;\n        }\n        return value;\n    } finally {\n        _parser.clearCurrentToken();\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "If"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Method",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "_hasNextChecked = false",
            "src_parent": "{\n    if (!_hasNextChecked) {\n        if (!hasNextValue()) {\n            return _throwNoSuchElement();\n        }\n    }\n    if (_parser == null) {\n        return _throwNoSuchElement();\n    }\n    _hasNextChecked = false;\n    try {\n        T value;\n        if (_updatedValue == null) {\n            value = _deserializer.deserialize(_parser, _context);\n        } else {\n            _deserializer.deserialize(_parser, _context, _updatedValue);\n            value = _updatedValue;\n        }\n        return value;\n    } finally {\n        _parser.clearCurrentToken();\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "Assignment"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "Assignment",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "Assignment",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Constructor",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "(managedParser && (p != null)) && p.isExpectedStartArrayToken()",
            "src_parent": "if ((managedParser && (p != null)) && p.isExpectedStartArrayToken()) {\n    p.clearCurrentToken();\n}",
            "src_parent_type": "If",
            "src_type": "BinaryOperator"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "Assignment",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "com.fasterxml.jackson.core.JsonParser jp = _parser",
            "src_parent": "{\n    com.fasterxml.jackson.core.JsonParser jp = _parser;\n    _parser = null;\n    if (_closeParser) {\n        jp.close();\n    }\n    return false;\n}",
            "src_parent_type": "Block",
            "src_type": "LocalVariable"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "Assignment",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "null",
            "src_parent": "_parser = null",
            "src_parent_type": "Assignment",
            "src_type": "Literal"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Return",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "Assignment",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "jp",
            "src_parent": "jp.close()",
            "src_parent_type": "Invocation",
            "src_type": "VariableRead"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "if (_parser != null) {\n    _parser.close();\n}",
            "dst_parent": "{\n    if (_parser != null) {\n        _parser.close();\n    }\n}",
            "dst_parent_type": "Block",
            "dst_type": "If",
            "operator": "MOV",
            "src": "if (_parser != null) {\n    _parser.close();\n}",
            "src_parent": "{\n    _state = com.fasterxml.jackson.databind.MappingIterator.STATE_CLOSED;\n    if (_parser != null) {\n        _parser.close();\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "If"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Return",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Switch",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "return true",
            "dst_parent": "{\n    if (_parser == null) {\n        return false;\n    }\n    if (!_hasNextChecked) {\n        com.fasterxml.jackson.core.JsonToken t = _parser.getCurrentToken();\n        _hasNextChecked = true;\n        if (t == null) {\n            t = _parser.nextToken();\n            if ((t == null) || (t == com.fasterxml.jackson.core.JsonToken.END_ARRAY)) {\n                com.fasterxml.jackson.core.JsonParser jp = _parser;\n                _parser = null;\n                if (_closeParser) {\n                    jp.close();\n                }\n                return false;\n            }\n        }\n    }\n    return true;\n}",
            "dst_parent_type": "Block",
            "dst_type": "Return",
            "operator": "MOV",
            "src": "return true",
            "src_parent": "case com.fasterxml.jackson.databind.MappingIterator.STATE_MAY_HAVE_VALUE :\n    com.fasterxml.jackson.core.JsonToken t = _parser.getCurrentToken();\n    if (t == null) {\n        t = _parser.nextToken();\n        if ((t == null) || (t == com.fasterxml.jackson.core.JsonToken.END_ARRAY)) {\n            _state = com.fasterxml.jackson.databind.MappingIterator.STATE_CLOSED;\n            if (_closeParser && (_parser != null)) {\n                _parser.close();\n            }\n            return false;\n        }\n    }\n    _state = com.fasterxml.jackson.databind.MappingIterator.STATE_HAS_VALUE;\n    return true;",
            "src_parent_type": "Case",
            "src_type": "Return"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Assignment",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "Assignment",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "{\n    p.clearCurrentToken();\n}",
            "dst_parent": "if ((managedParser && (p != null)) && p.isExpectedStartArrayToken()) {\n    p.clearCurrentToken();\n}",
            "dst_parent_type": "If",
            "dst_type": "Block",
            "operator": "MOV",
            "src": "{\n    p.clearCurrentToken();\n}",
            "src_parent": "if (managedParser && p.isExpectedStartArrayToken()) {\n    p.clearCurrentToken();\n} else {\n    com.fasterxml.jackson.core.JsonToken t = p.getCurrentToken();\n    if ((t == com.fasterxml.jackson.core.JsonToken.START_OBJECT) || (t == com.fasterxml.jackson.core.JsonToken.START_ARRAY)) {\n        sctxt = sctxt.getParent();\n    }\n}",
            "src_parent_type": "If",
            "src_type": "Block"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Return",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "Assignment",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "_parser == null",
            "dst_parent": "if (_parser == null) {\n    return _throwNoSuchElement();\n}",
            "dst_parent_type": "If",
            "dst_type": "BinaryOperator",
            "operator": "MOV",
            "src": "(_parser != null)",
            "src_parent": "_closeParser && (_parser != null)",
            "src_parent_type": "BinaryOperator",
            "src_type": "BinaryOperator"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Assignment",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "Assignment",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "p.isExpectedStartArrayToken()",
            "dst_parent": "(managedParser && (p != null)) && p.isExpectedStartArrayToken()",
            "dst_parent_type": "BinaryOperator",
            "dst_type": "Invocation",
            "operator": "MOV",
            "src": "p.isExpectedStartArrayToken()",
            "src_parent": "managedParser && p.isExpectedStartArrayToken()",
            "src_parent_type": "BinaryOperator",
            "src_type": "Invocation"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "true",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Invocation",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "_parser",
            "dst_parent": "_parser == null",
            "dst_parent_type": "BinaryOperator",
            "dst_type": "FieldRead",
            "operator": "MOV",
            "src": "_parser",
            "src_parent": "_parser.close()",
            "src_parent_type": "Invocation",
            "src_type": "FieldRead"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Return",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Switch",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "return false",
            "dst_parent": "{\n    return false;\n}",
            "dst_parent_type": "Block",
            "dst_type": "Return",
            "operator": "MOV",
            "src": "return false",
            "src_parent": "case com.fasterxml.jackson.databind.MappingIterator.STATE_CLOSED :\n    return false;",
            "src_parent_type": "Case",
            "src_type": "Return"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Return",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Switch",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "com.fasterxml.jackson.core.JsonToken t = _parser.getCurrentToken()",
            "dst_parent": "{\n    com.fasterxml.jackson.core.JsonToken t = _parser.getCurrentToken();\n    _hasNextChecked = true;\n    if (t == null) {\n        t = _parser.nextToken();\n        if ((t == null) || (t == com.fasterxml.jackson.core.JsonToken.END_ARRAY)) {\n            com.fasterxml.jackson.core.JsonParser jp = _parser;\n            _parser = null;\n            if (_closeParser) {\n                jp.close();\n            }\n            return false;\n        }\n    }\n}",
            "dst_parent_type": "Block",
            "dst_type": "LocalVariable",
            "operator": "MOV",
            "src": "com.fasterxml.jackson.core.JsonToken t = _parser.getCurrentToken()",
            "src_parent": "case com.fasterxml.jackson.databind.MappingIterator.STATE_MAY_HAVE_VALUE :\n    com.fasterxml.jackson.core.JsonToken t = _parser.getCurrentToken();\n    if (t == null) {\n        t = _parser.nextToken();\n        if ((t == null) || (t == com.fasterxml.jackson.core.JsonToken.END_ARRAY)) {\n            _state = com.fasterxml.jackson.databind.MappingIterator.STATE_CLOSED;\n            if (_closeParser && (_parser != null)) {\n                _parser.close();\n            }\n            return false;\n        }\n    }\n    _state = com.fasterxml.jackson.databind.MappingIterator.STATE_HAS_VALUE;\n    return true;",
            "src_parent_type": "Case",
            "src_type": "LocalVariable"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "Try",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Switch",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "if (!hasNextValue()) {\n    return _throwNoSuchElement();\n}",
            "dst_parent": "{\n    if (!hasNextValue()) {\n        return _throwNoSuchElement();\n    }\n}",
            "dst_parent_type": "Block",
            "dst_type": "If",
            "operator": "MOV",
            "src": "if (!hasNextValue()) {\n    return _throwNoSuchElement();\n}",
            "src_parent": "case com.fasterxml.jackson.databind.MappingIterator.STATE_MAY_HAVE_VALUE :\n    if (!hasNextValue()) {\n        return _throwNoSuchElement();\n    }\n    break;",
            "src_parent_type": "Case",
            "src_type": "If"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "Try",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Switch",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "return _throwNoSuchElement()",
            "dst_parent": "{\n    return _throwNoSuchElement();\n}",
            "dst_parent_type": "Block",
            "dst_type": "Return",
            "operator": "MOV",
            "src": "return _throwNoSuchElement()",
            "src_parent": "case com.fasterxml.jackson.databind.MappingIterator.STATE_CLOSED :\n    return _throwNoSuchElement();",
            "src_parent_type": "Case",
            "src_type": "Return"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Return",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Switch",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "com.fasterxml.jackson.databind.MappingIterator",
            "dst_parent": "",
            "dst_parent_type": "ThisAccess",
            "dst_type": "TypeAccess",
            "operator": "MOV",
            "src": "com.fasterxml.jackson.databind.MappingIterator",
            "src_parent": "",
            "src_parent_type": "ThisAccess",
            "src_type": "TypeAccess"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Assignment",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "Return",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Case",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "t == null",
            "dst_parent": "if (t == null) {\n    t = _parser.nextToken();\n    if ((t == null) || (t == com.fasterxml.jackson.core.JsonToken.END_ARRAY)) {\n        com.fasterxml.jackson.core.JsonParser jp = _parser;\n        _parser = null;\n        if (_closeParser) {\n            jp.close();\n        }\n        return false;\n    }\n}",
            "dst_parent_type": "If",
            "dst_type": "BinaryOperator",
            "operator": "MOV",
            "src": "t == null",
            "src_parent": "if (t == null) {\n    t = _parser.nextToken();\n    if ((t == null) || (t == com.fasterxml.jackson.core.JsonToken.END_ARRAY)) {\n        _state = com.fasterxml.jackson.databind.MappingIterator.STATE_CLOSED;\n        if (_closeParser && (_parser != null)) {\n            _parser.close();\n        }\n        return false;\n    }\n}",
            "src_parent_type": "If",
            "src_type": "BinaryOperator"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Assignment",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "Return",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Case",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "{\n    t = _parser.nextToken();\n    if ((t == null) || (t == com.fasterxml.jackson.core.JsonToken.END_ARRAY)) {\n        com.fasterxml.jackson.core.JsonParser jp = _parser;\n        _parser = null;\n        if (_closeParser) {\n            jp.close();\n        }\n        return false;\n    }\n}",
            "dst_parent": "if (t == null) {\n    t = _parser.nextToken();\n    if ((t == null) || (t == com.fasterxml.jackson.core.JsonToken.END_ARRAY)) {\n        com.fasterxml.jackson.core.JsonParser jp = _parser;\n        _parser = null;\n        if (_closeParser) {\n            jp.close();\n        }\n        return false;\n    }\n}",
            "dst_parent_type": "If",
            "dst_type": "Block",
            "operator": "MOV",
            "src": "{\n    t = _parser.nextToken();\n    if ((t == null) || (t == com.fasterxml.jackson.core.JsonToken.END_ARRAY)) {\n        _state = com.fasterxml.jackson.databind.MappingIterator.STATE_CLOSED;\n        if (_closeParser && (_parser != null)) {\n            _parser.close();\n        }\n        return false;\n    }\n}",
            "src_parent": "if (t == null) {\n    t = _parser.nextToken();\n    if ((t == null) || (t == com.fasterxml.jackson.core.JsonToken.END_ARRAY)) {\n        _state = com.fasterxml.jackson.databind.MappingIterator.STATE_CLOSED;\n        if (_closeParser && (_parser != null)) {\n            _parser.close();\n        }\n        return false;\n    }\n}",
            "src_parent_type": "If",
            "src_type": "Block"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "Try",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Switch",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "com.fasterxml.jackson.databind.MappingIterator",
            "dst_parent": "",
            "dst_parent_type": "ThisAccess",
            "dst_type": "TypeAccess",
            "operator": "MOV",
            "src": "com.fasterxml.jackson.databind.MappingIterator",
            "src_parent": "",
            "src_parent_type": "ThisAccess",
            "src_type": "TypeAccess"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "Assignment",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "Assignment",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Constructor",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "p",
            "dst_parent": "(p != null)",
            "dst_parent_type": "BinaryOperator",
            "dst_type": "VariableRead",
            "operator": "MOV",
            "src": "p",
            "src_parent": "p == null",
            "src_parent_type": "BinaryOperator",
            "src_type": "VariableRead"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "Assignment",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "Assignment",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Constructor",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "(p != null)",
            "dst_parent_type": "BinaryOperator",
            "dst_type": "Literal",
            "operator": "MOV",
            "src": "null",
            "src_parent": "p == null",
            "src_parent_type": "BinaryOperator",
            "src_type": "Literal"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "While",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "LocalVariable",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "_parser",
            "dst_parent": "com.fasterxml.jackson.core.JsonParser jp = _parser",
            "dst_parent_type": "LocalVariable",
            "dst_type": "FieldRead",
            "operator": "MOV",
            "src": "_parser",
            "src_parent": "final com.fasterxml.jackson.core.JsonParser p = _parser",
            "src_parent_type": "LocalVariable",
            "src_type": "FieldRead"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Return",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "Assignment",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "_closeParser",
            "dst_parent": "if (_closeParser) {\n    jp.close();\n}",
            "dst_parent_type": "If",
            "dst_type": "FieldRead",
            "operator": "MOV",
            "src": "_closeParser",
            "src_parent": "_closeParser && (_parser != null)",
            "src_parent_type": "BinaryOperator",
            "src_type": "FieldRead"
          }
        }
      ],
      "file_name": "MappingIterator"
    }
  ],
  "id": "JacksonDatabind_18"
}