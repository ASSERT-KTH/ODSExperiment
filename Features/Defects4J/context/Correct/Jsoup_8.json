{
  "files": [
    {
      "features": [
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Invocation",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "getOutputSettings()",
            "src_parent": "new org.jsoup.nodes.Node.OuterHtmlVisitor(accum, getOutputSettings())",
            "src_parent_type": "ConstructorCall",
            "src_type": "Invocation"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Method",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "private Document.OutputSettings getOutputSettings() {\n    return ownerDocument() != null ? ownerDocument().outputSettings() : new org.jsoup.nodes.Document(\"\").outputSettings();\n}",
            "src_parent": "public abstract class Node {\n    org.jsoup.nodes.Node parentNode;\n\n    java.util.List<org.jsoup.nodes.Node> childNodes;\n\n    org.jsoup.nodes.Attributes attributes;\n\n    java.lang.String baseUri;\n\n    int siblingIndex;\n\n    protected Node(java.lang.String baseUri, org.jsoup.nodes.Attributes attributes) {\n        org.jsoup.helper.Validate.notNull(baseUri);\n        org.jsoup.helper.Validate.notNull(attributes);\n        childNodes = new java.util.ArrayList<org.jsoup.nodes.Node>(4);\n        this.baseUri = baseUri.trim();\n        this.attributes = attributes;\n    }\n\n    protected Node(java.lang.String baseUri) {\n        this(baseUri, new org.jsoup.nodes.Attributes());\n    }\n\n    protected Node() {\n        childNodes = java.util.Collections.EMPTY_LIST;\n        attributes = null;\n    }\n\n    public abstract java.lang.String nodeName();\n\n    public java.lang.String attr(java.lang.String attributeKey) {\n        org.jsoup.helper.Validate.notNull(attributeKey);\n        if (hasAttr(attributeKey)) {\n            return attributes.get(attributeKey);\n        } else if (attributeKey.toLowerCase().startsWith(\"abs:\")) {\n            return absUrl(attributeKey.substring(\"abs:\".length()));\n        } else {\n            return \"\";\n        }\n    }\n\n    public org.jsoup.nodes.Attributes attributes() {\n        return attributes;\n    }\n\n    public org.jsoup.nodes.Node attr(java.lang.String attributeKey, java.lang.String attributeValue) {\n        attributes.put(attributeKey, attributeValue);\n        return this;\n    }\n\n    public boolean hasAttr(java.lang.String attributeKey) {\n        org.jsoup.helper.Validate.notNull(attributeKey);\n        return attributes.hasKey(attributeKey);\n    }\n\n    public org.jsoup.nodes.Node removeAttr(java.lang.String attributeKey) {\n        org.jsoup.helper.Validate.notNull(attributeKey);\n        attributes.remove(attributeKey);\n        return this;\n    }\n\n    public java.lang.String baseUri() {\n        return baseUri;\n    }\n\n    public void setBaseUri(java.lang.String baseUri) {\n        org.jsoup.helper.Validate.notNull(baseUri);\n        this.baseUri = baseUri;\n    }\n\n    public java.lang.String absUrl(java.lang.String attributeKey) {\n        org.jsoup.helper.Validate.notEmpty(attributeKey);\n        java.lang.String relUrl = attr(attributeKey);\n        if (!hasAttr(attributeKey)) {\n            return \"\";\n        } else {\n            java.net.URL base;\n            try {\n                try {\n                    base = new java.net.URL(baseUri);\n                } catch (java.net.MalformedURLException e) {\n                    java.net.URL abs = new java.net.URL(relUrl);\n                    return abs.toExternalForm();\n                }\n                java.net.URL abs = new java.net.URL(base, relUrl);\n                return abs.toExternalForm();\n            } catch (java.net.MalformedURLException e) {\n                return \"\";\n            }\n        }\n    }\n\n    public org.jsoup.nodes.Node childNode(int index) {\n        return childNodes.get(index);\n    }\n\n    public java.util.List<org.jsoup.nodes.Node> childNodes() {\n        return java.util.Collections.unmodifiableList(childNodes);\n    }\n\n    protected org.jsoup.nodes.Node[] childNodesAsArray() {\n        return childNodes.toArray(new org.jsoup.nodes.Node[childNodes().size()]);\n    }\n\n    public org.jsoup.nodes.Node parent() {\n        return parentNode;\n    }\n\n    public org.jsoup.nodes.Document ownerDocument() {\n        if (this instanceof org.jsoup.nodes.Document) {\n            return ((org.jsoup.nodes.Document) (this));\n        } else if (parentNode == null) {\n            return null;\n        } else {\n            return parentNode.ownerDocument();\n        }\n    }\n\n    public void remove() {\n        org.jsoup.helper.Validate.notNull(parentNode);\n        parentNode.removeChild(this);\n    }\n\n    public void replaceWith(org.jsoup.nodes.Node in) {\n        org.jsoup.helper.Validate.notNull(in);\n        org.jsoup.helper.Validate.notNull(parentNode);\n        parentNode.replaceChild(this, in);\n    }\n\n    protected void setParentNode(org.jsoup.nodes.Node parentNode) {\n        if (this.parentNode != null) {\n            this.parentNode.removeChild(this);\n        }\n        this.parentNode = parentNode;\n    }\n\n    protected void replaceChild(org.jsoup.nodes.Node out, org.jsoup.nodes.Node in) {\n        org.jsoup.helper.Validate.isTrue(out.parentNode == this);\n        org.jsoup.helper.Validate.notNull(in);\n        if (in.parentNode != null) {\n            in.parentNode.removeChild(in);\n        }\n        java.lang.Integer index = out.siblingIndex();\n        childNodes.set(index, in);\n        in.parentNode = this;\n        in.setSiblingIndex(index);\n        out.parentNode = null;\n    }\n\n    protected void removeChild(org.jsoup.nodes.Node out) {\n        org.jsoup.helper.Validate.isTrue(out.parentNode == this);\n        int index = out.siblingIndex();\n        childNodes.remove(index);\n        reindexChildren();\n        out.parentNode = null;\n    }\n\n    protected void addChildren(org.jsoup.nodes.Node... children) {\n        for (org.jsoup.nodes.Node child : children) {\n            reparentChild(child);\n            childNodes.add(child);\n            child.setSiblingIndex(childNodes.size() - 1);\n        }\n    }\n\n    protected void addChildren(int index, org.jsoup.nodes.Node... children) {\n        org.jsoup.helper.Validate.noNullElements(children);\n        for (int i = children.length - 1; i >= 0; i--) {\n            org.jsoup.nodes.Node in = children[i];\n            reparentChild(in);\n            childNodes.add(index, in);\n        }\n        reindexChildren();\n    }\n\n    private void reparentChild(org.jsoup.nodes.Node child) {\n        if (child.parentNode != null) {\n            child.parentNode.removeChild(child);\n        }\n        child.setParentNode(this);\n    }\n\n    private void reindexChildren() {\n        for (int i = 0; i < childNodes.size(); i++) {\n            childNodes.get(i).setSiblingIndex(i);\n        }\n    }\n\n    public java.util.List<org.jsoup.nodes.Node> siblingNodes() {\n        return parent().childNodes();\n    }\n\n    public org.jsoup.nodes.Node nextSibling() {\n        if (parentNode == null) {\n            return null;\n        }\n        java.util.List<org.jsoup.nodes.Node> siblings = parentNode.childNodes;\n        java.lang.Integer index = siblingIndex();\n        org.jsoup.helper.Validate.notNull(index);\n        if (siblings.size() > (index + 1)) {\n            return siblings.get(index + 1);\n        } else {\n            return null;\n        }\n    }\n\n    public org.jsoup.nodes.Node previousSibling() {\n        java.util.List<org.jsoup.nodes.Node> siblings = parentNode.childNodes;\n        java.lang.Integer index = siblingIndex();\n        org.jsoup.helper.Validate.notNull(index);\n        if (index > 0) {\n            return siblings.get(index - 1);\n        } else {\n            return null;\n        }\n    }\n\n    public java.lang.Integer siblingIndex() {\n        return siblingIndex;\n    }\n\n    protected void setSiblingIndex(int siblingIndex) {\n        this.siblingIndex = siblingIndex;\n    }\n\n    public java.lang.String outerHtml() {\n        java.lang.StringBuilder accum = new java.lang.StringBuilder(32 * 1024);\n        outerHtml(accum);\n        return accum.toString();\n    }\n\n    protected void outerHtml(java.lang.StringBuilder accum) {\n        new org.jsoup.select.NodeTraversor(new org.jsoup.nodes.Node.OuterHtmlVisitor(accum, getOutputSettings())).traverse(this);\n    }\n\n    private Document.OutputSettings getOutputSettings() {\n        return ownerDocument() != null ? ownerDocument().outputSettings() : new org.jsoup.nodes.Document(\"\").outputSettings();\n    }\n\n    abstract void outerHtmlHead(java.lang.StringBuilder accum, int depth, org.jsoup.nodes.Document.OutputSettings out);\n\n    abstract void outerHtmlTail(java.lang.StringBuilder accum, int depth, org.jsoup.nodes.Document.OutputSettings out);\n\n    public java.lang.String toString() {\n        return outerHtml();\n    }\n\n    protected void indent(java.lang.StringBuilder accum, int depth, org.jsoup.nodes.Document.OutputSettings out) {\n        accum.append(\"\\n\").append(org.jsoup.helper.StringUtil.padding(depth * out.indentAmount()));\n    }\n\n    @java.lang.Override\n    public boolean equals(java.lang.Object o) {\n        if (this == o) {\n            return true;\n        }\n        return false;\n    }\n\n    @java.lang.Override\n    public int hashCode() {\n        int result = (parentNode != null) ? parentNode.hashCode() : 0;\n        result = (31 * result) + (attributes != null ? attributes.hashCode() : 0);\n        return result;\n    }\n\n    private static class OuterHtmlVisitor implements org.jsoup.select.NodeVisitor {\n        private java.lang.StringBuilder accum;\n\n        private Document.OutputSettings out;\n\n        OuterHtmlVisitor(java.lang.StringBuilder accum, org.jsoup.nodes.Document.OutputSettings out) {\n            this.accum = accum;\n            this.out = out;\n        }\n\n        public void head(org.jsoup.nodes.Node node, int depth) {\n            node.outerHtmlHead(accum, depth, out);\n        }\n\n        public void tail(org.jsoup.nodes.Node node, int depth) {\n            if (!node.nodeName().equals(\"#text\")) {\n                node.outerHtmlTail(accum, depth, out);\n            }\n        }\n    }\n}",
            "src_parent_type": "Class",
            "src_type": "Method"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Return",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "ownerDocument().outputSettings()",
            "dst_parent": "new org.jsoup.nodes.Node.OuterHtmlVisitor(accum, ownerDocument().outputSettings())",
            "dst_parent_type": "ConstructorCall",
            "dst_type": "Invocation",
            "operator": "MOV",
            "src": "ownerDocument().outputSettings()",
            "src_parent": "ownerDocument() != null ? ownerDocument().outputSettings() : new org.jsoup.nodes.Document(\"\").outputSettings()",
            "src_parent_type": "Conditional",
            "src_type": "Invocation"
          }
        }
      ],
      "file_name": "Node"
    }
  ],
  "id": "Jsoup_8"
}