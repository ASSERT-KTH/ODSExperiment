{
  "files": [
    {
      "features": [
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "if (!_class.isAssignableFrom(subclass)) {\n    return new com.fasterxml.jackson.databind.type.SimpleType(subclass, _bindings, this, _superInterfaces, _valueHandler, _typeHandler, _asStatic);\n}",
            "src_parent": "{\n    if (_class == subclass) {\n        return this;\n    }\n    if (!_class.isAssignableFrom(subclass)) {\n        return new com.fasterxml.jackson.databind.type.SimpleType(subclass, _bindings, this, _superInterfaces, _valueHandler, _typeHandler, _asStatic);\n    }\n    java.lang.Class<?> next = subclass.getSuperclass();\n    if (next == _class) {\n        return new com.fasterxml.jackson.databind.type.SimpleType(subclass, _bindings, this, _superInterfaces, _valueHandler, _typeHandler, _asStatic);\n    }\n    if ((next != null) && _class.isAssignableFrom(next)) {\n        com.fasterxml.jackson.databind.JavaType superb = _narrow(next);\n        return new com.fasterxml.jackson.databind.type.SimpleType(subclass, _bindings, superb, null, _valueHandler, _typeHandler, _asStatic);\n    }\n    java.lang.Class<?>[] nextI = subclass.getInterfaces();\n    for (java.lang.Class<?> iface : nextI) {\n        if (iface == _class) {\n            return new com.fasterxml.jackson.databind.type.SimpleType(subclass, _bindings, null, new com.fasterxml.jackson.databind.JavaType[]{ this }, _valueHandler, _typeHandler, _asStatic);\n        }\n        if (_class.isAssignableFrom(iface)) {\n            com.fasterxml.jackson.databind.JavaType superb = _narrow(iface);\n            return new com.fasterxml.jackson.databind.type.SimpleType(subclass, _bindings, null, new com.fasterxml.jackson.databind.JavaType[]{ superb }, _valueHandler, _typeHandler, _asStatic);\n        }\n    }\n    throw new java.lang.IllegalArgumentException(((\"Internal error: Can not resolve sub-type for Class \" + subclass.getName()) + \" to \") + _class.getName());\n}",
            "src_parent_type": "Block",
            "src_type": "If"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "LocalVariable",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "java.lang.Class<?> next = subclass.getSuperclass()",
            "src_parent": "{\n    if (_class == subclass) {\n        return this;\n    }\n    if (!_class.isAssignableFrom(subclass)) {\n        return new com.fasterxml.jackson.databind.type.SimpleType(subclass, _bindings, this, _superInterfaces, _valueHandler, _typeHandler, _asStatic);\n    }\n    java.lang.Class<?> next = subclass.getSuperclass();\n    if (next == _class) {\n        return new com.fasterxml.jackson.databind.type.SimpleType(subclass, _bindings, this, _superInterfaces, _valueHandler, _typeHandler, _asStatic);\n    }\n    if ((next != null) && _class.isAssignableFrom(next)) {\n        com.fasterxml.jackson.databind.JavaType superb = _narrow(next);\n        return new com.fasterxml.jackson.databind.type.SimpleType(subclass, _bindings, superb, null, _valueHandler, _typeHandler, _asStatic);\n    }\n    java.lang.Class<?>[] nextI = subclass.getInterfaces();\n    for (java.lang.Class<?> iface : nextI) {\n        if (iface == _class) {\n            return new com.fasterxml.jackson.databind.type.SimpleType(subclass, _bindings, null, new com.fasterxml.jackson.databind.JavaType[]{ this }, _valueHandler, _typeHandler, _asStatic);\n        }\n        if (_class.isAssignableFrom(iface)) {\n            com.fasterxml.jackson.databind.JavaType superb = _narrow(iface);\n            return new com.fasterxml.jackson.databind.type.SimpleType(subclass, _bindings, null, new com.fasterxml.jackson.databind.JavaType[]{ superb }, _valueHandler, _typeHandler, _asStatic);\n        }\n    }\n    throw new java.lang.IllegalArgumentException(((\"Internal error: Can not resolve sub-type for Class \" + subclass.getName()) + \" to \") + _class.getName());\n}",
            "src_parent_type": "Block",
            "src_type": "LocalVariable"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "ForEach",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "If",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "if (next == _class) {\n    return new com.fasterxml.jackson.databind.type.SimpleType(subclass, _bindings, this, _superInterfaces, _valueHandler, _typeHandler, _asStatic);\n}",
            "src_parent": "{\n    if (_class == subclass) {\n        return this;\n    }\n    if (!_class.isAssignableFrom(subclass)) {\n        return new com.fasterxml.jackson.databind.type.SimpleType(subclass, _bindings, this, _superInterfaces, _valueHandler, _typeHandler, _asStatic);\n    }\n    java.lang.Class<?> next = subclass.getSuperclass();\n    if (next == _class) {\n        return new com.fasterxml.jackson.databind.type.SimpleType(subclass, _bindings, this, _superInterfaces, _valueHandler, _typeHandler, _asStatic);\n    }\n    if ((next != null) && _class.isAssignableFrom(next)) {\n        com.fasterxml.jackson.databind.JavaType superb = _narrow(next);\n        return new com.fasterxml.jackson.databind.type.SimpleType(subclass, _bindings, superb, null, _valueHandler, _typeHandler, _asStatic);\n    }\n    java.lang.Class<?>[] nextI = subclass.getInterfaces();\n    for (java.lang.Class<?> iface : nextI) {\n        if (iface == _class) {\n            return new com.fasterxml.jackson.databind.type.SimpleType(subclass, _bindings, null, new com.fasterxml.jackson.databind.JavaType[]{ this }, _valueHandler, _typeHandler, _asStatic);\n        }\n        if (_class.isAssignableFrom(iface)) {\n            com.fasterxml.jackson.databind.JavaType superb = _narrow(iface);\n            return new com.fasterxml.jackson.databind.type.SimpleType(subclass, _bindings, null, new com.fasterxml.jackson.databind.JavaType[]{ superb }, _valueHandler, _typeHandler, _asStatic);\n        }\n    }\n    throw new java.lang.IllegalArgumentException(((\"Internal error: Can not resolve sub-type for Class \" + subclass.getName()) + \" to \") + _class.getName());\n}",
            "src_parent_type": "Block",
            "src_type": "If"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "ForEach",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "Throw",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "If",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "if ((next != null) && _class.isAssignableFrom(next)) {\n    com.fasterxml.jackson.databind.JavaType superb = _narrow(next);\n    return new com.fasterxml.jackson.databind.type.SimpleType(subclass, _bindings, superb, null, _valueHandler, _typeHandler, _asStatic);\n}",
            "src_parent": "{\n    if (_class == subclass) {\n        return this;\n    }\n    if (!_class.isAssignableFrom(subclass)) {\n        return new com.fasterxml.jackson.databind.type.SimpleType(subclass, _bindings, this, _superInterfaces, _valueHandler, _typeHandler, _asStatic);\n    }\n    java.lang.Class<?> next = subclass.getSuperclass();\n    if (next == _class) {\n        return new com.fasterxml.jackson.databind.type.SimpleType(subclass, _bindings, this, _superInterfaces, _valueHandler, _typeHandler, _asStatic);\n    }\n    if ((next != null) && _class.isAssignableFrom(next)) {\n        com.fasterxml.jackson.databind.JavaType superb = _narrow(next);\n        return new com.fasterxml.jackson.databind.type.SimpleType(subclass, _bindings, superb, null, _valueHandler, _typeHandler, _asStatic);\n    }\n    java.lang.Class<?>[] nextI = subclass.getInterfaces();\n    for (java.lang.Class<?> iface : nextI) {\n        if (iface == _class) {\n            return new com.fasterxml.jackson.databind.type.SimpleType(subclass, _bindings, null, new com.fasterxml.jackson.databind.JavaType[]{ this }, _valueHandler, _typeHandler, _asStatic);\n        }\n        if (_class.isAssignableFrom(iface)) {\n            com.fasterxml.jackson.databind.JavaType superb = _narrow(iface);\n            return new com.fasterxml.jackson.databind.type.SimpleType(subclass, _bindings, null, new com.fasterxml.jackson.databind.JavaType[]{ superb }, _valueHandler, _typeHandler, _asStatic);\n        }\n    }\n    throw new java.lang.IllegalArgumentException(((\"Internal error: Can not resolve sub-type for Class \" + subclass.getName()) + \" to \") + _class.getName());\n}",
            "src_parent_type": "Block",
            "src_type": "If"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "ForEach",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "Throw",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "LocalVariable",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "LocalVariable",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "java.lang.Class<?>[] nextI = subclass.getInterfaces()",
            "src_parent": "{\n    if (_class == subclass) {\n        return this;\n    }\n    if (!_class.isAssignableFrom(subclass)) {\n        return new com.fasterxml.jackson.databind.type.SimpleType(subclass, _bindings, this, _superInterfaces, _valueHandler, _typeHandler, _asStatic);\n    }\n    java.lang.Class<?> next = subclass.getSuperclass();\n    if (next == _class) {\n        return new com.fasterxml.jackson.databind.type.SimpleType(subclass, _bindings, this, _superInterfaces, _valueHandler, _typeHandler, _asStatic);\n    }\n    if ((next != null) && _class.isAssignableFrom(next)) {\n        com.fasterxml.jackson.databind.JavaType superb = _narrow(next);\n        return new com.fasterxml.jackson.databind.type.SimpleType(subclass, _bindings, superb, null, _valueHandler, _typeHandler, _asStatic);\n    }\n    java.lang.Class<?>[] nextI = subclass.getInterfaces();\n    for (java.lang.Class<?> iface : nextI) {\n        if (iface == _class) {\n            return new com.fasterxml.jackson.databind.type.SimpleType(subclass, _bindings, null, new com.fasterxml.jackson.databind.JavaType[]{ this }, _valueHandler, _typeHandler, _asStatic);\n        }\n        if (_class.isAssignableFrom(iface)) {\n            com.fasterxml.jackson.databind.JavaType superb = _narrow(iface);\n            return new com.fasterxml.jackson.databind.type.SimpleType(subclass, _bindings, null, new com.fasterxml.jackson.databind.JavaType[]{ superb }, _valueHandler, _typeHandler, _asStatic);\n        }\n    }\n    throw new java.lang.IllegalArgumentException(((\"Internal error: Can not resolve sub-type for Class \" + subclass.getName()) + \" to \") + _class.getName());\n}",
            "src_parent_type": "Block",
            "src_type": "LocalVariable"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Throw",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "If",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "ForEach",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "for (java.lang.Class<?> iface : nextI) {\n    if (iface == _class) {\n        return new com.fasterxml.jackson.databind.type.SimpleType(subclass, _bindings, null, new com.fasterxml.jackson.databind.JavaType[]{ this }, _valueHandler, _typeHandler, _asStatic);\n    }\n    if (_class.isAssignableFrom(iface)) {\n        com.fasterxml.jackson.databind.JavaType superb = _narrow(iface);\n        return new com.fasterxml.jackson.databind.type.SimpleType(subclass, _bindings, null, new com.fasterxml.jackson.databind.JavaType[]{ superb }, _valueHandler, _typeHandler, _asStatic);\n    }\n}",
            "src_parent": "{\n    if (_class == subclass) {\n        return this;\n    }\n    if (!_class.isAssignableFrom(subclass)) {\n        return new com.fasterxml.jackson.databind.type.SimpleType(subclass, _bindings, this, _superInterfaces, _valueHandler, _typeHandler, _asStatic);\n    }\n    java.lang.Class<?> next = subclass.getSuperclass();\n    if (next == _class) {\n        return new com.fasterxml.jackson.databind.type.SimpleType(subclass, _bindings, this, _superInterfaces, _valueHandler, _typeHandler, _asStatic);\n    }\n    if ((next != null) && _class.isAssignableFrom(next)) {\n        com.fasterxml.jackson.databind.JavaType superb = _narrow(next);\n        return new com.fasterxml.jackson.databind.type.SimpleType(subclass, _bindings, superb, null, _valueHandler, _typeHandler, _asStatic);\n    }\n    java.lang.Class<?>[] nextI = subclass.getInterfaces();\n    for (java.lang.Class<?> iface : nextI) {\n        if (iface == _class) {\n            return new com.fasterxml.jackson.databind.type.SimpleType(subclass, _bindings, null, new com.fasterxml.jackson.databind.JavaType[]{ this }, _valueHandler, _typeHandler, _asStatic);\n        }\n        if (_class.isAssignableFrom(iface)) {\n            com.fasterxml.jackson.databind.JavaType superb = _narrow(iface);\n            return new com.fasterxml.jackson.databind.type.SimpleType(subclass, _bindings, null, new com.fasterxml.jackson.databind.JavaType[]{ superb }, _valueHandler, _typeHandler, _asStatic);\n        }\n    }\n    throw new java.lang.IllegalArgumentException(((\"Internal error: Can not resolve sub-type for Class \" + subclass.getName()) + \" to \") + _class.getName());\n}",
            "src_parent_type": "Block",
            "src_type": "ForEach"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "ForEach",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "If",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Throw",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "throw new java.lang.IllegalArgumentException(((\"Internal error: Can not resolve sub-type for Class \" + subclass.getName()) + \" to \") + _class.getName())",
            "src_parent": "{\n    if (_class == subclass) {\n        return this;\n    }\n    if (!_class.isAssignableFrom(subclass)) {\n        return new com.fasterxml.jackson.databind.type.SimpleType(subclass, _bindings, this, _superInterfaces, _valueHandler, _typeHandler, _asStatic);\n    }\n    java.lang.Class<?> next = subclass.getSuperclass();\n    if (next == _class) {\n        return new com.fasterxml.jackson.databind.type.SimpleType(subclass, _bindings, this, _superInterfaces, _valueHandler, _typeHandler, _asStatic);\n    }\n    if ((next != null) && _class.isAssignableFrom(next)) {\n        com.fasterxml.jackson.databind.JavaType superb = _narrow(next);\n        return new com.fasterxml.jackson.databind.type.SimpleType(subclass, _bindings, superb, null, _valueHandler, _typeHandler, _asStatic);\n    }\n    java.lang.Class<?>[] nextI = subclass.getInterfaces();\n    for (java.lang.Class<?> iface : nextI) {\n        if (iface == _class) {\n            return new com.fasterxml.jackson.databind.type.SimpleType(subclass, _bindings, null, new com.fasterxml.jackson.databind.JavaType[]{ this }, _valueHandler, _typeHandler, _asStatic);\n        }\n        if (_class.isAssignableFrom(iface)) {\n            com.fasterxml.jackson.databind.JavaType superb = _narrow(iface);\n            return new com.fasterxml.jackson.databind.type.SimpleType(subclass, _bindings, null, new com.fasterxml.jackson.databind.JavaType[]{ superb }, _valueHandler, _typeHandler, _asStatic);\n        }\n    }\n    throw new java.lang.IllegalArgumentException(((\"Internal error: Can not resolve sub-type for Class \" + subclass.getName()) + \" to \") + _class.getName());\n}",
            "src_parent_type": "Block",
            "src_type": "Throw"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "return new com.fasterxml.jackson.databind.type.SimpleType(subclass, _bindings, this, _superInterfaces, _valueHandler, _typeHandler, _asStatic)",
            "dst_parent": "{\n    if (_class == subclass) {\n        return this;\n    }\n    return new com.fasterxml.jackson.databind.type.SimpleType(subclass, _bindings, this, _superInterfaces, _valueHandler, _typeHandler, _asStatic);\n}",
            "dst_parent_type": "Block",
            "dst_type": "Return",
            "operator": "MOV",
            "src": "return new com.fasterxml.jackson.databind.type.SimpleType(subclass, _bindings, this, _superInterfaces, _valueHandler, _typeHandler, _asStatic)",
            "src_parent": "{\n    return new com.fasterxml.jackson.databind.type.SimpleType(subclass, _bindings, this, _superInterfaces, _valueHandler, _typeHandler, _asStatic);\n}",
            "src_parent_type": "Block",
            "src_type": "Return"
          }
        }
      ],
      "file_name": "SimpleType"
    }
  ],
  "id": "JacksonDatabind_44"
}