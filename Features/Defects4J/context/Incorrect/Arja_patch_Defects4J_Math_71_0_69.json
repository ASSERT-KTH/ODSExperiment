{
  "files": [
    {
      "features": [
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "OperatorAssignment",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "For",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "if (pendingEvent && (java.lang.Math.abs(t1 - pendingEventTime) <= convergence)) {\n    return false;\n}",
            "src_parent": "{\n    if ((ga * gb) > 0) {\n        final double epsilon = (forward ? 0.25 : -0.25) * convergence;\n        for (int k = 0; (k < 4) && ((ga * gb) > 0); ++k) {\n            ta += epsilon;\n            interpolator.setInterpolatedTime(ta);\n            ga = handler.g(ta, interpolator.getInterpolatedState());\n        }\n        if ((ga * gb) > 0) {\n            throw org.apache.commons.math.MathRuntimeException.createInternalError(null);\n        }\n    }\n    if (pendingEvent && (java.lang.Math.abs(t1 - pendingEventTime) <= convergence)) {\n        return false;\n    }\n    increasing = gb >= ga;\n    final org.apache.commons.math.analysis.UnivariateRealFunction f = new org.apache.commons.math.analysis.UnivariateRealFunction() {\n        public double value(final double t) throws org.apache.commons.math.FunctionEvaluationException {\n            try {\n                interpolator.setInterpolatedTime(t);\n                return handler.g(t, interpolator.getInterpolatedState());\n            } catch (org.apache.commons.math.ode.DerivativeException e) {\n                throw new org.apache.commons.math.FunctionEvaluationException(e, t);\n            } catch (org.apache.commons.math.ode.events.EventException e) {\n                throw new org.apache.commons.math.FunctionEvaluationException(e, t);\n            }\n        }\n    };\n    final org.apache.commons.math.analysis.solvers.BrentSolver solver = new org.apache.commons.math.analysis.solvers.BrentSolver();\n    solver.setAbsoluteAccuracy(convergence);\n    solver.setMaximalIterationCount(maxIterationCount);\n    final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);\n    if ((java.lang.Math.abs(root - ta) <= convergence) && (java.lang.Math.abs(root - previousEventTime) <= convergence)) {\n        ta = tb;\n        ga = gb;\n    } else if (java.lang.Double.isNaN(previousEventTime) || (java.lang.Math.abs(previousEventTime - root) > convergence)) {\n        pendingEventTime = root;\n        if (pendingEvent && (java.lang.Math.abs(t1 - pendingEventTime) <= convergence)) {\n            return false;\n        }\n        pendingEvent = true;\n        return true;\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "If"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Return",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "Assignment",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "Assignment",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "If",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Assignment",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "g0 = java.lang.Double.NaN",
            "src_parent": "{\n    if (!pendingEvent) {\n        return false;\n    }\n    if (nextAction == EventHandler.RESET_STATE) {\n        handler.resetState(t, y);\n    }\n    pendingEvent = false;\n    pendingEventTime = java.lang.Double.NaN;\n    g0 = java.lang.Double.NaN;\n    return (nextAction == EventHandler.RESET_STATE) || (nextAction == EventHandler.RESET_DERIVATIVES);\n}",
            "src_parent_type": "Block",
            "src_type": "Assignment"
          }
        }
      ],
      "file_name": "EventState"
    }
  ],
  "id": "Arja_patch_Defects4J_Math_71_0_69"
}