{
  "files": [
    {
      "features": [
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "LocalVariable",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Assignment",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "exp = null",
            "src_parent": "{\n    if (str == null) {\n        return null;\n    }\n    if (org.apache.commons.lang3.StringUtils.isBlank(str)) {\n        throw new java.lang.NumberFormatException(\"A blank string is not a valid number\");\n    }\n    if (str.startsWith(\"--\")) {\n        return null;\n    }\n    if (str.startsWith(\"0x\") || str.startsWith(\"-0x\")) {\n        return org.apache.commons.lang3.math.NumberUtils.createInteger(str);\n    }\n    char lastChar = str.charAt(str.length() - 1);\n    java.lang.String mant;\n    java.lang.String dec;\n    java.lang.String exp;\n    int decPos = str.indexOf('.');\n    exp = null;\n    int expPos = (str.indexOf('e') + str.indexOf('E')) + 1;\n    if (decPos > (-1)) {\n        if (expPos > (-1)) {\n            if ((expPos < decPos) || (expPos > str.length())) {\n                throw new java.lang.NumberFormatException(str + \" is not a valid number.\");\n            }\n            dec = str.substring(decPos + 1, expPos);\n        } else {\n            dec = str.substring(decPos + 1);\n        }\n        mant = str.substring(0, decPos);\n    } else {\n        if (expPos > (-1)) {\n            if (expPos > str.length()) {\n                throw new java.lang.NumberFormatException(str + \" is not a valid number.\");\n            }\n            mant = str.substring(0, expPos);\n        } else {\n            mant = str;\n        }\n        dec = null;\n    }\n    if ((!java.lang.Character.isDigit(lastChar)) && (lastChar != '.')) {\n        if ((expPos > (-1)) && (expPos < (str.length() - 1))) {\n            exp = str.substring(expPos + 1, str.length() - 1);\n        } else {\n            exp = null;\n        }\n        java.lang.String numeric = str.substring(0, str.length() - 1);\n        boolean allZeros = org.apache.commons.lang3.math.NumberUtils.isAllZeros(mant) && org.apache.commons.lang3.math.NumberUtils.isAllZeros(exp);\n        switch (lastChar) {\n            case 'l' :\n            case 'L' :\n                if (((dec == null) && (exp == null)) && (((numeric.charAt(0) == '-') && org.apache.commons.lang3.math.NumberUtils.isDigits(numeric.substring(1))) || org.apache.commons.lang3.math.NumberUtils.isDigits(numeric))) {\n                    try {\n                        return org.apache.commons.lang3.math.NumberUtils.createLong(numeric);\n                    } catch (java.lang.NumberFormatException nfe) {\n                    }\n                    return org.apache.commons.lang3.math.NumberUtils.createBigInteger(numeric);\n                }\n                throw new java.lang.NumberFormatException(str + \" is not a valid number.\");\n            case 'f' :\n            case 'F' :\n                try {\n                    java.lang.Float f = org.apache.commons.lang3.math.NumberUtils.createFloat(numeric);\n                    if (!(f.isInfinite() || ((f.floatValue() == 0.0F) && (!allZeros)))) {\n                        return f;\n                    }\n                } catch (java.lang.NumberFormatException nfe) {\n                }\n            case 'd' :\n            case 'D' :\n                try {\n                    java.lang.Double d = org.apache.commons.lang3.math.NumberUtils.createDouble(numeric);\n                    if (!(d.isInfinite() || ((d.floatValue() == 0.0) && (!allZeros)))) {\n                        return d;\n                    }\n                } catch (java.lang.NumberFormatException nfe) {\n                }\n                try {\n                    return org.apache.commons.lang3.math.NumberUtils.createBigDecimal(numeric);\n                } catch (java.lang.NumberFormatException e) {\n                }\n            default :\n                return java.lang.Integer.decode(str);\n        }\n    } else {\n        if ((expPos > (-1)) && (expPos < (str.length() - 1))) {\n            exp = str.substring(expPos + 1, str.length());\n        } else {\n            exp = null;\n        }\n        if ((dec == null) && (exp == null)) {\n            try {\n                return org.apache.commons.lang3.math.NumberUtils.createInteger(str);\n            } catch (java.lang.NumberFormatException nfe) {\n            }\n            try {\n                return org.apache.commons.lang3.math.NumberUtils.createLong(str);\n            } catch (java.lang.NumberFormatException nfe) {\n            }\n            return org.apache.commons.lang3.math.NumberUtils.createBigInteger(str);\n        } else {\n            boolean allZeros = org.apache.commons.lang3.math.NumberUtils.isAllZeros(mant) && org.apache.commons.lang3.math.NumberUtils.isAllZeros(exp);\n            try {\n                java.lang.Float f = org.apache.commons.lang3.math.NumberUtils.createFloat(str);\n                if (!(f.isInfinite() || ((f.floatValue() == 0.0F) && (!allZeros)))) {\n                    return f;\n                }\n            } catch (java.lang.NumberFormatException nfe) {\n            }\n            try {\n                java.lang.Double d = org.apache.commons.lang3.math.NumberUtils.createDouble(str);\n                if (!(d.isInfinite() || ((d.doubleValue() == 0.0) && (!allZeros)))) {\n                    return d;\n                }\n            } catch (java.lang.NumberFormatException nfe) {\n            }\n            return org.apache.commons.lang3.math.NumberUtils.createBigDecimal(str);\n        }\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "Assignment"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "If",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Switch",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "return java.lang.Integer.decode(str)",
            "src_parent": "default :\n    return java.lang.Integer.decode(str);",
            "src_parent_type": "Case",
            "src_type": "Return"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "If",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Switch",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "throw new java.lang.NumberFormatException(str + \" is not a valid number.\")",
            "src_parent": "default :\n    throw new java.lang.NumberFormatException(str + \" is not a valid number.\");",
            "src_parent_type": "Case",
            "src_type": "Throw"
          }
        }
      ],
      "file_name": "NumberUtils"
    }
  ],
  "id": "Arja_patch_Defects4J_Lang_16_0_56"
}