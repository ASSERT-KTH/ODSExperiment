{
  "files": [
    {
      "features": [
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "final int p = main.length",
            "src_parent": "{\n    tType = -5;\n    double s = 0.25 * dMin;\n    final int p = main.length;\n    final int np = nn - (2 * pingPong);\n    double b1 = work[np - 2];\n    double b2 = work[np - 6];\n    int regularPos = 0;\n    final double gam = dN2;\n    if ((work[np - 8] > b2) || (work[np - 4] > b1)) {\n        return;\n    }\n    double a2 = (work[np - 8] / b2) * (1 + (work[np - 4] / b1));\n    b2 = java.lang.Math.sqrt(cnst3 * b2);\n    if (a2 < cnst1) {\n        tau = (gam * (1 - java.lang.Math.sqrt(a2))) / (1 + a2);\n    } else {\n        tau = s;\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "LocalVariable"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "int regularPos = 0",
            "src_parent": "{\n    tType = -5;\n    double s = 0.25 * dMin;\n    final int p = main.length;\n    final int np = nn - (2 * pingPong);\n    double b1 = work[np - 2];\n    double b2 = work[np - 6];\n    int regularPos = 0;\n    final double gam = dN2;\n    if ((work[np - 8] > b2) || (work[np - 4] > b1)) {\n        return;\n    }\n    double a2 = (work[np - 8] / b2) * (1 + (work[np - 4] / b1));\n    b2 = java.lang.Math.sqrt(cnst3 * b2);\n    if (a2 < cnst1) {\n        tau = (gam * (1 - java.lang.Math.sqrt(a2))) / (1 + a2);\n    } else {\n        tau = s;\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "LocalVariable"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "LocalVariable",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Switch",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "break",
            "src_parent": "case 1 :\n    break;",
            "src_parent_type": "Case",
            "src_type": "Break"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "LocalVariable",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Switch",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "if ((dMin1 == dN1) && (dMin2 == dN2)) {\n    tType = -7;\n    double s = 0.333 * dMin1;\n    if (work[nn - 5] > work[nn - 7]) {\n        return;\n    }\n    double b1 = work[nn - 5] / work[nn - 7];\n    double b2 = b1;\n    if (b2 != 0.0) {\n        for (int i4 = ((4 * end) - 10) + pingPong; i4 >= (((4 * start) + 2) + pingPong); i4 -= 4) {\n            final double oldB1 = b1;\n            if (work[i4] > work[i4 - 2]) {\n                return;\n            }\n            b1 = b1 * (work[i4] / work[i4 - 2]);\n            b2 = b2 + b1;\n            if ((100 * java.lang.Math.max(b1, oldB1)) < b2) {\n                break;\n            }\n        }\n    }\n    b2 = java.lang.Math.sqrt(cnst3 * b2);\n    final double a2 = dMin1 / (1 + (b2 * b2));\n    final double gap2 = (0.5 * dMin2) - a2;\n    if ((gap2 > 0.0) && (gap2 > (b2 * a2))) {\n        tau = java.lang.Math.max(s, a2 * (1 - (((cnst2 * a2) * (b2 / gap2)) * b2)));\n    } else {\n        tau = java.lang.Math.max(s, a2 * (1 - (cnst2 * b2)));\n        tType = -8;\n    }\n} else {\n    tau = 0.25 * dMin1;\n    if (dMin1 == dN1) {\n        tau = 0.5 * dMin1;\n    }\n    tType = -9;\n}",
            "src_parent": "case 1 :\n    if ((dMin1 == dN1) && (dMin2 == dN2)) {\n        tType = -7;\n        double s = 0.333 * dMin1;\n        if (work[nn - 5] > work[nn - 7]) {\n            return;\n        }\n        double b1 = work[nn - 5] / work[nn - 7];\n        double b2 = b1;\n        if (b2 != 0.0) {\n            for (int i4 = ((4 * end) - 10) + pingPong; i4 >= (((4 * start) + 2) + pingPong); i4 -= 4) {\n                final double oldB1 = b1;\n                if (work[i4] > work[i4 - 2]) {\n                    return;\n                }\n                b1 = b1 * (work[i4] / work[i4 - 2]);\n                b2 = b2 + b1;\n                if ((100 * java.lang.Math.max(b1, oldB1)) < b2) {\n                    break;\n                }\n            }\n        }\n        b2 = java.lang.Math.sqrt(cnst3 * b2);\n        final double a2 = dMin1 / (1 + (b2 * b2));\n        final double gap2 = (0.5 * dMin2) - a2;\n        if ((gap2 > 0.0) && (gap2 > (b2 * a2))) {\n            tau = java.lang.Math.max(s, a2 * (1 - (((cnst2 * a2) * (b2 / gap2)) * b2)));\n        } else {\n            tau = java.lang.Math.max(s, a2 * (1 - (cnst2 * b2)));\n            tType = -8;\n        }\n    } else {\n        tau = 0.25 * dMin1;\n        if (dMin1 == dN1) {\n            tau = 0.5 * dMin1;\n        }\n        tType = -9;\n    }\n    break;",
            "src_parent_type": "Case",
            "src_type": "If"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "LocalVariable",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Switch",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "break",
            "src_parent": "case 1 :\n    if ((dMin1 == dN1) && (dMin2 == dN2)) {\n        tType = -7;\n        double s = 0.333 * dMin1;\n        if (work[nn - 5] > work[nn - 7]) {\n            return;\n        }\n        double b1 = work[nn - 5] / work[nn - 7];\n        double b2 = b1;\n        if (b2 != 0.0) {\n            for (int i4 = ((4 * end) - 10) + pingPong; i4 >= (((4 * start) + 2) + pingPong); i4 -= 4) {\n                final double oldB1 = b1;\n                if (work[i4] > work[i4 - 2]) {\n                    return;\n                }\n                b1 = b1 * (work[i4] / work[i4 - 2]);\n                b2 = b2 + b1;\n                if ((100 * java.lang.Math.max(b1, oldB1)) < b2) {\n                    break;\n                }\n            }\n        }\n        b2 = java.lang.Math.sqrt(cnst3 * b2);\n        final double a2 = dMin1 / (1 + (b2 * b2));\n        final double gap2 = (0.5 * dMin2) - a2;\n        if ((gap2 > 0.0) && (gap2 > (b2 * a2))) {\n            tau = java.lang.Math.max(s, a2 * (1 - (((cnst2 * a2) * (b2 / gap2)) * b2)));\n        } else {\n            tau = java.lang.Math.max(s, a2 * (1 - (cnst2 * b2)));\n            tType = -8;\n        }\n    } else {\n        tau = 0.25 * dMin1;\n        if (dMin1 == dN1) {\n            tau = 0.5 * dMin1;\n        }\n        tType = -9;\n    }\n    break;",
            "src_parent_type": "Case",
            "src_type": "Break"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Break",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Case",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "{\n    tType = -5;\n    double s = 0.25 * dMin;\n    final int np = nn - (2 * pingPong);\n    double b1 = work[np - 2];\n    double b2 = work[np - 6];\n    final double gam = dN2;\n    if ((work[np - 8] > b2) || (work[np - 4] > b1)) {\n        return;\n    }\n    double a2 = (work[np - 8] / b2) * (1 + (work[np - 4] / b1));\n    if ((end - start) > 2) {\n        b2 = work[nn - 13] / work[nn - 15];\n        a2 = a2 + b2;\n        for (int i4 = nn - 17; i4 >= (((4 * start) + 2) + pingPong); i4 -= 4) {\n            if (b2 == 0.0) {\n                break;\n            }\n            b1 = b2;\n            if (work[i4] > work[i4 - 2]) {\n                return;\n            }\n            b2 = b2 * (work[i4] / work[i4 - 2]);\n            a2 = a2 + b2;\n            if (((100 * java.lang.Math.max(b2, b1)) < a2) || (cnst1 < a2)) {\n                break;\n            }\n        }\n        a2 = cnst3 * a2;\n    }\n    if (a2 < cnst1) {\n        tau = (gam * (1 - java.lang.Math.sqrt(a2))) / (1 + a2);\n    } else {\n        tau = s;\n    }\n}",
            "src_parent": "if (dMin == dN2) {\n    tType = -5;\n    double s = 0.25 * dMin;\n    final int np = nn - (2 * pingPong);\n    double b1 = work[np - 2];\n    double b2 = work[np - 6];\n    final double gam = dN2;\n    if ((work[np - 8] > b2) || (work[np - 4] > b1)) {\n        return;\n    }\n    double a2 = (work[np - 8] / b2) * (1 + (work[np - 4] / b1));\n    if ((end - start) > 2) {\n        b2 = work[nn - 13] / work[nn - 15];\n        a2 = a2 + b2;\n        for (int i4 = nn - 17; i4 >= (((4 * start) + 2) + pingPong); i4 -= 4) {\n            if (b2 == 0.0) {\n                break;\n            }\n            b1 = b2;\n            if (work[i4] > work[i4 - 2]) {\n                return;\n            }\n            b2 = b2 * (work[i4] / work[i4 - 2]);\n            a2 = a2 + b2;\n            if (((100 * java.lang.Math.max(b2, b1)) < a2) || (cnst1 < a2)) {\n                break;\n            }\n        }\n        a2 = cnst3 * a2;\n    }\n    if (a2 < cnst1) {\n        tau = (gam * (1 - java.lang.Math.sqrt(a2))) / (1 + a2);\n    } else {\n        tau = s;\n    }\n} else {\n    if (tType == (-6)) {\n        g += 0.333 * (1 - g);\n    } else if (tType == (-18)) {\n        g = 0.25 * 0.333;\n    } else {\n        g = 0.25;\n    }\n    tau = g * dMin;\n    tType = -6;\n}",
            "src_parent_type": "If",
            "src_type": "Block"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "LocalVariable",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "if (work[i4] > work[i4 - 2]) {\n    return;\n}",
            "src_parent": "{\n    if (b2 == 0.0) {\n        break;\n    }\n    b1 = b2;\n    if (work[i4] > work[i4 - 2]) {\n        return;\n    }\n    b2 = b2 * (work[i4] / work[i4 - 2]);\n    a2 = a2 + b2;\n    if (((100 * java.lang.Math.max(b2, b1)) < a2) || (cnst1 < a2)) {\n        break;\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "If"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "LocalVariable",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "b2 = b2 * (work[i4] / work[i4 - 2])",
            "src_parent": "{\n    if (b2 == 0.0) {\n        break;\n    }\n    b1 = b2;\n    if (work[i4] > work[i4 - 2]) {\n        return;\n    }\n    b2 = b2 * (work[i4] / work[i4 - 2]);\n    a2 = a2 + b2;\n    if (((100 * java.lang.Math.max(b2, b1)) < a2) || (cnst1 < a2)) {\n        break;\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "Assignment"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "LocalVariable",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "a2 = a2 + b2",
            "src_parent": "{\n    if (b2 == 0.0) {\n        break;\n    }\n    b1 = b2;\n    if (work[i4] > work[i4 - 2]) {\n        return;\n    }\n    b2 = b2 * (work[i4] / work[i4 - 2]);\n    a2 = a2 + b2;\n    if (((100 * java.lang.Math.max(b2, b1)) < a2) || (cnst1 < a2)) {\n        break;\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "Assignment"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "b2 = work[nn - 13] / work[nn - 15]",
            "src_parent": "{\n    b2 = work[nn - 13] / work[nn - 15];\n    a2 = a2 + b2;\n    for (int i4 = nn - 17; i4 >= (((4 * start) + 2) + pingPong); i4 -= 4) {\n        if (b2 == 0.0) {\n            break;\n        }\n        b1 = b2;\n        if (work[i4] > work[i4 - 2]) {\n            return;\n        }\n        b2 = b2 * (work[i4] / work[i4 - 2]);\n        a2 = a2 + b2;\n        if (((100 * java.lang.Math.max(b2, b1)) < a2) || (cnst1 < a2)) {\n            break;\n        }\n    }\n    a2 = cnst3 * a2;\n}",
            "src_parent_type": "Block",
            "src_type": "Assignment"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "a2 = a2 + b2",
            "src_parent": "{\n    b2 = work[nn - 13] / work[nn - 15];\n    a2 = a2 + b2;\n    for (int i4 = nn - 17; i4 >= (((4 * start) + 2) + pingPong); i4 -= 4) {\n        if (b2 == 0.0) {\n            break;\n        }\n        b1 = b2;\n        if (work[i4] > work[i4 - 2]) {\n            return;\n        }\n        b2 = b2 * (work[i4] / work[i4 - 2]);\n        a2 = a2 + b2;\n        if (((100 * java.lang.Math.max(b2, b1)) < a2) || (cnst1 < a2)) {\n            break;\n        }\n    }\n    a2 = cnst3 * a2;\n}",
            "src_parent_type": "Block",
            "src_type": "Assignment"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "for (int i4 = nn - 17; i4 >= (((4 * start) + 2) + pingPong); i4 -= 4) {\n    if (b2 == 0.0) {\n        break;\n    }\n    b1 = b2;\n    if (work[i4] > work[i4 - 2]) {\n        return;\n    }\n    b2 = b2 * (work[i4] / work[i4 - 2]);\n    a2 = a2 + b2;\n    if (((100 * java.lang.Math.max(b2, b1)) < a2) || (cnst1 < a2)) {\n        break;\n    }\n}",
            "src_parent": "{\n    b2 = work[nn - 13] / work[nn - 15];\n    a2 = a2 + b2;\n    for (int i4 = nn - 17; i4 >= (((4 * start) + 2) + pingPong); i4 -= 4) {\n        if (b2 == 0.0) {\n            break;\n        }\n        b1 = b2;\n        if (work[i4] > work[i4 - 2]) {\n            return;\n        }\n        b2 = b2 * (work[i4] / work[i4 - 2]);\n        a2 = a2 + b2;\n        if (((100 * java.lang.Math.max(b2, b1)) < a2) || (cnst1 < a2)) {\n            break;\n        }\n    }\n    a2 = cnst3 * a2;\n}",
            "src_parent_type": "Block",
            "src_type": "For"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "a2 = cnst3 * a2",
            "src_parent": "{\n    b2 = work[nn - 13] / work[nn - 15];\n    a2 = a2 + b2;\n    for (int i4 = nn - 17; i4 >= (((4 * start) + 2) + pingPong); i4 -= 4) {\n        if (b2 == 0.0) {\n            break;\n        }\n        b1 = b2;\n        if (work[i4] > work[i4 - 2]) {\n            return;\n        }\n        b2 = b2 * (work[i4] / work[i4 - 2]);\n        a2 = a2 + b2;\n        if (((100 * java.lang.Math.max(b2, b1)) < a2) || (cnst1 < a2)) {\n            break;\n        }\n    }\n    a2 = cnst3 * a2;\n}",
            "src_parent_type": "Block",
            "src_type": "Assignment"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "b2 = java.lang.Math.sqrt(cnst3 * b2)",
            "dst_parent": "{\n    tType = -7;\n    double s = 0.333 * dMin1;\n    if (work[nn - 5] > work[nn - 7]) {\n        return;\n    }\n    double b1 = work[nn - 5] / work[nn - 7];\n    double b2 = b1;\n    if (b2 != 0.0) {\n        for (int i4 = ((4 * end) - 10) + pingPong; i4 >= (((4 * start) + 2) + pingPong); i4 -= 4) {\n            final double oldB1 = b1;\n            if (work[i4] > work[i4 - 2]) {\n                return;\n            }\n            b1 = b1 * (work[i4] / work[i4 - 2]);\n            b2 = b2 + b1;\n            if ((100 * java.lang.Math.max(b1, oldB1)) < b2) {\n                break;\n            }\n        }\n    }\n    b2 = java.lang.Math.sqrt(cnst3 * b2);\n    final double a2 = dMin1 / (1 + (b2 * b2));\n    final double gap2 = (0.5 * dMin2) - a2;\n    if ((gap2 > 0.0) && (gap2 > (b2 * a2))) {\n        tau = java.lang.Math.max(s, a2 * (1 - (((cnst2 * a2) * (b2 / gap2)) * b2)));\n    } else {\n        tau = java.lang.Math.max(s, a2 * (1 - (cnst2 * b2)));\n        tType = -8;\n    }\n}",
            "dst_parent_type": "Block",
            "dst_type": "Assignment",
            "operator": "MOV",
            "src": "b2 = java.lang.Math.sqrt(cnst3 * b2)",
            "src_parent": "{\n    tType = -5;\n    double s = 0.25 * dMin;\n    final int p = main.length;\n    final int np = nn - (2 * pingPong);\n    double b1 = work[np - 2];\n    double b2 = work[np - 6];\n    int regularPos = 0;\n    final double gam = dN2;\n    if ((work[np - 8] > b2) || (work[np - 4] > b1)) {\n        return;\n    }\n    double a2 = (work[np - 8] / b2) * (1 + (work[np - 4] / b1));\n    b2 = java.lang.Math.sqrt(cnst3 * b2);\n    if (a2 < cnst1) {\n        tau = (gam * (1 - java.lang.Math.sqrt(a2))) / (1 + a2);\n    } else {\n        tau = s;\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "Assignment"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Assignment",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "Assignment",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "LocalVariable",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "For",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "a2 = a2 + b2",
            "dst_parent": "{\n    tType = -4;\n    double s = 0.25 * dMin;\n    double gam;\n    int np;\n    if (dMin == dN) {\n        gam = dN;\n        a2 = 0.0;\n        if (work[nn - 5] > work[nn - 7]) {\n            return;\n        }\n        b2 = work[nn - 5] / work[nn - 7];\n        np = nn - 9;\n    } else {\n        np = nn - (2 * pingPong);\n        b2 = work[np - 2];\n        gam = dN1;\n        if (work[np - 4] > work[np - 2]) {\n            return;\n        }\n        a2 = work[np - 4] / work[np - 2];\n        if (work[nn - 9] > work[nn - 11]) {\n            return;\n        }\n        b2 = work[nn - 9] / work[nn - 11];\n        np = nn - 13;\n    }\n    a2 = a2 + b2;\n    for (int i4 = np; i4 >= (((4 * start) + 2) + pingPong); i4 -= 4) {\n        if (b2 == 0.0) {\n            break;\n        }\n        b1 = b2;\n        if (work[i4] > work[i4 - 2]) {\n            return;\n        }\n        b2 = b2 * (work[i4] / work[i4 - 2]);\n        a2 = a2 + b2;\n        if (((100 * java.lang.Math.max(b2, b1)) < a2) || (cnst1 < a2)) {\n            break;\n        }\n    }\n    a2 = cnst3 * a2;\n    if (a2 < cnst1) {\n        s = (gam * (1 - java.lang.Math.sqrt(a2))) / (1 + a2);\n    }\n    tau = s;\n}",
            "dst_parent_type": "Block",
            "dst_type": "Assignment",
            "operator": "MOV",
            "src": "a2 = a2 + b2",
            "src_parent": "{\n    if (b2 == 0.0) {\n        break;\n    }\n    b1 = b2;\n    a2 = a2 + b2;\n    if (((100 * java.lang.Math.max(b2, b1)) < a2) || (cnst1 < a2)) {\n        break;\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "Assignment"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "tType = -5",
            "dst_parent": "{\n    tType = -5;\n    double s = 0.25 * dMin;\n    final int np = nn - (2 * pingPong);\n    double b1 = work[np - 2];\n    double b2 = work[np - 6];\n    final double gam = dN2;\n    if ((work[np - 8] > b2) || (work[np - 4] > b1)) {\n        return;\n    }\n    double a2 = (work[np - 8] / b2) * (1 + (work[np - 4] / b1));\n    if ((end - start) > 2) {\n        b2 = work[nn - 13] / work[nn - 15];\n        a2 = a2 + b2;\n        for (int i4 = nn - 17; i4 >= (((4 * start) + 2) + pingPong); i4 -= 4) {\n            if (b2 == 0.0) {\n                break;\n            }\n            b1 = b2;\n            if (work[i4] > work[i4 - 2]) {\n                return;\n            }\n            b2 = b2 * (work[i4] / work[i4 - 2]);\n            a2 = a2 + b2;\n            if (((100 * java.lang.Math.max(b2, b1)) < a2) || (cnst1 < a2)) {\n                break;\n            }\n        }\n        a2 = cnst3 * a2;\n    }\n    if (a2 < cnst1) {\n        tau = (gam * (1 - java.lang.Math.sqrt(a2))) / (1 + a2);\n    } else {\n        tau = s;\n    }\n}",
            "dst_parent_type": "Block",
            "dst_type": "Assignment",
            "operator": "MOV",
            "src": "tType = -5",
            "src_parent": "{\n    tType = -5;\n    double s = 0.25 * dMin;\n    final int p = main.length;\n    final int np = nn - (2 * pingPong);\n    double b1 = work[np - 2];\n    double b2 = work[np - 6];\n    int regularPos = 0;\n    final double gam = dN2;\n    if ((work[np - 8] > b2) || (work[np - 4] > b1)) {\n        return;\n    }\n    double a2 = (work[np - 8] / b2) * (1 + (work[np - 4] / b1));\n    b2 = java.lang.Math.sqrt(cnst3 * b2);\n    if (a2 < cnst1) {\n        tau = (gam * (1 - java.lang.Math.sqrt(a2))) / (1 + a2);\n    } else {\n        tau = s;\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "Assignment"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "double s = 0.25 * dMin",
            "dst_parent": "{\n    tType = -5;\n    double s = 0.25 * dMin;\n    final int np = nn - (2 * pingPong);\n    double b1 = work[np - 2];\n    double b2 = work[np - 6];\n    final double gam = dN2;\n    if ((work[np - 8] > b2) || (work[np - 4] > b1)) {\n        return;\n    }\n    double a2 = (work[np - 8] / b2) * (1 + (work[np - 4] / b1));\n    if ((end - start) > 2) {\n        b2 = work[nn - 13] / work[nn - 15];\n        a2 = a2 + b2;\n        for (int i4 = nn - 17; i4 >= (((4 * start) + 2) + pingPong); i4 -= 4) {\n            if (b2 == 0.0) {\n                break;\n            }\n            b1 = b2;\n            if (work[i4] > work[i4 - 2]) {\n                return;\n            }\n            b2 = b2 * (work[i4] / work[i4 - 2]);\n            a2 = a2 + b2;\n            if (((100 * java.lang.Math.max(b2, b1)) < a2) || (cnst1 < a2)) {\n                break;\n            }\n        }\n        a2 = cnst3 * a2;\n    }\n    if (a2 < cnst1) {\n        tau = (gam * (1 - java.lang.Math.sqrt(a2))) / (1 + a2);\n    } else {\n        tau = s;\n    }\n}",
            "dst_parent_type": "Block",
            "dst_type": "LocalVariable",
            "operator": "MOV",
            "src": "double s = 0.25 * dMin",
            "src_parent": "{\n    tType = -5;\n    double s = 0.25 * dMin;\n    final int p = main.length;\n    final int np = nn - (2 * pingPong);\n    double b1 = work[np - 2];\n    double b2 = work[np - 6];\n    int regularPos = 0;\n    final double gam = dN2;\n    if ((work[np - 8] > b2) || (work[np - 4] > b1)) {\n        return;\n    }\n    double a2 = (work[np - 8] / b2) * (1 + (work[np - 4] / b1));\n    b2 = java.lang.Math.sqrt(cnst3 * b2);\n    if (a2 < cnst1) {\n        tau = (gam * (1 - java.lang.Math.sqrt(a2))) / (1 + a2);\n    } else {\n        tau = s;\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "LocalVariable"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "final int np = nn - (2 * pingPong)",
            "dst_parent": "{\n    tType = -5;\n    double s = 0.25 * dMin;\n    final int np = nn - (2 * pingPong);\n    double b1 = work[np - 2];\n    double b2 = work[np - 6];\n    final double gam = dN2;\n    if ((work[np - 8] > b2) || (work[np - 4] > b1)) {\n        return;\n    }\n    double a2 = (work[np - 8] / b2) * (1 + (work[np - 4] / b1));\n    if ((end - start) > 2) {\n        b2 = work[nn - 13] / work[nn - 15];\n        a2 = a2 + b2;\n        for (int i4 = nn - 17; i4 >= (((4 * start) + 2) + pingPong); i4 -= 4) {\n            if (b2 == 0.0) {\n                break;\n            }\n            b1 = b2;\n            if (work[i4] > work[i4 - 2]) {\n                return;\n            }\n            b2 = b2 * (work[i4] / work[i4 - 2]);\n            a2 = a2 + b2;\n            if (((100 * java.lang.Math.max(b2, b1)) < a2) || (cnst1 < a2)) {\n                break;\n            }\n        }\n        a2 = cnst3 * a2;\n    }\n    if (a2 < cnst1) {\n        tau = (gam * (1 - java.lang.Math.sqrt(a2))) / (1 + a2);\n    } else {\n        tau = s;\n    }\n}",
            "dst_parent_type": "Block",
            "dst_type": "LocalVariable",
            "operator": "MOV",
            "src": "final int np = nn - (2 * pingPong)",
            "src_parent": "{\n    tType = -5;\n    double s = 0.25 * dMin;\n    final int p = main.length;\n    final int np = nn - (2 * pingPong);\n    double b1 = work[np - 2];\n    double b2 = work[np - 6];\n    int regularPos = 0;\n    final double gam = dN2;\n    if ((work[np - 8] > b2) || (work[np - 4] > b1)) {\n        return;\n    }\n    double a2 = (work[np - 8] / b2) * (1 + (work[np - 4] / b1));\n    b2 = java.lang.Math.sqrt(cnst3 * b2);\n    if (a2 < cnst1) {\n        tau = (gam * (1 - java.lang.Math.sqrt(a2))) / (1 + a2);\n    } else {\n        tau = s;\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "LocalVariable"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "double b1 = work[np - 2]",
            "dst_parent": "{\n    tType = -5;\n    double s = 0.25 * dMin;\n    final int np = nn - (2 * pingPong);\n    double b1 = work[np - 2];\n    double b2 = work[np - 6];\n    final double gam = dN2;\n    if ((work[np - 8] > b2) || (work[np - 4] > b1)) {\n        return;\n    }\n    double a2 = (work[np - 8] / b2) * (1 + (work[np - 4] / b1));\n    if ((end - start) > 2) {\n        b2 = work[nn - 13] / work[nn - 15];\n        a2 = a2 + b2;\n        for (int i4 = nn - 17; i4 >= (((4 * start) + 2) + pingPong); i4 -= 4) {\n            if (b2 == 0.0) {\n                break;\n            }\n            b1 = b2;\n            if (work[i4] > work[i4 - 2]) {\n                return;\n            }\n            b2 = b2 * (work[i4] / work[i4 - 2]);\n            a2 = a2 + b2;\n            if (((100 * java.lang.Math.max(b2, b1)) < a2) || (cnst1 < a2)) {\n                break;\n            }\n        }\n        a2 = cnst3 * a2;\n    }\n    if (a2 < cnst1) {\n        tau = (gam * (1 - java.lang.Math.sqrt(a2))) / (1 + a2);\n    } else {\n        tau = s;\n    }\n}",
            "dst_parent_type": "Block",
            "dst_type": "LocalVariable",
            "operator": "MOV",
            "src": "double b1 = work[np - 2]",
            "src_parent": "{\n    tType = -5;\n    double s = 0.25 * dMin;\n    final int p = main.length;\n    final int np = nn - (2 * pingPong);\n    double b1 = work[np - 2];\n    double b2 = work[np - 6];\n    int regularPos = 0;\n    final double gam = dN2;\n    if ((work[np - 8] > b2) || (work[np - 4] > b1)) {\n        return;\n    }\n    double a2 = (work[np - 8] / b2) * (1 + (work[np - 4] / b1));\n    b2 = java.lang.Math.sqrt(cnst3 * b2);\n    if (a2 < cnst1) {\n        tau = (gam * (1 - java.lang.Math.sqrt(a2))) / (1 + a2);\n    } else {\n        tau = s;\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "LocalVariable"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "double b2 = work[np - 6]",
            "dst_parent": "{\n    tType = -5;\n    double s = 0.25 * dMin;\n    final int np = nn - (2 * pingPong);\n    double b1 = work[np - 2];\n    double b2 = work[np - 6];\n    final double gam = dN2;\n    if ((work[np - 8] > b2) || (work[np - 4] > b1)) {\n        return;\n    }\n    double a2 = (work[np - 8] / b2) * (1 + (work[np - 4] / b1));\n    if ((end - start) > 2) {\n        b2 = work[nn - 13] / work[nn - 15];\n        a2 = a2 + b2;\n        for (int i4 = nn - 17; i4 >= (((4 * start) + 2) + pingPong); i4 -= 4) {\n            if (b2 == 0.0) {\n                break;\n            }\n            b1 = b2;\n            if (work[i4] > work[i4 - 2]) {\n                return;\n            }\n            b2 = b2 * (work[i4] / work[i4 - 2]);\n            a2 = a2 + b2;\n            if (((100 * java.lang.Math.max(b2, b1)) < a2) || (cnst1 < a2)) {\n                break;\n            }\n        }\n        a2 = cnst3 * a2;\n    }\n    if (a2 < cnst1) {\n        tau = (gam * (1 - java.lang.Math.sqrt(a2))) / (1 + a2);\n    } else {\n        tau = s;\n    }\n}",
            "dst_parent_type": "Block",
            "dst_type": "LocalVariable",
            "operator": "MOV",
            "src": "double b2 = work[np - 6]",
            "src_parent": "{\n    tType = -5;\n    double s = 0.25 * dMin;\n    final int p = main.length;\n    final int np = nn - (2 * pingPong);\n    double b1 = work[np - 2];\n    double b2 = work[np - 6];\n    int regularPos = 0;\n    final double gam = dN2;\n    if ((work[np - 8] > b2) || (work[np - 4] > b1)) {\n        return;\n    }\n    double a2 = (work[np - 8] / b2) * (1 + (work[np - 4] / b1));\n    b2 = java.lang.Math.sqrt(cnst3 * b2);\n    if (a2 < cnst1) {\n        tau = (gam * (1 - java.lang.Math.sqrt(a2))) / (1 + a2);\n    } else {\n        tau = s;\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "LocalVariable"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "final double gam = dN2",
            "dst_parent": "{\n    tType = -5;\n    double s = 0.25 * dMin;\n    final int np = nn - (2 * pingPong);\n    double b1 = work[np - 2];\n    double b2 = work[np - 6];\n    final double gam = dN2;\n    if ((work[np - 8] > b2) || (work[np - 4] > b1)) {\n        return;\n    }\n    double a2 = (work[np - 8] / b2) * (1 + (work[np - 4] / b1));\n    if ((end - start) > 2) {\n        b2 = work[nn - 13] / work[nn - 15];\n        a2 = a2 + b2;\n        for (int i4 = nn - 17; i4 >= (((4 * start) + 2) + pingPong); i4 -= 4) {\n            if (b2 == 0.0) {\n                break;\n            }\n            b1 = b2;\n            if (work[i4] > work[i4 - 2]) {\n                return;\n            }\n            b2 = b2 * (work[i4] / work[i4 - 2]);\n            a2 = a2 + b2;\n            if (((100 * java.lang.Math.max(b2, b1)) < a2) || (cnst1 < a2)) {\n                break;\n            }\n        }\n        a2 = cnst3 * a2;\n    }\n    if (a2 < cnst1) {\n        tau = (gam * (1 - java.lang.Math.sqrt(a2))) / (1 + a2);\n    } else {\n        tau = s;\n    }\n}",
            "dst_parent_type": "Block",
            "dst_type": "LocalVariable",
            "operator": "MOV",
            "src": "final double gam = dN2",
            "src_parent": "{\n    tType = -5;\n    double s = 0.25 * dMin;\n    final int p = main.length;\n    final int np = nn - (2 * pingPong);\n    double b1 = work[np - 2];\n    double b2 = work[np - 6];\n    int regularPos = 0;\n    final double gam = dN2;\n    if ((work[np - 8] > b2) || (work[np - 4] > b1)) {\n        return;\n    }\n    double a2 = (work[np - 8] / b2) * (1 + (work[np - 4] / b1));\n    b2 = java.lang.Math.sqrt(cnst3 * b2);\n    if (a2 < cnst1) {\n        tau = (gam * (1 - java.lang.Math.sqrt(a2))) / (1 + a2);\n    } else {\n        tau = s;\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "LocalVariable"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "if ((work[np - 8] > b2) || (work[np - 4] > b1)) {\n    return;\n}",
            "dst_parent": "{\n    tType = -5;\n    double s = 0.25 * dMin;\n    final int np = nn - (2 * pingPong);\n    double b1 = work[np - 2];\n    double b2 = work[np - 6];\n    final double gam = dN2;\n    if ((work[np - 8] > b2) || (work[np - 4] > b1)) {\n        return;\n    }\n    double a2 = (work[np - 8] / b2) * (1 + (work[np - 4] / b1));\n    if ((end - start) > 2) {\n        b2 = work[nn - 13] / work[nn - 15];\n        a2 = a2 + b2;\n        for (int i4 = nn - 17; i4 >= (((4 * start) + 2) + pingPong); i4 -= 4) {\n            if (b2 == 0.0) {\n                break;\n            }\n            b1 = b2;\n            if (work[i4] > work[i4 - 2]) {\n                return;\n            }\n            b2 = b2 * (work[i4] / work[i4 - 2]);\n            a2 = a2 + b2;\n            if (((100 * java.lang.Math.max(b2, b1)) < a2) || (cnst1 < a2)) {\n                break;\n            }\n        }\n        a2 = cnst3 * a2;\n    }\n    if (a2 < cnst1) {\n        tau = (gam * (1 - java.lang.Math.sqrt(a2))) / (1 + a2);\n    } else {\n        tau = s;\n    }\n}",
            "dst_parent_type": "Block",
            "dst_type": "If",
            "operator": "MOV",
            "src": "if ((work[np - 8] > b2) || (work[np - 4] > b1)) {\n    return;\n}",
            "src_parent": "{\n    tType = -5;\n    double s = 0.25 * dMin;\n    final int p = main.length;\n    final int np = nn - (2 * pingPong);\n    double b1 = work[np - 2];\n    double b2 = work[np - 6];\n    int regularPos = 0;\n    final double gam = dN2;\n    if ((work[np - 8] > b2) || (work[np - 4] > b1)) {\n        return;\n    }\n    double a2 = (work[np - 8] / b2) * (1 + (work[np - 4] / b1));\n    b2 = java.lang.Math.sqrt(cnst3 * b2);\n    if (a2 < cnst1) {\n        tau = (gam * (1 - java.lang.Math.sqrt(a2))) / (1 + a2);\n    } else {\n        tau = s;\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "If"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "double a2 = (work[np - 8] / b2) * (1 + (work[np - 4] / b1))",
            "dst_parent": "{\n    tType = -5;\n    double s = 0.25 * dMin;\n    final int np = nn - (2 * pingPong);\n    double b1 = work[np - 2];\n    double b2 = work[np - 6];\n    final double gam = dN2;\n    if ((work[np - 8] > b2) || (work[np - 4] > b1)) {\n        return;\n    }\n    double a2 = (work[np - 8] / b2) * (1 + (work[np - 4] / b1));\n    if ((end - start) > 2) {\n        b2 = work[nn - 13] / work[nn - 15];\n        a2 = a2 + b2;\n        for (int i4 = nn - 17; i4 >= (((4 * start) + 2) + pingPong); i4 -= 4) {\n            if (b2 == 0.0) {\n                break;\n            }\n            b1 = b2;\n            if (work[i4] > work[i4 - 2]) {\n                return;\n            }\n            b2 = b2 * (work[i4] / work[i4 - 2]);\n            a2 = a2 + b2;\n            if (((100 * java.lang.Math.max(b2, b1)) < a2) || (cnst1 < a2)) {\n                break;\n            }\n        }\n        a2 = cnst3 * a2;\n    }\n    if (a2 < cnst1) {\n        tau = (gam * (1 - java.lang.Math.sqrt(a2))) / (1 + a2);\n    } else {\n        tau = s;\n    }\n}",
            "dst_parent_type": "Block",
            "dst_type": "LocalVariable",
            "operator": "MOV",
            "src": "double a2 = (work[np - 8] / b2) * (1 + (work[np - 4] / b1))",
            "src_parent": "{\n    tType = -5;\n    double s = 0.25 * dMin;\n    final int p = main.length;\n    final int np = nn - (2 * pingPong);\n    double b1 = work[np - 2];\n    double b2 = work[np - 6];\n    int regularPos = 0;\n    final double gam = dN2;\n    if ((work[np - 8] > b2) || (work[np - 4] > b1)) {\n        return;\n    }\n    double a2 = (work[np - 8] / b2) * (1 + (work[np - 4] / b1));\n    b2 = java.lang.Math.sqrt(cnst3 * b2);\n    if (a2 < cnst1) {\n        tau = (gam * (1 - java.lang.Math.sqrt(a2))) / (1 + a2);\n    } else {\n        tau = s;\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "LocalVariable"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "if (a2 < cnst1) {\n    tau = (gam * (1 - java.lang.Math.sqrt(a2))) / (1 + a2);\n} else {\n    tau = s;\n}",
            "dst_parent": "{\n    tType = -5;\n    double s = 0.25 * dMin;\n    final int np = nn - (2 * pingPong);\n    double b1 = work[np - 2];\n    double b2 = work[np - 6];\n    final double gam = dN2;\n    if ((work[np - 8] > b2) || (work[np - 4] > b1)) {\n        return;\n    }\n    double a2 = (work[np - 8] / b2) * (1 + (work[np - 4] / b1));\n    if ((end - start) > 2) {\n        b2 = work[nn - 13] / work[nn - 15];\n        a2 = a2 + b2;\n        for (int i4 = nn - 17; i4 >= (((4 * start) + 2) + pingPong); i4 -= 4) {\n            if (b2 == 0.0) {\n                break;\n            }\n            b1 = b2;\n            if (work[i4] > work[i4 - 2]) {\n                return;\n            }\n            b2 = b2 * (work[i4] / work[i4 - 2]);\n            a2 = a2 + b2;\n            if (((100 * java.lang.Math.max(b2, b1)) < a2) || (cnst1 < a2)) {\n                break;\n            }\n        }\n        a2 = cnst3 * a2;\n    }\n    if (a2 < cnst1) {\n        tau = (gam * (1 - java.lang.Math.sqrt(a2))) / (1 + a2);\n    } else {\n        tau = s;\n    }\n}",
            "dst_parent_type": "Block",
            "dst_type": "If",
            "operator": "MOV",
            "src": "if (a2 < cnst1) {\n    tau = (gam * (1 - java.lang.Math.sqrt(a2))) / (1 + a2);\n} else {\n    tau = s;\n}",
            "src_parent": "{\n    tType = -5;\n    double s = 0.25 * dMin;\n    final int p = main.length;\n    final int np = nn - (2 * pingPong);\n    double b1 = work[np - 2];\n    double b2 = work[np - 6];\n    int regularPos = 0;\n    final double gam = dN2;\n    if ((work[np - 8] > b2) || (work[np - 4] > b1)) {\n        return;\n    }\n    double a2 = (work[np - 8] / b2) * (1 + (work[np - 4] / b1));\n    b2 = java.lang.Math.sqrt(cnst3 * b2);\n    if (a2 < cnst1) {\n        tau = (gam * (1 - java.lang.Math.sqrt(a2))) / (1 + a2);\n    } else {\n        tau = s;\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "If"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "{\n    b2 = work[nn - 13] / work[nn - 15];\n    a2 = a2 + b2;\n    for (int i4 = nn - 17; i4 >= (((4 * start) + 2) + pingPong); i4 -= 4) {\n        if (b2 == 0.0) {\n            break;\n        }\n        b1 = b2;\n        if (work[i4] > work[i4 - 2]) {\n            return;\n        }\n        b2 = b2 * (work[i4] / work[i4 - 2]);\n        a2 = a2 + b2;\n        if (((100 * java.lang.Math.max(b2, b1)) < a2) || (cnst1 < a2)) {\n            break;\n        }\n    }\n    a2 = cnst3 * a2;\n}",
            "dst_parent": "if ((end - start) > 2) {\n    b2 = work[nn - 13] / work[nn - 15];\n    a2 = a2 + b2;\n    for (int i4 = nn - 17; i4 >= (((4 * start) + 2) + pingPong); i4 -= 4) {\n        if (b2 == 0.0) {\n            break;\n        }\n        b1 = b2;\n        if (work[i4] > work[i4 - 2]) {\n            return;\n        }\n        b2 = b2 * (work[i4] / work[i4 - 2]);\n        a2 = a2 + b2;\n        if (((100 * java.lang.Math.max(b2, b1)) < a2) || (cnst1 < a2)) {\n            break;\n        }\n    }\n    a2 = cnst3 * a2;\n}",
            "dst_parent_type": "If",
            "dst_type": "Block",
            "operator": "MOV",
            "src": "{\n    tType = -5;\n    double s = 0.25 * dMin;\n    final int p = main.length;\n    final int np = nn - (2 * pingPong);\n    double b1 = work[np - 2];\n    double b2 = work[np - 6];\n    int regularPos = 0;\n    final double gam = dN2;\n    if ((work[np - 8] > b2) || (work[np - 4] > b1)) {\n        return;\n    }\n    double a2 = (work[np - 8] / b2) * (1 + (work[np - 4] / b1));\n    b2 = java.lang.Math.sqrt(cnst3 * b2);\n    if (a2 < cnst1) {\n        tau = (gam * (1 - java.lang.Math.sqrt(a2))) / (1 + a2);\n    } else {\n        tau = s;\n    }\n}",
            "src_parent": "if (dMin == dN2) {\n    tType = -5;\n    double s = 0.25 * dMin;\n    final int p = main.length;\n    final int np = nn - (2 * pingPong);\n    double b1 = work[np - 2];\n    double b2 = work[np - 6];\n    int regularPos = 0;\n    final double gam = dN2;\n    if ((work[np - 8] > b2) || (work[np - 4] > b1)) {\n        return;\n    }\n    double a2 = (work[np - 8] / b2) * (1 + (work[np - 4] / b1));\n    b2 = java.lang.Math.sqrt(cnst3 * b2);\n    if (a2 < cnst1) {\n        tau = (gam * (1 - java.lang.Math.sqrt(a2))) / (1 + a2);\n    } else {\n        tau = s;\n    }\n} else {\n    if (tType == (-6)) {\n        g += 0.333 * (1 - g);\n    } else if (tType == (-18)) {\n        g = 0.25 * 0.333;\n    } else {\n        g = 0.25;\n    }\n    tau = g * dMin;\n    tType = -6;\n}",
            "src_parent_type": "If",
            "src_type": "Block"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "Assignment",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "LocalVariable",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "VE: Modifiers_LocalVariable",
            "dst_parent": "final double oldB1 = b1",
            "dst_parent_type": "LocalVariable",
            "dst_type": "VirtualEle",
            "operator": "MOV",
            "src": "VE: Modifiers_LocalVariable",
            "src_parent": "final int p = main.length",
            "src_parent_type": "LocalVariable",
            "src_type": "VirtualEle"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "LocalVariable",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "LocalVariable",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "int",
            "dst_parent": "int i4 = nn - 17",
            "dst_parent_type": "LocalVariable",
            "dst_type": "TypeReference",
            "operator": "MOV",
            "src": "int",
            "src_parent": "int regularPos = 0",
            "src_parent_type": "LocalVariable",
            "src_type": "TypeReference"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "Assignment",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "LocalVariable",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "org.apache.commons.math.linear.EigenDecompositionImpl",
            "dst_parent": "",
            "dst_parent_type": "ThisAccess",
            "dst_type": "TypeAccess",
            "operator": "MOV",
            "src": "org.apache.commons.math.linear.EigenDecompositionImpl",
            "src_parent": "",
            "src_parent_type": "ThisAccess",
            "src_type": "TypeAccess"
          }
        }
      ],
      "file_name": "EigenDecompositionImpl"
    }
  ],
  "id": "GenProg_patch_Defects4J_Math_81_0_436"
}