{
  "files": [
    {
      "features": [
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "dMin1 > 0.0",
            "src_parent": "if (dMin1 > 0.0) {\n    tau = (tau + dMin) * (1.0 - (2.0 * org.apache.commons.math.util.MathUtils.EPSILON));\n    if ((dMin >= 0) && (dMin1 > 0)) {\n        updateSigma(tau);\n        return deflatedEnd;\n    } else if ((((dMin < 0.0) && (dMin1 > 0.0)) && (work[((4 * deflatedEnd) - 5) - pingPong] < (org.apache.commons.math.linear.EigenDecompositionImpl.TOLERANCE * (sigma + dN1)))) && (java.lang.Math.abs(dN) < (org.apache.commons.math.linear.EigenDecompositionImpl.TOLERANCE * sigma))) {\n        work[((4 * deflatedEnd) - 3) - pingPong] = 0.0;\n        dMin = 0.0;\n        updateSigma(tau);\n        return deflatedEnd;\n    } else if (dMin < 0.0) {\n        if (tType < (-22)) {\n            tau = 0.0;\n        } else if (dMin1 > 0.0) {\n            tau = (tau + dMin) * (1.0 - (2.0 * org.apache.commons.math.util.MathUtils.EPSILON));\n            tType -= 11;\n        } else {\n            tau *= 0.25;\n            tType -= 12;\n        }\n    } else if (java.lang.Double.isNaN(dMin)) {\n        tau = 0.0;\n    } else {\n        loop = false;\n    }\n    tType -= 11;\n} else {\n    tau *= 0.25;\n    tType -= 12;\n}",
            "src_parent_type": "If",
            "src_type": "BinaryOperator"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "tau = (tau + dMin) * (1.0 - (2.0 * org.apache.commons.math.util.MathUtils.EPSILON))",
            "src_parent": "{\n    tau = (tau + dMin) * (1.0 - (2.0 * org.apache.commons.math.util.MathUtils.EPSILON));\n    if ((dMin >= 0) && (dMin1 > 0)) {\n        updateSigma(tau);\n        return deflatedEnd;\n    } else if ((((dMin < 0.0) && (dMin1 > 0.0)) && (work[((4 * deflatedEnd) - 5) - pingPong] < (org.apache.commons.math.linear.EigenDecompositionImpl.TOLERANCE * (sigma + dN1)))) && (java.lang.Math.abs(dN) < (org.apache.commons.math.linear.EigenDecompositionImpl.TOLERANCE * sigma))) {\n        work[((4 * deflatedEnd) - 3) - pingPong] = 0.0;\n        dMin = 0.0;\n        updateSigma(tau);\n        return deflatedEnd;\n    } else if (dMin < 0.0) {\n        if (tType < (-22)) {\n            tau = 0.0;\n        } else if (dMin1 > 0.0) {\n            tau = (tau + dMin) * (1.0 - (2.0 * org.apache.commons.math.util.MathUtils.EPSILON));\n            tType -= 11;\n        } else {\n            tau *= 0.25;\n            tType -= 12;\n        }\n    } else if (java.lang.Double.isNaN(dMin)) {\n        tau = 0.0;\n    } else {\n        loop = false;\n    }\n    tType -= 11;\n}",
            "src_parent_type": "Block",
            "src_type": "Assignment"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "tType -= 11",
            "src_parent": "{\n    tau = (tau + dMin) * (1.0 - (2.0 * org.apache.commons.math.util.MathUtils.EPSILON));\n    if ((dMin >= 0) && (dMin1 > 0)) {\n        updateSigma(tau);\n        return deflatedEnd;\n    } else if ((((dMin < 0.0) && (dMin1 > 0.0)) && (work[((4 * deflatedEnd) - 5) - pingPong] < (org.apache.commons.math.linear.EigenDecompositionImpl.TOLERANCE * (sigma + dN1)))) && (java.lang.Math.abs(dN) < (org.apache.commons.math.linear.EigenDecompositionImpl.TOLERANCE * sigma))) {\n        work[((4 * deflatedEnd) - 3) - pingPong] = 0.0;\n        dMin = 0.0;\n        updateSigma(tau);\n        return deflatedEnd;\n    } else if (dMin < 0.0) {\n        if (tType < (-22)) {\n            tau = 0.0;\n        } else if (dMin1 > 0.0) {\n            tau = (tau + dMin) * (1.0 - (2.0 * org.apache.commons.math.util.MathUtils.EPSILON));\n            tType -= 11;\n        } else {\n            tau *= 0.25;\n            tType -= 12;\n        }\n    } else if (java.lang.Double.isNaN(dMin)) {\n        tau = 0.0;\n    } else {\n        loop = false;\n    }\n    tType -= 11;\n}",
            "src_parent_type": "Block",
            "src_type": "OperatorAssignment"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "{\n    tau *= 0.25;\n    tType -= 12;\n}",
            "src_parent": "if (dMin1 > 0.0) {\n    tau = (tau + dMin) * (1.0 - (2.0 * org.apache.commons.math.util.MathUtils.EPSILON));\n    if ((dMin >= 0) && (dMin1 > 0)) {\n        updateSigma(tau);\n        return deflatedEnd;\n    } else if ((((dMin < 0.0) && (dMin1 > 0.0)) && (work[((4 * deflatedEnd) - 5) - pingPong] < (org.apache.commons.math.linear.EigenDecompositionImpl.TOLERANCE * (sigma + dN1)))) && (java.lang.Math.abs(dN) < (org.apache.commons.math.linear.EigenDecompositionImpl.TOLERANCE * sigma))) {\n        work[((4 * deflatedEnd) - 3) - pingPong] = 0.0;\n        dMin = 0.0;\n        updateSigma(tau);\n        return deflatedEnd;\n    } else if (dMin < 0.0) {\n        if (tType < (-22)) {\n            tau = 0.0;\n        } else if (dMin1 > 0.0) {\n            tau = (tau + dMin) * (1.0 - (2.0 * org.apache.commons.math.util.MathUtils.EPSILON));\n            tType -= 11;\n        } else {\n            tau *= 0.25;\n            tType -= 12;\n        }\n    } else if (java.lang.Double.isNaN(dMin)) {\n        tau = 0.0;\n    } else {\n        loop = false;\n    }\n    tType -= 11;\n} else {\n    tau *= 0.25;\n    tType -= 12;\n}",
            "src_parent_type": "If",
            "src_type": "Block"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "Return",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "For",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "if ((dMin < 0) || ((org.apache.commons.math.util.MathUtils.SAFE_MIN * qMax) < java.lang.Math.min(work[l - 1], java.lang.Math.min(work[l - 9], dMin2 + work[l - (2 * pingPong)])))) {\n    computeShiftIncrement(start, deflatedEnd, end - deflatedEnd);\n    for (boolean loop = true; loop;) {\n        dqds(start, deflatedEnd);\n        if ((dMin >= 0) && (dMin1 > 0)) {\n            updateSigma(tau);\n            return deflatedEnd;\n        } else if ((((dMin < 0.0) && (dMin1 > 0.0)) && (work[((4 * deflatedEnd) - 5) - pingPong] < (org.apache.commons.math.linear.EigenDecompositionImpl.TOLERANCE * (sigma + dN1)))) && (java.lang.Math.abs(dN) < (org.apache.commons.math.linear.EigenDecompositionImpl.TOLERANCE * sigma))) {\n            work[((4 * deflatedEnd) - 3) - pingPong] = 0.0;\n            dMin = 0.0;\n            updateSigma(tau);\n            return deflatedEnd;\n        } else if (dMin < 0.0) {\n            if (tType < (-22)) {\n                tau = 0.0;\n            } else if (dMin1 > 0.0) {\n                tau = (tau + dMin) * (1.0 - (2.0 * org.apache.commons.math.util.MathUtils.EPSILON));\n                if ((dMin >= 0) && (dMin1 > 0)) {\n                    updateSigma(tau);\n                    return deflatedEnd;\n                } else if ((((dMin < 0.0) && (dMin1 > 0.0)) && (work[((4 * deflatedEnd) - 5) - pingPong] < (org.apache.commons.math.linear.EigenDecompositionImpl.TOLERANCE * (sigma + dN1)))) && (java.lang.Math.abs(dN) < (org.apache.commons.math.linear.EigenDecompositionImpl.TOLERANCE * sigma))) {\n                    work[((4 * deflatedEnd) - 3) - pingPong] = 0.0;\n                    dMin = 0.0;\n                    updateSigma(tau);\n                    return deflatedEnd;\n                } else if (dMin < 0.0) {\n                    if (tType < (-22)) {\n                        tau = 0.0;\n                    } else if (dMin1 > 0.0) {\n                        tau = (tau + dMin) * (1.0 - (2.0 * org.apache.commons.math.util.MathUtils.EPSILON));\n                        tType -= 11;\n                    } else {\n                        tau *= 0.25;\n                        tType -= 12;\n                    }\n                } else if (java.lang.Double.isNaN(dMin)) {\n                    tau = 0.0;\n                } else {\n                    loop = false;\n                }\n                tType -= 11;\n            } else {\n                tau *= 0.25;\n                tType -= 12;\n            }\n        } else if (java.lang.Double.isNaN(dMin)) {\n            tau = 0.0;\n        } else {\n            loop = false;\n        }\n    }\n}",
            "src_parent": "{\n    g = 0.0;\n    int deflatedEnd = end;\n    for (boolean deflating = true; deflating;) {\n        if (start >= deflatedEnd) {\n            return deflatedEnd;\n        }\n        final int k = ((4 * deflatedEnd) + pingPong) - 1;\n        if ((start == (deflatedEnd - 1)) || ((start != (deflatedEnd - 2)) && ((work[k - 5] <= (org.apache.commons.math.linear.EigenDecompositionImpl.TOLERANCE_2 * (sigma + work[k - 3]))) || (work[(k - (2 * pingPong)) - 4] <= (org.apache.commons.math.linear.EigenDecompositionImpl.TOLERANCE_2 * work[k - 7]))))) {\n            work[(4 * deflatedEnd) - 4] = sigma + work[((4 * deflatedEnd) - 4) + pingPong];\n            deflatedEnd -= 1;\n        } else if (((start == (deflatedEnd - 2)) || (work[k - 9] <= (org.apache.commons.math.linear.EigenDecompositionImpl.TOLERANCE_2 * sigma))) || (work[(k - (2 * pingPong)) - 8] <= (org.apache.commons.math.linear.EigenDecompositionImpl.TOLERANCE_2 * work[k - 11]))) {\n            if (work[k - 3] > work[k - 7]) {\n                final double tmp = work[k - 3];\n                work[k - 3] = work[k - 7];\n                work[k - 7] = tmp;\n            }\n            if (work[k - 5] > (org.apache.commons.math.linear.EigenDecompositionImpl.TOLERANCE_2 * work[k - 3])) {\n                double t = 0.5 * ((work[k - 7] - work[k - 3]) + work[k - 5]);\n                double s = work[k - 3] * (work[k - 5] / t);\n                if (s <= t) {\n                    s = (work[k - 3] * work[k - 5]) / (t * (1 + java.lang.Math.sqrt(1 + (s / t))));\n                } else {\n                    s = (work[k - 3] * work[k - 5]) / (t + java.lang.Math.sqrt(t * (t + s)));\n                }\n                t = work[k - 7] + (s + work[k - 5]);\n                work[k - 3] *= work[k - 7] / t;\n                work[k - 7] = t;\n            }\n            work[(4 * deflatedEnd) - 8] = sigma + work[k - 7];\n            work[(4 * deflatedEnd) - 4] = sigma + work[k - 3];\n            deflatedEnd -= 2;\n        } else {\n            deflating = false;\n        }\n    }\n    final int l = ((4 * deflatedEnd) + pingPong) - 1;\n    if ((dMin <= 0) || (deflatedEnd < end)) {\n        if (flipIfWarranted(deflatedEnd, 1)) {\n            dMin2 = java.lang.Math.min(dMin2, work[l - 1]);\n            work[l - 1] = java.lang.Math.min(work[l - 1], java.lang.Math.min(work[3 + pingPong], work[7 + pingPong]));\n            work[l - (2 * pingPong)] = java.lang.Math.min(work[l - (2 * pingPong)], java.lang.Math.min(work[6 + pingPong], work[6 + pingPong]));\n            qMax = java.lang.Math.max(qMax, java.lang.Math.max(work[3 + pingPong], work[7 + pingPong]));\n            dMin = -0.0;\n        }\n    }\n    if ((dMin < 0) || ((org.apache.commons.math.util.MathUtils.SAFE_MIN * qMax) < java.lang.Math.min(work[l - 1], java.lang.Math.min(work[l - 9], dMin2 + work[l - (2 * pingPong)])))) {\n        computeShiftIncrement(start, deflatedEnd, end - deflatedEnd);\n        for (boolean loop = true; loop;) {\n            dqds(start, deflatedEnd);\n            if ((dMin >= 0) && (dMin1 > 0)) {\n                updateSigma(tau);\n                return deflatedEnd;\n            } else if ((((dMin < 0.0) && (dMin1 > 0.0)) && (work[((4 * deflatedEnd) - 5) - pingPong] < (org.apache.commons.math.linear.EigenDecompositionImpl.TOLERANCE * (sigma + dN1)))) && (java.lang.Math.abs(dN) < (org.apache.commons.math.linear.EigenDecompositionImpl.TOLERANCE * sigma))) {\n                work[((4 * deflatedEnd) - 3) - pingPong] = 0.0;\n                dMin = 0.0;\n                updateSigma(tau);\n                return deflatedEnd;\n            } else if (dMin < 0.0) {\n                if (tType < (-22)) {\n                    tau = 0.0;\n                } else if (dMin1 > 0.0) {\n                    tau = (tau + dMin) * (1.0 - (2.0 * org.apache.commons.math.util.MathUtils.EPSILON));\n                    if ((dMin >= 0) && (dMin1 > 0)) {\n                        updateSigma(tau);\n                        return deflatedEnd;\n                    } else if ((((dMin < 0.0) && (dMin1 > 0.0)) && (work[((4 * deflatedEnd) - 5) - pingPong] < (org.apache.commons.math.linear.EigenDecompositionImpl.TOLERANCE * (sigma + dN1)))) && (java.lang.Math.abs(dN) < (org.apache.commons.math.linear.EigenDecompositionImpl.TOLERANCE * sigma))) {\n                        work[((4 * deflatedEnd) - 3) - pingPong] = 0.0;\n                        dMin = 0.0;\n                        updateSigma(tau);\n                        return deflatedEnd;\n                    } else if (dMin < 0.0) {\n                        if (tType < (-22)) {\n                            tau = 0.0;\n                        } else if (dMin1 > 0.0) {\n                            tau = (tau + dMin) * (1.0 - (2.0 * org.apache.commons.math.util.MathUtils.EPSILON));\n                            tType -= 11;\n                        } else {\n                            tau *= 0.25;\n                            tType -= 12;\n                        }\n                    } else if (java.lang.Double.isNaN(dMin)) {\n                        tau = 0.0;\n                    } else {\n                        loop = false;\n                    }\n                    tType -= 11;\n                } else {\n                    tau *= 0.25;\n                    tType -= 12;\n                }\n            } else if (java.lang.Double.isNaN(dMin)) {\n                tau = 0.0;\n            } else {\n                loop = false;\n            }\n        }\n    }\n    dqd(start, deflatedEnd);\n    return deflatedEnd;\n}",
            "src_parent_type": "Block",
            "src_type": "If"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "for (boolean loop = true; loop;) {\n    dqds(start, deflatedEnd);\n    if ((dMin >= 0) && (dMin1 > 0)) {\n        updateSigma(tau);\n        return deflatedEnd;\n    } else if ((((dMin < 0.0) && (dMin1 > 0.0)) && (work[((4 * deflatedEnd) - 5) - pingPong] < (org.apache.commons.math.linear.EigenDecompositionImpl.TOLERANCE * (sigma + dN1)))) && (java.lang.Math.abs(dN) < (org.apache.commons.math.linear.EigenDecompositionImpl.TOLERANCE * sigma))) {\n        work[((4 * deflatedEnd) - 3) - pingPong] = 0.0;\n        dMin = 0.0;\n        updateSigma(tau);\n        return deflatedEnd;\n    } else if (dMin < 0.0) {\n        if (tType < (-22)) {\n            tau = 0.0;\n        } else if (dMin1 > 0.0) {\n            tau = (tau + dMin) * (1.0 - (2.0 * org.apache.commons.math.util.MathUtils.EPSILON));\n            tType -= 11;\n        } else {\n            tau *= 0.25;\n            tType -= 12;\n        }\n    } else if (java.lang.Double.isNaN(dMin)) {\n        tau = 0.0;\n    } else {\n        loop = false;\n    }\n}",
            "src_parent": "{\n    computeShiftIncrement(start, deflatedEnd, end - deflatedEnd);\n    for (boolean loop = true; loop;) {\n        dqds(start, deflatedEnd);\n        if ((dMin >= 0) && (dMin1 > 0)) {\n            updateSigma(tau);\n            return deflatedEnd;\n        } else if ((((dMin < 0.0) && (dMin1 > 0.0)) && (work[((4 * deflatedEnd) - 5) - pingPong] < (org.apache.commons.math.linear.EigenDecompositionImpl.TOLERANCE * (sigma + dN1)))) && (java.lang.Math.abs(dN) < (org.apache.commons.math.linear.EigenDecompositionImpl.TOLERANCE * sigma))) {\n            work[((4 * deflatedEnd) - 3) - pingPong] = 0.0;\n            dMin = 0.0;\n            updateSigma(tau);\n            return deflatedEnd;\n        } else if (dMin < 0.0) {\n            if (tType < (-22)) {\n                tau = 0.0;\n            } else if (dMin1 > 0.0) {\n                tau = (tau + dMin) * (1.0 - (2.0 * org.apache.commons.math.util.MathUtils.EPSILON));\n                tType -= 11;\n            } else {\n                tau *= 0.25;\n                tType -= 12;\n            }\n        } else if (java.lang.Double.isNaN(dMin)) {\n            tau = 0.0;\n        } else {\n            loop = false;\n        }\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "For"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Break",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Case",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "{\n    tType = -5;\n    double s = 0.25 * dMin;\n    final int np = nn - (2 * pingPong);\n    double b1 = work[np - 2];\n    double b2 = work[np - 6];\n    final double gam = dN2;\n    if ((work[np - 8] > b2) || (work[np - 4] > b1)) {\n        return;\n    }\n    double a2 = (work[np - 8] / b2) * (1 + (work[np - 4] / b1));\n    if ((end - start) > 2) {\n        b2 = work[nn - 13] / work[nn - 15];\n        a2 = a2 + b2;\n        for (int i4 = nn - 17; i4 >= (((4 * start) + 2) + pingPong); i4 -= 4) {\n            if (b2 == 0.0) {\n                break;\n            }\n            b1 = b2;\n            if (work[i4] > work[i4 - 2]) {\n                return;\n            }\n            b2 = b2 * (work[i4] / work[i4 - 2]);\n            a2 = a2 + b2;\n            if (((100 * java.lang.Math.max(b2, b1)) < a2) || (cnst1 < a2)) {\n                break;\n            }\n        }\n        a2 = cnst3 * a2;\n    }\n    if (a2 < cnst1) {\n        tau = (gam * (1 - java.lang.Math.sqrt(a2))) / (1 + a2);\n    } else {\n        tau = s;\n    }\n}",
            "src_parent": "if (dMin == dN2) {\n    tType = -5;\n    double s = 0.25 * dMin;\n    final int np = nn - (2 * pingPong);\n    double b1 = work[np - 2];\n    double b2 = work[np - 6];\n    final double gam = dN2;\n    if ((work[np - 8] > b2) || (work[np - 4] > b1)) {\n        return;\n    }\n    double a2 = (work[np - 8] / b2) * (1 + (work[np - 4] / b1));\n    if ((end - start) > 2) {\n        b2 = work[nn - 13] / work[nn - 15];\n        a2 = a2 + b2;\n        for (int i4 = nn - 17; i4 >= (((4 * start) + 2) + pingPong); i4 -= 4) {\n            if (b2 == 0.0) {\n                break;\n            }\n            b1 = b2;\n            if (work[i4] > work[i4 - 2]) {\n                return;\n            }\n            b2 = b2 * (work[i4] / work[i4 - 2]);\n            a2 = a2 + b2;\n            if (((100 * java.lang.Math.max(b2, b1)) < a2) || (cnst1 < a2)) {\n                break;\n            }\n        }\n        a2 = cnst3 * a2;\n    }\n    if (a2 < cnst1) {\n        tau = (gam * (1 - java.lang.Math.sqrt(a2))) / (1 + a2);\n    } else {\n        tau = s;\n    }\n} else {\n    if (tType == (-6)) {\n        g += 0.333 * (1 - g);\n    } else if (tType == (-18)) {\n        g = 0.25 * 0.333;\n    } else {\n        g = 0.25;\n    }\n    tau = g * dMin;\n    tType = -6;\n}",
            "src_parent_type": "If",
            "src_type": "Block"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "LocalVariable",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "a2 = a2 + b2",
            "src_parent": "{\n    if (b2 == 0.0) {\n        break;\n    }\n    b1 = b2;\n    if (work[i4] > work[i4 - 2]) {\n        return;\n    }\n    b2 = b2 * (work[i4] / work[i4 - 2]);\n    a2 = a2 + b2;\n    if (((100 * java.lang.Math.max(b2, b1)) < a2) || (cnst1 < a2)) {\n        break;\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "Assignment"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Assignment",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "For",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "Assignment",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "LocalVariable",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "a2 = 0.0",
            "src_parent": "{\n    gam = dN;\n    a2 = 0.0;\n    if (work[nn - 5] > work[nn - 7]) {\n        return;\n    }\n    b2 = work[nn - 5] / work[nn - 7];\n    np = nn - 9;\n}",
            "src_parent_type": "Block",
            "src_type": "Assignment"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Assignment",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "For",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "Assignment",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "LocalVariable",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "b2 = work[nn - 5] / work[nn - 7]",
            "src_parent": "{\n    gam = dN;\n    a2 = 0.0;\n    if (work[nn - 5] > work[nn - 7]) {\n        return;\n    }\n    b2 = work[nn - 5] / work[nn - 7];\n    np = nn - 9;\n}",
            "src_parent_type": "Block",
            "src_type": "Assignment"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "break",
            "src_parent": "{\n    break;\n}",
            "src_parent_type": "Block",
            "src_type": "Break"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "if ((dMin < 0) || ((org.apache.commons.math.util.MathUtils.SAFE_MIN * qMax) < java.lang.Math.min(work[l - 1], java.lang.Math.min(work[l - 9], dMin2 + work[l - (2 * pingPong)])))) {\n    computeShiftIncrement(start, deflatedEnd, end - deflatedEnd);\n    for (boolean loop = true; loop;) {\n        dqds(start, deflatedEnd);\n        if ((dMin >= 0) && (dMin1 > 0)) {\n            updateSigma(tau);\n            return deflatedEnd;\n        } else if ((((dMin < 0.0) && (dMin1 > 0.0)) && (work[((4 * deflatedEnd) - 5) - pingPong] < (org.apache.commons.math.linear.EigenDecompositionImpl.TOLERANCE * (sigma + dN1)))) && (java.lang.Math.abs(dN) < (org.apache.commons.math.linear.EigenDecompositionImpl.TOLERANCE * sigma))) {\n            work[((4 * deflatedEnd) - 3) - pingPong] = 0.0;\n            dMin = 0.0;\n            updateSigma(tau);\n            return deflatedEnd;\n        } else if (dMin < 0.0) {\n            if (tType < (-22)) {\n                tau = 0.0;\n            } else if (dMin1 > 0.0) {\n                tau = (tau + dMin) * (1.0 - (2.0 * org.apache.commons.math.util.MathUtils.EPSILON));\n                tType -= 11;\n            } else {\n                tau *= 0.25;\n                tType -= 12;\n            }\n        } else if (java.lang.Double.isNaN(dMin)) {\n            tau = 0.0;\n        } else {\n            loop = false;\n        }\n    }\n}",
            "dst_parent": "{\n    g = 0.0;\n    int deflatedEnd = end;\n    for (boolean deflating = true; deflating;) {\n        if (start >= deflatedEnd) {\n            return deflatedEnd;\n        }\n        final int k = ((4 * deflatedEnd) + pingPong) - 1;\n        if ((start == (deflatedEnd - 1)) || ((start != (deflatedEnd - 2)) && ((work[k - 5] <= (org.apache.commons.math.linear.EigenDecompositionImpl.TOLERANCE_2 * (sigma + work[k - 3]))) || (work[(k - (2 * pingPong)) - 4] <= (org.apache.commons.math.linear.EigenDecompositionImpl.TOLERANCE_2 * work[k - 7]))))) {\n            work[(4 * deflatedEnd) - 4] = sigma + work[((4 * deflatedEnd) - 4) + pingPong];\n            deflatedEnd -= 1;\n        } else if (((start == (deflatedEnd - 2)) || (work[k - 9] <= (org.apache.commons.math.linear.EigenDecompositionImpl.TOLERANCE_2 * sigma))) || (work[(k - (2 * pingPong)) - 8] <= (org.apache.commons.math.linear.EigenDecompositionImpl.TOLERANCE_2 * work[k - 11]))) {\n            if (work[k - 3] > work[k - 7]) {\n                final double tmp = work[k - 3];\n                work[k - 3] = work[k - 7];\n                work[k - 7] = tmp;\n            }\n            if (work[k - 5] > (org.apache.commons.math.linear.EigenDecompositionImpl.TOLERANCE_2 * work[k - 3])) {\n                double t = 0.5 * ((work[k - 7] - work[k - 3]) + work[k - 5]);\n                double s = work[k - 3] * (work[k - 5] / t);\n                if (s <= t) {\n                    s = (work[k - 3] * work[k - 5]) / (t * (1 + java.lang.Math.sqrt(1 + (s / t))));\n                } else {\n                    s = (work[k - 3] * work[k - 5]) / (t + java.lang.Math.sqrt(t * (t + s)));\n                }\n                t = work[k - 7] + (s + work[k - 5]);\n                work[k - 3] *= work[k - 7] / t;\n                work[k - 7] = t;\n            }\n            work[(4 * deflatedEnd) - 8] = sigma + work[k - 7];\n            work[(4 * deflatedEnd) - 4] = sigma + work[k - 3];\n            deflatedEnd -= 2;\n        } else {\n            deflating = false;\n        }\n    }\n    final int l = ((4 * deflatedEnd) + pingPong) - 1;\n    if ((dMin <= 0) || (deflatedEnd < end)) {\n        if (flipIfWarranted(deflatedEnd, 1)) {\n            dMin2 = java.lang.Math.min(dMin2, work[l - 1]);\n            work[l - 1] = java.lang.Math.min(work[l - 1], java.lang.Math.min(work[3 + pingPong], work[7 + pingPong]));\n            work[l - (2 * pingPong)] = java.lang.Math.min(work[l - (2 * pingPong)], java.lang.Math.min(work[6 + pingPong], work[6 + pingPong]));\n            qMax = java.lang.Math.max(qMax, java.lang.Math.max(work[3 + pingPong], work[7 + pingPong]));\n            dMin = -0.0;\n        }\n    }\n    if ((dMin < 0) || ((org.apache.commons.math.util.MathUtils.SAFE_MIN * qMax) < java.lang.Math.min(work[l - 1], java.lang.Math.min(work[l - 9], dMin2 + work[l - (2 * pingPong)])))) {\n        computeShiftIncrement(start, deflatedEnd, end - deflatedEnd);\n        for (boolean loop = true; loop;) {\n            dqds(start, deflatedEnd);\n            if ((dMin >= 0) && (dMin1 > 0)) {\n                updateSigma(tau);\n                return deflatedEnd;\n            } else if ((((dMin < 0.0) && (dMin1 > 0.0)) && (work[((4 * deflatedEnd) - 5) - pingPong] < (org.apache.commons.math.linear.EigenDecompositionImpl.TOLERANCE * (sigma + dN1)))) && (java.lang.Math.abs(dN) < (org.apache.commons.math.linear.EigenDecompositionImpl.TOLERANCE * sigma))) {\n                work[((4 * deflatedEnd) - 3) - pingPong] = 0.0;\n                dMin = 0.0;\n                updateSigma(tau);\n                return deflatedEnd;\n            } else if (dMin < 0.0) {\n                if (tType < (-22)) {\n                    tau = 0.0;\n                } else if (dMin1 > 0.0) {\n                    tau = (tau + dMin) * (1.0 - (2.0 * org.apache.commons.math.util.MathUtils.EPSILON));\n                    tType -= 11;\n                } else {\n                    tau *= 0.25;\n                    tType -= 12;\n                }\n            } else if (java.lang.Double.isNaN(dMin)) {\n                tau = 0.0;\n            } else {\n                loop = false;\n            }\n        }\n    }\n    dqd(start, deflatedEnd);\n    return deflatedEnd;\n}",
            "dst_parent_type": "Block",
            "dst_type": "If",
            "operator": "MOV",
            "src": "if (dMin1 > 0.0) {\n    tau = (tau + dMin) * (1.0 - (2.0 * org.apache.commons.math.util.MathUtils.EPSILON));\n    if ((dMin >= 0) && (dMin1 > 0)) {\n        updateSigma(tau);\n        return deflatedEnd;\n    } else if ((((dMin < 0.0) && (dMin1 > 0.0)) && (work[((4 * deflatedEnd) - 5) - pingPong] < (org.apache.commons.math.linear.EigenDecompositionImpl.TOLERANCE * (sigma + dN1)))) && (java.lang.Math.abs(dN) < (org.apache.commons.math.linear.EigenDecompositionImpl.TOLERANCE * sigma))) {\n        work[((4 * deflatedEnd) - 3) - pingPong] = 0.0;\n        dMin = 0.0;\n        updateSigma(tau);\n        return deflatedEnd;\n    } else if (dMin < 0.0) {\n        if (tType < (-22)) {\n            tau = 0.0;\n        } else if (dMin1 > 0.0) {\n            tau = (tau + dMin) * (1.0 - (2.0 * org.apache.commons.math.util.MathUtils.EPSILON));\n            tType -= 11;\n        } else {\n            tau *= 0.25;\n            tType -= 12;\n        }\n    } else if (java.lang.Double.isNaN(dMin)) {\n        tau = 0.0;\n    } else {\n        loop = false;\n    }\n    tType -= 11;\n} else {\n    tau *= 0.25;\n    tType -= 12;\n}",
            "src_parent": "{\n    if (dMin1 > 0.0) {\n        tau = (tau + dMin) * (1.0 - (2.0 * org.apache.commons.math.util.MathUtils.EPSILON));\n        if ((dMin >= 0) && (dMin1 > 0)) {\n            updateSigma(tau);\n            return deflatedEnd;\n        } else if ((((dMin < 0.0) && (dMin1 > 0.0)) && (work[((4 * deflatedEnd) - 5) - pingPong] < (org.apache.commons.math.linear.EigenDecompositionImpl.TOLERANCE * (sigma + dN1)))) && (java.lang.Math.abs(dN) < (org.apache.commons.math.linear.EigenDecompositionImpl.TOLERANCE * sigma))) {\n            work[((4 * deflatedEnd) - 3) - pingPong] = 0.0;\n            dMin = 0.0;\n            updateSigma(tau);\n            return deflatedEnd;\n        } else if (dMin < 0.0) {\n            if (tType < (-22)) {\n                tau = 0.0;\n            } else if (dMin1 > 0.0) {\n                tau = (tau + dMin) * (1.0 - (2.0 * org.apache.commons.math.util.MathUtils.EPSILON));\n                tType -= 11;\n            } else {\n                tau *= 0.25;\n                tType -= 12;\n            }\n        } else if (java.lang.Double.isNaN(dMin)) {\n            tau = 0.0;\n        } else {\n            loop = false;\n        }\n        tType -= 11;\n    } else {\n        tau *= 0.25;\n        tType -= 12;\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "If"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "Return",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "For",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "computeShiftIncrement(start, deflatedEnd, end - deflatedEnd)",
            "dst_parent": "{\n    computeShiftIncrement(start, deflatedEnd, end - deflatedEnd);\n    for (boolean loop = true; loop;) {\n        dqds(start, deflatedEnd);\n        if ((dMin >= 0) && (dMin1 > 0)) {\n            updateSigma(tau);\n            return deflatedEnd;\n        } else if ((((dMin < 0.0) && (dMin1 > 0.0)) && (work[((4 * deflatedEnd) - 5) - pingPong] < (org.apache.commons.math.linear.EigenDecompositionImpl.TOLERANCE * (sigma + dN1)))) && (java.lang.Math.abs(dN) < (org.apache.commons.math.linear.EigenDecompositionImpl.TOLERANCE * sigma))) {\n            work[((4 * deflatedEnd) - 3) - pingPong] = 0.0;\n            dMin = 0.0;\n            updateSigma(tau);\n            return deflatedEnd;\n        } else if (dMin < 0.0) {\n            if (tType < (-22)) {\n                tau = 0.0;\n            } else if (dMin1 > 0.0) {\n                tau = (tau + dMin) * (1.0 - (2.0 * org.apache.commons.math.util.MathUtils.EPSILON));\n                tType -= 11;\n            } else {\n                tau *= 0.25;\n                tType -= 12;\n            }\n        } else if (java.lang.Double.isNaN(dMin)) {\n            tau = 0.0;\n        } else {\n            loop = false;\n        }\n    }\n}",
            "dst_parent_type": "Block",
            "dst_type": "Invocation",
            "operator": "MOV",
            "src": "computeShiftIncrement(start, deflatedEnd, end - deflatedEnd)",
            "src_parent": "{\n    computeShiftIncrement(start, deflatedEnd, end - deflatedEnd);\n    for (boolean loop = true; loop;) {\n        dqds(start, deflatedEnd);\n        if ((dMin >= 0) && (dMin1 > 0)) {\n            updateSigma(tau);\n            return deflatedEnd;\n        } else if ((((dMin < 0.0) && (dMin1 > 0.0)) && (work[((4 * deflatedEnd) - 5) - pingPong] < (org.apache.commons.math.linear.EigenDecompositionImpl.TOLERANCE * (sigma + dN1)))) && (java.lang.Math.abs(dN) < (org.apache.commons.math.linear.EigenDecompositionImpl.TOLERANCE * sigma))) {\n            work[((4 * deflatedEnd) - 3) - pingPong] = 0.0;\n            dMin = 0.0;\n            updateSigma(tau);\n            return deflatedEnd;\n        } else if (dMin < 0.0) {\n            if (tType < (-22)) {\n                tau = 0.0;\n            } else if (dMin1 > 0.0) {\n                tau = (tau + dMin) * (1.0 - (2.0 * org.apache.commons.math.util.MathUtils.EPSILON));\n                if ((dMin >= 0) && (dMin1 > 0)) {\n                    updateSigma(tau);\n                    return deflatedEnd;\n                } else if ((((dMin < 0.0) && (dMin1 > 0.0)) && (work[((4 * deflatedEnd) - 5) - pingPong] < (org.apache.commons.math.linear.EigenDecompositionImpl.TOLERANCE * (sigma + dN1)))) && (java.lang.Math.abs(dN) < (org.apache.commons.math.linear.EigenDecompositionImpl.TOLERANCE * sigma))) {\n                    work[((4 * deflatedEnd) - 3) - pingPong] = 0.0;\n                    dMin = 0.0;\n                    updateSigma(tau);\n                    return deflatedEnd;\n                } else if (dMin < 0.0) {\n                    if (tType < (-22)) {\n                        tau = 0.0;\n                    } else if (dMin1 > 0.0) {\n                        tau = (tau + dMin) * (1.0 - (2.0 * org.apache.commons.math.util.MathUtils.EPSILON));\n                        tType -= 11;\n                    } else {\n                        tau *= 0.25;\n                        tType -= 12;\n                    }\n                } else if (java.lang.Double.isNaN(dMin)) {\n                    tau = 0.0;\n                } else {\n                    loop = false;\n                }\n                tType -= 11;\n            } else {\n                tau *= 0.25;\n                tType -= 12;\n            }\n        } else if (java.lang.Double.isNaN(dMin)) {\n            tau = 0.0;\n        } else {\n            loop = false;\n        }\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "Invocation"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "For",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "boolean loop = true",
            "dst_parent": "for (boolean loop = true; loop;) {\n    dqds(start, deflatedEnd);\n    if ((dMin >= 0) && (dMin1 > 0)) {\n        updateSigma(tau);\n        return deflatedEnd;\n    } else if ((((dMin < 0.0) && (dMin1 > 0.0)) && (work[((4 * deflatedEnd) - 5) - pingPong] < (org.apache.commons.math.linear.EigenDecompositionImpl.TOLERANCE * (sigma + dN1)))) && (java.lang.Math.abs(dN) < (org.apache.commons.math.linear.EigenDecompositionImpl.TOLERANCE * sigma))) {\n        work[((4 * deflatedEnd) - 3) - pingPong] = 0.0;\n        dMin = 0.0;\n        updateSigma(tau);\n        return deflatedEnd;\n    } else if (dMin < 0.0) {\n        if (tType < (-22)) {\n            tau = 0.0;\n        } else if (dMin1 > 0.0) {\n            tau = (tau + dMin) * (1.0 - (2.0 * org.apache.commons.math.util.MathUtils.EPSILON));\n            tType -= 11;\n        } else {\n            tau *= 0.25;\n            tType -= 12;\n        }\n    } else if (java.lang.Double.isNaN(dMin)) {\n        tau = 0.0;\n    } else {\n        loop = false;\n    }\n}",
            "dst_parent_type": "For",
            "dst_type": "LocalVariable",
            "operator": "MOV",
            "src": "boolean loop = true",
            "src_parent": "for (boolean loop = true; loop;) {\n    dqds(start, deflatedEnd);\n    if ((dMin >= 0) && (dMin1 > 0)) {\n        updateSigma(tau);\n        return deflatedEnd;\n    } else if ((((dMin < 0.0) && (dMin1 > 0.0)) && (work[((4 * deflatedEnd) - 5) - pingPong] < (org.apache.commons.math.linear.EigenDecompositionImpl.TOLERANCE * (sigma + dN1)))) && (java.lang.Math.abs(dN) < (org.apache.commons.math.linear.EigenDecompositionImpl.TOLERANCE * sigma))) {\n        work[((4 * deflatedEnd) - 3) - pingPong] = 0.0;\n        dMin = 0.0;\n        updateSigma(tau);\n        return deflatedEnd;\n    } else if (dMin < 0.0) {\n        if (tType < (-22)) {\n            tau = 0.0;\n        } else if (dMin1 > 0.0) {\n            tau = (tau + dMin) * (1.0 - (2.0 * org.apache.commons.math.util.MathUtils.EPSILON));\n            if ((dMin >= 0) && (dMin1 > 0)) {\n                updateSigma(tau);\n                return deflatedEnd;\n            } else if ((((dMin < 0.0) && (dMin1 > 0.0)) && (work[((4 * deflatedEnd) - 5) - pingPong] < (org.apache.commons.math.linear.EigenDecompositionImpl.TOLERANCE * (sigma + dN1)))) && (java.lang.Math.abs(dN) < (org.apache.commons.math.linear.EigenDecompositionImpl.TOLERANCE * sigma))) {\n                work[((4 * deflatedEnd) - 3) - pingPong] = 0.0;\n                dMin = 0.0;\n                updateSigma(tau);\n                return deflatedEnd;\n            } else if (dMin < 0.0) {\n                if (tType < (-22)) {\n                    tau = 0.0;\n                } else if (dMin1 > 0.0) {\n                    tau = (tau + dMin) * (1.0 - (2.0 * org.apache.commons.math.util.MathUtils.EPSILON));\n                    tType -= 11;\n                } else {\n                    tau *= 0.25;\n                    tType -= 12;\n                }\n            } else if (java.lang.Double.isNaN(dMin)) {\n                tau = 0.0;\n            } else {\n                loop = false;\n            }\n            tType -= 11;\n        } else {\n            tau *= 0.25;\n            tType -= 12;\n        }\n    } else if (java.lang.Double.isNaN(dMin)) {\n        tau = 0.0;\n    } else {\n        loop = false;\n    }\n}",
            "src_parent_type": "For",
            "src_type": "LocalVariable"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "For",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "dqds(start, deflatedEnd)",
            "dst_parent": "{\n    dqds(start, deflatedEnd);\n    if ((dMin >= 0) && (dMin1 > 0)) {\n        updateSigma(tau);\n        return deflatedEnd;\n    } else if ((((dMin < 0.0) && (dMin1 > 0.0)) && (work[((4 * deflatedEnd) - 5) - pingPong] < (org.apache.commons.math.linear.EigenDecompositionImpl.TOLERANCE * (sigma + dN1)))) && (java.lang.Math.abs(dN) < (org.apache.commons.math.linear.EigenDecompositionImpl.TOLERANCE * sigma))) {\n        work[((4 * deflatedEnd) - 3) - pingPong] = 0.0;\n        dMin = 0.0;\n        updateSigma(tau);\n        return deflatedEnd;\n    } else if (dMin < 0.0) {\n        if (tType < (-22)) {\n            tau = 0.0;\n        } else if (dMin1 > 0.0) {\n            tau = (tau + dMin) * (1.0 - (2.0 * org.apache.commons.math.util.MathUtils.EPSILON));\n            tType -= 11;\n        } else {\n            tau *= 0.25;\n            tType -= 12;\n        }\n    } else if (java.lang.Double.isNaN(dMin)) {\n        tau = 0.0;\n    } else {\n        loop = false;\n    }\n}",
            "dst_parent_type": "Block",
            "dst_type": "Invocation",
            "operator": "MOV",
            "src": "dqds(start, deflatedEnd)",
            "src_parent": "{\n    dqds(start, deflatedEnd);\n    if ((dMin >= 0) && (dMin1 > 0)) {\n        updateSigma(tau);\n        return deflatedEnd;\n    } else if ((((dMin < 0.0) && (dMin1 > 0.0)) && (work[((4 * deflatedEnd) - 5) - pingPong] < (org.apache.commons.math.linear.EigenDecompositionImpl.TOLERANCE * (sigma + dN1)))) && (java.lang.Math.abs(dN) < (org.apache.commons.math.linear.EigenDecompositionImpl.TOLERANCE * sigma))) {\n        work[((4 * deflatedEnd) - 3) - pingPong] = 0.0;\n        dMin = 0.0;\n        updateSigma(tau);\n        return deflatedEnd;\n    } else if (dMin < 0.0) {\n        if (tType < (-22)) {\n            tau = 0.0;\n        } else if (dMin1 > 0.0) {\n            tau = (tau + dMin) * (1.0 - (2.0 * org.apache.commons.math.util.MathUtils.EPSILON));\n            if ((dMin >= 0) && (dMin1 > 0)) {\n                updateSigma(tau);\n                return deflatedEnd;\n            } else if ((((dMin < 0.0) && (dMin1 > 0.0)) && (work[((4 * deflatedEnd) - 5) - pingPong] < (org.apache.commons.math.linear.EigenDecompositionImpl.TOLERANCE * (sigma + dN1)))) && (java.lang.Math.abs(dN) < (org.apache.commons.math.linear.EigenDecompositionImpl.TOLERANCE * sigma))) {\n                work[((4 * deflatedEnd) - 3) - pingPong] = 0.0;\n                dMin = 0.0;\n                updateSigma(tau);\n                return deflatedEnd;\n            } else if (dMin < 0.0) {\n                if (tType < (-22)) {\n                    tau = 0.0;\n                } else if (dMin1 > 0.0) {\n                    tau = (tau + dMin) * (1.0 - (2.0 * org.apache.commons.math.util.MathUtils.EPSILON));\n                    tType -= 11;\n                } else {\n                    tau *= 0.25;\n                    tType -= 12;\n                }\n            } else if (java.lang.Double.isNaN(dMin)) {\n                tau = 0.0;\n            } else {\n                loop = false;\n            }\n            tType -= 11;\n        } else {\n            tau *= 0.25;\n            tType -= 12;\n        }\n    } else if (java.lang.Double.isNaN(dMin)) {\n        tau = 0.0;\n    } else {\n        loop = false;\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "Invocation"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "if ((dMin >= 0) && (dMin1 > 0)) {\n    updateSigma(tau);\n    return deflatedEnd;\n} else if ((((dMin < 0.0) && (dMin1 > 0.0)) && (work[((4 * deflatedEnd) - 5) - pingPong] < (org.apache.commons.math.linear.EigenDecompositionImpl.TOLERANCE * (sigma + dN1)))) && (java.lang.Math.abs(dN) < (org.apache.commons.math.linear.EigenDecompositionImpl.TOLERANCE * sigma))) {\n    work[((4 * deflatedEnd) - 3) - pingPong] = 0.0;\n    dMin = 0.0;\n    updateSigma(tau);\n    return deflatedEnd;\n} else if (dMin < 0.0) {\n    if (tType < (-22)) {\n        tau = 0.0;\n    } else if (dMin1 > 0.0) {\n        tau = (tau + dMin) * (1.0 - (2.0 * org.apache.commons.math.util.MathUtils.EPSILON));\n        tType -= 11;\n    } else {\n        tau *= 0.25;\n        tType -= 12;\n    }\n} else if (java.lang.Double.isNaN(dMin)) {\n    tau = 0.0;\n} else {\n    loop = false;\n}",
            "dst_parent": "{\n    dqds(start, deflatedEnd);\n    if ((dMin >= 0) && (dMin1 > 0)) {\n        updateSigma(tau);\n        return deflatedEnd;\n    } else if ((((dMin < 0.0) && (dMin1 > 0.0)) && (work[((4 * deflatedEnd) - 5) - pingPong] < (org.apache.commons.math.linear.EigenDecompositionImpl.TOLERANCE * (sigma + dN1)))) && (java.lang.Math.abs(dN) < (org.apache.commons.math.linear.EigenDecompositionImpl.TOLERANCE * sigma))) {\n        work[((4 * deflatedEnd) - 3) - pingPong] = 0.0;\n        dMin = 0.0;\n        updateSigma(tau);\n        return deflatedEnd;\n    } else if (dMin < 0.0) {\n        if (tType < (-22)) {\n            tau = 0.0;\n        } else if (dMin1 > 0.0) {\n            tau = (tau + dMin) * (1.0 - (2.0 * org.apache.commons.math.util.MathUtils.EPSILON));\n            tType -= 11;\n        } else {\n            tau *= 0.25;\n            tType -= 12;\n        }\n    } else if (java.lang.Double.isNaN(dMin)) {\n        tau = 0.0;\n    } else {\n        loop = false;\n    }\n}",
            "dst_parent_type": "Block",
            "dst_type": "If",
            "operator": "MOV",
            "src": "if ((dMin >= 0) && (dMin1 > 0)) {\n    updateSigma(tau);\n    return deflatedEnd;\n} else if ((((dMin < 0.0) && (dMin1 > 0.0)) && (work[((4 * deflatedEnd) - 5) - pingPong] < (org.apache.commons.math.linear.EigenDecompositionImpl.TOLERANCE * (sigma + dN1)))) && (java.lang.Math.abs(dN) < (org.apache.commons.math.linear.EigenDecompositionImpl.TOLERANCE * sigma))) {\n    work[((4 * deflatedEnd) - 3) - pingPong] = 0.0;\n    dMin = 0.0;\n    updateSigma(tau);\n    return deflatedEnd;\n} else if (dMin < 0.0) {\n    if (tType < (-22)) {\n        tau = 0.0;\n    } else if (dMin1 > 0.0) {\n        tau = (tau + dMin) * (1.0 - (2.0 * org.apache.commons.math.util.MathUtils.EPSILON));\n        tType -= 11;\n    } else {\n        tau *= 0.25;\n        tType -= 12;\n    }\n} else if (java.lang.Double.isNaN(dMin)) {\n    tau = 0.0;\n} else {\n    loop = false;\n}",
            "src_parent": "{\n    tau = (tau + dMin) * (1.0 - (2.0 * org.apache.commons.math.util.MathUtils.EPSILON));\n    if ((dMin >= 0) && (dMin1 > 0)) {\n        updateSigma(tau);\n        return deflatedEnd;\n    } else if ((((dMin < 0.0) && (dMin1 > 0.0)) && (work[((4 * deflatedEnd) - 5) - pingPong] < (org.apache.commons.math.linear.EigenDecompositionImpl.TOLERANCE * (sigma + dN1)))) && (java.lang.Math.abs(dN) < (org.apache.commons.math.linear.EigenDecompositionImpl.TOLERANCE * sigma))) {\n        work[((4 * deflatedEnd) - 3) - pingPong] = 0.0;\n        dMin = 0.0;\n        updateSigma(tau);\n        return deflatedEnd;\n    } else if (dMin < 0.0) {\n        if (tType < (-22)) {\n            tau = 0.0;\n        } else if (dMin1 > 0.0) {\n            tau = (tau + dMin) * (1.0 - (2.0 * org.apache.commons.math.util.MathUtils.EPSILON));\n            tType -= 11;\n        } else {\n            tau *= 0.25;\n            tType -= 12;\n        }\n    } else if (java.lang.Double.isNaN(dMin)) {\n        tau = 0.0;\n    } else {\n        loop = false;\n    }\n    tType -= 11;\n}",
            "src_parent_type": "Block",
            "src_type": "If"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "tType = -5",
            "dst_parent": "{\n    tType = -5;\n    double s = 0.25 * dMin;\n    final int np = nn - (2 * pingPong);\n    double b1 = work[np - 2];\n    double b2 = work[np - 6];\n    final double gam = dN2;\n    if ((work[np - 8] > b2) || (work[np - 4] > b1)) {\n        return;\n    }\n    double a2 = (work[np - 8] / b2) * (1 + (work[np - 4] / b1));\n    if ((end - start) > 2) {\n        b2 = work[nn - 13] / work[nn - 15];\n        a2 = a2 + b2;\n        for (int i4 = nn - 17; i4 >= (((4 * start) + 2) + pingPong); i4 -= 4) {\n            if (b2 == 0.0) {\n                break;\n            }\n            b1 = b2;\n            if (work[i4] > work[i4 - 2]) {\n                return;\n            }\n            b2 = b2 * (work[i4] / work[i4 - 2]);\n            a2 = a2 + b2;\n            if (((100 * java.lang.Math.max(b2, b1)) < a2) || (cnst1 < a2)) {\n                break;\n            }\n        }\n        a2 = cnst3 * a2;\n    }\n    if (a2 < cnst1) {\n        tau = (gam * (1 - java.lang.Math.sqrt(a2))) / (1 + a2);\n    } else {\n        tau = s;\n    }\n}",
            "dst_parent_type": "Block",
            "dst_type": "Assignment",
            "operator": "MOV",
            "src": "tType = -5",
            "src_parent": "{\n    tType = -5;\n    double s = 0.25 * dMin;\n    final int np = nn - (2 * pingPong);\n    double b1 = work[np - 2];\n    double b2 = work[np - 6];\n    final double gam = dN2;\n    if ((work[np - 8] > b2) || (work[np - 4] > b1)) {\n        return;\n    }\n    double a2 = (work[np - 8] / b2) * (1 + (work[np - 4] / b1));\n    if (a2 < cnst1) {\n        tau = (gam * (1 - java.lang.Math.sqrt(a2))) / (1 + a2);\n    } else {\n        tau = s;\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "Assignment"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "double s = 0.25 * dMin",
            "dst_parent": "{\n    tType = -5;\n    double s = 0.25 * dMin;\n    final int np = nn - (2 * pingPong);\n    double b1 = work[np - 2];\n    double b2 = work[np - 6];\n    final double gam = dN2;\n    if ((work[np - 8] > b2) || (work[np - 4] > b1)) {\n        return;\n    }\n    double a2 = (work[np - 8] / b2) * (1 + (work[np - 4] / b1));\n    if ((end - start) > 2) {\n        b2 = work[nn - 13] / work[nn - 15];\n        a2 = a2 + b2;\n        for (int i4 = nn - 17; i4 >= (((4 * start) + 2) + pingPong); i4 -= 4) {\n            if (b2 == 0.0) {\n                break;\n            }\n            b1 = b2;\n            if (work[i4] > work[i4 - 2]) {\n                return;\n            }\n            b2 = b2 * (work[i4] / work[i4 - 2]);\n            a2 = a2 + b2;\n            if (((100 * java.lang.Math.max(b2, b1)) < a2) || (cnst1 < a2)) {\n                break;\n            }\n        }\n        a2 = cnst3 * a2;\n    }\n    if (a2 < cnst1) {\n        tau = (gam * (1 - java.lang.Math.sqrt(a2))) / (1 + a2);\n    } else {\n        tau = s;\n    }\n}",
            "dst_parent_type": "Block",
            "dst_type": "LocalVariable",
            "operator": "MOV",
            "src": "double s = 0.25 * dMin",
            "src_parent": "{\n    tType = -5;\n    double s = 0.25 * dMin;\n    final int np = nn - (2 * pingPong);\n    double b1 = work[np - 2];\n    double b2 = work[np - 6];\n    final double gam = dN2;\n    if ((work[np - 8] > b2) || (work[np - 4] > b1)) {\n        return;\n    }\n    double a2 = (work[np - 8] / b2) * (1 + (work[np - 4] / b1));\n    if (a2 < cnst1) {\n        tau = (gam * (1 - java.lang.Math.sqrt(a2))) / (1 + a2);\n    } else {\n        tau = s;\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "LocalVariable"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "final int np = nn - (2 * pingPong)",
            "dst_parent": "{\n    tType = -5;\n    double s = 0.25 * dMin;\n    final int np = nn - (2 * pingPong);\n    double b1 = work[np - 2];\n    double b2 = work[np - 6];\n    final double gam = dN2;\n    if ((work[np - 8] > b2) || (work[np - 4] > b1)) {\n        return;\n    }\n    double a2 = (work[np - 8] / b2) * (1 + (work[np - 4] / b1));\n    if ((end - start) > 2) {\n        b2 = work[nn - 13] / work[nn - 15];\n        a2 = a2 + b2;\n        for (int i4 = nn - 17; i4 >= (((4 * start) + 2) + pingPong); i4 -= 4) {\n            if (b2 == 0.0) {\n                break;\n            }\n            b1 = b2;\n            if (work[i4] > work[i4 - 2]) {\n                return;\n            }\n            b2 = b2 * (work[i4] / work[i4 - 2]);\n            a2 = a2 + b2;\n            if (((100 * java.lang.Math.max(b2, b1)) < a2) || (cnst1 < a2)) {\n                break;\n            }\n        }\n        a2 = cnst3 * a2;\n    }\n    if (a2 < cnst1) {\n        tau = (gam * (1 - java.lang.Math.sqrt(a2))) / (1 + a2);\n    } else {\n        tau = s;\n    }\n}",
            "dst_parent_type": "Block",
            "dst_type": "LocalVariable",
            "operator": "MOV",
            "src": "final int np = nn - (2 * pingPong)",
            "src_parent": "{\n    tType = -5;\n    double s = 0.25 * dMin;\n    final int np = nn - (2 * pingPong);\n    double b1 = work[np - 2];\n    double b2 = work[np - 6];\n    final double gam = dN2;\n    if ((work[np - 8] > b2) || (work[np - 4] > b1)) {\n        return;\n    }\n    double a2 = (work[np - 8] / b2) * (1 + (work[np - 4] / b1));\n    if (a2 < cnst1) {\n        tau = (gam * (1 - java.lang.Math.sqrt(a2))) / (1 + a2);\n    } else {\n        tau = s;\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "LocalVariable"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "double b1 = work[np - 2]",
            "dst_parent": "{\n    tType = -5;\n    double s = 0.25 * dMin;\n    final int np = nn - (2 * pingPong);\n    double b1 = work[np - 2];\n    double b2 = work[np - 6];\n    final double gam = dN2;\n    if ((work[np - 8] > b2) || (work[np - 4] > b1)) {\n        return;\n    }\n    double a2 = (work[np - 8] / b2) * (1 + (work[np - 4] / b1));\n    if ((end - start) > 2) {\n        b2 = work[nn - 13] / work[nn - 15];\n        a2 = a2 + b2;\n        for (int i4 = nn - 17; i4 >= (((4 * start) + 2) + pingPong); i4 -= 4) {\n            if (b2 == 0.0) {\n                break;\n            }\n            b1 = b2;\n            if (work[i4] > work[i4 - 2]) {\n                return;\n            }\n            b2 = b2 * (work[i4] / work[i4 - 2]);\n            a2 = a2 + b2;\n            if (((100 * java.lang.Math.max(b2, b1)) < a2) || (cnst1 < a2)) {\n                break;\n            }\n        }\n        a2 = cnst3 * a2;\n    }\n    if (a2 < cnst1) {\n        tau = (gam * (1 - java.lang.Math.sqrt(a2))) / (1 + a2);\n    } else {\n        tau = s;\n    }\n}",
            "dst_parent_type": "Block",
            "dst_type": "LocalVariable",
            "operator": "MOV",
            "src": "double b1 = work[np - 2]",
            "src_parent": "{\n    tType = -5;\n    double s = 0.25 * dMin;\n    final int np = nn - (2 * pingPong);\n    double b1 = work[np - 2];\n    double b2 = work[np - 6];\n    final double gam = dN2;\n    if ((work[np - 8] > b2) || (work[np - 4] > b1)) {\n        return;\n    }\n    double a2 = (work[np - 8] / b2) * (1 + (work[np - 4] / b1));\n    if (a2 < cnst1) {\n        tau = (gam * (1 - java.lang.Math.sqrt(a2))) / (1 + a2);\n    } else {\n        tau = s;\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "LocalVariable"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "double b2 = work[np - 6]",
            "dst_parent": "{\n    tType = -5;\n    double s = 0.25 * dMin;\n    final int np = nn - (2 * pingPong);\n    double b1 = work[np - 2];\n    double b2 = work[np - 6];\n    final double gam = dN2;\n    if ((work[np - 8] > b2) || (work[np - 4] > b1)) {\n        return;\n    }\n    double a2 = (work[np - 8] / b2) * (1 + (work[np - 4] / b1));\n    if ((end - start) > 2) {\n        b2 = work[nn - 13] / work[nn - 15];\n        a2 = a2 + b2;\n        for (int i4 = nn - 17; i4 >= (((4 * start) + 2) + pingPong); i4 -= 4) {\n            if (b2 == 0.0) {\n                break;\n            }\n            b1 = b2;\n            if (work[i4] > work[i4 - 2]) {\n                return;\n            }\n            b2 = b2 * (work[i4] / work[i4 - 2]);\n            a2 = a2 + b2;\n            if (((100 * java.lang.Math.max(b2, b1)) < a2) || (cnst1 < a2)) {\n                break;\n            }\n        }\n        a2 = cnst3 * a2;\n    }\n    if (a2 < cnst1) {\n        tau = (gam * (1 - java.lang.Math.sqrt(a2))) / (1 + a2);\n    } else {\n        tau = s;\n    }\n}",
            "dst_parent_type": "Block",
            "dst_type": "LocalVariable",
            "operator": "MOV",
            "src": "double b2 = work[np - 6]",
            "src_parent": "{\n    tType = -5;\n    double s = 0.25 * dMin;\n    final int np = nn - (2 * pingPong);\n    double b1 = work[np - 2];\n    double b2 = work[np - 6];\n    final double gam = dN2;\n    if ((work[np - 8] > b2) || (work[np - 4] > b1)) {\n        return;\n    }\n    double a2 = (work[np - 8] / b2) * (1 + (work[np - 4] / b1));\n    if (a2 < cnst1) {\n        tau = (gam * (1 - java.lang.Math.sqrt(a2))) / (1 + a2);\n    } else {\n        tau = s;\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "LocalVariable"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "final double gam = dN2",
            "dst_parent": "{\n    tType = -5;\n    double s = 0.25 * dMin;\n    final int np = nn - (2 * pingPong);\n    double b1 = work[np - 2];\n    double b2 = work[np - 6];\n    final double gam = dN2;\n    if ((work[np - 8] > b2) || (work[np - 4] > b1)) {\n        return;\n    }\n    double a2 = (work[np - 8] / b2) * (1 + (work[np - 4] / b1));\n    if ((end - start) > 2) {\n        b2 = work[nn - 13] / work[nn - 15];\n        a2 = a2 + b2;\n        for (int i4 = nn - 17; i4 >= (((4 * start) + 2) + pingPong); i4 -= 4) {\n            if (b2 == 0.0) {\n                break;\n            }\n            b1 = b2;\n            if (work[i4] > work[i4 - 2]) {\n                return;\n            }\n            b2 = b2 * (work[i4] / work[i4 - 2]);\n            a2 = a2 + b2;\n            if (((100 * java.lang.Math.max(b2, b1)) < a2) || (cnst1 < a2)) {\n                break;\n            }\n        }\n        a2 = cnst3 * a2;\n    }\n    if (a2 < cnst1) {\n        tau = (gam * (1 - java.lang.Math.sqrt(a2))) / (1 + a2);\n    } else {\n        tau = s;\n    }\n}",
            "dst_parent_type": "Block",
            "dst_type": "LocalVariable",
            "operator": "MOV",
            "src": "final double gam = dN2",
            "src_parent": "{\n    tType = -5;\n    double s = 0.25 * dMin;\n    final int np = nn - (2 * pingPong);\n    double b1 = work[np - 2];\n    double b2 = work[np - 6];\n    final double gam = dN2;\n    if ((work[np - 8] > b2) || (work[np - 4] > b1)) {\n        return;\n    }\n    double a2 = (work[np - 8] / b2) * (1 + (work[np - 4] / b1));\n    if (a2 < cnst1) {\n        tau = (gam * (1 - java.lang.Math.sqrt(a2))) / (1 + a2);\n    } else {\n        tau = s;\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "LocalVariable"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "if ((work[np - 8] > b2) || (work[np - 4] > b1)) {\n    return;\n}",
            "dst_parent": "{\n    tType = -5;\n    double s = 0.25 * dMin;\n    final int np = nn - (2 * pingPong);\n    double b1 = work[np - 2];\n    double b2 = work[np - 6];\n    final double gam = dN2;\n    if ((work[np - 8] > b2) || (work[np - 4] > b1)) {\n        return;\n    }\n    double a2 = (work[np - 8] / b2) * (1 + (work[np - 4] / b1));\n    if ((end - start) > 2) {\n        b2 = work[nn - 13] / work[nn - 15];\n        a2 = a2 + b2;\n        for (int i4 = nn - 17; i4 >= (((4 * start) + 2) + pingPong); i4 -= 4) {\n            if (b2 == 0.0) {\n                break;\n            }\n            b1 = b2;\n            if (work[i4] > work[i4 - 2]) {\n                return;\n            }\n            b2 = b2 * (work[i4] / work[i4 - 2]);\n            a2 = a2 + b2;\n            if (((100 * java.lang.Math.max(b2, b1)) < a2) || (cnst1 < a2)) {\n                break;\n            }\n        }\n        a2 = cnst3 * a2;\n    }\n    if (a2 < cnst1) {\n        tau = (gam * (1 - java.lang.Math.sqrt(a2))) / (1 + a2);\n    } else {\n        tau = s;\n    }\n}",
            "dst_parent_type": "Block",
            "dst_type": "If",
            "operator": "MOV",
            "src": "if ((work[np - 8] > b2) || (work[np - 4] > b1)) {\n    return;\n}",
            "src_parent": "{\n    tType = -5;\n    double s = 0.25 * dMin;\n    final int np = nn - (2 * pingPong);\n    double b1 = work[np - 2];\n    double b2 = work[np - 6];\n    final double gam = dN2;\n    if ((work[np - 8] > b2) || (work[np - 4] > b1)) {\n        return;\n    }\n    double a2 = (work[np - 8] / b2) * (1 + (work[np - 4] / b1));\n    if (a2 < cnst1) {\n        tau = (gam * (1 - java.lang.Math.sqrt(a2))) / (1 + a2);\n    } else {\n        tau = s;\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "If"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "double a2 = (work[np - 8] / b2) * (1 + (work[np - 4] / b1))",
            "dst_parent": "{\n    tType = -5;\n    double s = 0.25 * dMin;\n    final int np = nn - (2 * pingPong);\n    double b1 = work[np - 2];\n    double b2 = work[np - 6];\n    final double gam = dN2;\n    if ((work[np - 8] > b2) || (work[np - 4] > b1)) {\n        return;\n    }\n    double a2 = (work[np - 8] / b2) * (1 + (work[np - 4] / b1));\n    if ((end - start) > 2) {\n        b2 = work[nn - 13] / work[nn - 15];\n        a2 = a2 + b2;\n        for (int i4 = nn - 17; i4 >= (((4 * start) + 2) + pingPong); i4 -= 4) {\n            if (b2 == 0.0) {\n                break;\n            }\n            b1 = b2;\n            if (work[i4] > work[i4 - 2]) {\n                return;\n            }\n            b2 = b2 * (work[i4] / work[i4 - 2]);\n            a2 = a2 + b2;\n            if (((100 * java.lang.Math.max(b2, b1)) < a2) || (cnst1 < a2)) {\n                break;\n            }\n        }\n        a2 = cnst3 * a2;\n    }\n    if (a2 < cnst1) {\n        tau = (gam * (1 - java.lang.Math.sqrt(a2))) / (1 + a2);\n    } else {\n        tau = s;\n    }\n}",
            "dst_parent_type": "Block",
            "dst_type": "LocalVariable",
            "operator": "MOV",
            "src": "double a2 = (work[np - 8] / b2) * (1 + (work[np - 4] / b1))",
            "src_parent": "{\n    tType = -5;\n    double s = 0.25 * dMin;\n    final int np = nn - (2 * pingPong);\n    double b1 = work[np - 2];\n    double b2 = work[np - 6];\n    final double gam = dN2;\n    if ((work[np - 8] > b2) || (work[np - 4] > b1)) {\n        return;\n    }\n    double a2 = (work[np - 8] / b2) * (1 + (work[np - 4] / b1));\n    if (a2 < cnst1) {\n        tau = (gam * (1 - java.lang.Math.sqrt(a2))) / (1 + a2);\n    } else {\n        tau = s;\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "LocalVariable"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "if (a2 < cnst1) {\n    tau = (gam * (1 - java.lang.Math.sqrt(a2))) / (1 + a2);\n} else {\n    tau = s;\n}",
            "dst_parent": "{\n    tType = -5;\n    double s = 0.25 * dMin;\n    final int np = nn - (2 * pingPong);\n    double b1 = work[np - 2];\n    double b2 = work[np - 6];\n    final double gam = dN2;\n    if ((work[np - 8] > b2) || (work[np - 4] > b1)) {\n        return;\n    }\n    double a2 = (work[np - 8] / b2) * (1 + (work[np - 4] / b1));\n    if ((end - start) > 2) {\n        b2 = work[nn - 13] / work[nn - 15];\n        a2 = a2 + b2;\n        for (int i4 = nn - 17; i4 >= (((4 * start) + 2) + pingPong); i4 -= 4) {\n            if (b2 == 0.0) {\n                break;\n            }\n            b1 = b2;\n            if (work[i4] > work[i4 - 2]) {\n                return;\n            }\n            b2 = b2 * (work[i4] / work[i4 - 2]);\n            a2 = a2 + b2;\n            if (((100 * java.lang.Math.max(b2, b1)) < a2) || (cnst1 < a2)) {\n                break;\n            }\n        }\n        a2 = cnst3 * a2;\n    }\n    if (a2 < cnst1) {\n        tau = (gam * (1 - java.lang.Math.sqrt(a2))) / (1 + a2);\n    } else {\n        tau = s;\n    }\n}",
            "dst_parent_type": "Block",
            "dst_type": "If",
            "operator": "MOV",
            "src": "if (a2 < cnst1) {\n    tau = (gam * (1 - java.lang.Math.sqrt(a2))) / (1 + a2);\n} else {\n    tau = s;\n}",
            "src_parent": "{\n    tType = -5;\n    double s = 0.25 * dMin;\n    final int np = nn - (2 * pingPong);\n    double b1 = work[np - 2];\n    double b2 = work[np - 6];\n    final double gam = dN2;\n    if ((work[np - 8] > b2) || (work[np - 4] > b1)) {\n        return;\n    }\n    double a2 = (work[np - 8] / b2) * (1 + (work[np - 4] / b1));\n    if (a2 < cnst1) {\n        tau = (gam * (1 - java.lang.Math.sqrt(a2))) / (1 + a2);\n    } else {\n        tau = s;\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "If"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "{\n    break;\n}",
            "dst_parent": "if (b2 == 0.0) {\n    break;\n}",
            "dst_parent_type": "If",
            "dst_type": "Block",
            "operator": "MOV",
            "src": "{\n    tType = -5;\n    double s = 0.25 * dMin;\n    final int np = nn - (2 * pingPong);\n    double b1 = work[np - 2];\n    double b2 = work[np - 6];\n    final double gam = dN2;\n    if ((work[np - 8] > b2) || (work[np - 4] > b1)) {\n        return;\n    }\n    double a2 = (work[np - 8] / b2) * (1 + (work[np - 4] / b1));\n    if (a2 < cnst1) {\n        tau = (gam * (1 - java.lang.Math.sqrt(a2))) / (1 + a2);\n    } else {\n        tau = s;\n    }\n}",
            "src_parent": "if (dMin == dN2) {\n    tType = -5;\n    double s = 0.25 * dMin;\n    final int np = nn - (2 * pingPong);\n    double b1 = work[np - 2];\n    double b2 = work[np - 6];\n    final double gam = dN2;\n    if ((work[np - 8] > b2) || (work[np - 4] > b1)) {\n        return;\n    }\n    double a2 = (work[np - 8] / b2) * (1 + (work[np - 4] / b1));\n    if (a2 < cnst1) {\n        tau = (gam * (1 - java.lang.Math.sqrt(a2))) / (1 + a2);\n    } else {\n        tau = s;\n    }\n} else {\n    if (tType == (-6)) {\n        g += 0.333 * (1 - g);\n    } else if (tType == (-18)) {\n        g = 0.25 * 0.333;\n    } else {\n        g = 0.25;\n    }\n    tau = g * dMin;\n    tType = -6;\n}",
            "src_parent_type": "If",
            "src_type": "Block"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Assignment",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "Return",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Assignment",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "work",
            "dst_parent": "work[nn - 5]",
            "dst_parent_type": "ArrayRead",
            "dst_type": "FieldRead",
            "operator": "MOV",
            "src": "work",
            "src_parent": "work[((4 * deflatedEnd) - 3) - pingPong]",
            "src_parent_type": "ArrayWrite",
            "src_type": "FieldRead"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "work",
            "dst_parent": "work[nn - 7]",
            "dst_parent_type": "ArrayRead",
            "dst_type": "FieldRead",
            "operator": "MOV",
            "src": "work",
            "src_parent": "work[((4 * deflatedEnd) - 5) - pingPong]",
            "src_parent_type": "ArrayRead",
            "src_type": "FieldRead"
          }
        }
      ],
      "file_name": "EigenDecompositionImpl"
    }
  ],
  "id": "GenProg_patch_Defects4J_Math_81_0_329"
}