{
  "files": [
    {
      "features": [
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Package",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "true",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Class",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "private final java.util.Map<java.lang.String, byte[]> notes;",
            "src_parent": "public final class AnsiColorConsoleLogFilter extends hudson.console.ConsoleLogFilter implements java.io.Serializable {\n    private static final long serialVersionUID = 1L;\n\n    private static final java.util.logging.Logger LOG = java.util.logging.Logger.getLogger(hudson.plugins.ansicolor.AnsiColorConsoleLogFilter.class.getName());\n\n    private hudson.plugins.ansicolor.AnsiColorMap colorMap;\n\n    private final java.util.Map<java.lang.String, byte[]> notes;\n\n    public AnsiColorConsoleLogFilter(hudson.plugins.ansicolor.AnsiColorMap colorMap) {\n        super();\n        this.colorMap = colorMap;\n        this.notes = new java.util.HashMap<>();\n        for (hudson.plugins.ansicolor.AnsiColorMap.Color color : AnsiColorMap.Color.values()) {\n            pregenerateNote(new hudson.plugins.ansicolor.AnsiAttributeElement(AnsiAttributeElement.AnsiAttrType.FG, \"span\", (\"style=\\\"color: \" + colorMap.getNormal(color.ordinal())) + \";\\\"\"));\n        }\n        hudson.plugins.ansicolor.AnsiColorConsoleLogFilter.LOG.log(java.util.logging.Level.FINE, \"Notes pregenerated for {0}\", notes.keySet());\n    }\n\n    private void pregenerateNote(hudson.plugins.ansicolor.AnsiAttributeElement element) {\n        element.emitOpen(( html) -> pregenerateNote(html));\n        element.emitClose(( html) -> pregenerateNote(html));\n    }\n\n    private void pregenerateNote(java.lang.String html) {\n        if (!notes.containsKey(html)) {\n            jenkins.util.JenkinsJVM.checkJenkinsJVM();\n            java.io.ByteArrayOutputStream baos = new java.io.ByteArrayOutputStream();\n            try {\n                new hudson.plugins.ansicolor.SimpleHtmlNote(html).encodeTo(baos);\n            } catch (java.io.IOException x) {\n                throw new java.lang.RuntimeException(x);\n            }\n            notes.put(html, baos.toByteArray());\n        }\n    }\n\n    private java.lang.Object readResolve() {\n        return notes == null ? new hudson.plugins.ansicolor.AnsiColorConsoleLogFilter(colorMap) : this;\n    }\n\n    @java.lang.SuppressWarnings(\"rawtypes\")\n    @java.lang.Override\n    public java.io.OutputStream decorateLogger(hudson.model.AbstractBuild build, final java.io.OutputStream logger) throws java.io.IOException, java.lang.InterruptedException {\n        if (logger == null) {\n            return null;\n        }\n        return new hudson.console.LineTransformationOutputStream() {\n            hudson.plugins.ansicolor.AnsiHtmlOutputStream ansi = new hudson.plugins.ansicolor.AnsiHtmlOutputStream(logger, colorMap, new hudson.plugins.ansicolor.AnsiAttributeElement.Emitter() {\n                @java.lang.Override\n                public void emitHtml(java.lang.String html) {\n                    try {\n                        byte[] pregenerated = notes.get(html);\n                        if (pregenerated != null) {\n                            logger.write(pregenerated);\n                        } else {\n                            new hudson.plugins.ansicolor.SimpleHtmlNote(html).encodeTo(logger);\n                        }\n                    } catch (java.io.IOException e) {\n                        hudson.plugins.ansicolor.AnsiColorConsoleLogFilter.LOG.log(java.util.logging.Level.WARNING, (\"Failed to add HTML markup '\" + html) + \"'\", e);\n                    }\n                }\n            });\n\n            @java.lang.Override\n            protected void eol(byte[] b, int len) throws java.io.IOException {\n                ansi.write(b, 0, len);\n                ansi.flush();\n                logger.flush();\n            }\n\n            @java.lang.Override\n            public void close() throws java.io.IOException {\n                ansi.close();\n                logger.close();\n                super.close();\n            }\n        };\n    }\n}",
            "src_parent_type": "Class",
            "src_type": "Field"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Package",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "true",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Class",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "private void pregenerateNote(hudson.plugins.ansicolor.AnsiAttributeElement element) {\n    element.emitOpen(( html) -> pregenerateNote(html));\n    element.emitClose(( html) -> pregenerateNote(html));\n}",
            "src_parent": "public final class AnsiColorConsoleLogFilter extends hudson.console.ConsoleLogFilter implements java.io.Serializable {\n    private static final long serialVersionUID = 1L;\n\n    private static final java.util.logging.Logger LOG = java.util.logging.Logger.getLogger(hudson.plugins.ansicolor.AnsiColorConsoleLogFilter.class.getName());\n\n    private hudson.plugins.ansicolor.AnsiColorMap colorMap;\n\n    private final java.util.Map<java.lang.String, byte[]> notes;\n\n    public AnsiColorConsoleLogFilter(hudson.plugins.ansicolor.AnsiColorMap colorMap) {\n        super();\n        this.colorMap = colorMap;\n        this.notes = new java.util.HashMap<>();\n        for (hudson.plugins.ansicolor.AnsiColorMap.Color color : AnsiColorMap.Color.values()) {\n            pregenerateNote(new hudson.plugins.ansicolor.AnsiAttributeElement(AnsiAttributeElement.AnsiAttrType.FG, \"span\", (\"style=\\\"color: \" + colorMap.getNormal(color.ordinal())) + \";\\\"\"));\n        }\n        hudson.plugins.ansicolor.AnsiColorConsoleLogFilter.LOG.log(java.util.logging.Level.FINE, \"Notes pregenerated for {0}\", notes.keySet());\n    }\n\n    private void pregenerateNote(hudson.plugins.ansicolor.AnsiAttributeElement element) {\n        element.emitOpen(( html) -> pregenerateNote(html));\n        element.emitClose(( html) -> pregenerateNote(html));\n    }\n\n    private void pregenerateNote(java.lang.String html) {\n        if (!notes.containsKey(html)) {\n            jenkins.util.JenkinsJVM.checkJenkinsJVM();\n            java.io.ByteArrayOutputStream baos = new java.io.ByteArrayOutputStream();\n            try {\n                new hudson.plugins.ansicolor.SimpleHtmlNote(html).encodeTo(baos);\n            } catch (java.io.IOException x) {\n                throw new java.lang.RuntimeException(x);\n            }\n            notes.put(html, baos.toByteArray());\n        }\n    }\n\n    private java.lang.Object readResolve() {\n        return notes == null ? new hudson.plugins.ansicolor.AnsiColorConsoleLogFilter(colorMap) : this;\n    }\n\n    @java.lang.SuppressWarnings(\"rawtypes\")\n    @java.lang.Override\n    public java.io.OutputStream decorateLogger(hudson.model.AbstractBuild build, final java.io.OutputStream logger) throws java.io.IOException, java.lang.InterruptedException {\n        if (logger == null) {\n            return null;\n        }\n        return new hudson.console.LineTransformationOutputStream() {\n            hudson.plugins.ansicolor.AnsiHtmlOutputStream ansi = new hudson.plugins.ansicolor.AnsiHtmlOutputStream(logger, colorMap, new hudson.plugins.ansicolor.AnsiAttributeElement.Emitter() {\n                @java.lang.Override\n                public void emitHtml(java.lang.String html) {\n                    try {\n                        byte[] pregenerated = notes.get(html);\n                        if (pregenerated != null) {\n                            logger.write(pregenerated);\n                        } else {\n                            new hudson.plugins.ansicolor.SimpleHtmlNote(html).encodeTo(logger);\n                        }\n                    } catch (java.io.IOException e) {\n                        hudson.plugins.ansicolor.AnsiColorConsoleLogFilter.LOG.log(java.util.logging.Level.WARNING, (\"Failed to add HTML markup '\" + html) + \"'\", e);\n                    }\n                }\n            });\n\n            @java.lang.Override\n            protected void eol(byte[] b, int len) throws java.io.IOException {\n                ansi.write(b, 0, len);\n                ansi.flush();\n                logger.flush();\n            }\n\n            @java.lang.Override\n            public void close() throws java.io.IOException {\n                ansi.close();\n                logger.close();\n                super.close();\n            }\n        };\n    }\n}",
            "src_parent_type": "Class",
            "src_type": "Method"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Package",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "true",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Class",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "private void pregenerateNote(java.lang.String html) {\n    if (!notes.containsKey(html)) {\n        jenkins.util.JenkinsJVM.checkJenkinsJVM();\n        java.io.ByteArrayOutputStream baos = new java.io.ByteArrayOutputStream();\n        try {\n            new hudson.plugins.ansicolor.SimpleHtmlNote(html).encodeTo(baos);\n        } catch (java.io.IOException x) {\n            throw new java.lang.RuntimeException(x);\n        }\n        notes.put(html, baos.toByteArray());\n    }\n}",
            "src_parent": "public final class AnsiColorConsoleLogFilter extends hudson.console.ConsoleLogFilter implements java.io.Serializable {\n    private static final long serialVersionUID = 1L;\n\n    private static final java.util.logging.Logger LOG = java.util.logging.Logger.getLogger(hudson.plugins.ansicolor.AnsiColorConsoleLogFilter.class.getName());\n\n    private hudson.plugins.ansicolor.AnsiColorMap colorMap;\n\n    private final java.util.Map<java.lang.String, byte[]> notes;\n\n    public AnsiColorConsoleLogFilter(hudson.plugins.ansicolor.AnsiColorMap colorMap) {\n        super();\n        this.colorMap = colorMap;\n        this.notes = new java.util.HashMap<>();\n        for (hudson.plugins.ansicolor.AnsiColorMap.Color color : AnsiColorMap.Color.values()) {\n            pregenerateNote(new hudson.plugins.ansicolor.AnsiAttributeElement(AnsiAttributeElement.AnsiAttrType.FG, \"span\", (\"style=\\\"color: \" + colorMap.getNormal(color.ordinal())) + \";\\\"\"));\n        }\n        hudson.plugins.ansicolor.AnsiColorConsoleLogFilter.LOG.log(java.util.logging.Level.FINE, \"Notes pregenerated for {0}\", notes.keySet());\n    }\n\n    private void pregenerateNote(hudson.plugins.ansicolor.AnsiAttributeElement element) {\n        element.emitOpen(( html) -> pregenerateNote(html));\n        element.emitClose(( html) -> pregenerateNote(html));\n    }\n\n    private void pregenerateNote(java.lang.String html) {\n        if (!notes.containsKey(html)) {\n            jenkins.util.JenkinsJVM.checkJenkinsJVM();\n            java.io.ByteArrayOutputStream baos = new java.io.ByteArrayOutputStream();\n            try {\n                new hudson.plugins.ansicolor.SimpleHtmlNote(html).encodeTo(baos);\n            } catch (java.io.IOException x) {\n                throw new java.lang.RuntimeException(x);\n            }\n            notes.put(html, baos.toByteArray());\n        }\n    }\n\n    private java.lang.Object readResolve() {\n        return notes == null ? new hudson.plugins.ansicolor.AnsiColorConsoleLogFilter(colorMap) : this;\n    }\n\n    @java.lang.SuppressWarnings(\"rawtypes\")\n    @java.lang.Override\n    public java.io.OutputStream decorateLogger(hudson.model.AbstractBuild build, final java.io.OutputStream logger) throws java.io.IOException, java.lang.InterruptedException {\n        if (logger == null) {\n            return null;\n        }\n        return new hudson.console.LineTransformationOutputStream() {\n            hudson.plugins.ansicolor.AnsiHtmlOutputStream ansi = new hudson.plugins.ansicolor.AnsiHtmlOutputStream(logger, colorMap, new hudson.plugins.ansicolor.AnsiAttributeElement.Emitter() {\n                @java.lang.Override\n                public void emitHtml(java.lang.String html) {\n                    try {\n                        byte[] pregenerated = notes.get(html);\n                        if (pregenerated != null) {\n                            logger.write(pregenerated);\n                        } else {\n                            new hudson.plugins.ansicolor.SimpleHtmlNote(html).encodeTo(logger);\n                        }\n                    } catch (java.io.IOException e) {\n                        hudson.plugins.ansicolor.AnsiColorConsoleLogFilter.LOG.log(java.util.logging.Level.WARNING, (\"Failed to add HTML markup '\" + html) + \"'\", e);\n                    }\n                }\n            });\n\n            @java.lang.Override\n            protected void eol(byte[] b, int len) throws java.io.IOException {\n                ansi.write(b, 0, len);\n                ansi.flush();\n                logger.flush();\n            }\n\n            @java.lang.Override\n            public void close() throws java.io.IOException {\n                ansi.close();\n                logger.close();\n                super.close();\n            }\n        };\n    }\n}",
            "src_parent_type": "Class",
            "src_type": "Method"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Package",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "true",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Class",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "private java.lang.Object readResolve() {\n    return notes == null ? new hudson.plugins.ansicolor.AnsiColorConsoleLogFilter(colorMap) : this;\n}",
            "src_parent": "public final class AnsiColorConsoleLogFilter extends hudson.console.ConsoleLogFilter implements java.io.Serializable {\n    private static final long serialVersionUID = 1L;\n\n    private static final java.util.logging.Logger LOG = java.util.logging.Logger.getLogger(hudson.plugins.ansicolor.AnsiColorConsoleLogFilter.class.getName());\n\n    private hudson.plugins.ansicolor.AnsiColorMap colorMap;\n\n    private final java.util.Map<java.lang.String, byte[]> notes;\n\n    public AnsiColorConsoleLogFilter(hudson.plugins.ansicolor.AnsiColorMap colorMap) {\n        super();\n        this.colorMap = colorMap;\n        this.notes = new java.util.HashMap<>();\n        for (hudson.plugins.ansicolor.AnsiColorMap.Color color : AnsiColorMap.Color.values()) {\n            pregenerateNote(new hudson.plugins.ansicolor.AnsiAttributeElement(AnsiAttributeElement.AnsiAttrType.FG, \"span\", (\"style=\\\"color: \" + colorMap.getNormal(color.ordinal())) + \";\\\"\"));\n        }\n        hudson.plugins.ansicolor.AnsiColorConsoleLogFilter.LOG.log(java.util.logging.Level.FINE, \"Notes pregenerated for {0}\", notes.keySet());\n    }\n\n    private void pregenerateNote(hudson.plugins.ansicolor.AnsiAttributeElement element) {\n        element.emitOpen(( html) -> pregenerateNote(html));\n        element.emitClose(( html) -> pregenerateNote(html));\n    }\n\n    private void pregenerateNote(java.lang.String html) {\n        if (!notes.containsKey(html)) {\n            jenkins.util.JenkinsJVM.checkJenkinsJVM();\n            java.io.ByteArrayOutputStream baos = new java.io.ByteArrayOutputStream();\n            try {\n                new hudson.plugins.ansicolor.SimpleHtmlNote(html).encodeTo(baos);\n            } catch (java.io.IOException x) {\n                throw new java.lang.RuntimeException(x);\n            }\n            notes.put(html, baos.toByteArray());\n        }\n    }\n\n    private java.lang.Object readResolve() {\n        return notes == null ? new hudson.plugins.ansicolor.AnsiColorConsoleLogFilter(colorMap) : this;\n    }\n\n    @java.lang.SuppressWarnings(\"rawtypes\")\n    @java.lang.Override\n    public java.io.OutputStream decorateLogger(hudson.model.AbstractBuild build, final java.io.OutputStream logger) throws java.io.IOException, java.lang.InterruptedException {\n        if (logger == null) {\n            return null;\n        }\n        return new hudson.console.LineTransformationOutputStream() {\n            hudson.plugins.ansicolor.AnsiHtmlOutputStream ansi = new hudson.plugins.ansicolor.AnsiHtmlOutputStream(logger, colorMap, new hudson.plugins.ansicolor.AnsiAttributeElement.Emitter() {\n                @java.lang.Override\n                public void emitHtml(java.lang.String html) {\n                    try {\n                        byte[] pregenerated = notes.get(html);\n                        if (pregenerated != null) {\n                            logger.write(pregenerated);\n                        } else {\n                            new hudson.plugins.ansicolor.SimpleHtmlNote(html).encodeTo(logger);\n                        }\n                    } catch (java.io.IOException e) {\n                        hudson.plugins.ansicolor.AnsiColorConsoleLogFilter.LOG.log(java.util.logging.Level.WARNING, (\"Failed to add HTML markup '\" + html) + \"'\", e);\n                    }\n                }\n            });\n\n            @java.lang.Override\n            protected void eol(byte[] b, int len) throws java.io.IOException {\n                ansi.write(b, 0, len);\n                ansi.flush();\n                logger.flush();\n            }\n\n            @java.lang.Override\n            public void close() throws java.io.IOException {\n                ansi.close();\n                logger.close();\n                super.close();\n            }\n        };\n    }\n}",
            "src_parent_type": "Class",
            "src_type": "Method"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Constructor",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "this.notes = new java.util.HashMap<>()",
            "src_parent": "{\n    super();\n    this.colorMap = colorMap;\n    this.notes = new java.util.HashMap<>();\n    for (hudson.plugins.ansicolor.AnsiColorMap.Color color : AnsiColorMap.Color.values()) {\n        pregenerateNote(new hudson.plugins.ansicolor.AnsiAttributeElement(AnsiAttributeElement.AnsiAttrType.FG, \"span\", (\"style=\\\"color: \" + colorMap.getNormal(color.ordinal())) + \";\\\"\"));\n    }\n    hudson.plugins.ansicolor.AnsiColorConsoleLogFilter.LOG.log(java.util.logging.Level.FINE, \"Notes pregenerated for {0}\", notes.keySet());\n}",
            "src_parent_type": "Block",
            "src_type": "Assignment"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Constructor",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "for (hudson.plugins.ansicolor.AnsiColorMap.Color color : AnsiColorMap.Color.values()) {\n    pregenerateNote(new hudson.plugins.ansicolor.AnsiAttributeElement(AnsiAttributeElement.AnsiAttrType.FG, \"span\", (\"style=\\\"color: \" + colorMap.getNormal(color.ordinal())) + \";\\\"\"));\n}",
            "src_parent": "{\n    super();\n    this.colorMap = colorMap;\n    this.notes = new java.util.HashMap<>();\n    for (hudson.plugins.ansicolor.AnsiColorMap.Color color : AnsiColorMap.Color.values()) {\n        pregenerateNote(new hudson.plugins.ansicolor.AnsiAttributeElement(AnsiAttributeElement.AnsiAttrType.FG, \"span\", (\"style=\\\"color: \" + colorMap.getNormal(color.ordinal())) + \";\\\"\"));\n    }\n    hudson.plugins.ansicolor.AnsiColorConsoleLogFilter.LOG.log(java.util.logging.Level.FINE, \"Notes pregenerated for {0}\", notes.keySet());\n}",
            "src_parent_type": "Block",
            "src_type": "ForEach"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Constructor",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "hudson.plugins.ansicolor.AnsiColorConsoleLogFilter.LOG.log(java.util.logging.Level.FINE, \"Notes pregenerated for {0}\", notes.keySet())",
            "src_parent": "{\n    super();\n    this.colorMap = colorMap;\n    this.notes = new java.util.HashMap<>();\n    for (hudson.plugins.ansicolor.AnsiColorMap.Color color : AnsiColorMap.Color.values()) {\n        pregenerateNote(new hudson.plugins.ansicolor.AnsiAttributeElement(AnsiAttributeElement.AnsiAttrType.FG, \"span\", (\"style=\\\"color: \" + colorMap.getNormal(color.ordinal())) + \";\\\"\"));\n    }\n    hudson.plugins.ansicolor.AnsiColorConsoleLogFilter.LOG.log(java.util.logging.Level.FINE, \"Notes pregenerated for {0}\", notes.keySet());\n}",
            "src_parent_type": "Block",
            "src_type": "Invocation"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "true",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Return",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "byte[] pregenerated = notes.get(html)",
            "src_parent": "{\n    byte[] pregenerated = notes.get(html);\n    if (pregenerated != null) {\n        logger.write(pregenerated);\n    } else {\n        new hudson.plugins.ansicolor.SimpleHtmlNote(html).encodeTo(logger);\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "LocalVariable"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "true",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Return",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "if (pregenerated != null) {\n    logger.write(pregenerated);\n} else {\n    new hudson.plugins.ansicolor.SimpleHtmlNote(html).encodeTo(logger);\n}",
            "src_parent": "{\n    byte[] pregenerated = notes.get(html);\n    if (pregenerated != null) {\n        logger.write(pregenerated);\n    } else {\n        new hudson.plugins.ansicolor.SimpleHtmlNote(html).encodeTo(logger);\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "If"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Try",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "new hudson.plugins.ansicolor.SimpleHtmlNote(html).encodeTo(logger)",
            "dst_parent": "{\n    new hudson.plugins.ansicolor.SimpleHtmlNote(html).encodeTo(logger);\n}",
            "dst_parent_type": "Block",
            "dst_type": "Invocation",
            "operator": "MOV",
            "src": "new hudson.plugins.ansicolor.SimpleHtmlNote(html).encodeTo(logger)",
            "src_parent": "{\n    new hudson.plugins.ansicolor.SimpleHtmlNote(html).encodeTo(logger);\n}",
            "src_parent_type": "Block",
            "src_type": "Invocation"
          }
        }
      ],
      "file_name": "AnsiColorConsoleLogFilter"
    }
  ],
  "id": "bears_221"
}