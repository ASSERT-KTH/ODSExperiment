{
  "files": [
    {
      "features": [
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "Invocation",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "For",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "printer.insertLine()",
            "dst_parent": "{\n    printer.insertLine();\n}",
            "dst_parent_type": "Block",
            "dst_type": "Invocation",
            "operator": "UPD",
            "src": "elementPrinterHelper.writeComment(e, spoon.reflect.visitor.printer.CommentOffset.AFTER)",
            "src_parent": "{\n    elementPrinterHelper.writeComment(e, spoon.reflect.visitor.printer.CommentOffset.AFTER);\n}",
            "src_parent_type": "Block",
            "src_type": "Invocation"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "true",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Invocation",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "printer",
            "dst_parent": "printer.insertLine()",
            "dst_parent_type": "Invocation",
            "dst_type": "FieldRead",
            "operator": "UPD",
            "src": "elementPrinterHelper",
            "src_parent": "elementPrinterHelper.writeComment(e, spoon.reflect.visitor.printer.CommentOffset.AFTER)",
            "src_parent_type": "Invocation",
            "src_type": "FieldRead"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "Try",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "if (!(condition instanceof spoon.reflect.code.CtStatement)) {\n    elementPrinterHelper.writeComment(condition, spoon.reflect.visitor.printer.CommentOffset.BEFORE);\n}",
            "src_parent": "{\n    enterCtExpression(conditional);\n    spoon.reflect.code.CtExpression<java.lang.Boolean> condition = conditional.getCondition();\n    if (!(condition instanceof spoon.reflect.code.CtStatement)) {\n        elementPrinterHelper.writeComment(condition, spoon.reflect.visitor.printer.CommentOffset.BEFORE);\n    }\n    boolean parent;\n    try {\n        parent = (conditional.getParent() instanceof spoon.reflect.code.CtAssignment) || (conditional.getParent() instanceof spoon.reflect.declaration.CtVariable);\n    } catch (spoon.reflect.declaration.ParentNotInitializedException ex) {\n        parent = false;\n    }\n    if (parent) {\n        printer.write(\"(\");\n    }\n    scan(condition);\n    if (parent) {\n        printer.write(\")\");\n    }\n    if (!(condition instanceof spoon.reflect.code.CtStatement)) {\n        elementPrinterHelper.writeComment(condition, spoon.reflect.visitor.printer.CommentOffset.AFTER);\n    }\n    printer.write(\" ? \");\n    spoon.reflect.code.CtExpression<T> thenExpression = conditional.getThenExpression();\n    if (!(thenExpression instanceof spoon.reflect.code.CtStatement)) {\n        elementPrinterHelper.writeComment(thenExpression, spoon.reflect.visitor.printer.CommentOffset.BEFORE);\n    }\n    scan(thenExpression);\n    if (!(thenExpression instanceof spoon.reflect.code.CtStatement)) {\n        elementPrinterHelper.writeComment(thenExpression, spoon.reflect.visitor.printer.CommentOffset.AFTER);\n    }\n    printer.write(\" : \");\n    spoon.reflect.code.CtExpression<T> elseExpression = conditional.getElseExpression();\n    boolean isAssign = false;\n    if (isAssign = elseExpression instanceof spoon.reflect.code.CtAssignment) {\n        printer.write(\"(\");\n    }\n    if (!(elseExpression instanceof spoon.reflect.code.CtStatement)) {\n        elementPrinterHelper.writeComment(elseExpression, spoon.reflect.visitor.printer.CommentOffset.BEFORE);\n    }\n    scan(elseExpression);\n    if (!(elseExpression instanceof spoon.reflect.code.CtStatement)) {\n        elementPrinterHelper.writeComment(elseExpression, spoon.reflect.visitor.printer.CommentOffset.AFTER);\n    }\n    if (isAssign) {\n        printer.write(\")\");\n    }\n    exitCtExpression(conditional);\n}",
            "src_parent_type": "Block",
            "src_type": "If"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "If",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "if (!(condition instanceof spoon.reflect.code.CtStatement)) {\n    elementPrinterHelper.writeComment(condition, spoon.reflect.visitor.printer.CommentOffset.AFTER);\n}",
            "src_parent": "{\n    enterCtExpression(conditional);\n    spoon.reflect.code.CtExpression<java.lang.Boolean> condition = conditional.getCondition();\n    if (!(condition instanceof spoon.reflect.code.CtStatement)) {\n        elementPrinterHelper.writeComment(condition, spoon.reflect.visitor.printer.CommentOffset.BEFORE);\n    }\n    boolean parent;\n    try {\n        parent = (conditional.getParent() instanceof spoon.reflect.code.CtAssignment) || (conditional.getParent() instanceof spoon.reflect.declaration.CtVariable);\n    } catch (spoon.reflect.declaration.ParentNotInitializedException ex) {\n        parent = false;\n    }\n    if (parent) {\n        printer.write(\"(\");\n    }\n    scan(condition);\n    if (parent) {\n        printer.write(\")\");\n    }\n    if (!(condition instanceof spoon.reflect.code.CtStatement)) {\n        elementPrinterHelper.writeComment(condition, spoon.reflect.visitor.printer.CommentOffset.AFTER);\n    }\n    printer.write(\" ? \");\n    spoon.reflect.code.CtExpression<T> thenExpression = conditional.getThenExpression();\n    if (!(thenExpression instanceof spoon.reflect.code.CtStatement)) {\n        elementPrinterHelper.writeComment(thenExpression, spoon.reflect.visitor.printer.CommentOffset.BEFORE);\n    }\n    scan(thenExpression);\n    if (!(thenExpression instanceof spoon.reflect.code.CtStatement)) {\n        elementPrinterHelper.writeComment(thenExpression, spoon.reflect.visitor.printer.CommentOffset.AFTER);\n    }\n    printer.write(\" : \");\n    spoon.reflect.code.CtExpression<T> elseExpression = conditional.getElseExpression();\n    boolean isAssign = false;\n    if (isAssign = elseExpression instanceof spoon.reflect.code.CtAssignment) {\n        printer.write(\"(\");\n    }\n    if (!(elseExpression instanceof spoon.reflect.code.CtStatement)) {\n        elementPrinterHelper.writeComment(elseExpression, spoon.reflect.visitor.printer.CommentOffset.BEFORE);\n    }\n    scan(elseExpression);\n    if (!(elseExpression instanceof spoon.reflect.code.CtStatement)) {\n        elementPrinterHelper.writeComment(elseExpression, spoon.reflect.visitor.printer.CommentOffset.AFTER);\n    }\n    if (isAssign) {\n        printer.write(\")\");\n    }\n    exitCtExpression(conditional);\n}",
            "src_parent_type": "Block",
            "src_type": "If"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "If",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "if (!(thenExpression instanceof spoon.reflect.code.CtStatement)) {\n    elementPrinterHelper.writeComment(thenExpression, spoon.reflect.visitor.printer.CommentOffset.BEFORE);\n}",
            "src_parent": "{\n    enterCtExpression(conditional);\n    spoon.reflect.code.CtExpression<java.lang.Boolean> condition = conditional.getCondition();\n    if (!(condition instanceof spoon.reflect.code.CtStatement)) {\n        elementPrinterHelper.writeComment(condition, spoon.reflect.visitor.printer.CommentOffset.BEFORE);\n    }\n    boolean parent;\n    try {\n        parent = (conditional.getParent() instanceof spoon.reflect.code.CtAssignment) || (conditional.getParent() instanceof spoon.reflect.declaration.CtVariable);\n    } catch (spoon.reflect.declaration.ParentNotInitializedException ex) {\n        parent = false;\n    }\n    if (parent) {\n        printer.write(\"(\");\n    }\n    scan(condition);\n    if (parent) {\n        printer.write(\")\");\n    }\n    if (!(condition instanceof spoon.reflect.code.CtStatement)) {\n        elementPrinterHelper.writeComment(condition, spoon.reflect.visitor.printer.CommentOffset.AFTER);\n    }\n    printer.write(\" ? \");\n    spoon.reflect.code.CtExpression<T> thenExpression = conditional.getThenExpression();\n    if (!(thenExpression instanceof spoon.reflect.code.CtStatement)) {\n        elementPrinterHelper.writeComment(thenExpression, spoon.reflect.visitor.printer.CommentOffset.BEFORE);\n    }\n    scan(thenExpression);\n    if (!(thenExpression instanceof spoon.reflect.code.CtStatement)) {\n        elementPrinterHelper.writeComment(thenExpression, spoon.reflect.visitor.printer.CommentOffset.AFTER);\n    }\n    printer.write(\" : \");\n    spoon.reflect.code.CtExpression<T> elseExpression = conditional.getElseExpression();\n    boolean isAssign = false;\n    if (isAssign = elseExpression instanceof spoon.reflect.code.CtAssignment) {\n        printer.write(\"(\");\n    }\n    if (!(elseExpression instanceof spoon.reflect.code.CtStatement)) {\n        elementPrinterHelper.writeComment(elseExpression, spoon.reflect.visitor.printer.CommentOffset.BEFORE);\n    }\n    scan(elseExpression);\n    if (!(elseExpression instanceof spoon.reflect.code.CtStatement)) {\n        elementPrinterHelper.writeComment(elseExpression, spoon.reflect.visitor.printer.CommentOffset.AFTER);\n    }\n    if (isAssign) {\n        printer.write(\")\");\n    }\n    exitCtExpression(conditional);\n}",
            "src_parent_type": "Block",
            "src_type": "If"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "LocalVariable",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "if (!(thenExpression instanceof spoon.reflect.code.CtStatement)) {\n    elementPrinterHelper.writeComment(thenExpression, spoon.reflect.visitor.printer.CommentOffset.AFTER);\n}",
            "src_parent": "{\n    enterCtExpression(conditional);\n    spoon.reflect.code.CtExpression<java.lang.Boolean> condition = conditional.getCondition();\n    if (!(condition instanceof spoon.reflect.code.CtStatement)) {\n        elementPrinterHelper.writeComment(condition, spoon.reflect.visitor.printer.CommentOffset.BEFORE);\n    }\n    boolean parent;\n    try {\n        parent = (conditional.getParent() instanceof spoon.reflect.code.CtAssignment) || (conditional.getParent() instanceof spoon.reflect.declaration.CtVariable);\n    } catch (spoon.reflect.declaration.ParentNotInitializedException ex) {\n        parent = false;\n    }\n    if (parent) {\n        printer.write(\"(\");\n    }\n    scan(condition);\n    if (parent) {\n        printer.write(\")\");\n    }\n    if (!(condition instanceof spoon.reflect.code.CtStatement)) {\n        elementPrinterHelper.writeComment(condition, spoon.reflect.visitor.printer.CommentOffset.AFTER);\n    }\n    printer.write(\" ? \");\n    spoon.reflect.code.CtExpression<T> thenExpression = conditional.getThenExpression();\n    if (!(thenExpression instanceof spoon.reflect.code.CtStatement)) {\n        elementPrinterHelper.writeComment(thenExpression, spoon.reflect.visitor.printer.CommentOffset.BEFORE);\n    }\n    scan(thenExpression);\n    if (!(thenExpression instanceof spoon.reflect.code.CtStatement)) {\n        elementPrinterHelper.writeComment(thenExpression, spoon.reflect.visitor.printer.CommentOffset.AFTER);\n    }\n    printer.write(\" : \");\n    spoon.reflect.code.CtExpression<T> elseExpression = conditional.getElseExpression();\n    boolean isAssign = false;\n    if (isAssign = elseExpression instanceof spoon.reflect.code.CtAssignment) {\n        printer.write(\"(\");\n    }\n    if (!(elseExpression instanceof spoon.reflect.code.CtStatement)) {\n        elementPrinterHelper.writeComment(elseExpression, spoon.reflect.visitor.printer.CommentOffset.BEFORE);\n    }\n    scan(elseExpression);\n    if (!(elseExpression instanceof spoon.reflect.code.CtStatement)) {\n        elementPrinterHelper.writeComment(elseExpression, spoon.reflect.visitor.printer.CommentOffset.AFTER);\n    }\n    if (isAssign) {\n        printer.write(\")\");\n    }\n    exitCtExpression(conditional);\n}",
            "src_parent_type": "Block",
            "src_type": "If"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "LocalVariable",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "if (!(elseExpression instanceof spoon.reflect.code.CtStatement)) {\n    elementPrinterHelper.writeComment(elseExpression, spoon.reflect.visitor.printer.CommentOffset.BEFORE);\n}",
            "src_parent": "{\n    enterCtExpression(conditional);\n    spoon.reflect.code.CtExpression<java.lang.Boolean> condition = conditional.getCondition();\n    if (!(condition instanceof spoon.reflect.code.CtStatement)) {\n        elementPrinterHelper.writeComment(condition, spoon.reflect.visitor.printer.CommentOffset.BEFORE);\n    }\n    boolean parent;\n    try {\n        parent = (conditional.getParent() instanceof spoon.reflect.code.CtAssignment) || (conditional.getParent() instanceof spoon.reflect.declaration.CtVariable);\n    } catch (spoon.reflect.declaration.ParentNotInitializedException ex) {\n        parent = false;\n    }\n    if (parent) {\n        printer.write(\"(\");\n    }\n    scan(condition);\n    if (parent) {\n        printer.write(\")\");\n    }\n    if (!(condition instanceof spoon.reflect.code.CtStatement)) {\n        elementPrinterHelper.writeComment(condition, spoon.reflect.visitor.printer.CommentOffset.AFTER);\n    }\n    printer.write(\" ? \");\n    spoon.reflect.code.CtExpression<T> thenExpression = conditional.getThenExpression();\n    if (!(thenExpression instanceof spoon.reflect.code.CtStatement)) {\n        elementPrinterHelper.writeComment(thenExpression, spoon.reflect.visitor.printer.CommentOffset.BEFORE);\n    }\n    scan(thenExpression);\n    if (!(thenExpression instanceof spoon.reflect.code.CtStatement)) {\n        elementPrinterHelper.writeComment(thenExpression, spoon.reflect.visitor.printer.CommentOffset.AFTER);\n    }\n    printer.write(\" : \");\n    spoon.reflect.code.CtExpression<T> elseExpression = conditional.getElseExpression();\n    boolean isAssign = false;\n    if (isAssign = elseExpression instanceof spoon.reflect.code.CtAssignment) {\n        printer.write(\"(\");\n    }\n    if (!(elseExpression instanceof spoon.reflect.code.CtStatement)) {\n        elementPrinterHelper.writeComment(elseExpression, spoon.reflect.visitor.printer.CommentOffset.BEFORE);\n    }\n    scan(elseExpression);\n    if (!(elseExpression instanceof spoon.reflect.code.CtStatement)) {\n        elementPrinterHelper.writeComment(elseExpression, spoon.reflect.visitor.printer.CommentOffset.AFTER);\n    }\n    if (isAssign) {\n        printer.write(\")\");\n    }\n    exitCtExpression(conditional);\n}",
            "src_parent_type": "Block",
            "src_type": "If"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "If",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "if (!(elseExpression instanceof spoon.reflect.code.CtStatement)) {\n    elementPrinterHelper.writeComment(elseExpression, spoon.reflect.visitor.printer.CommentOffset.AFTER);\n}",
            "src_parent": "{\n    enterCtExpression(conditional);\n    spoon.reflect.code.CtExpression<java.lang.Boolean> condition = conditional.getCondition();\n    if (!(condition instanceof spoon.reflect.code.CtStatement)) {\n        elementPrinterHelper.writeComment(condition, spoon.reflect.visitor.printer.CommentOffset.BEFORE);\n    }\n    boolean parent;\n    try {\n        parent = (conditional.getParent() instanceof spoon.reflect.code.CtAssignment) || (conditional.getParent() instanceof spoon.reflect.declaration.CtVariable);\n    } catch (spoon.reflect.declaration.ParentNotInitializedException ex) {\n        parent = false;\n    }\n    if (parent) {\n        printer.write(\"(\");\n    }\n    scan(condition);\n    if (parent) {\n        printer.write(\")\");\n    }\n    if (!(condition instanceof spoon.reflect.code.CtStatement)) {\n        elementPrinterHelper.writeComment(condition, spoon.reflect.visitor.printer.CommentOffset.AFTER);\n    }\n    printer.write(\" ? \");\n    spoon.reflect.code.CtExpression<T> thenExpression = conditional.getThenExpression();\n    if (!(thenExpression instanceof spoon.reflect.code.CtStatement)) {\n        elementPrinterHelper.writeComment(thenExpression, spoon.reflect.visitor.printer.CommentOffset.BEFORE);\n    }\n    scan(thenExpression);\n    if (!(thenExpression instanceof spoon.reflect.code.CtStatement)) {\n        elementPrinterHelper.writeComment(thenExpression, spoon.reflect.visitor.printer.CommentOffset.AFTER);\n    }\n    printer.write(\" : \");\n    spoon.reflect.code.CtExpression<T> elseExpression = conditional.getElseExpression();\n    boolean isAssign = false;\n    if (isAssign = elseExpression instanceof spoon.reflect.code.CtAssignment) {\n        printer.write(\"(\");\n    }\n    if (!(elseExpression instanceof spoon.reflect.code.CtStatement)) {\n        elementPrinterHelper.writeComment(elseExpression, spoon.reflect.visitor.printer.CommentOffset.BEFORE);\n    }\n    scan(elseExpression);\n    if (!(elseExpression instanceof spoon.reflect.code.CtStatement)) {\n        elementPrinterHelper.writeComment(elseExpression, spoon.reflect.visitor.printer.CommentOffset.AFTER);\n    }\n    if (isAssign) {\n        printer.write(\")\");\n    }\n    exitCtExpression(conditional);\n}",
            "src_parent_type": "Block",
            "src_type": "If"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "Try",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "true",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Invocation",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "elementPrinterHelper.writeComment(newArray, spoon.reflect.visitor.printer.CommentOffset.BEFORE)",
            "src_parent": "{\n    enterCtExpression(newArray);\n    elementPrinterHelper.writeComment(newArray, spoon.reflect.visitor.printer.CommentOffset.BEFORE);\n    boolean isNotInAnnotation;\n    try {\n        isNotInAnnotation = (newArray.getParent(spoon.reflect.declaration.CtAnnotationType.class) == null) && (newArray.getParent(spoon.reflect.declaration.CtAnnotation.class) == null);\n    } catch (spoon.reflect.declaration.ParentNotInitializedException e) {\n        isNotInAnnotation = true;\n    }\n    if (isNotInAnnotation) {\n        spoon.reflect.reference.CtTypeReference<?> ref = newArray.getType();\n        if (ref != null) {\n            printer.write(\"new \");\n        }\n        try (final spoon.reflect.visitor.PrintingContext.Writable _context = context.modify().skipArray(true)) {\n            scan(ref);\n        }\n        for (int i = 0; ref instanceof spoon.reflect.reference.CtArrayTypeReference; i++) {\n            printer.write(\"[\");\n            if (newArray.getDimensionExpressions().size() > i) {\n                spoon.reflect.code.CtExpression<java.lang.Integer> e = newArray.getDimensionExpressions().get(i);\n                if (!(e instanceof spoon.reflect.code.CtStatement)) {\n                    elementPrinterHelper.writeComment(e, spoon.reflect.visitor.printer.CommentOffset.BEFORE);\n                }\n                scan(e);\n                if (!(e instanceof spoon.reflect.code.CtStatement)) {\n                    elementPrinterHelper.writeComment(e, spoon.reflect.visitor.printer.CommentOffset.AFTER);\n                }\n            }\n            printer.write(\"]\");\n            ref = ((spoon.reflect.reference.CtArrayTypeReference) (ref)).getComponentType();\n        }\n    }\n    if (newArray.getDimensionExpressions().size() == 0) {\n        printer.write(\"{ \");\n        java.util.List<spoon.reflect.code.CtExpression<?>> l_elements = newArray.getElements();\n        for (int i = 0; i < l_elements.size(); i++) {\n            spoon.reflect.code.CtExpression e = l_elements.get(i);\n            if (!(e instanceof spoon.reflect.code.CtStatement)) {\n                elementPrinterHelper.writeComment(e, spoon.reflect.visitor.printer.CommentOffset.BEFORE);\n            }\n            scan(e);\n            printer.write(\" , \");\n            if ((i + 1) == l_elements.size()) {\n                printer.removeLastChar();\n            }\n            if (!(e instanceof spoon.reflect.code.CtStatement)) {\n                elementPrinterHelper.writeComment(e, spoon.reflect.visitor.printer.CommentOffset.AFTER);\n            }\n        }\n        elementPrinterHelper.writeComment(newArray, spoon.reflect.visitor.printer.CommentOffset.INSIDE);\n        printer.write(\" }\");\n    }\n    elementPrinterHelper.writeComment(newArray, spoon.reflect.visitor.printer.CommentOffset.AFTER);\n    exitCtExpression(newArray);\n}",
            "src_parent_type": "Block",
            "src_type": "Invocation"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "elementPrinterHelper.writeComment(e, spoon.reflect.visitor.printer.CommentOffset.BEFORE)",
            "src_parent": "{\n    elementPrinterHelper.writeComment(e, spoon.reflect.visitor.printer.CommentOffset.BEFORE);\n}",
            "src_parent_type": "Block",
            "src_type": "Invocation"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "TryWithResource",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "LocalVariable",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "For",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "if (newArray.getDimensionExpressions().size() > i) {\n    spoon.reflect.code.CtExpression<java.lang.Integer> e = newArray.getDimensionExpressions().get(i);\n    if (!(e instanceof spoon.reflect.code.CtStatement)) {\n        elementPrinterHelper.writeComment(e, spoon.reflect.visitor.printer.CommentOffset.BEFORE);\n    }\n    scan(e);\n    if (!(e instanceof spoon.reflect.code.CtStatement)) {\n        elementPrinterHelper.writeComment(e, spoon.reflect.visitor.printer.CommentOffset.AFTER);\n    }\n}",
            "src_parent": "{\n    printer.write(\"[\");\n    if (newArray.getDimensionExpressions().size() > i) {\n        spoon.reflect.code.CtExpression<java.lang.Integer> e = newArray.getDimensionExpressions().get(i);\n        if (!(e instanceof spoon.reflect.code.CtStatement)) {\n            elementPrinterHelper.writeComment(e, spoon.reflect.visitor.printer.CommentOffset.BEFORE);\n        }\n        scan(e);\n        if (!(e instanceof spoon.reflect.code.CtStatement)) {\n            elementPrinterHelper.writeComment(e, spoon.reflect.visitor.printer.CommentOffset.AFTER);\n        }\n    }\n    printer.write(\"]\");\n    ref = ((spoon.reflect.reference.CtArrayTypeReference) (ref)).getComponentType();\n}",
            "src_parent_type": "Block",
            "src_type": "If"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "For",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "if ((i + 1) == l_elements.size()) {\n    printer.removeLastChar();\n}",
            "src_parent": "{\n    spoon.reflect.code.CtExpression e = l_elements.get(i);\n    if (!(e instanceof spoon.reflect.code.CtStatement)) {\n        elementPrinterHelper.writeComment(e, spoon.reflect.visitor.printer.CommentOffset.BEFORE);\n    }\n    scan(e);\n    printer.write(\" , \");\n    if ((i + 1) == l_elements.size()) {\n        printer.removeLastChar();\n    }\n    if (!(e instanceof spoon.reflect.code.CtStatement)) {\n        elementPrinterHelper.writeComment(e, spoon.reflect.visitor.printer.CommentOffset.AFTER);\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "If"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "For",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "if (!(e instanceof spoon.reflect.code.CtStatement)) {\n    elementPrinterHelper.writeComment(e, spoon.reflect.visitor.printer.CommentOffset.AFTER);\n}",
            "src_parent": "{\n    spoon.reflect.code.CtExpression e = l_elements.get(i);\n    if (!(e instanceof spoon.reflect.code.CtStatement)) {\n        elementPrinterHelper.writeComment(e, spoon.reflect.visitor.printer.CommentOffset.BEFORE);\n    }\n    scan(e);\n    printer.write(\" , \");\n    if ((i + 1) == l_elements.size()) {\n        printer.removeLastChar();\n    }\n    if (!(e instanceof spoon.reflect.code.CtStatement)) {\n        elementPrinterHelper.writeComment(e, spoon.reflect.visitor.printer.CommentOffset.AFTER);\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "If"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "For",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "e",
            "src_parent": "elementPrinterHelper.writeComment(e, spoon.reflect.visitor.printer.CommentOffset.BEFORE)",
            "src_parent_type": "Invocation",
            "src_type": "VariableRead"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "Try",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "Invocation",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "if (newArray.getDimensionExpressions().size() > i) {\n    spoon.reflect.code.CtExpression<java.lang.Integer> e = newArray.getDimensionExpressions().get(i);\n    scan(e);\n}",
            "src_parent": "{\n    printer.write(\"[\");\n    if (newArray.getDimensionExpressions().size() > i) {\n        spoon.reflect.code.CtExpression<java.lang.Integer> e = newArray.getDimensionExpressions().get(i);\n        scan(e);\n    }\n    printer.write(\"]\");\n    ref = ((spoon.reflect.reference.CtArrayTypeReference) (ref)).getComponentType();\n}",
            "src_parent_type": "Block",
            "src_type": "If"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "Try",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "LocalVariable",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "if ((i + 1) == l_elements.size()) {\n    printer.removeLastChar();\n    java.util.List<spoon.reflect.code.CtComment> comments = elementPrinterHelper.getComments(e, spoon.reflect.visitor.printer.CommentOffset.AFTER);\n    if ((!comments.isEmpty()) && (comments.get(comments.size() - 1).getCommentType() == spoon.reflect.code.CtComment.CommentType.INLINE)) {\n        printer.insertLine();\n    }\n}",
            "src_parent": "{\n    spoon.reflect.code.CtExpression e = l_elements.get(i);\n    scan(e);\n    printer.write(\" , \");\n    if ((i + 1) == l_elements.size()) {\n        printer.removeLastChar();\n        java.util.List<spoon.reflect.code.CtComment> comments = elementPrinterHelper.getComments(e, spoon.reflect.visitor.printer.CommentOffset.AFTER);\n        if ((!comments.isEmpty()) && (comments.get(comments.size() - 1).getCommentType() == spoon.reflect.code.CtComment.CommentType.INLINE)) {\n            printer.insertLine();\n        }\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "If"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "For",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "if (!(e instanceof spoon.reflect.code.CtStatement)) {\n    elementPrinterHelper.writeComment(e, spoon.reflect.visitor.printer.CommentOffset.BEFORE);\n}",
            "dst_parent": "{\n    if (!(e instanceof spoon.reflect.code.CtStatement)) {\n        elementPrinterHelper.writeComment(e, spoon.reflect.visitor.printer.CommentOffset.BEFORE);\n    }\n    printer.mapLine(e, sourceCompilationUnit);\n    if (shouldSetBracket(e)) {\n        context.parenthesedExpression.push(e);\n        printer.write(\"(\");\n    }\n    if (!e.getTypeCasts().isEmpty()) {\n        for (spoon.reflect.reference.CtTypeReference<?> r : e.getTypeCasts()) {\n            printer.write(\"(\");\n            this.scan(r);\n            printer.write(\") \");\n            printer.write(\"(\");\n            context.parenthesedExpression.push(e);\n        }\n    }\n}",
            "dst_parent_type": "Block",
            "dst_type": "If",
            "operator": "MOV",
            "src": "if (!(e instanceof spoon.reflect.code.CtStatement)) {\n    elementPrinterHelper.writeComment(e, spoon.reflect.visitor.printer.CommentOffset.BEFORE);\n}",
            "src_parent": "{\n    spoon.reflect.code.CtExpression e = l_elements.get(i);\n    if (!(e instanceof spoon.reflect.code.CtStatement)) {\n        elementPrinterHelper.writeComment(e, spoon.reflect.visitor.printer.CommentOffset.BEFORE);\n    }\n    scan(e);\n    printer.write(\" , \");\n    if ((i + 1) == l_elements.size()) {\n        printer.removeLastChar();\n    }\n    if (!(e instanceof spoon.reflect.code.CtStatement)) {\n        elementPrinterHelper.writeComment(e, spoon.reflect.visitor.printer.CommentOffset.AFTER);\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "If"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "Assignment",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "For",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "if (!(e instanceof spoon.reflect.code.CtStatement)) {\n    elementPrinterHelper.writeComment(e, spoon.reflect.visitor.printer.CommentOffset.AFTER);\n}",
            "dst_parent": "{\n    while ((context.parenthesedExpression.size() > 0) && (e == context.parenthesedExpression.peek())) {\n        context.parenthesedExpression.pop();\n        printer.write(\")\");\n    } \n    if (!(e instanceof spoon.reflect.code.CtStatement)) {\n        elementPrinterHelper.writeComment(e, spoon.reflect.visitor.printer.CommentOffset.AFTER);\n    }\n}",
            "dst_parent_type": "Block",
            "dst_type": "If",
            "operator": "MOV",
            "src": "if (!(e instanceof spoon.reflect.code.CtStatement)) {\n    elementPrinterHelper.writeComment(e, spoon.reflect.visitor.printer.CommentOffset.AFTER);\n}",
            "src_parent": "{\n    spoon.reflect.code.CtExpression<java.lang.Integer> e = newArray.getDimensionExpressions().get(i);\n    if (!(e instanceof spoon.reflect.code.CtStatement)) {\n        elementPrinterHelper.writeComment(e, spoon.reflect.visitor.printer.CommentOffset.BEFORE);\n    }\n    scan(e);\n    if (!(e instanceof spoon.reflect.code.CtStatement)) {\n        elementPrinterHelper.writeComment(e, spoon.reflect.visitor.printer.CommentOffset.AFTER);\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "If"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "Assignment",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "For",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "newArray.getDimensionExpressions().size() > i",
            "dst_parent": "if (newArray.getDimensionExpressions().size() > i) {\n    spoon.reflect.code.CtExpression<java.lang.Integer> e = newArray.getDimensionExpressions().get(i);\n    scan(e);\n}",
            "dst_parent_type": "If",
            "dst_type": "BinaryOperator",
            "operator": "MOV",
            "src": "newArray.getDimensionExpressions().size() > i",
            "src_parent": "if (newArray.getDimensionExpressions().size() > i) {\n    spoon.reflect.code.CtExpression<java.lang.Integer> e = newArray.getDimensionExpressions().get(i);\n    if (!(e instanceof spoon.reflect.code.CtStatement)) {\n        elementPrinterHelper.writeComment(e, spoon.reflect.visitor.printer.CommentOffset.BEFORE);\n    }\n    scan(e);\n    if (!(e instanceof spoon.reflect.code.CtStatement)) {\n        elementPrinterHelper.writeComment(e, spoon.reflect.visitor.printer.CommentOffset.AFTER);\n    }\n}",
            "src_parent_type": "If",
            "src_type": "BinaryOperator"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "{\n    spoon.reflect.code.CtExpression<java.lang.Integer> e = newArray.getDimensionExpressions().get(i);\n    scan(e);\n}",
            "dst_parent": "if (newArray.getDimensionExpressions().size() > i) {\n    spoon.reflect.code.CtExpression<java.lang.Integer> e = newArray.getDimensionExpressions().get(i);\n    scan(e);\n}",
            "dst_parent_type": "If",
            "dst_type": "Block",
            "operator": "MOV",
            "src": "{\n    elementPrinterHelper.writeComment(e, spoon.reflect.visitor.printer.CommentOffset.BEFORE);\n}",
            "src_parent": "if (!(e instanceof spoon.reflect.code.CtStatement)) {\n    elementPrinterHelper.writeComment(e, spoon.reflect.visitor.printer.CommentOffset.BEFORE);\n}",
            "src_parent_type": "If",
            "src_type": "Block"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "If",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "For",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "(i + 1) == l_elements.size()",
            "dst_parent": "if ((i + 1) == l_elements.size()) {\n    printer.removeLastChar();\n    java.util.List<spoon.reflect.code.CtComment> comments = elementPrinterHelper.getComments(e, spoon.reflect.visitor.printer.CommentOffset.AFTER);\n    if ((!comments.isEmpty()) && (comments.get(comments.size() - 1).getCommentType() == spoon.reflect.code.CtComment.CommentType.INLINE)) {\n        printer.insertLine();\n    }\n}",
            "dst_parent_type": "If",
            "dst_type": "BinaryOperator",
            "operator": "MOV",
            "src": "(i + 1) == l_elements.size()",
            "src_parent": "if ((i + 1) == l_elements.size()) {\n    printer.removeLastChar();\n}",
            "src_parent_type": "If",
            "src_type": "BinaryOperator"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "If",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "For",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "printer.removeLastChar()",
            "dst_parent": "{\n    printer.removeLastChar();\n    java.util.List<spoon.reflect.code.CtComment> comments = elementPrinterHelper.getComments(e, spoon.reflect.visitor.printer.CommentOffset.AFTER);\n    if ((!comments.isEmpty()) && (comments.get(comments.size() - 1).getCommentType() == spoon.reflect.code.CtComment.CommentType.INLINE)) {\n        printer.insertLine();\n    }\n}",
            "dst_parent_type": "Block",
            "dst_type": "Invocation",
            "operator": "MOV",
            "src": "printer.removeLastChar()",
            "src_parent": "{\n    printer.removeLastChar();\n}",
            "src_parent_type": "Block",
            "src_type": "Invocation"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "Invocation",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "For",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "{\n    printer.insertLine();\n}",
            "dst_parent": "if ((!comments.isEmpty()) && (comments.get(comments.size() - 1).getCommentType() == spoon.reflect.code.CtComment.CommentType.INLINE)) {\n    printer.insertLine();\n}",
            "dst_parent_type": "If",
            "dst_type": "Block",
            "operator": "MOV",
            "src": "{\n    elementPrinterHelper.writeComment(e, spoon.reflect.visitor.printer.CommentOffset.AFTER);\n}",
            "src_parent": "if (!(e instanceof spoon.reflect.code.CtStatement)) {\n    elementPrinterHelper.writeComment(e, spoon.reflect.visitor.printer.CommentOffset.AFTER);\n}",
            "src_parent_type": "If",
            "src_type": "Block"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "Try",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "true",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Invocation",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "elementPrinterHelper",
            "dst_parent": "elementPrinterHelper.getComments(e, spoon.reflect.visitor.printer.CommentOffset.AFTER)",
            "dst_parent_type": "Invocation",
            "dst_type": "FieldRead",
            "operator": "MOV",
            "src": "elementPrinterHelper",
            "src_parent": "elementPrinterHelper.writeComment(newArray, spoon.reflect.visitor.printer.CommentOffset.BEFORE)",
            "src_parent_type": "Invocation",
            "src_type": "FieldRead"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "true",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Invocation",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "e",
            "dst_parent": "elementPrinterHelper.getComments(e, spoon.reflect.visitor.printer.CommentOffset.AFTER)",
            "dst_parent_type": "Invocation",
            "dst_type": "VariableRead",
            "operator": "MOV",
            "src": "e",
            "src_parent": "elementPrinterHelper.writeComment(e, spoon.reflect.visitor.printer.CommentOffset.BEFORE)",
            "src_parent_type": "Invocation",
            "src_type": "VariableRead"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "true",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Invocation",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "spoon.reflect.visitor.printer.CommentOffset.AFTER",
            "dst_parent": "elementPrinterHelper.getComments(e, spoon.reflect.visitor.printer.CommentOffset.AFTER)",
            "dst_parent_type": "Invocation",
            "dst_type": "FieldRead",
            "operator": "MOV",
            "src": "spoon.reflect.visitor.printer.CommentOffset.AFTER",
            "src_parent": "elementPrinterHelper.writeComment(elseExpression, spoon.reflect.visitor.printer.CommentOffset.AFTER)",
            "src_parent_type": "Invocation",
            "src_type": "FieldRead"
          }
        }
      ],
      "file_name": "DefaultJavaPrettyPrinter"
    }
  ],
  "id": "bears_34"
}