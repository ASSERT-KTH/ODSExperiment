{
  "files": [
    {
      "features": [
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "LocalVariable",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "ForEach",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "for (io.enmasse.controller.api.v1.Address address : addressList) {\n    addressResolver.validate(address);\n}",
            "src_parent": "{\n    io.enmasse.controller.api.v1.Schema schema = schemaProvider.getSchema();\n    io.enmasse.controller.api.v1.AddressSpaceType type = schema.findAddressSpaceType(addressSpace.getType()).orElseThrow(() -> new io.enmasse.controller.api.v1.UnresolvedAddressSpaceException(\"Unable to resolve address space type \" + addressSpace.getType()));\n    io.enmasse.controller.api.v1.AddressResolver addressResolver = new io.enmasse.controller.api.v1.AddressResolver(schema, type);\n    for (io.enmasse.controller.api.v1.Address address : addressList) {\n        addressResolver.validate(address);\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "ForEach"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Method",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "java.util.Set<io.enmasse.controller.api.v1.Address> existingAddresses = addressSpaceApi.withAddressSpace(addressSpace).listAddresses()",
            "src_parent": "{\n    io.enmasse.controller.api.v1.Schema schema = schemaProvider.getSchema();\n    io.enmasse.controller.api.v1.AddressSpaceType type = schema.findAddressSpaceType(addressSpace.getType()).orElseThrow(() -> new io.enmasse.controller.api.v1.UnresolvedAddressSpaceException(\"Unable to resolve address space type \" + addressSpace.getType()));\n    io.enmasse.controller.api.v1.AddressResolver addressResolver = new io.enmasse.controller.api.v1.AddressResolver(schema, type);\n    java.util.Set<io.enmasse.controller.api.v1.Address> existingAddresses = addressSpaceApi.withAddressSpace(addressSpace).listAddresses();\n    for (io.enmasse.controller.api.v1.Address address : addressList) {\n        addressResolver.validate(address);\n        for (io.enmasse.controller.api.v1.Address existing : existingAddresses) {\n            if (address.getAddress().equals(existing.getAddress()) && (!address.getName().equals(existing.getName()))) {\n                throw new javax.ws.rs.BadRequestException((((\"Address '\" + address.getAddress()) + \"' already exists with resource name '\") + existing.getName()) + \"'\");\n            }\n        }\n        for (io.enmasse.controller.api.v1.Address b : addressList) {\n            if (address.getAddress().equals(b.getAddress()) && (!address.getName().equals(b.getName()))) {\n                throw new javax.ws.rs.BadRequestException((((((\"Address '\" + address.getAddress()) + \"' defined in resource names '\") + address.getName()) + \"' and '\") + b.getName()) + \"'\");\n            }\n        }\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "LocalVariable"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Method",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "for (io.enmasse.controller.api.v1.Address address : addressList) {\n    addressResolver.validate(address);\n    for (io.enmasse.controller.api.v1.Address existing : existingAddresses) {\n        if (address.getAddress().equals(existing.getAddress()) && (!address.getName().equals(existing.getName()))) {\n            throw new javax.ws.rs.BadRequestException((((\"Address '\" + address.getAddress()) + \"' already exists with resource name '\") + existing.getName()) + \"'\");\n        }\n    }\n    for (io.enmasse.controller.api.v1.Address b : addressList) {\n        if (address.getAddress().equals(b.getAddress()) && (!address.getName().equals(b.getName()))) {\n            throw new javax.ws.rs.BadRequestException((((((\"Address '\" + address.getAddress()) + \"' defined in resource names '\") + address.getName()) + \"' and '\") + b.getName()) + \"'\");\n        }\n    }\n}",
            "src_parent": "{\n    io.enmasse.controller.api.v1.Schema schema = schemaProvider.getSchema();\n    io.enmasse.controller.api.v1.AddressSpaceType type = schema.findAddressSpaceType(addressSpace.getType()).orElseThrow(() -> new io.enmasse.controller.api.v1.UnresolvedAddressSpaceException(\"Unable to resolve address space type \" + addressSpace.getType()));\n    io.enmasse.controller.api.v1.AddressResolver addressResolver = new io.enmasse.controller.api.v1.AddressResolver(schema, type);\n    java.util.Set<io.enmasse.controller.api.v1.Address> existingAddresses = addressSpaceApi.withAddressSpace(addressSpace).listAddresses();\n    for (io.enmasse.controller.api.v1.Address address : addressList) {\n        addressResolver.validate(address);\n        for (io.enmasse.controller.api.v1.Address existing : existingAddresses) {\n            if (address.getAddress().equals(existing.getAddress()) && (!address.getName().equals(existing.getName()))) {\n                throw new javax.ws.rs.BadRequestException((((\"Address '\" + address.getAddress()) + \"' already exists with resource name '\") + existing.getName()) + \"'\");\n            }\n        }\n        for (io.enmasse.controller.api.v1.Address b : addressList) {\n            if (address.getAddress().equals(b.getAddress()) && (!address.getName().equals(b.getName()))) {\n                throw new javax.ws.rs.BadRequestException((((((\"Address '\" + address.getAddress()) + \"' defined in resource names '\") + address.getName()) + \"' and '\") + b.getName()) + \"'\");\n            }\n        }\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "ForEach"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "LocalVariable",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "ForEach",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "io.enmasse.controller.api.v1.Address address",
            "dst_parent": "for (io.enmasse.controller.api.v1.Address address : addressList) {\n    addressResolver.validate(address);\n    for (io.enmasse.controller.api.v1.Address existing : existingAddresses) {\n        if (address.getAddress().equals(existing.getAddress()) && (!address.getName().equals(existing.getName()))) {\n            throw new javax.ws.rs.BadRequestException((((\"Address '\" + address.getAddress()) + \"' already exists with resource name '\") + existing.getName()) + \"'\");\n        }\n    }\n    for (io.enmasse.controller.api.v1.Address b : addressList) {\n        if (address.getAddress().equals(b.getAddress()) && (!address.getName().equals(b.getName()))) {\n            throw new javax.ws.rs.BadRequestException((((((\"Address '\" + address.getAddress()) + \"' defined in resource names '\") + address.getName()) + \"' and '\") + b.getName()) + \"'\");\n        }\n    }\n}",
            "dst_parent_type": "ForEach",
            "dst_type": "LocalVariable",
            "operator": "MOV",
            "src": "io.enmasse.controller.api.v1.Address address",
            "src_parent": "for (io.enmasse.controller.api.v1.Address address : addressList) {\n    addressResolver.validate(address);\n}",
            "src_parent_type": "ForEach",
            "src_type": "LocalVariable"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "LocalVariable",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "ForEach",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "addressResolver.validate(address)",
            "dst_parent": "{\n    addressResolver.validate(address);\n    for (io.enmasse.controller.api.v1.Address existing : existingAddresses) {\n        if (address.getAddress().equals(existing.getAddress()) && (!address.getName().equals(existing.getName()))) {\n            throw new javax.ws.rs.BadRequestException((((\"Address '\" + address.getAddress()) + \"' already exists with resource name '\") + existing.getName()) + \"'\");\n        }\n    }\n    for (io.enmasse.controller.api.v1.Address b : addressList) {\n        if (address.getAddress().equals(b.getAddress()) && (!address.getName().equals(b.getName()))) {\n            throw new javax.ws.rs.BadRequestException((((((\"Address '\" + address.getAddress()) + \"' defined in resource names '\") + address.getName()) + \"' and '\") + b.getName()) + \"'\");\n        }\n    }\n}",
            "dst_parent_type": "Block",
            "dst_type": "Invocation",
            "operator": "MOV",
            "src": "addressResolver.validate(address)",
            "src_parent": "{\n    addressResolver.validate(address);\n}",
            "src_parent_type": "Block",
            "src_type": "Invocation"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "LocalVariable",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "ForEach",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "addressList",
            "dst_parent": "for (io.enmasse.controller.api.v1.Address b : addressList) {\n    if (address.getAddress().equals(b.getAddress()) && (!address.getName().equals(b.getName()))) {\n        throw new javax.ws.rs.BadRequestException((((((\"Address '\" + address.getAddress()) + \"' defined in resource names '\") + address.getName()) + \"' and '\") + b.getName()) + \"'\");\n    }\n}",
            "dst_parent_type": "ForEach",
            "dst_type": "VariableRead",
            "operator": "MOV",
            "src": "addressList",
            "src_parent": "for (io.enmasse.controller.api.v1.Address address : addressList) {\n    addressResolver.validate(address);\n}",
            "src_parent_type": "ForEach",
            "src_type": "VariableRead"
          }
        }
      ],
      "file_name": "AddressApiHelper"
    }
  ],
  "id": "bears_167"
}