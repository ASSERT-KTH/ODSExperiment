{
  "files": [
    {
      "features": [
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Return",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "((raw == java.lang.String.class) || (raw == java.lang.Object.class)) || (raw == java.lang.CharSequence.class)",
            "src_parent": "if (((raw == java.lang.String.class) || (raw == java.lang.Object.class)) || (raw == java.lang.CharSequence.class)) {\n    return com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer.StringKD.forType(raw);\n} else if (raw == java.util.UUID.class) {\n    kind = com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer.TYPE_UUID;\n} else if (raw == java.lang.Integer.class) {\n    kind = com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer.TYPE_INT;\n} else if (raw == java.lang.Long.class) {\n    kind = com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer.TYPE_LONG;\n} else if (raw == java.util.Date.class) {\n    kind = com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer.TYPE_DATE;\n} else if (raw == java.util.Calendar.class) {\n    kind = com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer.TYPE_CALENDAR;\n} else if (raw == java.lang.Boolean.class) {\n    kind = com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer.TYPE_BOOLEAN;\n} else if (raw == java.lang.Byte.class) {\n    kind = com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer.TYPE_BYTE;\n} else if (raw == java.lang.Character.class) {\n    kind = com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer.TYPE_CHAR;\n} else if (raw == java.lang.Short.class) {\n    kind = com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer.TYPE_SHORT;\n} else if (raw == java.lang.Float.class) {\n    kind = com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer.TYPE_FLOAT;\n} else if (raw == java.lang.Double.class) {\n    kind = com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer.TYPE_DOUBLE;\n} else if (raw == java.net.URI.class) {\n    kind = com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer.TYPE_URI;\n} else if (raw == java.net.URL.class) {\n    kind = com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer.TYPE_URL;\n} else if (raw == java.lang.Class.class) {\n    kind = com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer.TYPE_CLASS;\n} else if (raw == java.util.Locale.class) {\n    com.fasterxml.jackson.databind.deser.std.FromStringDeserializer<?> deser = com.fasterxml.jackson.databind.deser.std.FromStringDeserializer.findDeserializer(java.util.Locale.class);\n    return new com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer(com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer.TYPE_LOCALE, raw, deser);\n} else if (raw == java.util.Currency.class) {\n    com.fasterxml.jackson.databind.deser.std.FromStringDeserializer<?> deser = com.fasterxml.jackson.databind.deser.std.FromStringDeserializer.findDeserializer(java.util.Currency.class);\n    return new com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer(com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer.TYPE_CURRENCY, raw, deser);\n} else {\n    return null;\n}",
            "src_parent_type": "If",
            "src_type": "BinaryOperator"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Return",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "((raw == java.lang.String.class) || (raw == java.lang.Object.class))",
            "dst_parent": "((raw == java.lang.String.class) || (raw == java.lang.Object.class)) || (raw == java.lang.CharSequence.class)",
            "dst_parent_type": "BinaryOperator",
            "dst_type": "BinaryOperator",
            "operator": "MOV",
            "src": "(raw == java.lang.String.class) || (raw == java.lang.Object.class)",
            "src_parent": "if ((raw == java.lang.String.class) || (raw == java.lang.Object.class)) {\n    return com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer.StringKD.forType(raw);\n} else if (raw == java.util.UUID.class) {\n    kind = com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer.TYPE_UUID;\n} else if (raw == java.lang.Integer.class) {\n    kind = com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer.TYPE_INT;\n} else if (raw == java.lang.Long.class) {\n    kind = com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer.TYPE_LONG;\n} else if (raw == java.util.Date.class) {\n    kind = com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer.TYPE_DATE;\n} else if (raw == java.util.Calendar.class) {\n    kind = com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer.TYPE_CALENDAR;\n} else if (raw == java.lang.Boolean.class) {\n    kind = com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer.TYPE_BOOLEAN;\n} else if (raw == java.lang.Byte.class) {\n    kind = com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer.TYPE_BYTE;\n} else if (raw == java.lang.Character.class) {\n    kind = com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer.TYPE_CHAR;\n} else if (raw == java.lang.Short.class) {\n    kind = com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer.TYPE_SHORT;\n} else if (raw == java.lang.Float.class) {\n    kind = com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer.TYPE_FLOAT;\n} else if (raw == java.lang.Double.class) {\n    kind = com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer.TYPE_DOUBLE;\n} else if (raw == java.net.URI.class) {\n    kind = com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer.TYPE_URI;\n} else if (raw == java.net.URL.class) {\n    kind = com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer.TYPE_URL;\n} else if (raw == java.lang.Class.class) {\n    kind = com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer.TYPE_CLASS;\n} else if (raw == java.util.Locale.class) {\n    com.fasterxml.jackson.databind.deser.std.FromStringDeserializer<?> deser = com.fasterxml.jackson.databind.deser.std.FromStringDeserializer.findDeserializer(java.util.Locale.class);\n    return new com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer(com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer.TYPE_LOCALE, raw, deser);\n} else if (raw == java.util.Currency.class) {\n    com.fasterxml.jackson.databind.deser.std.FromStringDeserializer<?> deser = com.fasterxml.jackson.databind.deser.std.FromStringDeserializer.findDeserializer(java.util.Currency.class);\n    return new com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer(com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer.TYPE_CURRENCY, raw, deser);\n} else {\n    return null;\n}",
            "src_parent_type": "If",
            "src_type": "BinaryOperator"
          }
        }
      ],
      "file_name": "StdKeyDeserializer"
    }
  ],
  "id": "bears_2"
}