{
  "files": [
    {
      "features": [
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "true",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Method",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "if ((!type.equals(\"Alert\")) || (protocolType == 0)) {\n    position.set(Position.KEY_VERSION_FW, values[index++]);\n}",
            "src_parent": "{\n    int index = 1;\n    java.lang.String type = values[index++];\n    if (((!type.equals(\"Location\")) && (!type.equals(\"Emergency\"))) && (!type.equals(\"Alert\"))) {\n        return null;\n    }\n    org.traccar.model.Position position = new org.traccar.model.Position();\n    position.setProtocol(getProtocolName());\n    if (type.equals(\"Emergency\") || type.equals(\"Alert\")) {\n        position.set(Position.KEY_ALARM, Position.ALARM_GENERAL);\n    }\n    org.traccar.DeviceSession deviceSession = getDeviceSession(channel, remoteAddress, values[index++]);\n    if (deviceSession == null) {\n        return null;\n    }\n    position.setDeviceId(deviceSession.getDeviceId());\n    if ((!type.equals(\"Alert\")) || (protocolType == 0)) {\n        position.set(Position.KEY_VERSION_FW, values[index++]);\n    }\n    java.text.DateFormat dateFormat = new java.text.SimpleDateFormat(\"yyyyMMddHH:mm:ss\");\n    dateFormat.setTimeZone(java.util.TimeZone.getTimeZone(\"UTC\"));\n    position.setTime(dateFormat.parse(values[index++] + values[index++]));\n    if (protocolType == 1) {\n        index += 1;\n    }\n    position.setLatitude(java.lang.Double.parseDouble(values[index++]));\n    position.setLongitude(java.lang.Double.parseDouble(values[index++]));\n    position.setSpeed(org.traccar.helper.UnitsConverter.knotsFromKph(java.lang.Double.parseDouble(values[index++])));\n    position.setCourse(java.lang.Double.parseDouble(values[index++]));\n    position.setValid(values[index++].equals(\"1\"));\n    if (protocolType == 1) {\n        position.set(Position.KEY_ODOMETER, java.lang.Integer.parseInt(values[index]));\n    }\n    return position;\n}",
            "src_parent_type": "Block",
            "src_type": "If"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "LocalVariable",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Invocation",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "position.set(Position.KEY_VERSION_FW, values[index++])",
            "dst_parent": "{\n    position.set(Position.KEY_VERSION_FW, values[index++]);\n}",
            "dst_parent_type": "Block",
            "dst_type": "Invocation",
            "operator": "MOV",
            "src": "position.set(Position.KEY_VERSION_FW, values[index++])",
            "src_parent": "{\n    int index = 1;\n    java.lang.String type = values[index++];\n    if (((!type.equals(\"Location\")) && (!type.equals(\"Emergency\"))) && (!type.equals(\"Alert\"))) {\n        return null;\n    }\n    org.traccar.model.Position position = new org.traccar.model.Position();\n    position.setProtocol(getProtocolName());\n    if (type.equals(\"Emergency\") || type.equals(\"Alert\")) {\n        position.set(Position.KEY_ALARM, Position.ALARM_GENERAL);\n    }\n    org.traccar.DeviceSession deviceSession = getDeviceSession(channel, remoteAddress, values[index++]);\n    if (deviceSession == null) {\n        return null;\n    }\n    position.setDeviceId(deviceSession.getDeviceId());\n    position.set(Position.KEY_VERSION_FW, values[index++]);\n    java.text.DateFormat dateFormat = new java.text.SimpleDateFormat(\"yyyyMMddHH:mm:ss\");\n    dateFormat.setTimeZone(java.util.TimeZone.getTimeZone(\"UTC\"));\n    position.setTime(dateFormat.parse(values[index++] + values[index++]));\n    if (protocolType == 1) {\n        index += 1;\n    }\n    position.setLatitude(java.lang.Double.parseDouble(values[index++]));\n    position.setLongitude(java.lang.Double.parseDouble(values[index++]));\n    position.setSpeed(org.traccar.helper.UnitsConverter.knotsFromKph(java.lang.Double.parseDouble(values[index++])));\n    position.setCourse(java.lang.Double.parseDouble(values[index++]));\n    position.setValid(values[index++].equals(\"1\"));\n    if (protocolType == 1) {\n        position.set(Position.KEY_ODOMETER, java.lang.Integer.parseInt(values[index]));\n    }\n    return position;\n}",
            "src_parent_type": "Block",
            "src_type": "Invocation"
          }
        }
      ],
      "file_name": "SuntechProtocolDecoder"
    }
  ],
  "id": "bears_109"
}