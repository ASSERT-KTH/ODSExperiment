{
  "files": [
    {
      "features": [
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Try",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "T result = _deserialize(text, ctxt)",
            "src_parent": "{\n    T result = _deserialize(text, ctxt);\n    if (result != null) {\n        return result;\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "LocalVariable"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Try",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "if (result != null) {\n    return result;\n}",
            "src_parent": "{\n    T result = _deserialize(text, ctxt);\n    if (result != null) {\n        return result;\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "If"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "Switch",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Throw",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "throw new java.lang.IllegalArgumentException()",
            "src_parent": "{\n    switch (_kind) {\n        case com.fasterxml.jackson.databind.deser.std.FromStringDeserializer.Std.STD_FILE :\n            return new java.io.File(value);\n        case com.fasterxml.jackson.databind.deser.std.FromStringDeserializer.Std.STD_URL :\n            return new java.net.URL(value);\n        case com.fasterxml.jackson.databind.deser.std.FromStringDeserializer.Std.STD_URI :\n            return java.net.URI.create(value);\n        case com.fasterxml.jackson.databind.deser.std.FromStringDeserializer.Std.STD_CLASS :\n            try {\n                return ctxt.findClass(value);\n            } catch (java.lang.Exception e) {\n                return ctxt.handleInstantiationProblem(_valueClass, value, com.fasterxml.jackson.databind.util.ClassUtil.getRootCause(e));\n            }\n        case com.fasterxml.jackson.databind.deser.std.FromStringDeserializer.Std.STD_JAVA_TYPE :\n            return ctxt.getTypeFactory().constructFromCanonical(value);\n        case com.fasterxml.jackson.databind.deser.std.FromStringDeserializer.Std.STD_CURRENCY :\n            return java.util.Currency.getInstance(value);\n        case com.fasterxml.jackson.databind.deser.std.FromStringDeserializer.Std.STD_PATTERN :\n            return java.util.regex.Pattern.compile(value);\n        case com.fasterxml.jackson.databind.deser.std.FromStringDeserializer.Std.STD_LOCALE :\n            {\n                int ix = _firstHyphenOrUnderscore(value);\n                if (ix < 0) {\n                    return new java.util.Locale(value);\n                }\n                java.lang.String first = value.substring(0, ix);\n                value = value.substring(ix + 1);\n                ix = _firstHyphenOrUnderscore(value);\n                if (ix < 0) {\n                    return new java.util.Locale(first, value);\n                }\n                java.lang.String second = value.substring(0, ix);\n                return new java.util.Locale(first, second, value.substring(ix + 1));\n            }\n        case com.fasterxml.jackson.databind.deser.std.FromStringDeserializer.Std.STD_CHARSET :\n            return java.nio.charset.Charset.forName(value);\n        case com.fasterxml.jackson.databind.deser.std.FromStringDeserializer.Std.STD_TIME_ZONE :\n            return java.util.TimeZone.getTimeZone(value);\n        case com.fasterxml.jackson.databind.deser.std.FromStringDeserializer.Std.STD_INET_ADDRESS :\n            return java.net.InetAddress.getByName(value);\n        case com.fasterxml.jackson.databind.deser.std.FromStringDeserializer.Std.STD_INET_SOCKET_ADDRESS :\n            if (value.startsWith(\"[\")) {\n                int i = value.lastIndexOf(']');\n                if (i == (-1)) {\n                    throw new com.fasterxml.jackson.databind.exc.InvalidFormatException(ctxt.getParser(), \"Bracketed IPv6 address must contain closing bracket\", value, java.net.InetSocketAddress.class);\n                }\n                int j = value.indexOf(':', i);\n                int port = (j > (-1)) ? java.lang.Integer.parseInt(value.substring(j + 1)) : 0;\n                return new java.net.InetSocketAddress(value.substring(0, i + 1), port);\n            }\n            int ix = value.indexOf(':');\n            if ((ix >= 0) && (value.indexOf(':', ix + 1) < 0)) {\n                int port = java.lang.Integer.parseInt(value.substring(ix + 1));\n                return new java.net.InetSocketAddress(value.substring(0, ix), port);\n            }\n            return new java.net.InetSocketAddress(value, 0);\n        case com.fasterxml.jackson.databind.deser.std.FromStringDeserializer.Std.STD_STRING_BUILDER :\n            return new java.lang.StringBuilder(value);\n    }\n    throw new java.lang.IllegalArgumentException();\n}",
            "src_parent_type": "Block",
            "src_type": "Throw"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "true",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Method",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "com.fasterxml.jackson.core.util.VersionUtil.throwInternal()",
            "src_parent": "{\n    switch (_kind) {\n        case com.fasterxml.jackson.databind.deser.std.FromStringDeserializer.Std.STD_FILE :\n            return new java.io.File(value);\n        case com.fasterxml.jackson.databind.deser.std.FromStringDeserializer.Std.STD_URL :\n            return new java.net.URL(value);\n        case com.fasterxml.jackson.databind.deser.std.FromStringDeserializer.Std.STD_URI :\n            return java.net.URI.create(value);\n        case com.fasterxml.jackson.databind.deser.std.FromStringDeserializer.Std.STD_CLASS :\n            try {\n                return ctxt.findClass(value);\n            } catch (java.lang.Exception e) {\n                return ctxt.handleInstantiationProblem(_valueClass, value, com.fasterxml.jackson.databind.util.ClassUtil.getRootCause(e));\n            }\n        case com.fasterxml.jackson.databind.deser.std.FromStringDeserializer.Std.STD_JAVA_TYPE :\n            return ctxt.getTypeFactory().constructFromCanonical(value);\n        case com.fasterxml.jackson.databind.deser.std.FromStringDeserializer.Std.STD_CURRENCY :\n            return java.util.Currency.getInstance(value);\n        case com.fasterxml.jackson.databind.deser.std.FromStringDeserializer.Std.STD_PATTERN :\n            return java.util.regex.Pattern.compile(value);\n        case com.fasterxml.jackson.databind.deser.std.FromStringDeserializer.Std.STD_LOCALE :\n            {\n                int ix = _firstHyphenOrUnderscore(value);\n                if (ix < 0) {\n                    return new java.util.Locale(value);\n                }\n                java.lang.String first = value.substring(0, ix);\n                value = value.substring(ix + 1);\n                ix = _firstHyphenOrUnderscore(value);\n                if (ix < 0) {\n                    return new java.util.Locale(first, value);\n                }\n                java.lang.String second = value.substring(0, ix);\n                return new java.util.Locale(first, second, value.substring(ix + 1));\n            }\n        case com.fasterxml.jackson.databind.deser.std.FromStringDeserializer.Std.STD_CHARSET :\n            return java.nio.charset.Charset.forName(value);\n        case com.fasterxml.jackson.databind.deser.std.FromStringDeserializer.Std.STD_TIME_ZONE :\n            return java.util.TimeZone.getTimeZone(value);\n        case com.fasterxml.jackson.databind.deser.std.FromStringDeserializer.Std.STD_INET_ADDRESS :\n            return java.net.InetAddress.getByName(value);\n        case com.fasterxml.jackson.databind.deser.std.FromStringDeserializer.Std.STD_INET_SOCKET_ADDRESS :\n            if (value.startsWith(\"[\")) {\n                int i = value.lastIndexOf(']');\n                if (i == (-1)) {\n                    throw new com.fasterxml.jackson.databind.exc.InvalidFormatException(ctxt.getParser(), \"Bracketed IPv6 address must contain closing bracket\", value, java.net.InetSocketAddress.class);\n                }\n                int j = value.indexOf(':', i);\n                int port = (j > (-1)) ? java.lang.Integer.parseInt(value.substring(j + 1)) : 0;\n                return new java.net.InetSocketAddress(value.substring(0, i + 1), port);\n            }\n            int ix = value.indexOf(':');\n            if ((ix >= 0) && (value.indexOf(':', ix + 1) < 0)) {\n                int port = java.lang.Integer.parseInt(value.substring(ix + 1));\n                return new java.net.InetSocketAddress(value.substring(0, ix), port);\n            }\n            return new java.net.InetSocketAddress(value, 0);\n        case com.fasterxml.jackson.databind.deser.std.FromStringDeserializer.Std.STD_STRING_BUILDER :\n            return new java.lang.StringBuilder(value);\n    }\n    com.fasterxml.jackson.core.util.VersionUtil.throwInternal();\n    return null;\n}",
            "src_parent_type": "Block",
            "src_type": "Invocation"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "true",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Method",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "return null",
            "src_parent": "{\n    switch (_kind) {\n        case com.fasterxml.jackson.databind.deser.std.FromStringDeserializer.Std.STD_FILE :\n            return new java.io.File(value);\n        case com.fasterxml.jackson.databind.deser.std.FromStringDeserializer.Std.STD_URL :\n            return new java.net.URL(value);\n        case com.fasterxml.jackson.databind.deser.std.FromStringDeserializer.Std.STD_URI :\n            return java.net.URI.create(value);\n        case com.fasterxml.jackson.databind.deser.std.FromStringDeserializer.Std.STD_CLASS :\n            try {\n                return ctxt.findClass(value);\n            } catch (java.lang.Exception e) {\n                return ctxt.handleInstantiationProblem(_valueClass, value, com.fasterxml.jackson.databind.util.ClassUtil.getRootCause(e));\n            }\n        case com.fasterxml.jackson.databind.deser.std.FromStringDeserializer.Std.STD_JAVA_TYPE :\n            return ctxt.getTypeFactory().constructFromCanonical(value);\n        case com.fasterxml.jackson.databind.deser.std.FromStringDeserializer.Std.STD_CURRENCY :\n            return java.util.Currency.getInstance(value);\n        case com.fasterxml.jackson.databind.deser.std.FromStringDeserializer.Std.STD_PATTERN :\n            return java.util.regex.Pattern.compile(value);\n        case com.fasterxml.jackson.databind.deser.std.FromStringDeserializer.Std.STD_LOCALE :\n            {\n                int ix = _firstHyphenOrUnderscore(value);\n                if (ix < 0) {\n                    return new java.util.Locale(value);\n                }\n                java.lang.String first = value.substring(0, ix);\n                value = value.substring(ix + 1);\n                ix = _firstHyphenOrUnderscore(value);\n                if (ix < 0) {\n                    return new java.util.Locale(first, value);\n                }\n                java.lang.String second = value.substring(0, ix);\n                return new java.util.Locale(first, second, value.substring(ix + 1));\n            }\n        case com.fasterxml.jackson.databind.deser.std.FromStringDeserializer.Std.STD_CHARSET :\n            return java.nio.charset.Charset.forName(value);\n        case com.fasterxml.jackson.databind.deser.std.FromStringDeserializer.Std.STD_TIME_ZONE :\n            return java.util.TimeZone.getTimeZone(value);\n        case com.fasterxml.jackson.databind.deser.std.FromStringDeserializer.Std.STD_INET_ADDRESS :\n            return java.net.InetAddress.getByName(value);\n        case com.fasterxml.jackson.databind.deser.std.FromStringDeserializer.Std.STD_INET_SOCKET_ADDRESS :\n            if (value.startsWith(\"[\")) {\n                int i = value.lastIndexOf(']');\n                if (i == (-1)) {\n                    throw new com.fasterxml.jackson.databind.exc.InvalidFormatException(ctxt.getParser(), \"Bracketed IPv6 address must contain closing bracket\", value, java.net.InetSocketAddress.class);\n                }\n                int j = value.indexOf(':', i);\n                int port = (j > (-1)) ? java.lang.Integer.parseInt(value.substring(j + 1)) : 0;\n                return new java.net.InetSocketAddress(value.substring(0, i + 1), port);\n            }\n            int ix = value.indexOf(':');\n            if ((ix >= 0) && (value.indexOf(':', ix + 1) < 0)) {\n                int port = java.lang.Integer.parseInt(value.substring(ix + 1));\n                return new java.net.InetSocketAddress(value.substring(0, ix), port);\n            }\n            return new java.net.InetSocketAddress(value, 0);\n        case com.fasterxml.jackson.databind.deser.std.FromStringDeserializer.Std.STD_STRING_BUILDER :\n            return new java.lang.StringBuilder(value);\n    }\n    com.fasterxml.jackson.core.util.VersionUtil.throwInternal();\n    return null;\n}",
            "src_parent_type": "Block",
            "src_type": "Return"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "return _deserialize(text, ctxt)",
            "src_parent": "{\n    return _deserialize(text, ctxt);\n}",
            "src_parent_type": "Block",
            "src_type": "Return"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Try",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "LocalVariable",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "_deserialize(text, ctxt)",
            "dst_parent": "return _deserialize(text, ctxt)",
            "dst_parent_type": "Return",
            "dst_type": "Invocation",
            "operator": "MOV",
            "src": "_deserialize(text, ctxt)",
            "src_parent": "T result = _deserialize(text, ctxt)",
            "src_parent_type": "LocalVariable",
            "src_type": "Invocation"
          }
        }
      ],
      "file_name": "FromStringDeserializer"
    }
  ],
  "id": "bears_20"
}