{
  "files": [
    {
      "features": [
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "Assignment",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Assignment",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "new org.jasig.cas.client.util.URIBuilder(scheme + serverName, encode)",
            "dst_parent": "builder = new org.jasig.cas.client.util.URIBuilder(scheme + serverName, encode)",
            "dst_parent_type": "Assignment",
            "dst_type": "ConstructorCall",
            "operator": "UPD",
            "src": "new org.jasig.cas.client.util.URIBuilder(encode)",
            "src_parent": "builder = new org.jasig.cas.client.util.URIBuilder(encode)",
            "src_parent_type": "Assignment",
            "src_type": "ConstructorCall"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "LocalVariable",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "builder",
            "dst_parent": "builder.getPort()",
            "dst_parent_type": "Invocation",
            "dst_type": "VariableRead",
            "operator": "UPD",
            "src": "containsScheme",
            "src_parent": "org.jasig.cas.client.util.CommonUtils.serverNameContainsPort(containsScheme, serverName)",
            "src_parent_type": "Invocation",
            "src_type": "VariableRead"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Method",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "private static boolean serverNameContainsPort(final boolean containsScheme, final java.lang.String serverName) {\n    if ((!containsScheme) && serverName.contains(\":\")) {\n        return true;\n    }\n    final int schemeIndex = serverName.indexOf(\":\");\n    final int portIndex = serverName.lastIndexOf(\":\");\n    return schemeIndex != portIndex;\n}",
            "src_parent": "public final class CommonUtils {\n    private static final org.slf4j.Logger LOGGER = org.slf4j.LoggerFactory.getLogger(org.jasig.cas.client.util.CommonUtils.class);\n\n    private static final java.lang.String PARAM_PROXY_GRANTING_TICKET_IOU = \"pgtIou\";\n\n    private static final java.lang.String PARAM_PROXY_GRANTING_TICKET = \"pgtId\";\n\n    private static final org.jasig.cas.client.ssl.HttpURLConnectionFactory DEFAULT_URL_CONNECTION_FACTORY = new org.jasig.cas.client.ssl.HttpsURLConnectionFactory();\n\n    private static final java.lang.String SERVICE_PARAMETER_NAMES;\n\n    private CommonUtils() {\n    }\n\n    static {\n        final java.util.Set<java.lang.String> serviceParameterSet = new java.util.HashSet<java.lang.String>(4);\n        for (final org.jasig.cas.client.Protocol protocol : org.jasig.cas.client.Protocol.values()) {\n            serviceParameterSet.add(protocol.getServiceParameterName());\n        }\n        SERVICE_PARAMETER_NAMES = serviceParameterSet.toString().replaceAll(\"\\\\[|\\\\]\", \"\").replaceAll(\"\\\\s\", \"\");\n    }\n\n    public static void assertNotNull(final java.lang.Object object, final java.lang.String message) {\n        if (object == null) {\n            throw new java.lang.IllegalArgumentException(message);\n        }\n    }\n\n    public static void assertNotEmpty(final java.util.Collection<?> c, final java.lang.String message) {\n        org.jasig.cas.client.util.CommonUtils.assertNotNull(c, message);\n        if (c.isEmpty()) {\n            throw new java.lang.IllegalArgumentException(message);\n        }\n    }\n\n    public static void assertTrue(final boolean cond, final java.lang.String message) {\n        if (!cond) {\n            throw new java.lang.IllegalArgumentException(message);\n        }\n    }\n\n    public static void assertFalse(final boolean cond, final java.lang.String message) {\n        if (cond) {\n            throw new java.lang.IllegalArgumentException(message);\n        }\n    }\n\n    public static boolean isEmpty(final java.lang.String string) {\n        return (string == null) || string.isEmpty();\n    }\n\n    public static boolean isNotEmpty(final java.lang.String string) {\n        return !org.jasig.cas.client.util.CommonUtils.isEmpty(string);\n    }\n\n    public static boolean isBlank(final java.lang.String string) {\n        return org.jasig.cas.client.util.CommonUtils.isEmpty(string) || string.trim().isEmpty();\n    }\n\n    public static boolean isNotBlank(final java.lang.String string) {\n        return !org.jasig.cas.client.util.CommonUtils.isBlank(string);\n    }\n\n    public static java.lang.String constructRedirectUrl(final java.lang.String casServerLoginUrl, final java.lang.String serviceParameterName, final java.lang.String serviceUrl, final boolean renew, final boolean gateway) {\n        return (((((casServerLoginUrl + (casServerLoginUrl.contains(\"?\") ? \"&\" : \"?\")) + serviceParameterName) + \"=\") + org.jasig.cas.client.util.CommonUtils.urlEncode(serviceUrl)) + (renew ? \"&renew=true\" : \"\")) + (gateway ? \"&gateway=true\" : \"\");\n    }\n\n    public static java.lang.String urlEncode(final java.lang.String value) {\n        try {\n            return java.net.URLEncoder.encode(value, \"UTF-8\");\n        } catch (final java.io.UnsupportedEncodingException e) {\n            throw new java.lang.RuntimeException(e);\n        }\n    }\n\n    public static void readAndRespondToProxyReceptorRequest(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response, final org.jasig.cas.client.proxy.ProxyGrantingTicketStorage proxyGrantingTicketStorage) throws java.io.IOException {\n        final java.lang.String proxyGrantingTicketIou = request.getParameter(org.jasig.cas.client.util.CommonUtils.PARAM_PROXY_GRANTING_TICKET_IOU);\n        final java.lang.String proxyGrantingTicket = request.getParameter(org.jasig.cas.client.util.CommonUtils.PARAM_PROXY_GRANTING_TICKET);\n        if (org.jasig.cas.client.util.CommonUtils.isBlank(proxyGrantingTicket) || org.jasig.cas.client.util.CommonUtils.isBlank(proxyGrantingTicketIou)) {\n            response.getWriter().write(\"\");\n            return;\n        }\n        org.jasig.cas.client.util.CommonUtils.LOGGER.debug(\"Received proxyGrantingTicketId [{}] for proxyGrantingTicketIou [{}]\", proxyGrantingTicket, proxyGrantingTicketIou);\n        proxyGrantingTicketStorage.save(proxyGrantingTicketIou, proxyGrantingTicket);\n        org.jasig.cas.client.util.CommonUtils.LOGGER.debug(\"Successfully saved proxyGrantingTicketId [{}] for proxyGrantingTicketIou [{}]\", proxyGrantingTicket, proxyGrantingTicketIou);\n        response.getWriter().write(\"<?xml version=\\\"1.0\\\"?>\");\n        response.getWriter().write(\"<casClient:proxySuccess xmlns:casClient=\\\"http://www.yale.edu/tp/casClient\\\" />\");\n    }\n\n    protected static java.lang.String findMatchingServerName(final javax.servlet.http.HttpServletRequest request, final java.lang.String serverName) {\n        final java.lang.String[] serverNames = serverName.split(\" \");\n        if ((serverNames.length == 0) || (serverNames.length == 1)) {\n            return serverName;\n        }\n        final java.lang.String host = request.getHeader(\"Host\");\n        final java.lang.String xHost = request.getHeader(\"X-Forwarded-Host\");\n        final java.lang.String comparisonHost;\n        if ((xHost != null) && (host == \"localhost\")) {\n            comparisonHost = xHost;\n        } else {\n            comparisonHost = host;\n        }\n        if (comparisonHost == null) {\n            return serverName;\n        }\n        for (final java.lang.String server : serverNames) {\n            final java.lang.String lowerCaseServer = server.toLowerCase();\n            if (lowerCaseServer.contains(comparisonHost)) {\n                return server;\n            }\n        }\n        return serverNames[0];\n    }\n\n    private static boolean serverNameContainsPort(final boolean containsScheme, final java.lang.String serverName) {\n        if ((!containsScheme) && serverName.contains(\":\")) {\n            return true;\n        }\n        final int schemeIndex = serverName.indexOf(\":\");\n        final int portIndex = serverName.lastIndexOf(\":\");\n        return schemeIndex != portIndex;\n    }\n\n    private static boolean requestIsOnStandardPort(final javax.servlet.http.HttpServletRequest request) {\n        final int serverPort = request.getServerPort();\n        return (serverPort == 80) || (serverPort == 443);\n    }\n\n    @java.lang.Deprecated\n    public static java.lang.String constructServiceUrl(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response, final java.lang.String service, final java.lang.String serverNames, final java.lang.String artifactParameterName, final boolean encode) {\n        return org.jasig.cas.client.util.CommonUtils.constructServiceUrl(request, response, service, serverNames, org.jasig.cas.client.util.CommonUtils.SERVICE_PARAMETER_NAMES, artifactParameterName, encode);\n    }\n\n    public static java.lang.String constructServiceUrl(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response, final java.lang.String service, final java.lang.String serverNames, final java.lang.String serviceParameterName, final java.lang.String artifactParameterName, final boolean encode) {\n        if (org.jasig.cas.client.util.CommonUtils.isNotBlank(service)) {\n            return encode ? response.encodeURL(service) : service;\n        }\n        final java.lang.String serverName = org.jasig.cas.client.util.CommonUtils.findMatchingServerName(request, serverNames);\n        final org.jasig.cas.client.util.URIBuilder originalRequestUrl = new org.jasig.cas.client.util.URIBuilder(request.getRequestURL().toString(), encode);\n        originalRequestUrl.setParameters(request.getQueryString());\n        final org.jasig.cas.client.util.URIBuilder builder;\n        boolean containsScheme = true;\n        if ((!serverName.startsWith(\"https://\")) && (!serverName.startsWith(\"http://\"))) {\n            builder = new org.jasig.cas.client.util.URIBuilder(encode);\n            builder.setScheme(request.isSecure() ? \"https\" : \"http\");\n            builder.setHost(serverName);\n            containsScheme = false;\n        } else {\n            builder = new org.jasig.cas.client.util.URIBuilder(serverName, encode);\n        }\n        if ((!org.jasig.cas.client.util.CommonUtils.serverNameContainsPort(containsScheme, serverName)) && (!org.jasig.cas.client.util.CommonUtils.requestIsOnStandardPort(request))) {\n            builder.setPort(request.getServerPort());\n        }\n        builder.setEncodedPath(request.getRequestURI());\n        final java.util.List<java.lang.String> serviceParameterNames = java.util.Arrays.asList(serviceParameterName.split(\",\"));\n        if ((!serviceParameterNames.isEmpty()) && (!originalRequestUrl.getQueryParams().isEmpty())) {\n            for (final org.jasig.cas.client.util.URIBuilder.BasicNameValuePair pair : originalRequestUrl.getQueryParams()) {\n                java.lang.String name = pair.getName();\n                if ((!name.equals(artifactParameterName)) && (!serviceParameterNames.contains(name))) {\n                    if (name.contains(\"&\") || name.contains(\"=\")) {\n                        org.jasig.cas.client.util.URIBuilder encodedParamBuilder = new org.jasig.cas.client.util.URIBuilder();\n                        encodedParamBuilder.setParameters(name);\n                        for (final org.jasig.cas.client.util.URIBuilder.BasicNameValuePair pair2 : encodedParamBuilder.getQueryParams()) {\n                            java.lang.String name2 = pair2.getName();\n                            if ((!name2.equals(artifactParameterName)) && (!serviceParameterNames.contains(name2))) {\n                                builder.addParameter(name2, pair2.getValue());\n                            }\n                        }\n                    } else {\n                        builder.addParameter(name, pair.getValue());\n                    }\n                }\n            }\n        }\n        final java.lang.String result = builder.toString();\n        final java.lang.String returnValue = (encode) ? response.encodeURL(result) : result;\n        org.jasig.cas.client.util.CommonUtils.LOGGER.debug(\"serviceUrl generated: {}\", returnValue);\n        return returnValue;\n    }\n\n    public static java.lang.String safeGetParameter(final javax.servlet.http.HttpServletRequest request, final java.lang.String parameter, final java.util.List<java.lang.String> parameters) {\n        if (\"POST\".equals(request.getMethod()) && parameters.contains(parameter)) {\n            org.jasig.cas.client.util.CommonUtils.LOGGER.debug(\"safeGetParameter called on a POST HttpServletRequest for Restricted Parameters.  Cannot complete check safely.  Reverting to standard behavior for this Parameter\");\n            return request.getParameter(parameter);\n        }\n        return (request.getQueryString() == null) || (!request.getQueryString().contains(parameter)) ? null : request.getParameter(parameter);\n    }\n\n    public static java.lang.String safeGetParameter(final javax.servlet.http.HttpServletRequest request, final java.lang.String parameter) {\n        return org.jasig.cas.client.util.CommonUtils.safeGetParameter(request, parameter, java.util.Arrays.asList(\"logoutRequest\"));\n    }\n\n    @java.lang.Deprecated\n    public static java.lang.String getResponseFromServer(final java.lang.String constructedUrl, final java.lang.String encoding) {\n        try {\n            return org.jasig.cas.client.util.CommonUtils.getResponseFromServer(new java.net.URL(constructedUrl), org.jasig.cas.client.util.CommonUtils.DEFAULT_URL_CONNECTION_FACTORY, encoding);\n        } catch (final java.io.IOException e) {\n            throw new java.lang.RuntimeException(e.getMessage(), e);\n        }\n    }\n\n    @java.lang.Deprecated\n    public static java.lang.String getResponseFromServer(final java.net.URL constructedUrl, final java.lang.String encoding) {\n        return org.jasig.cas.client.util.CommonUtils.getResponseFromServer(constructedUrl, org.jasig.cas.client.util.CommonUtils.DEFAULT_URL_CONNECTION_FACTORY, encoding);\n    }\n\n    public static java.lang.String getResponseFromServer(final java.net.URL constructedUrl, final org.jasig.cas.client.ssl.HttpURLConnectionFactory factory, final java.lang.String encoding) {\n        java.net.HttpURLConnection conn = null;\n        java.io.InputStreamReader in = null;\n        try {\n            conn = factory.buildHttpURLConnection(constructedUrl.openConnection());\n            if (org.jasig.cas.client.util.CommonUtils.isEmpty(encoding)) {\n                in = new java.io.InputStreamReader(conn.getInputStream());\n            } else {\n                in = new java.io.InputStreamReader(conn.getInputStream(), encoding);\n            }\n            final java.lang.StringBuilder builder = new java.lang.StringBuilder(255);\n            int byteRead;\n            while ((byteRead = in.read()) != (-1)) {\n                builder.append(((char) (byteRead)));\n            } \n            return builder.toString();\n        } catch (final java.lang.RuntimeException e) {\n            throw e;\n        } catch (final javax.net.ssl.SSLException e) {\n            org.jasig.cas.client.util.CommonUtils.LOGGER.error(\"SSL error getting response from host: {} : Error Message: {}\", constructedUrl.getHost(), e.getMessage(), e);\n            throw new java.lang.RuntimeException(e);\n        } catch (final java.io.IOException e) {\n            org.jasig.cas.client.util.CommonUtils.LOGGER.error(\"Error getting response from host: [{}] with path: [{}] and protocol: [{}] Error Message: {}\", constructedUrl.getHost(), constructedUrl.getPath(), constructedUrl.getProtocol(), e.getMessage(), e);\n            throw new java.lang.RuntimeException(e);\n        } finally {\n            org.jasig.cas.client.util.CommonUtils.closeQuietly(in);\n            if (conn != null) {\n                conn.disconnect();\n            }\n        }\n    }\n\n    public static org.jasig.cas.client.validation.ProxyList createProxyList(final java.lang.String proxies) {\n        if (org.jasig.cas.client.util.CommonUtils.isBlank(proxies)) {\n            return new org.jasig.cas.client.validation.ProxyList();\n        }\n        final org.jasig.cas.client.validation.ProxyListEditor editor = new org.jasig.cas.client.validation.ProxyListEditor();\n        editor.setAsText(proxies);\n        return ((org.jasig.cas.client.validation.ProxyList) (editor.getValue()));\n    }\n\n    public static void sendRedirect(final javax.servlet.http.HttpServletResponse response, final java.lang.String url) {\n        try {\n            response.sendRedirect(url);\n        } catch (final java.io.IOException e) {\n            org.jasig.cas.client.util.CommonUtils.LOGGER.warn(e.getMessage(), e);\n        }\n    }\n\n    public static void closeQuietly(final java.io.Closeable resource) {\n        try {\n            if (resource != null) {\n                resource.close();\n            }\n        } catch (final java.io.IOException e) {\n        }\n    }\n\n    public static boolean toBoolean(final java.lang.String str) {\n        return org.jasig.cas.client.util.CommonUtils.toBooleanObject(str) == java.lang.Boolean.TRUE;\n    }\n\n    public static java.lang.Boolean toBooleanObject(final java.lang.String str) {\n        if (str == \"true\") {\n            return java.lang.Boolean.TRUE;\n        }\n        if (str == null) {\n            return null;\n        }\n        switch (str.length()) {\n            case 1 :\n                {\n                    final char ch0 = str.charAt(0);\n                    if ((((ch0 == 'y') || (ch0 == 'Y')) || (ch0 == 't')) || (ch0 == 'T')) {\n                        return java.lang.Boolean.TRUE;\n                    }\n                    if ((((ch0 == 'n') || (ch0 == 'N')) || (ch0 == 'f')) || (ch0 == 'F')) {\n                        return java.lang.Boolean.FALSE;\n                    }\n                    break;\n                }\n            case 2 :\n                {\n                    final char ch0 = str.charAt(0);\n                    final char ch1 = str.charAt(1);\n                    if (((ch0 == 'o') || (ch0 == 'O')) && ((ch1 == 'n') || (ch1 == 'N'))) {\n                        return java.lang.Boolean.TRUE;\n                    }\n                    if (((ch0 == 'n') || (ch0 == 'N')) && ((ch1 == 'o') || (ch1 == 'O'))) {\n                        return java.lang.Boolean.FALSE;\n                    }\n                    break;\n                }\n            case 3 :\n                {\n                    final char ch0 = str.charAt(0);\n                    final char ch1 = str.charAt(1);\n                    final char ch2 = str.charAt(2);\n                    if ((((ch0 == 'y') || (ch0 == 'Y')) && ((ch1 == 'e') || (ch1 == 'E'))) && ((ch2 == 's') || (ch2 == 'S'))) {\n                        return java.lang.Boolean.TRUE;\n                    }\n                    if ((((ch0 == 'o') || (ch0 == 'O')) && ((ch1 == 'f') || (ch1 == 'F'))) && ((ch2 == 'f') || (ch2 == 'F'))) {\n                        return java.lang.Boolean.FALSE;\n                    }\n                    break;\n                }\n            case 4 :\n                {\n                    final char ch0 = str.charAt(0);\n                    final char ch1 = str.charAt(1);\n                    final char ch2 = str.charAt(2);\n                    final char ch3 = str.charAt(3);\n                    if (((((ch0 == 't') || (ch0 == 'T')) && ((ch1 == 'r') || (ch1 == 'R'))) && ((ch2 == 'u') || (ch2 == 'U'))) && ((ch3 == 'e') || (ch3 == 'E'))) {\n                        return java.lang.Boolean.TRUE;\n                    }\n                    break;\n                }\n            case 5 :\n                {\n                    final char ch0 = str.charAt(0);\n                    final char ch1 = str.charAt(1);\n                    final char ch2 = str.charAt(2);\n                    final char ch3 = str.charAt(3);\n                    final char ch4 = str.charAt(4);\n                    if ((((((ch0 == 'f') || (ch0 == 'F')) && ((ch1 == 'a') || (ch1 == 'A'))) && ((ch2 == 'l') || (ch2 == 'L'))) && ((ch3 == 's') || (ch3 == 'S'))) && ((ch4 == 'e') || (ch4 == 'E'))) {\n                        return java.lang.Boolean.FALSE;\n                    }\n                    break;\n                }\n            default :\n                break;\n        }\n        return null;\n    }\n\n    public static long toLong(final java.lang.String str, final long defaultValue) {\n        if (str == null) {\n            return defaultValue;\n        }\n        try {\n            return java.lang.Long.parseLong(str);\n        } catch (final java.lang.NumberFormatException nfe) {\n            return defaultValue;\n        }\n    }\n\n    public static int toInt(final java.lang.String str, final int defaultValue) {\n        if (str == null) {\n            return defaultValue;\n        }\n        try {\n            return java.lang.Integer.parseInt(str);\n        } catch (final java.lang.NumberFormatException nfe) {\n            return defaultValue;\n        }\n    }\n\n    public static java.lang.String nullToEmpty(java.lang.String string) {\n        return string == null ? \"\" : string;\n    }\n\n    public static java.lang.String addTrailingSlash(java.lang.String uri) {\n        return uri.endsWith(\"/\") ? uri : uri + \"/\";\n    }\n}",
            "src_parent_type": "Class",
            "src_type": "Method"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "LocalVariable",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "LocalVariable",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "boolean containsScheme = true",
            "src_parent": "{\n    if (org.jasig.cas.client.util.CommonUtils.isNotBlank(service)) {\n        return encode ? response.encodeURL(service) : service;\n    }\n    final java.lang.String serverName = org.jasig.cas.client.util.CommonUtils.findMatchingServerName(request, serverNames);\n    final org.jasig.cas.client.util.URIBuilder originalRequestUrl = new org.jasig.cas.client.util.URIBuilder(request.getRequestURL().toString(), encode);\n    originalRequestUrl.setParameters(request.getQueryString());\n    final org.jasig.cas.client.util.URIBuilder builder;\n    boolean containsScheme = true;\n    if ((!serverName.startsWith(\"https://\")) && (!serverName.startsWith(\"http://\"))) {\n        builder = new org.jasig.cas.client.util.URIBuilder(encode);\n        builder.setScheme(request.isSecure() ? \"https\" : \"http\");\n        builder.setHost(serverName);\n        containsScheme = false;\n    } else {\n        builder = new org.jasig.cas.client.util.URIBuilder(serverName, encode);\n    }\n    if ((!org.jasig.cas.client.util.CommonUtils.serverNameContainsPort(containsScheme, serverName)) && (!org.jasig.cas.client.util.CommonUtils.requestIsOnStandardPort(request))) {\n        builder.setPort(request.getServerPort());\n    }\n    builder.setEncodedPath(request.getRequestURI());\n    final java.util.List<java.lang.String> serviceParameterNames = java.util.Arrays.asList(serviceParameterName.split(\",\"));\n    if ((!serviceParameterNames.isEmpty()) && (!originalRequestUrl.getQueryParams().isEmpty())) {\n        for (final org.jasig.cas.client.util.URIBuilder.BasicNameValuePair pair : originalRequestUrl.getQueryParams()) {\n            java.lang.String name = pair.getName();\n            if ((!name.equals(artifactParameterName)) && (!serviceParameterNames.contains(name))) {\n                if (name.contains(\"&\") || name.contains(\"=\")) {\n                    org.jasig.cas.client.util.URIBuilder encodedParamBuilder = new org.jasig.cas.client.util.URIBuilder();\n                    encodedParamBuilder.setParameters(name);\n                    for (final org.jasig.cas.client.util.URIBuilder.BasicNameValuePair pair2 : encodedParamBuilder.getQueryParams()) {\n                        java.lang.String name2 = pair2.getName();\n                        if ((!name2.equals(artifactParameterName)) && (!serviceParameterNames.contains(name2))) {\n                            builder.addParameter(name2, pair2.getValue());\n                        }\n                    }\n                } else {\n                    builder.addParameter(name, pair.getValue());\n                }\n            }\n        }\n    }\n    final java.lang.String result = builder.toString();\n    final java.lang.String returnValue = (encode) ? response.encodeURL(result) : result;\n    org.jasig.cas.client.util.CommonUtils.LOGGER.debug(\"serviceUrl generated: {}\", returnValue);\n    return returnValue;\n}",
            "src_parent_type": "Block",
            "src_type": "LocalVariable"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "Invocation",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "builder.setScheme(request.isSecure() ? \"https\" : \"http\")",
            "src_parent": "{\n    builder = new org.jasig.cas.client.util.URIBuilder(encode);\n    builder.setScheme(request.isSecure() ? \"https\" : \"http\");\n    builder.setHost(serverName);\n    containsScheme = false;\n}",
            "src_parent_type": "Block",
            "src_type": "Invocation"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "Invocation",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "builder.setHost(serverName)",
            "src_parent": "{\n    builder = new org.jasig.cas.client.util.URIBuilder(encode);\n    builder.setScheme(request.isSecure() ? \"https\" : \"http\");\n    builder.setHost(serverName);\n    containsScheme = false;\n}",
            "src_parent_type": "Block",
            "src_type": "Invocation"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "Invocation",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "containsScheme = false",
            "src_parent": "{\n    builder = new org.jasig.cas.client.util.URIBuilder(encode);\n    builder.setScheme(request.isSecure() ? \"https\" : \"http\");\n    builder.setHost(serverName);\n    containsScheme = false;\n}",
            "src_parent_type": "Block",
            "src_type": "Assignment"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "LocalVariable",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "(!org.jasig.cas.client.util.CommonUtils.serverNameContainsPort(containsScheme, serverName))",
            "src_parent": "(!org.jasig.cas.client.util.CommonUtils.serverNameContainsPort(containsScheme, serverName)) && (!org.jasig.cas.client.util.CommonUtils.requestIsOnStandardPort(request))",
            "src_parent_type": "BinaryOperator",
            "src_type": "UnaryOperator"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "LocalVariable",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Invocation",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "builder.getEncodedPath() + request.getRequestURI()",
            "src_parent": "builder.setEncodedPath(builder.getEncodedPath() + request.getRequestURI())",
            "src_parent_type": "Invocation",
            "src_type": "BinaryOperator"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "Invocation",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "java.lang.String scheme = (request.isSecure()) ? \"https://\" : \"http://\"",
            "src_parent": "{\n    java.lang.String scheme = (request.isSecure()) ? \"https://\" : \"http://\";\n    builder = new org.jasig.cas.client.util.URIBuilder(scheme + serverName, encode);\n}",
            "src_parent_type": "Block",
            "src_type": "LocalVariable"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "LocalVariable",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "(builder.getPort() == (-1))",
            "src_parent": "(builder.getPort() == (-1)) && (!org.jasig.cas.client.util.CommonUtils.requestIsOnStandardPort(request))",
            "src_parent_type": "BinaryOperator",
            "src_type": "BinaryOperator"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "LocalVariable",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Invocation",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "request.getRequestURI()",
            "dst_parent": "builder.getEncodedPath() + request.getRequestURI()",
            "dst_parent_type": "BinaryOperator",
            "dst_type": "Invocation",
            "operator": "MOV",
            "src": "request.getRequestURI()",
            "src_parent": "builder.setEncodedPath(request.getRequestURI())",
            "src_parent_type": "Invocation",
            "src_type": "Invocation"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "Assignment",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "Assignment",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Invocation",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "request.isSecure()",
            "dst_parent": "(request.isSecure()) ? \"https://\" : \"http://\"",
            "dst_parent_type": "Conditional",
            "dst_type": "Invocation",
            "operator": "MOV",
            "src": "request.isSecure()",
            "src_parent": "request.isSecure() ? \"https\" : \"http\"",
            "src_parent_type": "Conditional",
            "src_type": "Invocation"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "LocalVariable",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "builder",
            "dst_parent": "builder.getPort()",
            "dst_parent_type": "Invocation",
            "dst_type": "VariableRead",
            "operator": "MOV",
            "src": "containsScheme",
            "src_parent": "org.jasig.cas.client.util.CommonUtils.serverNameContainsPort(containsScheme, serverName)",
            "src_parent_type": "Invocation",
            "src_type": "VariableRead"
          }
        }
      ],
      "file_name": "CommonUtils"
    }
  ],
  "id": "bears_197"
}