{
  "files": [
    {
      "features": [
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "Invocation",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "io.opentracing.contrib.p6spy.TracingP6SpyListener.isNullOrEmpty(peerName)",
            "dst_parent": "!io.opentracing.contrib.p6spy.TracingP6SpyListener.isNullOrEmpty(peerName)",
            "dst_parent_type": "UnaryOperator",
            "dst_type": "Invocation",
            "operator": "UPD",
            "src": "peerName.isEmpty()",
            "src_parent": "(!peerName.isEmpty())",
            "src_parent_type": "UnaryOperator",
            "src_type": "Invocation"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "Invocation",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "io.opentracing.contrib.p6spy.TracingP6SpyListener.isNullOrEmpty(dbUser)",
            "dst_parent": "!io.opentracing.contrib.p6spy.TracingP6SpyListener.isNullOrEmpty(dbUser)",
            "dst_parent_type": "UnaryOperator",
            "dst_type": "Invocation",
            "operator": "UPD",
            "src": "dbUser.isEmpty()",
            "src_parent": "(!dbUser.isEmpty())",
            "src_parent_type": "UnaryOperator",
            "src_type": "Invocation"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "Invocation",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "(peerName != null) && (!peerName.isEmpty())",
            "src_parent": "if ((peerName != null) && (!peerName.isEmpty())) {\n    Tags.PEER_SERVICE.set(span, peerName);\n}",
            "src_parent_type": "If",
            "src_type": "BinaryOperator"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "Invocation",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "(dbUser != null) && (!dbUser.isEmpty())",
            "src_parent": "if ((dbUser != null) && (!dbUser.isEmpty())) {\n    Tags.DB_USER.set(span, dbUser);\n}",
            "src_parent_type": "If",
            "src_type": "BinaryOperator"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Package",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "true",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Class",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "private static boolean isNullOrEmpty(java.lang.String s) {\n    return (s == null) || s.isEmpty();\n}",
            "src_parent": "class TracingP6SpyListener extends com.p6spy.engine.event.SimpleJdbcEventListener {\n    private static final java.util.logging.Logger log = java.util.logging.Logger.getLogger(io.opentracing.contrib.p6spy.TracingP6SpyListener.class.getName());\n\n    private static final java.util.regex.Pattern URL_PEER_SERVICE_FINDER = java.util.regex.Pattern.compile(\"tracingPeerService=(\\\\w*)\");\n\n    private enum OptionalBoolean {\n\n        TRUE,\n        FALSE,\n        OPTION_NOT_FOUND;}\n\n    private static final java.lang.String TRACE_WITH_ACTIVE_SPAN_ONLY_FINDER = \"traceWithActiveSpanOnly=true\";\n\n    private static final java.lang.String TRACE_WITHOUT_ACTIVE_SPAN_ONLY_FINDER = \"traceWithActiveSpanOnly=false\";\n\n    private final java.lang.String defaultPeerService;\n\n    private final boolean defaultTraceWithActiveSpanOnly;\n\n    private final java.lang.ThreadLocal<io.opentracing.Scope> currentScope = new java.lang.ThreadLocal<>();\n\n    TracingP6SpyListener(java.lang.String defaultPeerService, boolean defaultTraceWithActiveSpanOnly) {\n        this.defaultPeerService = defaultPeerService;\n        this.defaultTraceWithActiveSpanOnly = defaultTraceWithActiveSpanOnly;\n    }\n\n    @java.lang.Override\n    public void onBeforeAnyExecute(com.p6spy.engine.common.StatementInformation statementInformation) {\n        onBefore(\"Execute\", statementInformation);\n    }\n\n    @java.lang.Override\n    public void onAfterAnyExecute(com.p6spy.engine.common.StatementInformation statementInformation, long timeElapsedNanos, java.sql.SQLException e) {\n        onAfter(e);\n    }\n\n    @java.lang.Override\n    public void onBeforeAnyAddBatch(com.p6spy.engine.common.StatementInformation statementInformation) {\n        onBefore(\"Batch\", statementInformation);\n    }\n\n    @java.lang.Override\n    public void onAfterAnyAddBatch(com.p6spy.engine.common.StatementInformation statementInformation, long timeElapsedNanos, java.sql.SQLException e) {\n        onAfter(e);\n    }\n\n    private void onBefore(java.lang.String operationName, com.p6spy.engine.common.StatementInformation statementInformation) {\n        final io.opentracing.Tracer tracer = io.opentracing.util.GlobalTracer.get();\n        if (tracer == null) {\n            return;\n        }\n        final io.opentracing.Scope scope = buildSpan(tracer, operationName, statementInformation);\n        currentScope.set(scope);\n    }\n\n    private void onAfter(java.sql.SQLException e) {\n        io.opentracing.Scope scope = currentScope.get();\n        if (scope == null) {\n            return;\n        }\n        Tags.ERROR.set(scope.span(), e != null);\n        scope.close();\n    }\n\n    private io.opentracing.Scope buildSpan(io.opentracing.Tracer tracer, java.lang.String operationName, com.p6spy.engine.common.StatementInformation statementInformation) {\n        try {\n            final io.opentracing.Scope activeScope = tracer.scopeManager().active();\n            final java.lang.String dbUrl = statementInformation.getConnectionInformation().getConnection().getMetaData().getURL();\n            if ((!allowTraceWithNoActiveSpan(dbUrl)) && (activeScope == null)) {\n                return NoopScopeManager.NoopScope.INSTANCE;\n            }\n            final io.opentracing.Tracer.SpanBuilder spanBuilder = tracer.buildSpan(operationName).withTag(Tags.SPAN_KIND.getKey(), Tags.SPAN_KIND_CLIENT);\n            if (activeScope != null) {\n                spanBuilder.asChildOf(activeScope.span());\n            }\n            final io.opentracing.Scope scope = spanBuilder.startActive(true);\n            decorate(scope.span(), statementInformation);\n            return scope;\n        } catch (java.sql.SQLException e) {\n            return NoopScopeManager.NoopScope.INSTANCE;\n        }\n    }\n\n    private void decorate(io.opentracing.Span span, com.p6spy.engine.common.StatementInformation statementInformation) throws java.sql.SQLException {\n        final java.lang.String dbUrl = statementInformation.getConnectionInformation().getConnection().getMetaData().getURL();\n        final java.lang.String extractedPeerName = io.opentracing.contrib.p6spy.TracingP6SpyListener.extractPeerService(dbUrl);\n        final java.lang.String peerName = ((extractedPeerName != null) && (!extractedPeerName.isEmpty())) ? extractedPeerName : defaultPeerService;\n        final java.lang.String dbUser = statementInformation.getConnectionInformation().getConnection().getMetaData().getUserName();\n        final java.lang.String dbInstance = statementInformation.getConnectionInformation().getConnection().getCatalog();\n        Tags.COMPONENT.set(span, \"java-p6spy\");\n        Tags.DB_STATEMENT.set(span, statementInformation.getSql());\n        if (!io.opentracing.contrib.p6spy.TracingP6SpyListener.isNullOrEmpty(dbUrl)) {\n            span.setTag(\"peer.address\", dbUrl);\n            Tags.DB_TYPE.set(span, io.opentracing.contrib.p6spy.TracingP6SpyListener.extractDbType(dbUrl));\n        }\n        if (!io.opentracing.contrib.p6spy.TracingP6SpyListener.isNullOrEmpty(dbInstance)) {\n            Tags.DB_INSTANCE.set(span, dbInstance);\n        }\n        if (!io.opentracing.contrib.p6spy.TracingP6SpyListener.isNullOrEmpty(peerName)) {\n            Tags.PEER_SERVICE.set(span, peerName);\n        }\n        if (!io.opentracing.contrib.p6spy.TracingP6SpyListener.isNullOrEmpty(dbUser)) {\n            Tags.DB_USER.set(span, dbUser);\n        }\n    }\n\n    private static java.lang.String extractDbType(java.lang.String realUrl) {\n        return realUrl.split(\":\")[1];\n    }\n\n    private static java.lang.String extractPeerService(java.lang.String url) {\n        if (url != null) {\n            java.util.regex.Matcher matcher = io.opentracing.contrib.p6spy.TracingP6SpyListener.URL_PEER_SERVICE_FINDER.matcher(url);\n            if (matcher.find() && (matcher.groupCount() == 1)) {\n                return matcher.group(1);\n            }\n        }\n        return \"\";\n    }\n\n    private boolean allowTraceWithNoActiveSpan(java.lang.String url) {\n        final io.opentracing.contrib.p6spy.TracingP6SpyListener.OptionalBoolean withActiveSpanOnly = io.opentracing.contrib.p6spy.TracingP6SpyListener.withActiveSpanOnly(url);\n        return ((withActiveSpanOnly != io.opentracing.contrib.p6spy.TracingP6SpyListener.OptionalBoolean.OPTION_NOT_FOUND) && (withActiveSpanOnly == io.opentracing.contrib.p6spy.TracingP6SpyListener.OptionalBoolean.FALSE)) || ((withActiveSpanOnly == io.opentracing.contrib.p6spy.TracingP6SpyListener.OptionalBoolean.OPTION_NOT_FOUND) && (!defaultTraceWithActiveSpanOnly));\n    }\n\n    private static io.opentracing.contrib.p6spy.TracingP6SpyListener.OptionalBoolean withActiveSpanOnly(java.lang.String url) {\n        if (url == null) {\n            return io.opentracing.contrib.p6spy.TracingP6SpyListener.OptionalBoolean.OPTION_NOT_FOUND;\n        }\n        if (url.contains(io.opentracing.contrib.p6spy.TracingP6SpyListener.TRACE_WITH_ACTIVE_SPAN_ONLY_FINDER) && url.contains(io.opentracing.contrib.p6spy.TracingP6SpyListener.TRACE_WITHOUT_ACTIVE_SPAN_ONLY_FINDER)) {\n            if (io.opentracing.contrib.p6spy.TracingP6SpyListener.log.isLoggable(java.util.logging.Level.WARNING)) {\n                io.opentracing.contrib.p6spy.TracingP6SpyListener.log.warning(\"jdbc url contains contradictory traceWithActiveSpanOnly=true and traceWithActiveSpanOnly=false options. Defaulting to no options\");\n            }\n            return io.opentracing.contrib.p6spy.TracingP6SpyListener.OptionalBoolean.OPTION_NOT_FOUND;\n        }\n        if (url.contains(io.opentracing.contrib.p6spy.TracingP6SpyListener.TRACE_WITH_ACTIVE_SPAN_ONLY_FINDER)) {\n            return io.opentracing.contrib.p6spy.TracingP6SpyListener.OptionalBoolean.TRUE;\n        } else if (url.contains(io.opentracing.contrib.p6spy.TracingP6SpyListener.TRACE_WITHOUT_ACTIVE_SPAN_ONLY_FINDER)) {\n            return io.opentracing.contrib.p6spy.TracingP6SpyListener.OptionalBoolean.FALSE;\n        }\n        return io.opentracing.contrib.p6spy.TracingP6SpyListener.OptionalBoolean.OPTION_NOT_FOUND;\n    }\n\n    private static boolean isNullOrEmpty(java.lang.String s) {\n        return (s == null) || s.isEmpty();\n    }\n}",
            "src_parent_type": "Class",
            "src_type": "Method"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "true",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Method",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "if (!io.opentracing.contrib.p6spy.TracingP6SpyListener.isNullOrEmpty(dbUrl)) {\n    span.setTag(\"peer.address\", dbUrl);\n    Tags.DB_TYPE.set(span, io.opentracing.contrib.p6spy.TracingP6SpyListener.extractDbType(dbUrl));\n}",
            "src_parent": "{\n    final java.lang.String dbUrl = statementInformation.getConnectionInformation().getConnection().getMetaData().getURL();\n    final java.lang.String extractedPeerName = io.opentracing.contrib.p6spy.TracingP6SpyListener.extractPeerService(dbUrl);\n    final java.lang.String peerName = ((extractedPeerName != null) && (!extractedPeerName.isEmpty())) ? extractedPeerName : defaultPeerService;\n    final java.lang.String dbUser = statementInformation.getConnectionInformation().getConnection().getMetaData().getUserName();\n    final java.lang.String dbInstance = statementInformation.getConnectionInformation().getConnection().getCatalog();\n    Tags.COMPONENT.set(span, \"java-p6spy\");\n    Tags.DB_STATEMENT.set(span, statementInformation.getSql());\n    if (!io.opentracing.contrib.p6spy.TracingP6SpyListener.isNullOrEmpty(dbUrl)) {\n        span.setTag(\"peer.address\", dbUrl);\n        Tags.DB_TYPE.set(span, io.opentracing.contrib.p6spy.TracingP6SpyListener.extractDbType(dbUrl));\n    }\n    if (!io.opentracing.contrib.p6spy.TracingP6SpyListener.isNullOrEmpty(dbInstance)) {\n        Tags.DB_INSTANCE.set(span, dbInstance);\n    }\n    if (!io.opentracing.contrib.p6spy.TracingP6SpyListener.isNullOrEmpty(peerName)) {\n        Tags.PEER_SERVICE.set(span, peerName);\n    }\n    if (!io.opentracing.contrib.p6spy.TracingP6SpyListener.isNullOrEmpty(dbUser)) {\n        Tags.DB_USER.set(span, dbUser);\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "If"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "true",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Method",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "if (!io.opentracing.contrib.p6spy.TracingP6SpyListener.isNullOrEmpty(dbInstance)) {\n    Tags.DB_INSTANCE.set(span, dbInstance);\n}",
            "src_parent": "{\n    final java.lang.String dbUrl = statementInformation.getConnectionInformation().getConnection().getMetaData().getURL();\n    final java.lang.String extractedPeerName = io.opentracing.contrib.p6spy.TracingP6SpyListener.extractPeerService(dbUrl);\n    final java.lang.String peerName = ((extractedPeerName != null) && (!extractedPeerName.isEmpty())) ? extractedPeerName : defaultPeerService;\n    final java.lang.String dbUser = statementInformation.getConnectionInformation().getConnection().getMetaData().getUserName();\n    final java.lang.String dbInstance = statementInformation.getConnectionInformation().getConnection().getCatalog();\n    Tags.COMPONENT.set(span, \"java-p6spy\");\n    Tags.DB_STATEMENT.set(span, statementInformation.getSql());\n    if (!io.opentracing.contrib.p6spy.TracingP6SpyListener.isNullOrEmpty(dbUrl)) {\n        span.setTag(\"peer.address\", dbUrl);\n        Tags.DB_TYPE.set(span, io.opentracing.contrib.p6spy.TracingP6SpyListener.extractDbType(dbUrl));\n    }\n    if (!io.opentracing.contrib.p6spy.TracingP6SpyListener.isNullOrEmpty(dbInstance)) {\n        Tags.DB_INSTANCE.set(span, dbInstance);\n    }\n    if (!io.opentracing.contrib.p6spy.TracingP6SpyListener.isNullOrEmpty(peerName)) {\n        Tags.PEER_SERVICE.set(span, peerName);\n    }\n    if (!io.opentracing.contrib.p6spy.TracingP6SpyListener.isNullOrEmpty(dbUser)) {\n        Tags.DB_USER.set(span, dbUser);\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "If"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Method",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "if (url != null) {\n    java.util.regex.Matcher matcher = io.opentracing.contrib.p6spy.TracingP6SpyListener.URL_PEER_SERVICE_FINDER.matcher(url);\n    if (matcher.find() && (matcher.groupCount() == 1)) {\n        return matcher.group(1);\n    }\n}",
            "src_parent": "{\n    if (url != null) {\n        java.util.regex.Matcher matcher = io.opentracing.contrib.p6spy.TracingP6SpyListener.URL_PEER_SERVICE_FINDER.matcher(url);\n        if (matcher.find() && (matcher.groupCount() == 1)) {\n            return matcher.group(1);\n        }\n    }\n    return \"\";\n}",
            "src_parent_type": "Block",
            "src_type": "If"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "Invocation",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "!io.opentracing.contrib.p6spy.TracingP6SpyListener.isNullOrEmpty(peerName)",
            "src_parent": "if (!io.opentracing.contrib.p6spy.TracingP6SpyListener.isNullOrEmpty(peerName)) {\n    Tags.PEER_SERVICE.set(span, peerName);\n}",
            "src_parent_type": "If",
            "src_type": "UnaryOperator"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "Invocation",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "!io.opentracing.contrib.p6spy.TracingP6SpyListener.isNullOrEmpty(dbUser)",
            "src_parent": "if (!io.opentracing.contrib.p6spy.TracingP6SpyListener.isNullOrEmpty(dbUser)) {\n    Tags.DB_USER.set(span, dbUser);\n}",
            "src_parent_type": "If",
            "src_type": "UnaryOperator"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "Invocation",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Invocation",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "span.setTag(\"peer.address\", dbUrl)",
            "dst_parent": "{\n    span.setTag(\"peer.address\", dbUrl);\n    Tags.DB_TYPE.set(span, io.opentracing.contrib.p6spy.TracingP6SpyListener.extractDbType(dbUrl));\n}",
            "dst_parent_type": "Block",
            "dst_type": "Invocation",
            "operator": "MOV",
            "src": "span.setTag(\"peer.address\", dbUrl)",
            "src_parent": "{\n    final java.lang.String dbUrl = statementInformation.getConnectionInformation().getConnection().getMetaData().getURL();\n    final java.lang.String extractedPeerName = io.opentracing.contrib.p6spy.TracingP6SpyListener.extractPeerService(dbUrl);\n    final java.lang.String peerName = ((extractedPeerName != null) && (!extractedPeerName.isEmpty())) ? extractedPeerName : defaultPeerService;\n    final java.lang.String dbUser = statementInformation.getConnectionInformation().getConnection().getMetaData().getUserName();\n    final java.lang.String dbInstance = statementInformation.getConnectionInformation().getConnection().getCatalog();\n    Tags.COMPONENT.set(span, \"java-p6spy\");\n    Tags.DB_STATEMENT.set(span, statementInformation.getSql());\n    Tags.DB_TYPE.set(span, io.opentracing.contrib.p6spy.TracingP6SpyListener.extractDbType(dbUrl));\n    Tags.DB_INSTANCE.set(span, dbInstance);\n    span.setTag(\"peer.address\", dbUrl);\n    if ((peerName != null) && (!peerName.isEmpty())) {\n        Tags.PEER_SERVICE.set(span, peerName);\n    }\n    if ((dbUser != null) && (!dbUser.isEmpty())) {\n        Tags.DB_USER.set(span, dbUser);\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "Invocation"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "LocalVariable",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Invocation",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "Tags.DB_TYPE.set(span, io.opentracing.contrib.p6spy.TracingP6SpyListener.extractDbType(dbUrl))",
            "dst_parent": "{\n    span.setTag(\"peer.address\", dbUrl);\n    Tags.DB_TYPE.set(span, io.opentracing.contrib.p6spy.TracingP6SpyListener.extractDbType(dbUrl));\n}",
            "dst_parent_type": "Block",
            "dst_type": "Invocation",
            "operator": "MOV",
            "src": "Tags.DB_TYPE.set(span, io.opentracing.contrib.p6spy.TracingP6SpyListener.extractDbType(dbUrl))",
            "src_parent": "{\n    final java.lang.String dbUrl = statementInformation.getConnectionInformation().getConnection().getMetaData().getURL();\n    final java.lang.String extractedPeerName = io.opentracing.contrib.p6spy.TracingP6SpyListener.extractPeerService(dbUrl);\n    final java.lang.String peerName = ((extractedPeerName != null) && (!extractedPeerName.isEmpty())) ? extractedPeerName : defaultPeerService;\n    final java.lang.String dbUser = statementInformation.getConnectionInformation().getConnection().getMetaData().getUserName();\n    final java.lang.String dbInstance = statementInformation.getConnectionInformation().getConnection().getCatalog();\n    Tags.COMPONENT.set(span, \"java-p6spy\");\n    Tags.DB_STATEMENT.set(span, statementInformation.getSql());\n    Tags.DB_TYPE.set(span, io.opentracing.contrib.p6spy.TracingP6SpyListener.extractDbType(dbUrl));\n    Tags.DB_INSTANCE.set(span, dbInstance);\n    span.setTag(\"peer.address\", dbUrl);\n    if ((peerName != null) && (!peerName.isEmpty())) {\n        Tags.PEER_SERVICE.set(span, peerName);\n    }\n    if ((dbUser != null) && (!dbUser.isEmpty())) {\n        Tags.DB_USER.set(span, dbUser);\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "Invocation"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "Invocation",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Invocation",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "Tags.DB_INSTANCE.set(span, dbInstance)",
            "dst_parent": "{\n    Tags.DB_INSTANCE.set(span, dbInstance);\n}",
            "dst_parent_type": "Block",
            "dst_type": "Invocation",
            "operator": "MOV",
            "src": "Tags.DB_INSTANCE.set(span, dbInstance)",
            "src_parent": "{\n    final java.lang.String dbUrl = statementInformation.getConnectionInformation().getConnection().getMetaData().getURL();\n    final java.lang.String extractedPeerName = io.opentracing.contrib.p6spy.TracingP6SpyListener.extractPeerService(dbUrl);\n    final java.lang.String peerName = ((extractedPeerName != null) && (!extractedPeerName.isEmpty())) ? extractedPeerName : defaultPeerService;\n    final java.lang.String dbUser = statementInformation.getConnectionInformation().getConnection().getMetaData().getUserName();\n    final java.lang.String dbInstance = statementInformation.getConnectionInformation().getConnection().getCatalog();\n    Tags.COMPONENT.set(span, \"java-p6spy\");\n    Tags.DB_STATEMENT.set(span, statementInformation.getSql());\n    Tags.DB_TYPE.set(span, io.opentracing.contrib.p6spy.TracingP6SpyListener.extractDbType(dbUrl));\n    Tags.DB_INSTANCE.set(span, dbInstance);\n    span.setTag(\"peer.address\", dbUrl);\n    if ((peerName != null) && (!peerName.isEmpty())) {\n        Tags.PEER_SERVICE.set(span, peerName);\n    }\n    if ((dbUser != null) && (!dbUser.isEmpty())) {\n        Tags.DB_USER.set(span, dbUser);\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "Invocation"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "Invocation",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "io.opentracing.contrib.p6spy.TracingP6SpyListener.isNullOrEmpty(peerName)",
            "dst_parent": "!io.opentracing.contrib.p6spy.TracingP6SpyListener.isNullOrEmpty(peerName)",
            "dst_parent_type": "UnaryOperator",
            "dst_type": "Invocation",
            "operator": "MOV",
            "src": "peerName.isEmpty()",
            "src_parent": "(!peerName.isEmpty())",
            "src_parent_type": "UnaryOperator",
            "src_type": "Invocation"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "Invocation",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "io.opentracing.contrib.p6spy.TracingP6SpyListener.isNullOrEmpty(dbUser)",
            "dst_parent": "!io.opentracing.contrib.p6spy.TracingP6SpyListener.isNullOrEmpty(dbUser)",
            "dst_parent_type": "UnaryOperator",
            "dst_type": "Invocation",
            "operator": "MOV",
            "src": "dbUser.isEmpty()",
            "src_parent": "(!dbUser.isEmpty())",
            "src_parent_type": "UnaryOperator",
            "src_type": "Invocation"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "Return",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "LocalVariable",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "java.util.regex.Matcher matcher = io.opentracing.contrib.p6spy.TracingP6SpyListener.URL_PEER_SERVICE_FINDER.matcher(url)",
            "dst_parent": "{\n    java.util.regex.Matcher matcher = io.opentracing.contrib.p6spy.TracingP6SpyListener.URL_PEER_SERVICE_FINDER.matcher(url);\n    if (matcher.find() && (matcher.groupCount() == 1)) {\n        return matcher.group(1);\n    }\n}",
            "dst_parent_type": "Block",
            "dst_type": "LocalVariable",
            "operator": "MOV",
            "src": "java.util.regex.Matcher matcher = io.opentracing.contrib.p6spy.TracingP6SpyListener.URL_PEER_SERVICE_FINDER.matcher(url)",
            "src_parent": "{\n    java.util.regex.Matcher matcher = io.opentracing.contrib.p6spy.TracingP6SpyListener.URL_PEER_SERVICE_FINDER.matcher(url);\n    if (matcher.find() && (matcher.groupCount() == 1)) {\n        return matcher.group(1);\n    }\n    return \"\";\n}",
            "src_parent_type": "Block",
            "src_type": "LocalVariable"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Return",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "if (matcher.find() && (matcher.groupCount() == 1)) {\n    return matcher.group(1);\n}",
            "dst_parent": "{\n    java.util.regex.Matcher matcher = io.opentracing.contrib.p6spy.TracingP6SpyListener.URL_PEER_SERVICE_FINDER.matcher(url);\n    if (matcher.find() && (matcher.groupCount() == 1)) {\n        return matcher.group(1);\n    }\n}",
            "dst_parent_type": "Block",
            "dst_type": "If",
            "operator": "MOV",
            "src": "if (matcher.find() && (matcher.groupCount() == 1)) {\n    return matcher.group(1);\n}",
            "src_parent": "{\n    java.util.regex.Matcher matcher = io.opentracing.contrib.p6spy.TracingP6SpyListener.URL_PEER_SERVICE_FINDER.matcher(url);\n    if (matcher.find() && (matcher.groupCount() == 1)) {\n        return matcher.group(1);\n    }\n    return \"\";\n}",
            "src_parent_type": "Block",
            "src_type": "If"
          }
        }
      ],
      "file_name": "TracingP6SpyListener"
    }
  ],
  "id": "bears_230"
}