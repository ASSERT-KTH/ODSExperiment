{
  "files": [
    {
      "features": [
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Package",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Class",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "@java.lang.Override\npublic int hashCode() {\n    int result = dataElement.hashCode();\n    result = (31 * result) + (categoryOptionCombo != null ? categoryOptionCombo.hashCode() : 0);\n    result = (31 * result) + (attributeOptionCombo != null ? attributeOptionCombo.hashCode() : 0);\n    return result;\n}",
            "src_parent": "@com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlRootElement(localName = \"dataElementOperand\", namespace = org.hisp.dhis.common.DxfNamespaces.DXF_2_0)\npublic class DataElementOperand extends org.hisp.dhis.common.BaseDimensionalItemObject implements org.hisp.dhis.common.EmbeddedObject {\n    public static final java.lang.String SEPARATOR = COMPOSITE_DIM_OBJECT_PLAIN_SEP;\n\n    private static final java.lang.String SPACE = \" \";\n\n    private org.hisp.dhis.dataelement.DataElement dataElement;\n\n    private org.hisp.dhis.dataelement.DataElementCategoryOptionCombo categoryOptionCombo;\n\n    private org.hisp.dhis.dataelement.DataElementCategoryOptionCombo attributeOptionCombo;\n\n    public DataElementOperand() {\n        setAutoFields();\n    }\n\n    public DataElementOperand(org.hisp.dhis.dataelement.DataElement dataElement) {\n        this.dataElement = dataElement;\n    }\n\n    public DataElementOperand(org.hisp.dhis.dataelement.DataElement dataElement, org.hisp.dhis.dataelement.DataElementCategoryOptionCombo categoryOptionCombo) {\n        this.dataElement = dataElement;\n        this.categoryOptionCombo = categoryOptionCombo;\n    }\n\n    public DataElementOperand(org.hisp.dhis.dataelement.DataElement dataElement, org.hisp.dhis.dataelement.DataElementCategoryOptionCombo categoryOptionCombo, org.hisp.dhis.dataelement.DataElementCategoryOptionCombo attributeOptionCombo) {\n        this.dataElement = dataElement;\n        this.categoryOptionCombo = categoryOptionCombo;\n        this.attributeOptionCombo = attributeOptionCombo;\n    }\n\n    @java.lang.Override\n    public java.lang.String getDimensionItem() {\n        return getDimensionItem(IdScheme.UID);\n    }\n\n    @java.lang.Override\n    public java.lang.String getDimensionItem(org.hisp.dhis.common.IdScheme idScheme) {\n        java.lang.String item = null;\n        if (dataElement != null) {\n            item = dataElement.getPropertyValue(idScheme);\n            if (categoryOptionCombo != null) {\n                item += org.hisp.dhis.dataelement.DataElementOperand.SEPARATOR + categoryOptionCombo.getPropertyValue(idScheme);\n            } else if (attributeOptionCombo != null) {\n                item += org.hisp.dhis.dataelement.DataElementOperand.SEPARATOR + SYMBOL_WILDCARD;\n            }\n            if (attributeOptionCombo != null) {\n                item += org.hisp.dhis.dataelement.DataElementOperand.SEPARATOR + attributeOptionCombo.getPropertyValue(idScheme);\n            }\n        }\n        return item;\n    }\n\n    @java.lang.Override\n    public org.hisp.dhis.common.DimensionItemType getDimensionItemType() {\n        return org.hisp.dhis.common.DimensionItemType.DATA_ELEMENT_OPERAND;\n    }\n\n    @java.lang.Override\n    public java.lang.String getUid() {\n        java.lang.String uid = null;\n        if (dataElement != null) {\n            uid = dataElement.getUid();\n        }\n        if ((categoryOptionCombo != null) && (!categoryOptionCombo.isDefault())) {\n            uid += org.hisp.dhis.dataelement.DataElementOperand.SEPARATOR + categoryOptionCombo.getUid();\n        }\n        return uid;\n    }\n\n    @java.lang.Override\n    public java.lang.String getName() {\n        if (name != null) {\n            return name;\n        }\n        java.lang.String name = null;\n        if (dataElement != null) {\n            name = dataElement.getName();\n        }\n        if (hasNonDefaultCategoryOptionCombo()) {\n            name += org.hisp.dhis.dataelement.DataElementOperand.SPACE + categoryOptionCombo.getName();\n        } else if (hasNonDefaultAttributeOptionCombo()) {\n            name += org.hisp.dhis.dataelement.DataElementOperand.SPACE + SYMBOL_WILDCARD;\n        }\n        if (hasNonDefaultAttributeOptionCombo()) {\n            name += org.hisp.dhis.dataelement.DataElementOperand.SPACE + attributeOptionCombo.getName();\n        }\n        return name;\n    }\n\n    @java.lang.Override\n    public java.lang.String getShortName() {\n        java.lang.String shortName = null;\n        if (dataElement != null) {\n            shortName = dataElement.getShortName();\n        }\n        if (hasNonDefaultCategoryOptionCombo()) {\n            shortName += org.hisp.dhis.dataelement.DataElementOperand.SPACE + categoryOptionCombo.getShortName();\n        } else if (hasNonDefaultAttributeOptionCombo()) {\n            name += org.hisp.dhis.dataelement.DataElementOperand.SPACE + SYMBOL_WILDCARD;\n        }\n        if (hasNonDefaultAttributeOptionCombo()) {\n            name += org.hisp.dhis.dataelement.DataElementOperand.SPACE + attributeOptionCombo.getName();\n        }\n        return shortName;\n    }\n\n    public static org.hisp.dhis.dataelement.DataElementOperand instance(java.lang.String dataElementUid, java.lang.String categoryOptionComboUid) {\n        org.hisp.dhis.dataelement.DataElement de = new org.hisp.dhis.dataelement.DataElement();\n        de.setUid(dataElementUid);\n        org.hisp.dhis.dataelement.DataElementCategoryOptionCombo coc = null;\n        if (categoryOptionComboUid != null) {\n            coc = new org.hisp.dhis.dataelement.DataElementCategoryOptionCombo();\n            coc.setUid(categoryOptionComboUid);\n        }\n        return new org.hisp.dhis.dataelement.DataElementOperand(de, coc);\n    }\n\n    public boolean isTotal() {\n        return (categoryOptionCombo == null) && (attributeOptionCombo == null);\n    }\n\n    public boolean hasNonDefaultCategoryOptionCombo() {\n        return (categoryOptionCombo != null) && (!categoryOptionCombo.isDefault());\n    }\n\n    public boolean hasNonDefaultAttributeOptionCombo() {\n        return (attributeOptionCombo != null) && (!attributeOptionCombo.isDefault());\n    }\n\n    @com.fasterxml.jackson.annotation.JsonProperty\n    @com.fasterxml.jackson.databind.annotation.JsonSerialize(as = org.hisp.dhis.common.BaseIdentifiableObject.class)\n    @com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty(namespace = org.hisp.dhis.common.DxfNamespaces.DXF_2_0)\n    public org.hisp.dhis.dataelement.DataElement getDataElement() {\n        return dataElement;\n    }\n\n    public void setDataElement(org.hisp.dhis.dataelement.DataElement dataElement) {\n        this.dataElement = dataElement;\n    }\n\n    @com.fasterxml.jackson.annotation.JsonProperty\n    @com.fasterxml.jackson.databind.annotation.JsonSerialize(as = org.hisp.dhis.common.BaseIdentifiableObject.class)\n    @com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty(namespace = org.hisp.dhis.common.DxfNamespaces.DXF_2_0)\n    public org.hisp.dhis.dataelement.DataElementCategoryOptionCombo getCategoryOptionCombo() {\n        return categoryOptionCombo;\n    }\n\n    public void setCategoryOptionCombo(org.hisp.dhis.dataelement.DataElementCategoryOptionCombo categoryOptionCombo) {\n        this.categoryOptionCombo = categoryOptionCombo;\n    }\n\n    @com.fasterxml.jackson.annotation.JsonProperty\n    @com.fasterxml.jackson.databind.annotation.JsonSerialize(as = org.hisp.dhis.common.BaseIdentifiableObject.class)\n    @com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty(namespace = org.hisp.dhis.common.DxfNamespaces.DXF_2_0)\n    public org.hisp.dhis.dataelement.DataElementCategoryOptionCombo getAttributeOptionCombo() {\n        return attributeOptionCombo;\n    }\n\n    public void setAttributeOptionCombo(org.hisp.dhis.dataelement.DataElementCategoryOptionCombo attributeOptionCombo) {\n        this.attributeOptionCombo = attributeOptionCombo;\n    }\n\n    @java.lang.Override\n    public int hashCode() {\n        int result = dataElement.hashCode();\n        result = (31 * result) + (categoryOptionCombo != null ? categoryOptionCombo.hashCode() : 0);\n        result = (31 * result) + (attributeOptionCombo != null ? attributeOptionCombo.hashCode() : 0);\n        return result;\n    }\n\n    @java.lang.Override\n    public boolean equals(java.lang.Object object) {\n        if (this == object) {\n            return true;\n        }\n        if (object == null) {\n            return false;\n        }\n        if (getClass() != object.getClass()) {\n            return false;\n        }\n        org.hisp.dhis.dataelement.DataElementOperand other = ((org.hisp.dhis.dataelement.DataElementOperand) (object));\n        if (!dataElement.equals(other.dataElement)) {\n            return false;\n        }\n        if (categoryOptionCombo == null) {\n            if (other.categoryOptionCombo != null) {\n                return false;\n            }\n        } else if (!categoryOptionCombo.equals(other.categoryOptionCombo)) {\n            return false;\n        }\n        if (attributeOptionCombo == null) {\n            if (other.attributeOptionCombo != null) {\n                return false;\n            }\n        } else if (!attributeOptionCombo.equals(other.attributeOptionCombo)) {\n            return false;\n        }\n        return true;\n    }\n\n    @java.lang.Override\n    public java.lang.String toString() {\n        return ((((((((((((((((\"{\" + \"\\\"class\\\":\\\"\") + getClass()) + \"\\\", \") + \"\\\"id\\\":\\\"\") + id) + \"\\\", \") + \"\\\"uid\\\":\\\"\") + uid) + \"\\\", \") + \"\\\"dataElement\\\":\") + dataElement) + \", \") + \"\\\"categoryOptionCombo\\\":\") + categoryOptionCombo) + \"\\\"attributeOptionCombo\\\":\") + attributeOptionCombo) + '}';\n    }\n\n    public enum TotalType {\n\n        COC_ONLY(true, false, 1),\n        AOC_ONLY(false, true, 1),\n        COC_AND_AOC(true, true, 2),\n        NONE(false, false, 0);\n        private boolean coc;\n\n        private boolean aoc;\n\n        private int propertyCount;\n\n        private TotalType() {\n        }\n\n        private TotalType(boolean coc, boolean aoc, int propertyCount) {\n            this.coc = coc;\n            this.aoc = aoc;\n            this.propertyCount = propertyCount;\n        }\n\n        public boolean isCategoryOptionCombo() {\n            return coc;\n        }\n\n        public boolean isAttributeOptionCombo() {\n            return aoc;\n        }\n\n        public int getPropertyCount() {\n            return propertyCount;\n        }\n    }\n\n    public org.hisp.dhis.dataelement.DataElementOperand.TotalType getTotalType() {\n        if ((categoryOptionCombo != null) && (attributeOptionCombo != null)) {\n            return org.hisp.dhis.dataelement.DataElementOperand.TotalType.COC_AND_AOC;\n        } else if (categoryOptionCombo != null) {\n            return org.hisp.dhis.dataelement.DataElementOperand.TotalType.COC_ONLY;\n        } else if (attributeOptionCombo != null) {\n            return org.hisp.dhis.dataelement.DataElementOperand.TotalType.AOC_ONLY;\n        } else {\n            return org.hisp.dhis.dataelement.DataElementOperand.TotalType.NONE;\n        }\n    }\n}",
            "src_parent_type": "Class",
            "src_type": "Method"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Package",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Class",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "@java.lang.Override\npublic boolean equals(java.lang.Object object) {\n    if (this == object) {\n        return true;\n    }\n    if (object == null) {\n        return false;\n    }\n    if (getClass() != object.getClass()) {\n        return false;\n    }\n    org.hisp.dhis.dataelement.DataElementOperand other = ((org.hisp.dhis.dataelement.DataElementOperand) (object));\n    if (!dataElement.equals(other.dataElement)) {\n        return false;\n    }\n    if (categoryOptionCombo == null) {\n        if (other.categoryOptionCombo != null) {\n            return false;\n        }\n    } else if (!categoryOptionCombo.equals(other.categoryOptionCombo)) {\n        return false;\n    }\n    if (attributeOptionCombo == null) {\n        if (other.attributeOptionCombo != null) {\n            return false;\n        }\n    } else if (!attributeOptionCombo.equals(other.attributeOptionCombo)) {\n        return false;\n    }\n    return true;\n}",
            "src_parent": "@com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlRootElement(localName = \"dataElementOperand\", namespace = org.hisp.dhis.common.DxfNamespaces.DXF_2_0)\npublic class DataElementOperand extends org.hisp.dhis.common.BaseDimensionalItemObject implements org.hisp.dhis.common.EmbeddedObject {\n    public static final java.lang.String SEPARATOR = COMPOSITE_DIM_OBJECT_PLAIN_SEP;\n\n    private static final java.lang.String SPACE = \" \";\n\n    private org.hisp.dhis.dataelement.DataElement dataElement;\n\n    private org.hisp.dhis.dataelement.DataElementCategoryOptionCombo categoryOptionCombo;\n\n    private org.hisp.dhis.dataelement.DataElementCategoryOptionCombo attributeOptionCombo;\n\n    public DataElementOperand() {\n        setAutoFields();\n    }\n\n    public DataElementOperand(org.hisp.dhis.dataelement.DataElement dataElement) {\n        this.dataElement = dataElement;\n    }\n\n    public DataElementOperand(org.hisp.dhis.dataelement.DataElement dataElement, org.hisp.dhis.dataelement.DataElementCategoryOptionCombo categoryOptionCombo) {\n        this.dataElement = dataElement;\n        this.categoryOptionCombo = categoryOptionCombo;\n    }\n\n    public DataElementOperand(org.hisp.dhis.dataelement.DataElement dataElement, org.hisp.dhis.dataelement.DataElementCategoryOptionCombo categoryOptionCombo, org.hisp.dhis.dataelement.DataElementCategoryOptionCombo attributeOptionCombo) {\n        this.dataElement = dataElement;\n        this.categoryOptionCombo = categoryOptionCombo;\n        this.attributeOptionCombo = attributeOptionCombo;\n    }\n\n    @java.lang.Override\n    public java.lang.String getDimensionItem() {\n        return getDimensionItem(IdScheme.UID);\n    }\n\n    @java.lang.Override\n    public java.lang.String getDimensionItem(org.hisp.dhis.common.IdScheme idScheme) {\n        java.lang.String item = null;\n        if (dataElement != null) {\n            item = dataElement.getPropertyValue(idScheme);\n            if (categoryOptionCombo != null) {\n                item += org.hisp.dhis.dataelement.DataElementOperand.SEPARATOR + categoryOptionCombo.getPropertyValue(idScheme);\n            } else if (attributeOptionCombo != null) {\n                item += org.hisp.dhis.dataelement.DataElementOperand.SEPARATOR + SYMBOL_WILDCARD;\n            }\n            if (attributeOptionCombo != null) {\n                item += org.hisp.dhis.dataelement.DataElementOperand.SEPARATOR + attributeOptionCombo.getPropertyValue(idScheme);\n            }\n        }\n        return item;\n    }\n\n    @java.lang.Override\n    public org.hisp.dhis.common.DimensionItemType getDimensionItemType() {\n        return org.hisp.dhis.common.DimensionItemType.DATA_ELEMENT_OPERAND;\n    }\n\n    @java.lang.Override\n    public java.lang.String getUid() {\n        java.lang.String uid = null;\n        if (dataElement != null) {\n            uid = dataElement.getUid();\n        }\n        if ((categoryOptionCombo != null) && (!categoryOptionCombo.isDefault())) {\n            uid += org.hisp.dhis.dataelement.DataElementOperand.SEPARATOR + categoryOptionCombo.getUid();\n        }\n        return uid;\n    }\n\n    @java.lang.Override\n    public java.lang.String getName() {\n        if (name != null) {\n            return name;\n        }\n        java.lang.String name = null;\n        if (dataElement != null) {\n            name = dataElement.getName();\n        }\n        if (hasNonDefaultCategoryOptionCombo()) {\n            name += org.hisp.dhis.dataelement.DataElementOperand.SPACE + categoryOptionCombo.getName();\n        } else if (hasNonDefaultAttributeOptionCombo()) {\n            name += org.hisp.dhis.dataelement.DataElementOperand.SPACE + SYMBOL_WILDCARD;\n        }\n        if (hasNonDefaultAttributeOptionCombo()) {\n            name += org.hisp.dhis.dataelement.DataElementOperand.SPACE + attributeOptionCombo.getName();\n        }\n        return name;\n    }\n\n    @java.lang.Override\n    public java.lang.String getShortName() {\n        java.lang.String shortName = null;\n        if (dataElement != null) {\n            shortName = dataElement.getShortName();\n        }\n        if (hasNonDefaultCategoryOptionCombo()) {\n            shortName += org.hisp.dhis.dataelement.DataElementOperand.SPACE + categoryOptionCombo.getShortName();\n        } else if (hasNonDefaultAttributeOptionCombo()) {\n            name += org.hisp.dhis.dataelement.DataElementOperand.SPACE + SYMBOL_WILDCARD;\n        }\n        if (hasNonDefaultAttributeOptionCombo()) {\n            name += org.hisp.dhis.dataelement.DataElementOperand.SPACE + attributeOptionCombo.getName();\n        }\n        return shortName;\n    }\n\n    public static org.hisp.dhis.dataelement.DataElementOperand instance(java.lang.String dataElementUid, java.lang.String categoryOptionComboUid) {\n        org.hisp.dhis.dataelement.DataElement de = new org.hisp.dhis.dataelement.DataElement();\n        de.setUid(dataElementUid);\n        org.hisp.dhis.dataelement.DataElementCategoryOptionCombo coc = null;\n        if (categoryOptionComboUid != null) {\n            coc = new org.hisp.dhis.dataelement.DataElementCategoryOptionCombo();\n            coc.setUid(categoryOptionComboUid);\n        }\n        return new org.hisp.dhis.dataelement.DataElementOperand(de, coc);\n    }\n\n    public boolean isTotal() {\n        return (categoryOptionCombo == null) && (attributeOptionCombo == null);\n    }\n\n    public boolean hasNonDefaultCategoryOptionCombo() {\n        return (categoryOptionCombo != null) && (!categoryOptionCombo.isDefault());\n    }\n\n    public boolean hasNonDefaultAttributeOptionCombo() {\n        return (attributeOptionCombo != null) && (!attributeOptionCombo.isDefault());\n    }\n\n    @com.fasterxml.jackson.annotation.JsonProperty\n    @com.fasterxml.jackson.databind.annotation.JsonSerialize(as = org.hisp.dhis.common.BaseIdentifiableObject.class)\n    @com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty(namespace = org.hisp.dhis.common.DxfNamespaces.DXF_2_0)\n    public org.hisp.dhis.dataelement.DataElement getDataElement() {\n        return dataElement;\n    }\n\n    public void setDataElement(org.hisp.dhis.dataelement.DataElement dataElement) {\n        this.dataElement = dataElement;\n    }\n\n    @com.fasterxml.jackson.annotation.JsonProperty\n    @com.fasterxml.jackson.databind.annotation.JsonSerialize(as = org.hisp.dhis.common.BaseIdentifiableObject.class)\n    @com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty(namespace = org.hisp.dhis.common.DxfNamespaces.DXF_2_0)\n    public org.hisp.dhis.dataelement.DataElementCategoryOptionCombo getCategoryOptionCombo() {\n        return categoryOptionCombo;\n    }\n\n    public void setCategoryOptionCombo(org.hisp.dhis.dataelement.DataElementCategoryOptionCombo categoryOptionCombo) {\n        this.categoryOptionCombo = categoryOptionCombo;\n    }\n\n    @com.fasterxml.jackson.annotation.JsonProperty\n    @com.fasterxml.jackson.databind.annotation.JsonSerialize(as = org.hisp.dhis.common.BaseIdentifiableObject.class)\n    @com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty(namespace = org.hisp.dhis.common.DxfNamespaces.DXF_2_0)\n    public org.hisp.dhis.dataelement.DataElementCategoryOptionCombo getAttributeOptionCombo() {\n        return attributeOptionCombo;\n    }\n\n    public void setAttributeOptionCombo(org.hisp.dhis.dataelement.DataElementCategoryOptionCombo attributeOptionCombo) {\n        this.attributeOptionCombo = attributeOptionCombo;\n    }\n\n    @java.lang.Override\n    public int hashCode() {\n        int result = dataElement.hashCode();\n        result = (31 * result) + (categoryOptionCombo != null ? categoryOptionCombo.hashCode() : 0);\n        result = (31 * result) + (attributeOptionCombo != null ? attributeOptionCombo.hashCode() : 0);\n        return result;\n    }\n\n    @java.lang.Override\n    public boolean equals(java.lang.Object object) {\n        if (this == object) {\n            return true;\n        }\n        if (object == null) {\n            return false;\n        }\n        if (getClass() != object.getClass()) {\n            return false;\n        }\n        org.hisp.dhis.dataelement.DataElementOperand other = ((org.hisp.dhis.dataelement.DataElementOperand) (object));\n        if (!dataElement.equals(other.dataElement)) {\n            return false;\n        }\n        if (categoryOptionCombo == null) {\n            if (other.categoryOptionCombo != null) {\n                return false;\n            }\n        } else if (!categoryOptionCombo.equals(other.categoryOptionCombo)) {\n            return false;\n        }\n        if (attributeOptionCombo == null) {\n            if (other.attributeOptionCombo != null) {\n                return false;\n            }\n        } else if (!attributeOptionCombo.equals(other.attributeOptionCombo)) {\n            return false;\n        }\n        return true;\n    }\n\n    @java.lang.Override\n    public java.lang.String toString() {\n        return ((((((((((((((((\"{\" + \"\\\"class\\\":\\\"\") + getClass()) + \"\\\", \") + \"\\\"id\\\":\\\"\") + id) + \"\\\", \") + \"\\\"uid\\\":\\\"\") + uid) + \"\\\", \") + \"\\\"dataElement\\\":\") + dataElement) + \", \") + \"\\\"categoryOptionCombo\\\":\") + categoryOptionCombo) + \"\\\"attributeOptionCombo\\\":\") + attributeOptionCombo) + '}';\n    }\n\n    public enum TotalType {\n\n        COC_ONLY(true, false, 1),\n        AOC_ONLY(false, true, 1),\n        COC_AND_AOC(true, true, 2),\n        NONE(false, false, 0);\n        private boolean coc;\n\n        private boolean aoc;\n\n        private int propertyCount;\n\n        private TotalType() {\n        }\n\n        private TotalType(boolean coc, boolean aoc, int propertyCount) {\n            this.coc = coc;\n            this.aoc = aoc;\n            this.propertyCount = propertyCount;\n        }\n\n        public boolean isCategoryOptionCombo() {\n            return coc;\n        }\n\n        public boolean isAttributeOptionCombo() {\n            return aoc;\n        }\n\n        public int getPropertyCount() {\n            return propertyCount;\n        }\n    }\n\n    public org.hisp.dhis.dataelement.DataElementOperand.TotalType getTotalType() {\n        if ((categoryOptionCombo != null) && (attributeOptionCombo != null)) {\n            return org.hisp.dhis.dataelement.DataElementOperand.TotalType.COC_AND_AOC;\n        } else if (categoryOptionCombo != null) {\n            return org.hisp.dhis.dataelement.DataElementOperand.TotalType.COC_ONLY;\n        } else if (attributeOptionCombo != null) {\n            return org.hisp.dhis.dataelement.DataElementOperand.TotalType.AOC_ONLY;\n        } else {\n            return org.hisp.dhis.dataelement.DataElementOperand.TotalType.NONE;\n        }\n    }\n}",
            "src_parent_type": "Class",
            "src_type": "Method"
          }
        }
      ],
      "file_name": "DataElementOperand"
    }
  ],
  "id": "bears_165"
}