{
  "files": [
    {
      "features": [
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Method",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "if (!res.toString().replace(\", ?\", \",?\").endsWith(org.eclipse.jdt.core.compiler.CharOperation.toString(ref.getParameterizedTypeName()))) {\n    return this.jdtTreeBuilder.getFactory().Type().createReference(org.eclipse.jdt.core.compiler.CharOperation.toString(ref.getParameterizedTypeName()));\n}",
            "src_parent": "{\n    spoon.reflect.reference.CtTypeReference<T> res = null;\n    spoon.reflect.reference.CtTypeReference inner = null;\n    final java.lang.String[] namesParameterized = org.eclipse.jdt.core.compiler.CharOperation.charArrayToStringArray(ref.getParameterizedTypeName());\n    int index = namesParameterized.length - 1;\n    for (; index >= 0; index--) {\n        spoon.reflect.reference.CtTypeReference main = getTypeReference(namesParameterized[index]);\n        if (main == null) {\n            break;\n        }\n        if (res == null) {\n            res = ((spoon.reflect.reference.CtTypeReference<T>) (main));\n        } else {\n            inner.setDeclaringType(((spoon.reflect.reference.CtTypeReference<?>) (main)));\n        }\n        inner = main;\n    }\n    if (res == null) {\n        return this.jdtTreeBuilder.getFactory().Type().createReference(org.eclipse.jdt.core.compiler.CharOperation.toString(ref.getParameterizedTypeName()));\n    }\n    if (inner.getPackage() == null) {\n        spoon.reflect.factory.PackageFactory packageFactory = this.jdtTreeBuilder.getFactory().Package();\n        spoon.reflect.reference.CtPackageReference packageReference = (index >= 0) ? packageFactory.getOrCreate(concatSubArray(namesParameterized, index)).getReference() : packageFactory.topLevel();\n        inner.setPackage(packageReference);\n    }\n    if (!res.toString().replace(\", ?\", \",?\").endsWith(org.eclipse.jdt.core.compiler.CharOperation.toString(ref.getParameterizedTypeName()))) {\n        return this.jdtTreeBuilder.getFactory().Type().createReference(org.eclipse.jdt.core.compiler.CharOperation.toString(ref.getParameterizedTypeName()));\n    }\n    return res;\n}",
            "src_parent_type": "Block",
            "src_type": "If"
          }
        }
      ],
      "file_name": "ReferenceBuilder"
    }
  ],
  "id": "bears_74"
}