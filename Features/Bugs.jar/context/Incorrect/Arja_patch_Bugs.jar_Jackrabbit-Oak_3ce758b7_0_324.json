{
  "files": [
    {
      "features": [
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Return",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "true",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "LocalVariable",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "new java.util.concurrent.Callable<org.apache.jackrabbit.mk.model.StoredNode>() {\n    @java.lang.Override\n    public org.apache.jackrabbit.mk.model.StoredNode call() throws java.lang.Exception {\n        org.apache.jackrabbit.mk.model.StoredNode node = new org.apache.jackrabbit.mk.model.StoredNode(id, DefaultRevisionStore.this);\n        pm.readNode(node);\n        return node;\n    }\n}",
            "dst_parent": "((org.apache.jackrabbit.mk.model.StoredNode) (cache.get(id, new java.util.concurrent.Callable<org.apache.jackrabbit.mk.model.StoredNode>() {\n    @java.lang.Override\n    public org.apache.jackrabbit.mk.model.StoredNode call() throws java.lang.Exception {\n        org.apache.jackrabbit.mk.model.StoredNode node = new org.apache.jackrabbit.mk.model.StoredNode(id, DefaultRevisionStore.this);\n        pm.readNode(node);\n        return node;\n    }\n})))",
            "dst_parent_type": "Invocation",
            "dst_type": "NewClass",
            "operator": "UPD",
            "src": "new java.util.concurrent.Callable<org.apache.jackrabbit.mk.model.StoredNode>() {\n    @java.lang.Override\n    public org.apache.jackrabbit.mk.model.StoredNode call() throws java.lang.Exception {\n        org.apache.jackrabbit.mk.model.StoredNode node = new org.apache.jackrabbit.mk.model.StoredNode(id, DefaultRevisionStore.this);\n        pm.readNode(node);\n        return node;\n    }\n}",
            "src_parent": "((org.apache.jackrabbit.mk.model.StoredNode) (cache.get(id, new java.util.concurrent.Callable<org.apache.jackrabbit.mk.model.StoredNode>() {\n    @java.lang.Override\n    public org.apache.jackrabbit.mk.model.StoredNode call() throws java.lang.Exception {\n        org.apache.jackrabbit.mk.model.StoredNode node = new org.apache.jackrabbit.mk.model.StoredNode(id, DefaultRevisionStore.this);\n        pm.readNode(node);\n        return node;\n    }\n})))",
            "src_parent_type": "Invocation",
            "src_type": "NewClass"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Return",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "true",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "LocalVariable",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "new java.util.concurrent.Callable<org.apache.jackrabbit.mk.model.ChildNodeEntriesMap>() {\n    @java.lang.Override\n    public org.apache.jackrabbit.mk.model.ChildNodeEntriesMap call() throws java.lang.Exception {\n        return pm.readCNEMap(id);\n    }\n}",
            "dst_parent": "((org.apache.jackrabbit.mk.model.ChildNodeEntriesMap) (cache.get(id, new java.util.concurrent.Callable<org.apache.jackrabbit.mk.model.ChildNodeEntriesMap>() {\n    @java.lang.Override\n    public org.apache.jackrabbit.mk.model.ChildNodeEntriesMap call() throws java.lang.Exception {\n        return pm.readCNEMap(id);\n    }\n})))",
            "dst_parent_type": "Invocation",
            "dst_type": "NewClass",
            "operator": "UPD",
            "src": "new java.util.concurrent.Callable<org.apache.jackrabbit.mk.model.ChildNodeEntriesMap>() {\n    @java.lang.Override\n    public org.apache.jackrabbit.mk.model.ChildNodeEntriesMap call() throws java.lang.Exception {\n        return pm.readCNEMap(id);\n    }\n}",
            "src_parent": "((org.apache.jackrabbit.mk.model.ChildNodeEntriesMap) (cache.get(id, new java.util.concurrent.Callable<org.apache.jackrabbit.mk.model.ChildNodeEntriesMap>() {\n    @java.lang.Override\n    public org.apache.jackrabbit.mk.model.ChildNodeEntriesMap call() throws java.lang.Exception {\n        return pm.readCNEMap(id);\n    }\n})))",
            "src_parent_type": "Invocation",
            "src_type": "NewClass"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Return",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "true",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "LocalVariable",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "new java.util.concurrent.Callable<org.apache.jackrabbit.mk.model.StoredCommit>() {\n    @java.lang.Override\n    public org.apache.jackrabbit.mk.model.StoredCommit call() throws java.lang.Exception {\n        return pm.readCommit(id);\n    }\n}",
            "dst_parent": "((org.apache.jackrabbit.mk.model.StoredCommit) (cache.get(id, new java.util.concurrent.Callable<org.apache.jackrabbit.mk.model.StoredCommit>() {\n    @java.lang.Override\n    public org.apache.jackrabbit.mk.model.StoredCommit call() throws java.lang.Exception {\n        return pm.readCommit(id);\n    }\n})))",
            "dst_parent_type": "Invocation",
            "dst_type": "NewClass",
            "operator": "UPD",
            "src": "new java.util.concurrent.Callable<org.apache.jackrabbit.mk.model.StoredCommit>() {\n    @java.lang.Override\n    public org.apache.jackrabbit.mk.model.StoredCommit call() throws java.lang.Exception {\n        return pm.readCommit(id);\n    }\n}",
            "src_parent": "((org.apache.jackrabbit.mk.model.StoredCommit) (cache.get(id, new java.util.concurrent.Callable<org.apache.jackrabbit.mk.model.StoredCommit>() {\n    @java.lang.Override\n    public org.apache.jackrabbit.mk.model.StoredCommit call() throws java.lang.Exception {\n        return pm.readCommit(id);\n    }\n})))",
            "src_parent_type": "Invocation",
            "src_type": "NewClass"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Invocation",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "{\n    @java.lang.Override\n    public void propAdded(java.lang.String propName, java.lang.String value) {\n        diff.propertyAdded(after.getProperty(propName));\n    }\n\n    @java.lang.Override\n    public void propChanged(java.lang.String propName, java.lang.String oldValue, java.lang.String newValue) {\n        diff.propertyChanged(before.getProperty(propName), after.getProperty(propName));\n    }\n\n    @java.lang.Override\n    public void propDeleted(java.lang.String propName, java.lang.String value) {\n        diff.propertyDeleted(before.getProperty(propName));\n    }\n\n    @java.lang.Override\n    public void childNodeAdded(org.apache.jackrabbit.mk.model.ChildNodeEntry added) {\n        java.lang.String name = added.getName();\n        diff.childNodeAdded(name, after.getChildNode(name));\n    }\n\n    @java.lang.Override\n    public void childNodeDeleted(org.apache.jackrabbit.mk.model.ChildNodeEntry deleted) {\n        java.lang.String name = deleted.getName();\n        diff.childNodeDeleted(name, before.getChildNode(name));\n    }\n\n    @java.lang.Override\n    public void childNodeChanged(org.apache.jackrabbit.mk.model.ChildNodeEntry changed, org.apache.jackrabbit.mk.model.Id newId) {\n        java.lang.String name = changed.getName();\n        diff.childNodeChanged(name, before.getChildNode(name), after.getChildNode(name));\n    }\n}",
            "dst_parent": "new org.apache.jackrabbit.mk.model.NodeDiffHandler() {\n    @java.lang.Override\n    public void propAdded(java.lang.String propName, java.lang.String value) {\n        diff.propertyAdded(after.getProperty(propName));\n    }\n\n    @java.lang.Override\n    public void propChanged(java.lang.String propName, java.lang.String oldValue, java.lang.String newValue) {\n        diff.propertyChanged(before.getProperty(propName), after.getProperty(propName));\n    }\n\n    @java.lang.Override\n    public void propDeleted(java.lang.String propName, java.lang.String value) {\n        diff.propertyDeleted(before.getProperty(propName));\n    }\n\n    @java.lang.Override\n    public void childNodeAdded(org.apache.jackrabbit.mk.model.ChildNodeEntry added) {\n        java.lang.String name = added.getName();\n        diff.childNodeAdded(name, after.getChildNode(name));\n    }\n\n    @java.lang.Override\n    public void childNodeDeleted(org.apache.jackrabbit.mk.model.ChildNodeEntry deleted) {\n        java.lang.String name = deleted.getName();\n        diff.childNodeDeleted(name, before.getChildNode(name));\n    }\n\n    @java.lang.Override\n    public void childNodeChanged(org.apache.jackrabbit.mk.model.ChildNodeEntry changed, org.apache.jackrabbit.mk.model.Id newId) {\n        java.lang.String name = changed.getName();\n        diff.childNodeChanged(name, before.getChildNode(name), after.getChildNode(name));\n    }\n}",
            "dst_parent_type": "NewClass",
            "dst_type": "Class",
            "operator": "UPD",
            "src": "{\n    @java.lang.Override\n    public void propAdded(java.lang.String propName, java.lang.String value) {\n        diff.propertyAdded(after.getProperty(propName));\n    }\n\n    @java.lang.Override\n    public void propChanged(java.lang.String propName, java.lang.String oldValue, java.lang.String newValue) {\n        diff.propertyChanged(before.getProperty(propName), after.getProperty(propName));\n    }\n\n    @java.lang.Override\n    public void propDeleted(java.lang.String propName, java.lang.String value) {\n        diff.propertyDeleted(before.getProperty(propName));\n    }\n\n    @java.lang.Override\n    public void childNodeAdded(org.apache.jackrabbit.mk.model.ChildNodeEntry added) {\n        java.lang.String name = added.getName();\n        diff.childNodeAdded(name, after.getChildNode(name));\n    }\n\n    @java.lang.Override\n    public void childNodeDeleted(org.apache.jackrabbit.mk.model.ChildNodeEntry deleted) {\n        java.lang.String name = deleted.getName();\n        diff.childNodeDeleted(name, before.getChildNode(name));\n    }\n\n    @java.lang.Override\n    public void childNodeChanged(org.apache.jackrabbit.mk.model.ChildNodeEntry changed, org.apache.jackrabbit.mk.model.Id newId) {\n        java.lang.String name = changed.getName();\n        diff.childNodeChanged(name, before.getChildNode(name), after.getChildNode(name));\n    }\n}",
            "src_parent": "new org.apache.jackrabbit.mk.model.NodeDiffHandler() {\n    @java.lang.Override\n    public void propAdded(java.lang.String propName, java.lang.String value) {\n        diff.propertyAdded(after.getProperty(propName));\n    }\n\n    @java.lang.Override\n    public void propChanged(java.lang.String propName, java.lang.String oldValue, java.lang.String newValue) {\n        diff.propertyChanged(before.getProperty(propName), after.getProperty(propName));\n    }\n\n    @java.lang.Override\n    public void propDeleted(java.lang.String propName, java.lang.String value) {\n        diff.propertyDeleted(before.getProperty(propName));\n    }\n\n    @java.lang.Override\n    public void childNodeAdded(org.apache.jackrabbit.mk.model.ChildNodeEntry added) {\n        java.lang.String name = added.getName();\n        diff.childNodeAdded(name, after.getChildNode(name));\n    }\n\n    @java.lang.Override\n    public void childNodeDeleted(org.apache.jackrabbit.mk.model.ChildNodeEntry deleted) {\n        java.lang.String name = deleted.getName();\n        diff.childNodeDeleted(name, before.getChildNode(name));\n    }\n\n    @java.lang.Override\n    public void childNodeChanged(org.apache.jackrabbit.mk.model.ChildNodeEntry changed, org.apache.jackrabbit.mk.model.Id newId) {\n        java.lang.String name = changed.getName();\n        diff.childNodeChanged(name, before.getChildNode(name), after.getChildNode(name));\n    }\n}",
            "src_parent_type": "NewClass",
            "src_type": "Class"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Return",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "true",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "LocalVariable",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "{\n    @java.lang.Override\n    public org.apache.jackrabbit.mk.model.StoredNode call() throws java.lang.Exception {\n        org.apache.jackrabbit.mk.model.StoredNode node = new org.apache.jackrabbit.mk.model.StoredNode(id, DefaultRevisionStore.this);\n        pm.readNode(node);\n        return node;\n    }\n}",
            "dst_parent": "new java.util.concurrent.Callable<org.apache.jackrabbit.mk.model.StoredNode>() {\n    @java.lang.Override\n    public org.apache.jackrabbit.mk.model.StoredNode call() throws java.lang.Exception {\n        org.apache.jackrabbit.mk.model.StoredNode node = new org.apache.jackrabbit.mk.model.StoredNode(id, DefaultRevisionStore.this);\n        pm.readNode(node);\n        return node;\n    }\n}",
            "dst_parent_type": "NewClass",
            "dst_type": "Class",
            "operator": "UPD",
            "src": "{\n    @java.lang.Override\n    public org.apache.jackrabbit.mk.model.StoredNode call() throws java.lang.Exception {\n        org.apache.jackrabbit.mk.model.StoredNode node = new org.apache.jackrabbit.mk.model.StoredNode(id, DefaultRevisionStore.this);\n        pm.readNode(node);\n        return node;\n    }\n}",
            "src_parent": "new java.util.concurrent.Callable<org.apache.jackrabbit.mk.model.StoredNode>() {\n    @java.lang.Override\n    public org.apache.jackrabbit.mk.model.StoredNode call() throws java.lang.Exception {\n        org.apache.jackrabbit.mk.model.StoredNode node = new org.apache.jackrabbit.mk.model.StoredNode(id, DefaultRevisionStore.this);\n        pm.readNode(node);\n        return node;\n    }\n}",
            "src_parent_type": "NewClass",
            "src_type": "Class"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Return",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "true",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "LocalVariable",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "{\n    @java.lang.Override\n    public org.apache.jackrabbit.mk.model.ChildNodeEntriesMap call() throws java.lang.Exception {\n        return pm.readCNEMap(id);\n    }\n}",
            "dst_parent": "new java.util.concurrent.Callable<org.apache.jackrabbit.mk.model.ChildNodeEntriesMap>() {\n    @java.lang.Override\n    public org.apache.jackrabbit.mk.model.ChildNodeEntriesMap call() throws java.lang.Exception {\n        return pm.readCNEMap(id);\n    }\n}",
            "dst_parent_type": "NewClass",
            "dst_type": "Class",
            "operator": "UPD",
            "src": "{\n    @java.lang.Override\n    public org.apache.jackrabbit.mk.model.ChildNodeEntriesMap call() throws java.lang.Exception {\n        return pm.readCNEMap(id);\n    }\n}",
            "src_parent": "new java.util.concurrent.Callable<org.apache.jackrabbit.mk.model.ChildNodeEntriesMap>() {\n    @java.lang.Override\n    public org.apache.jackrabbit.mk.model.ChildNodeEntriesMap call() throws java.lang.Exception {\n        return pm.readCNEMap(id);\n    }\n}",
            "src_parent_type": "NewClass",
            "src_type": "Class"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Return",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "true",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "LocalVariable",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "{\n    @java.lang.Override\n    public org.apache.jackrabbit.mk.model.StoredCommit call() throws java.lang.Exception {\n        return pm.readCommit(id);\n    }\n}",
            "dst_parent": "new java.util.concurrent.Callable<org.apache.jackrabbit.mk.model.StoredCommit>() {\n    @java.lang.Override\n    public org.apache.jackrabbit.mk.model.StoredCommit call() throws java.lang.Exception {\n        return pm.readCommit(id);\n    }\n}",
            "dst_parent_type": "NewClass",
            "dst_type": "Class",
            "operator": "UPD",
            "src": "{\n    @java.lang.Override\n    public org.apache.jackrabbit.mk.model.StoredCommit call() throws java.lang.Exception {\n        return pm.readCommit(id);\n    }\n}",
            "src_parent": "new java.util.concurrent.Callable<org.apache.jackrabbit.mk.model.StoredCommit>() {\n    @java.lang.Override\n    public org.apache.jackrabbit.mk.model.StoredCommit call() throws java.lang.Exception {\n        return pm.readCommit(id);\n    }\n}",
            "src_parent_type": "NewClass",
            "src_type": "Class"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "cache.size() >= initialCacheSize",
            "src_parent": "if (cache.size() >= initialCacheSize) {\n    gc();\n}",
            "src_parent_type": "If",
            "src_type": "BinaryOperator"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "gc()",
            "src_parent": "{\n    gc();\n}",
            "src_parent_type": "Block",
            "src_type": "Invocation"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Assignment",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "Assignment",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "LocalVariable",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "if (gcpm != null) {\n    gcExecutor = java.util.concurrent.Executors.newScheduledThreadPool(1, new java.util.concurrent.ThreadFactory() {\n        @java.lang.Override\n        public java.lang.Thread newThread(java.lang.Runnable r) {\n            return new java.lang.Thread(r, \"RevisionStore-GC\");\n        }\n    });\n    gcExecutor.scheduleWithFixedDelay(new java.lang.Runnable() {\n        @java.lang.Override\n        public void run() {\n            if (cache.size() >= initialCacheSize) {\n                gc();\n            }\n        }\n    }, 60, 1, java.util.concurrent.TimeUnit.MINUTES);\n}",
            "src_parent": "{\n    if (initialized) {\n        throw new java.lang.IllegalStateException(\"already initialized\");\n    }\n    initialCacheSize = org.apache.jackrabbit.mk.store.DefaultRevisionStore.determineInitialCacheSize();\n    cache = com.google.common.cache.CacheBuilder.newBuilder().maximumWeight(initialCacheSize).weigher(new com.google.common.cache.Weigher<org.apache.jackrabbit.mk.model.Id, org.apache.jackrabbit.mk.store.CacheObject>() {\n        public int weigh(org.apache.jackrabbit.mk.model.Id id, org.apache.jackrabbit.mk.store.CacheObject obj) {\n            return obj.getMemory();\n        }\n    }).build();\n    org.apache.jackrabbit.mk.model.Id[] ids = pm.readIds();\n    head = ids[0];\n    if ((head == null) || (head.getBytes().length == 0)) {\n        byte[] rawHead = org.apache.jackrabbit.mk.model.Id.fromLong(commitCounter.incrementAndGet()).getBytes();\n        head = new org.apache.jackrabbit.mk.model.Id(rawHead);\n        org.apache.jackrabbit.mk.model.Id rootNodeId = pm.writeNode(new org.apache.jackrabbit.mk.model.MutableNode(this));\n        org.apache.jackrabbit.mk.model.MutableCommit initialCommit = new org.apache.jackrabbit.mk.model.MutableCommit();\n        initialCommit.setCommitTS(java.lang.System.currentTimeMillis());\n        initialCommit.setRootNodeId(rootNodeId);\n        pm.writeCommit(head, initialCommit);\n        pm.writeHead(head);\n    } else {\n        org.apache.jackrabbit.mk.model.Id lastCommitId = head;\n        if ((ids[1] != null) && (ids[1].compareTo(lastCommitId) > 0)) {\n            lastCommitId = ids[1];\n        }\n        commitCounter.set(java.lang.Long.parseLong(lastCommitId.toString(), 16));\n    }\n    if (gcpm != null) {\n        gcExecutor = java.util.concurrent.Executors.newScheduledThreadPool(1, new java.util.concurrent.ThreadFactory() {\n            @java.lang.Override\n            public java.lang.Thread newThread(java.lang.Runnable r) {\n                return new java.lang.Thread(r, \"RevisionStore-GC\");\n            }\n        });\n        gcExecutor.scheduleWithFixedDelay(new java.lang.Runnable() {\n            @java.lang.Override\n            public void run() {\n                if (cache.size() >= initialCacheSize) {\n                    gc();\n                }\n            }\n        }, 60, 1, java.util.concurrent.TimeUnit.MINUTES);\n    }\n    initialized = true;\n}",
            "src_parent_type": "Block",
            "src_type": "If"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "If",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Assignment",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "initialized = false",
            "src_parent": "{\n    verifyInitialized();\n    if (gcExecutor != null) {\n        gcExecutor.shutdown();\n    }\n    cache.invalidateAll();\n    org.apache.jackrabbit.mk.util.IOUtils.closeQuietly(pm);\n    initialized = false;\n}",
            "src_parent_type": "Block",
            "src_type": "Assignment"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Return",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "if (obj instanceof org.apache.jackrabbit.mk.store.DefaultRevisionStore.PutTokenImpl) {\n    return ((org.apache.jackrabbit.mk.store.DefaultRevisionStore.PutTokenImpl) (obj)).id == id;\n}",
            "src_parent": "{\n    if (obj instanceof org.apache.jackrabbit.mk.store.DefaultRevisionStore.PutTokenImpl) {\n        return ((org.apache.jackrabbit.mk.store.DefaultRevisionStore.PutTokenImpl) (obj)).id == id;\n    }\n    return super.equals(obj);\n}",
            "src_parent_type": "Block",
            "src_type": "If"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "Assignment",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Invocation",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "if (gcpm != null) {\n    gcExecutor = java.util.concurrent.Executors.newScheduledThreadPool(1, new java.util.concurrent.ThreadFactory() {\n        @java.lang.Override\n        public java.lang.Thread newThread(java.lang.Runnable r) {\n            return new java.lang.Thread(r, \"RevisionStore-GC\");\n        }\n    });\n}",
            "dst_parent": "{\n    if (initialized) {\n        throw new java.lang.IllegalStateException(\"already initialized\");\n    }\n    initialCacheSize = org.apache.jackrabbit.mk.store.DefaultRevisionStore.determineInitialCacheSize();\n    cache = com.google.common.cache.CacheBuilder.newBuilder().maximumWeight(initialCacheSize).weigher(new com.google.common.cache.Weigher<org.apache.jackrabbit.mk.model.Id, org.apache.jackrabbit.mk.store.CacheObject>() {\n        public int weigh(org.apache.jackrabbit.mk.model.Id id, org.apache.jackrabbit.mk.store.CacheObject obj) {\n            return obj.getMemory();\n        }\n    }).build();\n    org.apache.jackrabbit.mk.model.Id[] ids = pm.readIds();\n    head = ids[0];\n    if ((head == null) || (head.getBytes().length == 0)) {\n        byte[] rawHead = org.apache.jackrabbit.mk.model.Id.fromLong(commitCounter.incrementAndGet()).getBytes();\n        head = new org.apache.jackrabbit.mk.model.Id(rawHead);\n        org.apache.jackrabbit.mk.model.Id rootNodeId = pm.writeNode(new org.apache.jackrabbit.mk.model.MutableNode(this));\n        org.apache.jackrabbit.mk.model.MutableCommit initialCommit = new org.apache.jackrabbit.mk.model.MutableCommit();\n        initialCommit.setCommitTS(java.lang.System.currentTimeMillis());\n        initialCommit.setRootNodeId(rootNodeId);\n        pm.writeCommit(head, initialCommit);\n        pm.writeHead(head);\n    } else {\n        org.apache.jackrabbit.mk.model.Id lastCommitId = head;\n        if ((ids[1] != null) && (ids[1].compareTo(lastCommitId) > 0)) {\n            lastCommitId = ids[1];\n        }\n        commitCounter.set(java.lang.Long.parseLong(lastCommitId.toString(), 16));\n    }\n    if (gcpm != null) {\n        gcExecutor = java.util.concurrent.Executors.newScheduledThreadPool(1, new java.util.concurrent.ThreadFactory() {\n            @java.lang.Override\n            public java.lang.Thread newThread(java.lang.Runnable r) {\n                return new java.lang.Thread(r, \"RevisionStore-GC\");\n            }\n        });\n    }\n    initialized = true;\n}",
            "dst_parent_type": "Block",
            "dst_type": "If",
            "operator": "MOV",
            "src": "if (cache.size() >= initialCacheSize) {\n    gc();\n}",
            "src_parent": "{\n    if (cache.size() >= initialCacheSize) {\n        gc();\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "If"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Assignment",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "Assignment",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "LocalVariable",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "gcExecutor = java.util.concurrent.Executors.newScheduledThreadPool(1, new java.util.concurrent.ThreadFactory() {\n    @java.lang.Override\n    public java.lang.Thread newThread(java.lang.Runnable r) {\n        return new java.lang.Thread(r, \"RevisionStore-GC\");\n    }\n})",
            "dst_parent": "{\n    gcExecutor = java.util.concurrent.Executors.newScheduledThreadPool(1, new java.util.concurrent.ThreadFactory() {\n        @java.lang.Override\n        public java.lang.Thread newThread(java.lang.Runnable r) {\n            return new java.lang.Thread(r, \"RevisionStore-GC\");\n        }\n    });\n}",
            "dst_parent_type": "Block",
            "dst_type": "Assignment",
            "operator": "MOV",
            "src": "gcExecutor = java.util.concurrent.Executors.newScheduledThreadPool(1, new java.util.concurrent.ThreadFactory() {\n    @java.lang.Override\n    public java.lang.Thread newThread(java.lang.Runnable r) {\n        return new java.lang.Thread(r, \"RevisionStore-GC\");\n    }\n})",
            "src_parent": "{\n    gcExecutor = java.util.concurrent.Executors.newScheduledThreadPool(1, new java.util.concurrent.ThreadFactory() {\n        @java.lang.Override\n        public java.lang.Thread newThread(java.lang.Runnable r) {\n            return new java.lang.Thread(r, \"RevisionStore-GC\");\n        }\n    });\n    gcExecutor.scheduleWithFixedDelay(new java.lang.Runnable() {\n        @java.lang.Override\n        public void run() {\n            if (cache.size() >= initialCacheSize) {\n                gc();\n            }\n        }\n    }, 60, 1, java.util.concurrent.TimeUnit.MINUTES);\n}",
            "src_parent_type": "Block",
            "src_type": "Assignment"
          }
        }
      ],
      "file_name": "DefaultRevisionStore"
    }
  ],
  "id": "Arja_patch_Bugs.jar_Jackrabbit-Oak_3ce758b7_0_324"
}