{
  "files": [
    {
      "features": [
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Method",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "if (createBranch) {\n    newCommit.setBranchRootId(baseCommit.getId());\n} else {\n    newCommit.setBranchRootId(baseCommit.getBranchRootId());\n}",
            "src_parent": "{\n    if (rep == null) {\n        throw new java.lang.IllegalStateException(\"this instance has already been disposed\");\n    }\n    path = ((path == null) || \"\".equals(path)) ? \"/\" : path;\n    boolean filtered = !\"/\".equals(path);\n    maxEntries = (maxEntries < 0) ? java.lang.Integer.MAX_VALUE : maxEntries;\n    java.util.List<org.apache.jackrabbit.mk.model.StoredCommit> history = new java.util.ArrayList<org.apache.jackrabbit.mk.model.StoredCommit>();\n    try {\n        org.apache.jackrabbit.mk.model.StoredCommit commit = rep.getHeadCommit();\n        while (((commit != null) && (history.size() < maxEntries)) && (commit.getCommitTS() >= since)) {\n            if (filtered) {\n                try {\n                    org.apache.jackrabbit.mk.store.RevisionStore rs = rep.getRevisionStore();\n                    java.lang.String diff = new org.apache.jackrabbit.mk.model.DiffBuilder(rs.getRootNode(commit.getParentId()), rs.getNode(commit.getRootNodeId()), \"/\", -1, rep.getRevisionStore(), path).build();\n                    if (!diff.isEmpty()) {\n                        history.add(commit);\n                    }\n                } catch (java.lang.Exception e) {\n                    throw new org.apache.jackrabbit.mk.api.MicroKernelException(e);\n                }\n            } else {\n                history.add(commit);\n            }\n            org.apache.jackrabbit.mk.model.Id commitId = commit.getParentId();\n            if (commitId == null) {\n                break;\n            }\n            commit = rep.getCommit(commitId);\n        } \n    } catch (java.lang.Exception e) {\n        throw new org.apache.jackrabbit.mk.api.MicroKernelException(e);\n    }\n    if (createBranch) {\n        newCommit.setBranchRootId(baseCommit.getId());\n    } else {\n        newCommit.setBranchRootId(baseCommit.getBranchRootId());\n    }\n    org.apache.jackrabbit.mk.json.JsopBuilder buff = new org.apache.jackrabbit.mk.json.JsopBuilder().array();\n    for (int i = history.size() - 1; i >= 0; i--) {\n        org.apache.jackrabbit.mk.model.StoredCommit commit = history.get(i);\n        buff.object().key(\"id\").value(commit.getId().toString()).key(\"ts\").value(commit.getCommitTS()).key(\"msg\").value(commit.getMsg()).endObject();\n    }\n    return buff.endArray().toString();\n}",
            "src_parent_type": "Block",
            "src_type": "If"
          }
        }
      ],
      "file_name": "MicroKernelImpl"
    }
  ],
  "id": "Arja_patch_Bugs.jar_Jackrabbit-Oak_5286861d_0_11"
}