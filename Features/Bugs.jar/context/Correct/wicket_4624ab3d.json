{
  "files": [
    {
      "features": [
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "if (getComponent().getPage() == page) {\n    boolean isAjax = ((org.apache.wicket.request.http.WebRequest) (requestCycle.getRequest())).isAjax();\n    if ((isAjax == false) && listenerInterface.isRenderPageAfterInvocation()) {\n        final org.apache.wicket.request.handler.IPageProvider pageProvider = new org.apache.wicket.request.handler.PageProvider(page);\n        final org.apache.wicket.request.handler.RenderPageRequestHandler.RedirectPolicy policy = (page.isPageStateless()) ? org.apache.wicket.request.handler.RenderPageRequestHandler.RedirectPolicy.NEVER_REDIRECT : org.apache.wicket.request.handler.RenderPageRequestHandler.RedirectPolicy.AUTO_REDIRECT;\n        requestCycle.scheduleRequestHandlerAfterCurrent(new org.apache.wicket.request.handler.RenderPageRequestHandler(pageProvider, policy));\n    }\n    invokeListener();\n} else {\n    throw new org.apache.wicket.WicketRuntimeException((\"Component \" + getComponent()) + \" has been removed from page.\");\n}",
            "src_parent": "{\n    final org.apache.wicket.request.component.IRequestablePage page = getPage();\n    if (getComponent().getPage() == page) {\n        boolean isAjax = ((org.apache.wicket.request.http.WebRequest) (requestCycle.getRequest())).isAjax();\n        if ((isAjax == false) && listenerInterface.isRenderPageAfterInvocation()) {\n            final org.apache.wicket.request.handler.IPageProvider pageProvider = new org.apache.wicket.request.handler.PageProvider(page);\n            final org.apache.wicket.request.handler.RenderPageRequestHandler.RedirectPolicy policy = (page.isPageStateless()) ? org.apache.wicket.request.handler.RenderPageRequestHandler.RedirectPolicy.NEVER_REDIRECT : org.apache.wicket.request.handler.RenderPageRequestHandler.RedirectPolicy.AUTO_REDIRECT;\n            requestCycle.scheduleRequestHandlerAfterCurrent(new org.apache.wicket.request.handler.RenderPageRequestHandler(pageProvider, policy));\n        }\n        invokeListener();\n    } else {\n        throw new org.apache.wicket.WicketRuntimeException((\"Component \" + getComponent()) + \" has been removed from page.\");\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "If"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Package",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "true",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Class",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "private static final org.slf4j.Logger LOG = org.slf4j.LoggerFactory.getLogger(org.apache.wicket.request.handler.ListenerInterfaceRequestHandler.class);",
            "src_parent": "public class ListenerInterfaceRequestHandler implements org.apache.wicket.request.handler.IComponentRequestHandler , org.apache.wicket.request.handler.IPageRequestHandler {\n    private static final org.slf4j.Logger LOG = org.slf4j.LoggerFactory.getLogger(org.apache.wicket.request.handler.ListenerInterfaceRequestHandler.class);\n\n    private final org.apache.wicket.request.handler.IPageAndComponentProvider pageComponentProvider;\n\n    private final org.apache.wicket.RequestListenerInterface listenerInterface;\n\n    private final java.lang.Integer behaviorId;\n\n    public ListenerInterfaceRequestHandler(org.apache.wicket.request.handler.IPageAndComponentProvider pageComponentProvider, org.apache.wicket.RequestListenerInterface listenerInterface, java.lang.Integer behaviorIndex) {\n        org.apache.wicket.util.lang.Args.notNull(pageComponentProvider, \"pageComponentProvider\");\n        org.apache.wicket.util.lang.Args.notNull(listenerInterface, \"listenerInterface\");\n        this.pageComponentProvider = pageComponentProvider;\n        this.listenerInterface = listenerInterface;\n        behaviorId = behaviorIndex;\n    }\n\n    public ListenerInterfaceRequestHandler(org.apache.wicket.request.handler.PageAndComponentProvider pageComponentProvider, org.apache.wicket.RequestListenerInterface listenerInterface) {\n        this(pageComponentProvider, listenerInterface, null);\n    }\n\n    public org.apache.wicket.request.component.IRequestableComponent getComponent() {\n        return pageComponentProvider.getComponent();\n    }\n\n    public org.apache.wicket.request.component.IRequestablePage getPage() {\n        return pageComponentProvider.getPageInstance();\n    }\n\n    public java.lang.Class<? extends org.apache.wicket.request.component.IRequestablePage> getPageClass() {\n        return pageComponentProvider.getPageClass();\n    }\n\n    public java.lang.Integer getPageId() {\n        return pageComponentProvider.getPageId();\n    }\n\n    public org.apache.wicket.request.mapper.parameter.PageParameters getPageParameters() {\n        return pageComponentProvider.getPageParameters();\n    }\n\n    public void detach(org.apache.wicket.request.IRequestCycle requestCycle) {\n        pageComponentProvider.detach();\n    }\n\n    public org.apache.wicket.RequestListenerInterface getListenerInterface() {\n        return listenerInterface;\n    }\n\n    public java.lang.Integer getBehaviorIndex() {\n        return behaviorId;\n    }\n\n    public void respond(final org.apache.wicket.request.IRequestCycle requestCycle) {\n        final boolean isNewPageInstance = pageComponentProvider.isNewPageInstance();\n        final boolean isAjax = ((org.apache.wicket.request.http.WebRequest) (requestCycle.getRequest())).isAjax();\n        final org.apache.wicket.request.component.IRequestablePage page = getPage();\n        final boolean isStateless = page.isPageStateless();\n        final org.apache.wicket.request.handler.IPageProvider pageProvider = new org.apache.wicket.request.handler.PageProvider(page);\n        if (getComponent().getPage() == page) {\n            org.apache.wicket.request.handler.RenderPageRequestHandler.RedirectPolicy policy = (isStateless) ? org.apache.wicket.request.handler.RenderPageRequestHandler.RedirectPolicy.NEVER_REDIRECT : org.apache.wicket.request.handler.RenderPageRequestHandler.RedirectPolicy.AUTO_REDIRECT;\n            if (isNewPageInstance) {\n                if (org.apache.wicket.request.handler.ListenerInterfaceRequestHandler.LOG.isDebugEnabled()) {\n                    org.apache.wicket.request.handler.ListenerInterfaceRequestHandler.LOG.debug(\"A ListenerInterface '{}' assigned to '{}' is executed on an expired page. \" + \"Scheduling re-create of the page and ignoring the listener interface...\", listenerInterface, getComponentPath());\n                }\n                if (isAjax) {\n                    policy = org.apache.wicket.request.handler.RenderPageRequestHandler.RedirectPolicy.ALWAYS_REDIRECT;\n                }\n                requestCycle.scheduleRequestHandlerAfterCurrent(new org.apache.wicket.request.handler.RenderPageRequestHandler(pageProvider, policy));\n                return;\n            }\n            if ((isAjax == false) && listenerInterface.isRenderPageAfterInvocation()) {\n                requestCycle.scheduleRequestHandlerAfterCurrent(new org.apache.wicket.request.handler.RenderPageRequestHandler(pageProvider, policy));\n            }\n            invokeListener();\n        } else {\n            throw new org.apache.wicket.WicketRuntimeException((\"Component \" + getComponent()) + \" has been removed from page.\");\n        }\n    }\n\n    private void invokeListener() {\n        if (getBehaviorIndex() == null) {\n            listenerInterface.invoke(getComponent());\n        } else {\n            try {\n                org.apache.wicket.behavior.Behavior behavior = getComponent().getBehaviorById(behaviorId);\n                listenerInterface.invoke(getComponent(), behavior);\n            } catch (java.lang.IndexOutOfBoundsException e) {\n                throw new org.apache.wicket.WicketRuntimeException(\"Couldn't find component behavior.\", e);\n            }\n        }\n    }\n\n    public final boolean isPageInstanceCreated() {\n        return !pageComponentProvider.isNewPageInstance();\n    }\n\n    public final java.lang.String getComponentPath() {\n        return pageComponentProvider.getComponentPath();\n    }\n\n    public final java.lang.Integer getRenderCount() {\n        return pageComponentProvider.getRenderCount();\n    }\n}",
            "src_parent_type": "Class",
            "src_type": "Field"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "true",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Method",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "final boolean isNewPageInstance = pageComponentProvider.isNewPageInstance()",
            "src_parent": "{\n    final boolean isNewPageInstance = pageComponentProvider.isNewPageInstance();\n    final boolean isAjax = ((org.apache.wicket.request.http.WebRequest) (requestCycle.getRequest())).isAjax();\n    final org.apache.wicket.request.component.IRequestablePage page = getPage();\n    final boolean isStateless = page.isPageStateless();\n    final org.apache.wicket.request.handler.IPageProvider pageProvider = new org.apache.wicket.request.handler.PageProvider(page);\n    if (getComponent().getPage() == page) {\n        org.apache.wicket.request.handler.RenderPageRequestHandler.RedirectPolicy policy = (isStateless) ? org.apache.wicket.request.handler.RenderPageRequestHandler.RedirectPolicy.NEVER_REDIRECT : org.apache.wicket.request.handler.RenderPageRequestHandler.RedirectPolicy.AUTO_REDIRECT;\n        if (isNewPageInstance) {\n            if (org.apache.wicket.request.handler.ListenerInterfaceRequestHandler.LOG.isDebugEnabled()) {\n                org.apache.wicket.request.handler.ListenerInterfaceRequestHandler.LOG.debug(\"A ListenerInterface '{}' assigned to '{}' is executed on an expired page. \" + \"Scheduling re-create of the page and ignoring the listener interface...\", listenerInterface, getComponentPath());\n            }\n            if (isAjax) {\n                policy = org.apache.wicket.request.handler.RenderPageRequestHandler.RedirectPolicy.ALWAYS_REDIRECT;\n            }\n            requestCycle.scheduleRequestHandlerAfterCurrent(new org.apache.wicket.request.handler.RenderPageRequestHandler(pageProvider, policy));\n            return;\n        }\n        if ((isAjax == false) && listenerInterface.isRenderPageAfterInvocation()) {\n            requestCycle.scheduleRequestHandlerAfterCurrent(new org.apache.wicket.request.handler.RenderPageRequestHandler(pageProvider, policy));\n        }\n        invokeListener();\n    } else {\n        throw new org.apache.wicket.WicketRuntimeException((\"Component \" + getComponent()) + \" has been removed from page.\");\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "LocalVariable"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "true",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Method",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "final boolean isAjax = ((org.apache.wicket.request.http.WebRequest) (requestCycle.getRequest())).isAjax()",
            "src_parent": "{\n    final boolean isNewPageInstance = pageComponentProvider.isNewPageInstance();\n    final boolean isAjax = ((org.apache.wicket.request.http.WebRequest) (requestCycle.getRequest())).isAjax();\n    final org.apache.wicket.request.component.IRequestablePage page = getPage();\n    final boolean isStateless = page.isPageStateless();\n    final org.apache.wicket.request.handler.IPageProvider pageProvider = new org.apache.wicket.request.handler.PageProvider(page);\n    if (getComponent().getPage() == page) {\n        org.apache.wicket.request.handler.RenderPageRequestHandler.RedirectPolicy policy = (isStateless) ? org.apache.wicket.request.handler.RenderPageRequestHandler.RedirectPolicy.NEVER_REDIRECT : org.apache.wicket.request.handler.RenderPageRequestHandler.RedirectPolicy.AUTO_REDIRECT;\n        if (isNewPageInstance) {\n            if (org.apache.wicket.request.handler.ListenerInterfaceRequestHandler.LOG.isDebugEnabled()) {\n                org.apache.wicket.request.handler.ListenerInterfaceRequestHandler.LOG.debug(\"A ListenerInterface '{}' assigned to '{}' is executed on an expired page. \" + \"Scheduling re-create of the page and ignoring the listener interface...\", listenerInterface, getComponentPath());\n            }\n            if (isAjax) {\n                policy = org.apache.wicket.request.handler.RenderPageRequestHandler.RedirectPolicy.ALWAYS_REDIRECT;\n            }\n            requestCycle.scheduleRequestHandlerAfterCurrent(new org.apache.wicket.request.handler.RenderPageRequestHandler(pageProvider, policy));\n            return;\n        }\n        if ((isAjax == false) && listenerInterface.isRenderPageAfterInvocation()) {\n            requestCycle.scheduleRequestHandlerAfterCurrent(new org.apache.wicket.request.handler.RenderPageRequestHandler(pageProvider, policy));\n        }\n        invokeListener();\n    } else {\n        throw new org.apache.wicket.WicketRuntimeException((\"Component \" + getComponent()) + \" has been removed from page.\");\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "LocalVariable"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "true",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Method",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "final boolean isStateless = page.isPageStateless()",
            "src_parent": "{\n    final boolean isNewPageInstance = pageComponentProvider.isNewPageInstance();\n    final boolean isAjax = ((org.apache.wicket.request.http.WebRequest) (requestCycle.getRequest())).isAjax();\n    final org.apache.wicket.request.component.IRequestablePage page = getPage();\n    final boolean isStateless = page.isPageStateless();\n    final org.apache.wicket.request.handler.IPageProvider pageProvider = new org.apache.wicket.request.handler.PageProvider(page);\n    if (getComponent().getPage() == page) {\n        org.apache.wicket.request.handler.RenderPageRequestHandler.RedirectPolicy policy = (isStateless) ? org.apache.wicket.request.handler.RenderPageRequestHandler.RedirectPolicy.NEVER_REDIRECT : org.apache.wicket.request.handler.RenderPageRequestHandler.RedirectPolicy.AUTO_REDIRECT;\n        if (isNewPageInstance) {\n            if (org.apache.wicket.request.handler.ListenerInterfaceRequestHandler.LOG.isDebugEnabled()) {\n                org.apache.wicket.request.handler.ListenerInterfaceRequestHandler.LOG.debug(\"A ListenerInterface '{}' assigned to '{}' is executed on an expired page. \" + \"Scheduling re-create of the page and ignoring the listener interface...\", listenerInterface, getComponentPath());\n            }\n            if (isAjax) {\n                policy = org.apache.wicket.request.handler.RenderPageRequestHandler.RedirectPolicy.ALWAYS_REDIRECT;\n            }\n            requestCycle.scheduleRequestHandlerAfterCurrent(new org.apache.wicket.request.handler.RenderPageRequestHandler(pageProvider, policy));\n            return;\n        }\n        if ((isAjax == false) && listenerInterface.isRenderPageAfterInvocation()) {\n            requestCycle.scheduleRequestHandlerAfterCurrent(new org.apache.wicket.request.handler.RenderPageRequestHandler(pageProvider, policy));\n        }\n        invokeListener();\n    } else {\n        throw new org.apache.wicket.WicketRuntimeException((\"Component \" + getComponent()) + \" has been removed from page.\");\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "LocalVariable"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "true",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Method",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "if (getComponent().getPage() == page) {\n    org.apache.wicket.request.handler.RenderPageRequestHandler.RedirectPolicy policy = (isStateless) ? org.apache.wicket.request.handler.RenderPageRequestHandler.RedirectPolicy.NEVER_REDIRECT : org.apache.wicket.request.handler.RenderPageRequestHandler.RedirectPolicy.AUTO_REDIRECT;\n    if (isNewPageInstance) {\n        if (org.apache.wicket.request.handler.ListenerInterfaceRequestHandler.LOG.isDebugEnabled()) {\n            org.apache.wicket.request.handler.ListenerInterfaceRequestHandler.LOG.debug(\"A ListenerInterface '{}' assigned to '{}' is executed on an expired page. \" + \"Scheduling re-create of the page and ignoring the listener interface...\", listenerInterface, getComponentPath());\n        }\n        if (isAjax) {\n            policy = org.apache.wicket.request.handler.RenderPageRequestHandler.RedirectPolicy.ALWAYS_REDIRECT;\n        }\n        requestCycle.scheduleRequestHandlerAfterCurrent(new org.apache.wicket.request.handler.RenderPageRequestHandler(pageProvider, policy));\n        return;\n    }\n    if ((isAjax == false) && listenerInterface.isRenderPageAfterInvocation()) {\n        requestCycle.scheduleRequestHandlerAfterCurrent(new org.apache.wicket.request.handler.RenderPageRequestHandler(pageProvider, policy));\n    }\n    invokeListener();\n} else {\n    throw new org.apache.wicket.WicketRuntimeException((\"Component \" + getComponent()) + \" has been removed from page.\");\n}",
            "src_parent": "{\n    final boolean isNewPageInstance = pageComponentProvider.isNewPageInstance();\n    final boolean isAjax = ((org.apache.wicket.request.http.WebRequest) (requestCycle.getRequest())).isAjax();\n    final org.apache.wicket.request.component.IRequestablePage page = getPage();\n    final boolean isStateless = page.isPageStateless();\n    final org.apache.wicket.request.handler.IPageProvider pageProvider = new org.apache.wicket.request.handler.PageProvider(page);\n    if (getComponent().getPage() == page) {\n        org.apache.wicket.request.handler.RenderPageRequestHandler.RedirectPolicy policy = (isStateless) ? org.apache.wicket.request.handler.RenderPageRequestHandler.RedirectPolicy.NEVER_REDIRECT : org.apache.wicket.request.handler.RenderPageRequestHandler.RedirectPolicy.AUTO_REDIRECT;\n        if (isNewPageInstance) {\n            if (org.apache.wicket.request.handler.ListenerInterfaceRequestHandler.LOG.isDebugEnabled()) {\n                org.apache.wicket.request.handler.ListenerInterfaceRequestHandler.LOG.debug(\"A ListenerInterface '{}' assigned to '{}' is executed on an expired page. \" + \"Scheduling re-create of the page and ignoring the listener interface...\", listenerInterface, getComponentPath());\n            }\n            if (isAjax) {\n                policy = org.apache.wicket.request.handler.RenderPageRequestHandler.RedirectPolicy.ALWAYS_REDIRECT;\n            }\n            requestCycle.scheduleRequestHandlerAfterCurrent(new org.apache.wicket.request.handler.RenderPageRequestHandler(pageProvider, policy));\n            return;\n        }\n        if ((isAjax == false) && listenerInterface.isRenderPageAfterInvocation()) {\n            requestCycle.scheduleRequestHandlerAfterCurrent(new org.apache.wicket.request.handler.RenderPageRequestHandler(pageProvider, policy));\n        }\n        invokeListener();\n    } else {\n        throw new org.apache.wicket.WicketRuntimeException((\"Component \" + getComponent()) + \" has been removed from page.\");\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "If"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "if (isNewPageInstance) {\n    if (org.apache.wicket.request.handler.ListenerInterfaceRequestHandler.LOG.isDebugEnabled()) {\n        org.apache.wicket.request.handler.ListenerInterfaceRequestHandler.LOG.debug(\"A ListenerInterface '{}' assigned to '{}' is executed on an expired page. \" + \"Scheduling re-create of the page and ignoring the listener interface...\", listenerInterface, getComponentPath());\n    }\n    if (isAjax) {\n        policy = org.apache.wicket.request.handler.RenderPageRequestHandler.RedirectPolicy.ALWAYS_REDIRECT;\n    }\n    requestCycle.scheduleRequestHandlerAfterCurrent(new org.apache.wicket.request.handler.RenderPageRequestHandler(pageProvider, policy));\n    return;\n}",
            "src_parent": "{\n    org.apache.wicket.request.handler.RenderPageRequestHandler.RedirectPolicy policy = (isStateless) ? org.apache.wicket.request.handler.RenderPageRequestHandler.RedirectPolicy.NEVER_REDIRECT : org.apache.wicket.request.handler.RenderPageRequestHandler.RedirectPolicy.AUTO_REDIRECT;\n    if (isNewPageInstance) {\n        if (org.apache.wicket.request.handler.ListenerInterfaceRequestHandler.LOG.isDebugEnabled()) {\n            org.apache.wicket.request.handler.ListenerInterfaceRequestHandler.LOG.debug(\"A ListenerInterface '{}' assigned to '{}' is executed on an expired page. \" + \"Scheduling re-create of the page and ignoring the listener interface...\", listenerInterface, getComponentPath());\n        }\n        if (isAjax) {\n            policy = org.apache.wicket.request.handler.RenderPageRequestHandler.RedirectPolicy.ALWAYS_REDIRECT;\n        }\n        requestCycle.scheduleRequestHandlerAfterCurrent(new org.apache.wicket.request.handler.RenderPageRequestHandler(pageProvider, policy));\n        return;\n    }\n    if ((isAjax == false) && listenerInterface.isRenderPageAfterInvocation()) {\n        requestCycle.scheduleRequestHandlerAfterCurrent(new org.apache.wicket.request.handler.RenderPageRequestHandler(pageProvider, policy));\n    }\n    invokeListener();\n}",
            "src_parent_type": "Block",
            "src_type": "If"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "if ((isAjax == false) && listenerInterface.isRenderPageAfterInvocation()) {\n    requestCycle.scheduleRequestHandlerAfterCurrent(new org.apache.wicket.request.handler.RenderPageRequestHandler(pageProvider, policy));\n}",
            "src_parent": "{\n    org.apache.wicket.request.handler.RenderPageRequestHandler.RedirectPolicy policy = (isStateless) ? org.apache.wicket.request.handler.RenderPageRequestHandler.RedirectPolicy.NEVER_REDIRECT : org.apache.wicket.request.handler.RenderPageRequestHandler.RedirectPolicy.AUTO_REDIRECT;\n    if (isNewPageInstance) {\n        if (org.apache.wicket.request.handler.ListenerInterfaceRequestHandler.LOG.isDebugEnabled()) {\n            org.apache.wicket.request.handler.ListenerInterfaceRequestHandler.LOG.debug(\"A ListenerInterface '{}' assigned to '{}' is executed on an expired page. \" + \"Scheduling re-create of the page and ignoring the listener interface...\", listenerInterface, getComponentPath());\n        }\n        if (isAjax) {\n            policy = org.apache.wicket.request.handler.RenderPageRequestHandler.RedirectPolicy.ALWAYS_REDIRECT;\n        }\n        requestCycle.scheduleRequestHandlerAfterCurrent(new org.apache.wicket.request.handler.RenderPageRequestHandler(pageProvider, policy));\n        return;\n    }\n    if ((isAjax == false) && listenerInterface.isRenderPageAfterInvocation()) {\n        requestCycle.scheduleRequestHandlerAfterCurrent(new org.apache.wicket.request.handler.RenderPageRequestHandler(pageProvider, policy));\n    }\n    invokeListener();\n}",
            "src_parent_type": "Block",
            "src_type": "If"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "LocalVariable",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "isStateless",
            "src_parent": "(isStateless) ? org.apache.wicket.request.handler.RenderPageRequestHandler.RedirectPolicy.NEVER_REDIRECT : org.apache.wicket.request.handler.RenderPageRequestHandler.RedirectPolicy.AUTO_REDIRECT",
            "src_parent_type": "Conditional",
            "src_type": "VariableRead"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "final org.apache.wicket.request.handler.IPageProvider pageProvider = new org.apache.wicket.request.handler.PageProvider(page)",
            "dst_parent": "{\n    final boolean isNewPageInstance = pageComponentProvider.isNewPageInstance();\n    final boolean isAjax = ((org.apache.wicket.request.http.WebRequest) (requestCycle.getRequest())).isAjax();\n    final org.apache.wicket.request.component.IRequestablePage page = getPage();\n    final boolean isStateless = page.isPageStateless();\n    final org.apache.wicket.request.handler.IPageProvider pageProvider = new org.apache.wicket.request.handler.PageProvider(page);\n    if (getComponent().getPage() == page) {\n        org.apache.wicket.request.handler.RenderPageRequestHandler.RedirectPolicy policy = (isStateless) ? org.apache.wicket.request.handler.RenderPageRequestHandler.RedirectPolicy.NEVER_REDIRECT : org.apache.wicket.request.handler.RenderPageRequestHandler.RedirectPolicy.AUTO_REDIRECT;\n        if (isNewPageInstance) {\n            if (org.apache.wicket.request.handler.ListenerInterfaceRequestHandler.LOG.isDebugEnabled()) {\n                org.apache.wicket.request.handler.ListenerInterfaceRequestHandler.LOG.debug(\"A ListenerInterface '{}' assigned to '{}' is executed on an expired page. \" + \"Scheduling re-create of the page and ignoring the listener interface...\", listenerInterface, getComponentPath());\n            }\n            if (isAjax) {\n                policy = org.apache.wicket.request.handler.RenderPageRequestHandler.RedirectPolicy.ALWAYS_REDIRECT;\n            }\n            requestCycle.scheduleRequestHandlerAfterCurrent(new org.apache.wicket.request.handler.RenderPageRequestHandler(pageProvider, policy));\n            return;\n        }\n        if ((isAjax == false) && listenerInterface.isRenderPageAfterInvocation()) {\n            requestCycle.scheduleRequestHandlerAfterCurrent(new org.apache.wicket.request.handler.RenderPageRequestHandler(pageProvider, policy));\n        }\n        invokeListener();\n    } else {\n        throw new org.apache.wicket.WicketRuntimeException((\"Component \" + getComponent()) + \" has been removed from page.\");\n    }\n}",
            "dst_parent_type": "Block",
            "dst_type": "LocalVariable",
            "operator": "MOV",
            "src": "final org.apache.wicket.request.handler.IPageProvider pageProvider = new org.apache.wicket.request.handler.PageProvider(page)",
            "src_parent": "{\n    final org.apache.wicket.request.handler.IPageProvider pageProvider = new org.apache.wicket.request.handler.PageProvider(page);\n    final org.apache.wicket.request.handler.RenderPageRequestHandler.RedirectPolicy policy = (page.isPageStateless()) ? org.apache.wicket.request.handler.RenderPageRequestHandler.RedirectPolicy.NEVER_REDIRECT : org.apache.wicket.request.handler.RenderPageRequestHandler.RedirectPolicy.AUTO_REDIRECT;\n    requestCycle.scheduleRequestHandlerAfterCurrent(new org.apache.wicket.request.handler.RenderPageRequestHandler(pageProvider, policy));\n}",
            "src_parent_type": "Block",
            "src_type": "LocalVariable"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "LocalVariable",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "boolean",
            "dst_parent": "final boolean isAjax = ((org.apache.wicket.request.http.WebRequest) (requestCycle.getRequest())).isAjax()",
            "dst_parent_type": "LocalVariable",
            "dst_type": "TypeReference",
            "operator": "MOV",
            "src": "boolean",
            "src_parent": "boolean isAjax = ((org.apache.wicket.request.http.WebRequest) (requestCycle.getRequest())).isAjax()",
            "src_parent_type": "LocalVariable",
            "src_type": "TypeReference"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "LocalVariable",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "((org.apache.wicket.request.http.WebRequest) (requestCycle.getRequest())).isAjax()",
            "dst_parent": "final boolean isAjax = ((org.apache.wicket.request.http.WebRequest) (requestCycle.getRequest())).isAjax()",
            "dst_parent_type": "LocalVariable",
            "dst_type": "Invocation",
            "operator": "MOV",
            "src": "((org.apache.wicket.request.http.WebRequest) (requestCycle.getRequest())).isAjax()",
            "src_parent": "boolean isAjax = ((org.apache.wicket.request.http.WebRequest) (requestCycle.getRequest())).isAjax()",
            "src_parent_type": "LocalVariable",
            "src_type": "Invocation"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "LocalVariable",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "VE: Modifiers_LocalVariable",
            "dst_parent": "final boolean isStateless = page.isPageStateless()",
            "dst_parent_type": "LocalVariable",
            "dst_type": "VirtualEle",
            "operator": "MOV",
            "src": "VE: Modifiers_LocalVariable",
            "src_parent": "final org.apache.wicket.request.handler.RenderPageRequestHandler.RedirectPolicy policy = (page.isPageStateless()) ? org.apache.wicket.request.handler.RenderPageRequestHandler.RedirectPolicy.NEVER_REDIRECT : org.apache.wicket.request.handler.RenderPageRequestHandler.RedirectPolicy.AUTO_REDIRECT",
            "src_parent_type": "LocalVariable",
            "src_type": "VirtualEle"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "LocalVariable",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "page.isPageStateless()",
            "dst_parent": "final boolean isStateless = page.isPageStateless()",
            "dst_parent_type": "LocalVariable",
            "dst_type": "Invocation",
            "operator": "MOV",
            "src": "page.isPageStateless()",
            "src_parent": "(page.isPageStateless()) ? org.apache.wicket.request.handler.RenderPageRequestHandler.RedirectPolicy.NEVER_REDIRECT : org.apache.wicket.request.handler.RenderPageRequestHandler.RedirectPolicy.AUTO_REDIRECT",
            "src_parent_type": "Conditional",
            "src_type": "Invocation"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "getComponent().getPage() == page",
            "dst_parent": "if (getComponent().getPage() == page) {\n    org.apache.wicket.request.handler.RenderPageRequestHandler.RedirectPolicy policy = (isStateless) ? org.apache.wicket.request.handler.RenderPageRequestHandler.RedirectPolicy.NEVER_REDIRECT : org.apache.wicket.request.handler.RenderPageRequestHandler.RedirectPolicy.AUTO_REDIRECT;\n    if (isNewPageInstance) {\n        if (org.apache.wicket.request.handler.ListenerInterfaceRequestHandler.LOG.isDebugEnabled()) {\n            org.apache.wicket.request.handler.ListenerInterfaceRequestHandler.LOG.debug(\"A ListenerInterface '{}' assigned to '{}' is executed on an expired page. \" + \"Scheduling re-create of the page and ignoring the listener interface...\", listenerInterface, getComponentPath());\n        }\n        if (isAjax) {\n            policy = org.apache.wicket.request.handler.RenderPageRequestHandler.RedirectPolicy.ALWAYS_REDIRECT;\n        }\n        requestCycle.scheduleRequestHandlerAfterCurrent(new org.apache.wicket.request.handler.RenderPageRequestHandler(pageProvider, policy));\n        return;\n    }\n    if ((isAjax == false) && listenerInterface.isRenderPageAfterInvocation()) {\n        requestCycle.scheduleRequestHandlerAfterCurrent(new org.apache.wicket.request.handler.RenderPageRequestHandler(pageProvider, policy));\n    }\n    invokeListener();\n} else {\n    throw new org.apache.wicket.WicketRuntimeException((\"Component \" + getComponent()) + \" has been removed from page.\");\n}",
            "dst_parent_type": "If",
            "dst_type": "BinaryOperator",
            "operator": "MOV",
            "src": "getComponent().getPage() == page",
            "src_parent": "if (getComponent().getPage() == page) {\n    boolean isAjax = ((org.apache.wicket.request.http.WebRequest) (requestCycle.getRequest())).isAjax();\n    if ((isAjax == false) && listenerInterface.isRenderPageAfterInvocation()) {\n        final org.apache.wicket.request.handler.IPageProvider pageProvider = new org.apache.wicket.request.handler.PageProvider(page);\n        final org.apache.wicket.request.handler.RenderPageRequestHandler.RedirectPolicy policy = (page.isPageStateless()) ? org.apache.wicket.request.handler.RenderPageRequestHandler.RedirectPolicy.NEVER_REDIRECT : org.apache.wicket.request.handler.RenderPageRequestHandler.RedirectPolicy.AUTO_REDIRECT;\n        requestCycle.scheduleRequestHandlerAfterCurrent(new org.apache.wicket.request.handler.RenderPageRequestHandler(pageProvider, policy));\n    }\n    invokeListener();\n} else {\n    throw new org.apache.wicket.WicketRuntimeException((\"Component \" + getComponent()) + \" has been removed from page.\");\n}",
            "src_parent_type": "If",
            "src_type": "BinaryOperator"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "{\n    org.apache.wicket.request.handler.RenderPageRequestHandler.RedirectPolicy policy = (isStateless) ? org.apache.wicket.request.handler.RenderPageRequestHandler.RedirectPolicy.NEVER_REDIRECT : org.apache.wicket.request.handler.RenderPageRequestHandler.RedirectPolicy.AUTO_REDIRECT;\n    if (isNewPageInstance) {\n        if (org.apache.wicket.request.handler.ListenerInterfaceRequestHandler.LOG.isDebugEnabled()) {\n            org.apache.wicket.request.handler.ListenerInterfaceRequestHandler.LOG.debug(\"A ListenerInterface '{}' assigned to '{}' is executed on an expired page. \" + \"Scheduling re-create of the page and ignoring the listener interface...\", listenerInterface, getComponentPath());\n        }\n        if (isAjax) {\n            policy = org.apache.wicket.request.handler.RenderPageRequestHandler.RedirectPolicy.ALWAYS_REDIRECT;\n        }\n        requestCycle.scheduleRequestHandlerAfterCurrent(new org.apache.wicket.request.handler.RenderPageRequestHandler(pageProvider, policy));\n        return;\n    }\n    if ((isAjax == false) && listenerInterface.isRenderPageAfterInvocation()) {\n        requestCycle.scheduleRequestHandlerAfterCurrent(new org.apache.wicket.request.handler.RenderPageRequestHandler(pageProvider, policy));\n    }\n    invokeListener();\n}",
            "dst_parent": "if (getComponent().getPage() == page) {\n    org.apache.wicket.request.handler.RenderPageRequestHandler.RedirectPolicy policy = (isStateless) ? org.apache.wicket.request.handler.RenderPageRequestHandler.RedirectPolicy.NEVER_REDIRECT : org.apache.wicket.request.handler.RenderPageRequestHandler.RedirectPolicy.AUTO_REDIRECT;\n    if (isNewPageInstance) {\n        if (org.apache.wicket.request.handler.ListenerInterfaceRequestHandler.LOG.isDebugEnabled()) {\n            org.apache.wicket.request.handler.ListenerInterfaceRequestHandler.LOG.debug(\"A ListenerInterface '{}' assigned to '{}' is executed on an expired page. \" + \"Scheduling re-create of the page and ignoring the listener interface...\", listenerInterface, getComponentPath());\n        }\n        if (isAjax) {\n            policy = org.apache.wicket.request.handler.RenderPageRequestHandler.RedirectPolicy.ALWAYS_REDIRECT;\n        }\n        requestCycle.scheduleRequestHandlerAfterCurrent(new org.apache.wicket.request.handler.RenderPageRequestHandler(pageProvider, policy));\n        return;\n    }\n    if ((isAjax == false) && listenerInterface.isRenderPageAfterInvocation()) {\n        requestCycle.scheduleRequestHandlerAfterCurrent(new org.apache.wicket.request.handler.RenderPageRequestHandler(pageProvider, policy));\n    }\n    invokeListener();\n} else {\n    throw new org.apache.wicket.WicketRuntimeException((\"Component \" + getComponent()) + \" has been removed from page.\");\n}",
            "dst_parent_type": "If",
            "dst_type": "Block",
            "operator": "MOV",
            "src": "{\n    final org.apache.wicket.request.handler.IPageProvider pageProvider = new org.apache.wicket.request.handler.PageProvider(page);\n    final org.apache.wicket.request.handler.RenderPageRequestHandler.RedirectPolicy policy = (page.isPageStateless()) ? org.apache.wicket.request.handler.RenderPageRequestHandler.RedirectPolicy.NEVER_REDIRECT : org.apache.wicket.request.handler.RenderPageRequestHandler.RedirectPolicy.AUTO_REDIRECT;\n    requestCycle.scheduleRequestHandlerAfterCurrent(new org.apache.wicket.request.handler.RenderPageRequestHandler(pageProvider, policy));\n}",
            "src_parent": "if ((isAjax == false) && listenerInterface.isRenderPageAfterInvocation()) {\n    final org.apache.wicket.request.handler.IPageProvider pageProvider = new org.apache.wicket.request.handler.PageProvider(page);\n    final org.apache.wicket.request.handler.RenderPageRequestHandler.RedirectPolicy policy = (page.isPageStateless()) ? org.apache.wicket.request.handler.RenderPageRequestHandler.RedirectPolicy.NEVER_REDIRECT : org.apache.wicket.request.handler.RenderPageRequestHandler.RedirectPolicy.AUTO_REDIRECT;\n    requestCycle.scheduleRequestHandlerAfterCurrent(new org.apache.wicket.request.handler.RenderPageRequestHandler(pageProvider, policy));\n}",
            "src_parent_type": "If",
            "src_type": "Block"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "{\n    throw new org.apache.wicket.WicketRuntimeException((\"Component \" + getComponent()) + \" has been removed from page.\");\n}",
            "dst_parent": "if (getComponent().getPage() == page) {\n    org.apache.wicket.request.handler.RenderPageRequestHandler.RedirectPolicy policy = (isStateless) ? org.apache.wicket.request.handler.RenderPageRequestHandler.RedirectPolicy.NEVER_REDIRECT : org.apache.wicket.request.handler.RenderPageRequestHandler.RedirectPolicy.AUTO_REDIRECT;\n    if (isNewPageInstance) {\n        if (org.apache.wicket.request.handler.ListenerInterfaceRequestHandler.LOG.isDebugEnabled()) {\n            org.apache.wicket.request.handler.ListenerInterfaceRequestHandler.LOG.debug(\"A ListenerInterface '{}' assigned to '{}' is executed on an expired page. \" + \"Scheduling re-create of the page and ignoring the listener interface...\", listenerInterface, getComponentPath());\n        }\n        if (isAjax) {\n            policy = org.apache.wicket.request.handler.RenderPageRequestHandler.RedirectPolicy.ALWAYS_REDIRECT;\n        }\n        requestCycle.scheduleRequestHandlerAfterCurrent(new org.apache.wicket.request.handler.RenderPageRequestHandler(pageProvider, policy));\n        return;\n    }\n    if ((isAjax == false) && listenerInterface.isRenderPageAfterInvocation()) {\n        requestCycle.scheduleRequestHandlerAfterCurrent(new org.apache.wicket.request.handler.RenderPageRequestHandler(pageProvider, policy));\n    }\n    invokeListener();\n} else {\n    throw new org.apache.wicket.WicketRuntimeException((\"Component \" + getComponent()) + \" has been removed from page.\");\n}",
            "dst_parent_type": "If",
            "dst_type": "Block",
            "operator": "MOV",
            "src": "{\n    throw new org.apache.wicket.WicketRuntimeException((\"Component \" + getComponent()) + \" has been removed from page.\");\n}",
            "src_parent": "if (getComponent().getPage() == page) {\n    boolean isAjax = ((org.apache.wicket.request.http.WebRequest) (requestCycle.getRequest())).isAjax();\n    if ((isAjax == false) && listenerInterface.isRenderPageAfterInvocation()) {\n        final org.apache.wicket.request.handler.IPageProvider pageProvider = new org.apache.wicket.request.handler.PageProvider(page);\n        final org.apache.wicket.request.handler.RenderPageRequestHandler.RedirectPolicy policy = (page.isPageStateless()) ? org.apache.wicket.request.handler.RenderPageRequestHandler.RedirectPolicy.NEVER_REDIRECT : org.apache.wicket.request.handler.RenderPageRequestHandler.RedirectPolicy.AUTO_REDIRECT;\n        requestCycle.scheduleRequestHandlerAfterCurrent(new org.apache.wicket.request.handler.RenderPageRequestHandler(pageProvider, policy));\n    }\n    invokeListener();\n} else {\n    throw new org.apache.wicket.WicketRuntimeException((\"Component \" + getComponent()) + \" has been removed from page.\");\n}",
            "src_parent_type": "If",
            "src_type": "Block"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "(isAjax == false) && listenerInterface.isRenderPageAfterInvocation()",
            "dst_parent": "if ((isAjax == false) && listenerInterface.isRenderPageAfterInvocation()) {\n    requestCycle.scheduleRequestHandlerAfterCurrent(new org.apache.wicket.request.handler.RenderPageRequestHandler(pageProvider, policy));\n}",
            "dst_parent_type": "If",
            "dst_type": "BinaryOperator",
            "operator": "MOV",
            "src": "(isAjax == false) && listenerInterface.isRenderPageAfterInvocation()",
            "src_parent": "if ((isAjax == false) && listenerInterface.isRenderPageAfterInvocation()) {\n    final org.apache.wicket.request.handler.IPageProvider pageProvider = new org.apache.wicket.request.handler.PageProvider(page);\n    final org.apache.wicket.request.handler.RenderPageRequestHandler.RedirectPolicy policy = (page.isPageStateless()) ? org.apache.wicket.request.handler.RenderPageRequestHandler.RedirectPolicy.NEVER_REDIRECT : org.apache.wicket.request.handler.RenderPageRequestHandler.RedirectPolicy.AUTO_REDIRECT;\n    requestCycle.scheduleRequestHandlerAfterCurrent(new org.apache.wicket.request.handler.RenderPageRequestHandler(pageProvider, policy));\n}",
            "src_parent_type": "If",
            "src_type": "BinaryOperator"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "requestCycle.scheduleRequestHandlerAfterCurrent(new org.apache.wicket.request.handler.RenderPageRequestHandler(pageProvider, policy))",
            "dst_parent": "{\n    if (org.apache.wicket.request.handler.ListenerInterfaceRequestHandler.LOG.isDebugEnabled()) {\n        org.apache.wicket.request.handler.ListenerInterfaceRequestHandler.LOG.debug(\"A ListenerInterface '{}' assigned to '{}' is executed on an expired page. \" + \"Scheduling re-create of the page and ignoring the listener interface...\", listenerInterface, getComponentPath());\n    }\n    if (isAjax) {\n        policy = org.apache.wicket.request.handler.RenderPageRequestHandler.RedirectPolicy.ALWAYS_REDIRECT;\n    }\n    requestCycle.scheduleRequestHandlerAfterCurrent(new org.apache.wicket.request.handler.RenderPageRequestHandler(pageProvider, policy));\n    return;\n}",
            "dst_parent_type": "Block",
            "dst_type": "Invocation",
            "operator": "MOV",
            "src": "requestCycle.scheduleRequestHandlerAfterCurrent(new org.apache.wicket.request.handler.RenderPageRequestHandler(pageProvider, policy))",
            "src_parent": "{\n    final org.apache.wicket.request.handler.IPageProvider pageProvider = new org.apache.wicket.request.handler.PageProvider(page);\n    final org.apache.wicket.request.handler.RenderPageRequestHandler.RedirectPolicy policy = (page.isPageStateless()) ? org.apache.wicket.request.handler.RenderPageRequestHandler.RedirectPolicy.NEVER_REDIRECT : org.apache.wicket.request.handler.RenderPageRequestHandler.RedirectPolicy.AUTO_REDIRECT;\n    requestCycle.scheduleRequestHandlerAfterCurrent(new org.apache.wicket.request.handler.RenderPageRequestHandler(pageProvider, policy));\n}",
            "src_parent_type": "Block",
            "src_type": "Invocation"
          }
        }
      ],
      "file_name": "ListenerInterfaceRequestHandler"
    }
  ],
  "id": "wicket_4624ab3d"
}