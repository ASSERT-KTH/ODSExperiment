{
  "files": [
    {
      "features": [
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Method",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "@java.lang.Override\npublic boolean accept(org.apache.accumulo.core.data.Key k, org.apache.accumulo.core.data.Value v) {\n    return ((match(v.get()) || match(k.getRowData())) || match(k.getColumnFamilyData())) || match(k.getColumnQualifierData());\n}",
            "dst_parent": "public class GrepIterator extends org.apache.accumulo.core.iterators.Filter {\n    private byte[] term;\n\n    @java.lang.Override\n    public boolean accept(org.apache.accumulo.core.data.Key k, org.apache.accumulo.core.data.Value v) {\n        return ((match(v.get()) || match(k.getRowData())) || match(k.getColumnFamilyData())) || match(k.getColumnQualifierData());\n    }\n\n    private boolean match(org.apache.accumulo.core.data.ByteSequence bs) {\n        return org.apache.accumulo.core.iterators.user.GrepIterator.indexOf(bs.getBackingArray(), bs.offset(), bs.length(), term) >= 0;\n    }\n\n    private boolean match(byte[] ba) {\n        return org.apache.accumulo.core.iterators.user.GrepIterator.indexOf(ba, 0, ba.length, term) >= 0;\n    }\n\n    private static int indexOf(byte[] source, int sourceOffset, int sourceCount, byte[] target) {\n        byte first = target[0];\n        int targetCount = target.length;\n        int max = sourceOffset + (sourceCount - targetCount);\n        for (int i = sourceOffset; i <= max; i++) {\n            if (source[i] != first) {\n                while (((++i) <= max) && (source[i] != first)) {\n                    continue;\n                } \n            }\n            if (i <= max) {\n                int j = i + 1;\n                int end = (j + targetCount) - 1;\n                for (int k = 1; (j < end) && (source[j] == target[k]); j++ , k++) {\n                    continue;\n                }\n                if (j == end) {\n                    return i - sourceOffset;\n                }\n            }\n        }\n        return -1;\n    }\n\n    @java.lang.Override\n    public org.apache.accumulo.core.iterators.SortedKeyValueIterator<org.apache.accumulo.core.data.Key, org.apache.accumulo.core.data.Value> deepCopy(org.apache.accumulo.core.iterators.IteratorEnvironment env) {\n        org.apache.accumulo.core.iterators.user.GrepIterator copy = ((org.apache.accumulo.core.iterators.user.GrepIterator) (super.deepCopy(env)));\n        copy.term = java.util.Arrays.copyOf(term, term.length);\n        return copy;\n    }\n\n    @java.lang.Override\n    public void init(org.apache.accumulo.core.iterators.SortedKeyValueIterator<org.apache.accumulo.core.data.Key, org.apache.accumulo.core.data.Value> source, java.util.Map<java.lang.String, java.lang.String> options, org.apache.accumulo.core.iterators.IteratorEnvironment env) throws java.io.IOException {\n        super.init(source, options, env);\n        term = options.get(\"term\").getBytes();\n    }\n\n    public static void setTerm(org.apache.accumulo.core.client.IteratorSetting cfg, java.lang.String term) {\n        cfg.addOption(\"term\", term);\n    }\n}",
            "dst_parent_type": "Class",
            "dst_type": "Method",
            "operator": "UPD",
            "src": "@java.lang.Override\nprotected void consume() throws java.io.IOException {\n    while (getSource().hasTop()) {\n        org.apache.accumulo.core.data.Key k = getSource().getTopKey();\n        org.apache.accumulo.core.data.Value v = getSource().getTopValue();\n        if (((match(v.get()) || match(k.getRowData())) || match(k.getColumnFamilyData())) || match(k.getColumnQualifierData())) {\n            break;\n        }\n        getSource().next();\n    } \n}",
            "src_parent": "public class GrepIterator extends org.apache.accumulo.core.iterators.SkippingIterator {\n    private byte[] term;\n\n    @java.lang.Override\n    protected void consume() throws java.io.IOException {\n        while (getSource().hasTop()) {\n            org.apache.accumulo.core.data.Key k = getSource().getTopKey();\n            org.apache.accumulo.core.data.Value v = getSource().getTopValue();\n            if (((match(v.get()) || match(k.getRowData())) || match(k.getColumnFamilyData())) || match(k.getColumnQualifierData())) {\n                break;\n            }\n            getSource().next();\n        } \n    }\n\n    private boolean match(org.apache.accumulo.core.data.ByteSequence bs) {\n        return org.apache.accumulo.core.iterators.user.GrepIterator.indexOf(bs.getBackingArray(), bs.offset(), bs.length(), term) >= 0;\n    }\n\n    private boolean match(byte[] ba) {\n        return org.apache.accumulo.core.iterators.user.GrepIterator.indexOf(ba, 0, ba.length, term) >= 0;\n    }\n\n    private static int indexOf(byte[] source, int sourceOffset, int sourceCount, byte[] target) {\n        byte first = target[0];\n        int targetCount = target.length;\n        int max = sourceOffset + (sourceCount - targetCount);\n        for (int i = sourceOffset; i <= max; i++) {\n            if (source[i] != first) {\n                while (((++i) <= max) && (source[i] != first)) {\n                    continue;\n                } \n            }\n            if (i <= max) {\n                int j = i + 1;\n                int end = (j + targetCount) - 1;\n                for (int k = 1; (j < end) && (source[j] == target[k]); j++ , k++) {\n                    continue;\n                }\n                if (j == end) {\n                    return i - sourceOffset;\n                }\n            }\n        }\n        return -1;\n    }\n\n    @java.lang.Override\n    public org.apache.accumulo.core.iterators.SortedKeyValueIterator<org.apache.accumulo.core.data.Key, org.apache.accumulo.core.data.Value> deepCopy(org.apache.accumulo.core.iterators.IteratorEnvironment env) {\n        throw new java.lang.UnsupportedOperationException();\n    }\n\n    @java.lang.Override\n    public void init(org.apache.accumulo.core.iterators.SortedKeyValueIterator<org.apache.accumulo.core.data.Key, org.apache.accumulo.core.data.Value> source, java.util.Map<java.lang.String, java.lang.String> options, org.apache.accumulo.core.iterators.IteratorEnvironment env) throws java.io.IOException {\n        super.init(source, options, env);\n        term = options.get(\"term\").getBytes();\n    }\n\n    public static void setTerm(org.apache.accumulo.core.client.IteratorSetting cfg, java.lang.String term) {\n        cfg.addOption(\"term\", term);\n    }\n}",
            "src_parent_type": "Class",
            "src_type": "Method"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Wrapper",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "org.apache.accumulo.core.iterators.Filter",
            "dst_parent": "public class GrepIterator extends org.apache.accumulo.core.iterators.Filter {\n    private byte[] term;\n\n    @java.lang.Override\n    public boolean accept(org.apache.accumulo.core.data.Key k, org.apache.accumulo.core.data.Value v) {\n        return ((match(v.get()) || match(k.getRowData())) || match(k.getColumnFamilyData())) || match(k.getColumnQualifierData());\n    }\n\n    private boolean match(org.apache.accumulo.core.data.ByteSequence bs) {\n        return org.apache.accumulo.core.iterators.user.GrepIterator.indexOf(bs.getBackingArray(), bs.offset(), bs.length(), term) >= 0;\n    }\n\n    private boolean match(byte[] ba) {\n        return org.apache.accumulo.core.iterators.user.GrepIterator.indexOf(ba, 0, ba.length, term) >= 0;\n    }\n\n    private static int indexOf(byte[] source, int sourceOffset, int sourceCount, byte[] target) {\n        byte first = target[0];\n        int targetCount = target.length;\n        int max = sourceOffset + (sourceCount - targetCount);\n        for (int i = sourceOffset; i <= max; i++) {\n            if (source[i] != first) {\n                while (((++i) <= max) && (source[i] != first)) {\n                    continue;\n                } \n            }\n            if (i <= max) {\n                int j = i + 1;\n                int end = (j + targetCount) - 1;\n                for (int k = 1; (j < end) && (source[j] == target[k]); j++ , k++) {\n                    continue;\n                }\n                if (j == end) {\n                    return i - sourceOffset;\n                }\n            }\n        }\n        return -1;\n    }\n\n    @java.lang.Override\n    public org.apache.accumulo.core.iterators.SortedKeyValueIterator<org.apache.accumulo.core.data.Key, org.apache.accumulo.core.data.Value> deepCopy(org.apache.accumulo.core.iterators.IteratorEnvironment env) {\n        org.apache.accumulo.core.iterators.user.GrepIterator copy = ((org.apache.accumulo.core.iterators.user.GrepIterator) (super.deepCopy(env)));\n        copy.term = java.util.Arrays.copyOf(term, term.length);\n        return copy;\n    }\n\n    @java.lang.Override\n    public void init(org.apache.accumulo.core.iterators.SortedKeyValueIterator<org.apache.accumulo.core.data.Key, org.apache.accumulo.core.data.Value> source, java.util.Map<java.lang.String, java.lang.String> options, org.apache.accumulo.core.iterators.IteratorEnvironment env) throws java.io.IOException {\n        super.init(source, options, env);\n        term = options.get(\"term\").getBytes();\n    }\n\n    public static void setTerm(org.apache.accumulo.core.client.IteratorSetting cfg, java.lang.String term) {\n        cfg.addOption(\"term\", term);\n    }\n}",
            "dst_parent_type": "Class",
            "dst_type": "Wra",
            "operator": "UPD",
            "src": "org.apache.accumulo.core.iterators.SkippingIterator",
            "src_parent": "public class GrepIterator extends org.apache.accumulo.core.iterators.SkippingIterator {\n    private byte[] term;\n\n    @java.lang.Override\n    protected void consume() throws java.io.IOException {\n        while (getSource().hasTop()) {\n            org.apache.accumulo.core.data.Key k = getSource().getTopKey();\n            org.apache.accumulo.core.data.Value v = getSource().getTopValue();\n            if (((match(v.get()) || match(k.getRowData())) || match(k.getColumnFamilyData())) || match(k.getColumnQualifierData())) {\n                break;\n            }\n            getSource().next();\n        } \n    }\n\n    private boolean match(org.apache.accumulo.core.data.ByteSequence bs) {\n        return org.apache.accumulo.core.iterators.user.GrepIterator.indexOf(bs.getBackingArray(), bs.offset(), bs.length(), term) >= 0;\n    }\n\n    private boolean match(byte[] ba) {\n        return org.apache.accumulo.core.iterators.user.GrepIterator.indexOf(ba, 0, ba.length, term) >= 0;\n    }\n\n    private static int indexOf(byte[] source, int sourceOffset, int sourceCount, byte[] target) {\n        byte first = target[0];\n        int targetCount = target.length;\n        int max = sourceOffset + (sourceCount - targetCount);\n        for (int i = sourceOffset; i <= max; i++) {\n            if (source[i] != first) {\n                while (((++i) <= max) && (source[i] != first)) {\n                    continue;\n                } \n            }\n            if (i <= max) {\n                int j = i + 1;\n                int end = (j + targetCount) - 1;\n                for (int k = 1; (j < end) && (source[j] == target[k]); j++ , k++) {\n                    continue;\n                }\n                if (j == end) {\n                    return i - sourceOffset;\n                }\n            }\n        }\n        return -1;\n    }\n\n    @java.lang.Override\n    public org.apache.accumulo.core.iterators.SortedKeyValueIterator<org.apache.accumulo.core.data.Key, org.apache.accumulo.core.data.Value> deepCopy(org.apache.accumulo.core.iterators.IteratorEnvironment env) {\n        throw new java.lang.UnsupportedOperationException();\n    }\n\n    @java.lang.Override\n    public void init(org.apache.accumulo.core.iterators.SortedKeyValueIterator<org.apache.accumulo.core.data.Key, org.apache.accumulo.core.data.Value> source, java.util.Map<java.lang.String, java.lang.String> options, org.apache.accumulo.core.iterators.IteratorEnvironment env) throws java.io.IOException {\n        super.init(source, options, env);\n        term = options.get(\"term\").getBytes();\n    }\n\n    public static void setTerm(org.apache.accumulo.core.client.IteratorSetting cfg, java.lang.String term) {\n        cfg.addOption(\"term\", term);\n    }\n}",
            "src_parent_type": "Class",
            "src_type": "Wra"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "TypeReference",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "boolean",
            "dst_parent": "@java.lang.Override\npublic boolean accept(org.apache.accumulo.core.data.Key k, org.apache.accumulo.core.data.Value v) {\n    return ((match(v.get()) || match(k.getRowData())) || match(k.getColumnFamilyData())) || match(k.getColumnQualifierData());\n}",
            "dst_parent_type": "Method",
            "dst_type": "TypeReference",
            "operator": "UPD",
            "src": "void",
            "src_parent": "@java.lang.Override\nprotected void consume() throws java.io.IOException {\n    while (getSource().hasTop()) {\n        org.apache.accumulo.core.data.Key k = getSource().getTopKey();\n        org.apache.accumulo.core.data.Value v = getSource().getTopValue();\n        if (((match(v.get()) || match(k.getRowData())) || match(k.getColumnFamilyData())) || match(k.getColumnQualifierData())) {\n            break;\n        }\n        getSource().next();\n    } \n}",
            "src_parent_type": "Method",
            "src_type": "TypeReference"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Wrapper",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "public",
            "dst_parent": "@java.lang.Override\npublic boolean accept(org.apache.accumulo.core.data.Key k, org.apache.accumulo.core.data.Value v) {\n    return ((match(v.get()) || match(k.getRowData())) || match(k.getColumnFamilyData())) || match(k.getColumnQualifierData());\n}",
            "dst_parent_type": "Method",
            "dst_type": "Wra",
            "operator": "UPD",
            "src": "protected",
            "src_parent": "@java.lang.Override\nprotected void consume() throws java.io.IOException {\n    while (getSource().hasTop()) {\n        org.apache.accumulo.core.data.Key k = getSource().getTopKey();\n        org.apache.accumulo.core.data.Value v = getSource().getTopValue();\n        if (((match(v.get()) || match(k.getRowData())) || match(k.getColumnFamilyData())) || match(k.getColumnQualifierData())) {\n            break;\n        }\n        getSource().next();\n    } \n}",
            "src_parent_type": "Method",
            "src_type": "Wra"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Throw",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "throw new java.lang.UnsupportedOperationException()",
            "src_parent": "{\n    throw new java.lang.UnsupportedOperationException();\n}",
            "src_parent_type": "Block",
            "src_type": "Throw"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Method",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "org.apache.accumulo.core.iterators.user.GrepIterator copy = ((org.apache.accumulo.core.iterators.user.GrepIterator) (super.deepCopy(env)))",
            "src_parent": "{\n    org.apache.accumulo.core.iterators.user.GrepIterator copy = ((org.apache.accumulo.core.iterators.user.GrepIterator) (super.deepCopy(env)));\n    copy.term = java.util.Arrays.copyOf(term, term.length);\n    return copy;\n}",
            "src_parent_type": "Block",
            "src_type": "LocalVariable"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Method",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "copy.term = java.util.Arrays.copyOf(term, term.length)",
            "src_parent": "{\n    org.apache.accumulo.core.iterators.user.GrepIterator copy = ((org.apache.accumulo.core.iterators.user.GrepIterator) (super.deepCopy(env)));\n    copy.term = java.util.Arrays.copyOf(term, term.length);\n    return copy;\n}",
            "src_parent_type": "Block",
            "src_type": "Assignment"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Method",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "return copy",
            "src_parent": "{\n    org.apache.accumulo.core.iterators.user.GrepIterator copy = ((org.apache.accumulo.core.iterators.user.GrepIterator) (super.deepCopy(env)));\n    copy.term = java.util.Arrays.copyOf(term, term.length);\n    return copy;\n}",
            "src_parent_type": "Block",
            "src_type": "Return"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "While",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "((match(v.get()) || match(k.getRowData())) || match(k.getColumnFamilyData())) || match(k.getColumnQualifierData())",
            "dst_parent": "return ((match(v.get()) || match(k.getRowData())) || match(k.getColumnFamilyData())) || match(k.getColumnQualifierData())",
            "dst_parent_type": "Return",
            "dst_type": "BinaryOperator",
            "operator": "MOV",
            "src": "((match(v.get()) || match(k.getRowData())) || match(k.getColumnFamilyData())) || match(k.getColumnQualifierData())",
            "src_parent": "if (((match(v.get()) || match(k.getRowData())) || match(k.getColumnFamilyData())) || match(k.getColumnQualifierData())) {\n    break;\n}",
            "src_parent_type": "If",
            "src_type": "BinaryOperator"
          }
        }
      ],
      "file_name": "GrepIterator"
    }
  ],
  "id": "accumulo_116d5928"
}