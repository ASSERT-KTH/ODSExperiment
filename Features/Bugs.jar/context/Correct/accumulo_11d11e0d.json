{
  "files": [
    {
      "features": [
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Field",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Wrapper",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "final",
            "src_parent": "public final int count;",
            "src_parent_type": "Field",
            "src_type": "Wra"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "LocalVariable",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Try",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "While",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "(tooManyIndex < totals.size()) && (end > tooManyIndex)",
            "src_parent": "while ((tooManyIndex < totals.size()) && (end > tooManyIndex)) {\n    org.apache.accumulo.server.master.balancer.DefaultLoadBalancer.ServerCounts tooMany = totals.get(tooManyIndex);\n    int goal = even;\n    if (tooManyIndex < numServersOverEven) {\n        goal++;\n    }\n    int needToUnload = tooMany.count - goal;\n    org.apache.accumulo.server.master.balancer.DefaultLoadBalancer.ServerCounts tooLittle = totals.get(end);\n    int needToLoad = (goal - tooLittle.count) - movedAlready;\n    if ((needToUnload < 1) && (needToLoad < 1)) {\n        break;\n    }\n    if (needToUnload >= needToLoad) {\n        result.addAll(move(tooMany, tooLittle, needToLoad, donerTabletStats));\n        end--;\n        movedAlready = 0;\n    } else {\n        result.addAll(move(tooMany, tooLittle, needToUnload, donerTabletStats));\n        movedAlready += needToUnload;\n    }\n    if (needToUnload > needToLoad) {\n        moreBalancingNeeded = true;\n    } else {\n        tooManyIndex++;\n        donerTabletStats.clear();\n    }\n} ",
            "src_parent_type": "While",
            "src_type": "BinaryOperator"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Return",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "If",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "For",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "tooMuch.count--",
            "src_parent": "{\n    java.lang.String table;\n    java.lang.Integer tooLittleCount;\n    if (tableToBalance == null) {\n        int biggestDifference = 0;\n        java.lang.String biggestDifferenceTable = null;\n        for (java.util.Map.Entry<java.lang.String, java.lang.Integer> tableEntry : tooMuchMap.entrySet()) {\n            java.lang.String tableID = tableEntry.getKey();\n            if (tooLittleMap.get(tableID) == null) {\n                tooLittleMap.put(tableID, 0);\n            }\n            int diff = tableEntry.getValue() - tooLittleMap.get(tableID);\n            if (diff > biggestDifference) {\n                biggestDifference = diff;\n                biggestDifferenceTable = tableID;\n            }\n        }\n        if (biggestDifference < 2) {\n            table = org.apache.accumulo.server.master.balancer.DefaultLoadBalancer.busiest(tooMuch.status.tableMap);\n        } else {\n            table = biggestDifferenceTable;\n        }\n    } else {\n        table = tableToBalance;\n    }\n    java.util.Map<org.apache.accumulo.core.data.KeyExtent, org.apache.accumulo.core.tabletserver.thrift.TabletStats> onlineTabletsForTable = donerTabletStats.get(table);\n    try {\n        if (onlineTabletsForTable == null) {\n            onlineTabletsForTable = new java.util.HashMap<org.apache.accumulo.core.data.KeyExtent, org.apache.accumulo.core.tabletserver.thrift.TabletStats>();\n            for (org.apache.accumulo.core.tabletserver.thrift.TabletStats stat : getOnlineTabletsForTable(tooMuch.server, table)) {\n                onlineTabletsForTable.put(new org.apache.accumulo.core.data.KeyExtent(stat.extent), stat);\n            }\n            donerTabletStats.put(table, onlineTabletsForTable);\n        }\n    } catch (java.lang.Exception ex) {\n        org.apache.accumulo.server.master.balancer.DefaultLoadBalancer.log.error(\"Unable to select a tablet to move\", ex);\n        return result;\n    }\n    org.apache.accumulo.core.data.KeyExtent extent = org.apache.accumulo.server.master.balancer.DefaultLoadBalancer.selectTablet(tooMuch.server, onlineTabletsForTable);\n    onlineTabletsForTable.remove(extent);\n    if (extent == null) {\n        return result;\n    }\n    tooMuchMap.put(table, tooMuchMap.get(table) - 1);\n    tooLittleCount = tooLittleMap.get(table);\n    if (tooLittleCount == null) {\n        tooLittleCount = 0;\n    }\n    tooLittleMap.put(table, tooLittleCount + 1);\n    tooMuch.count--;\n    tooLittle.count++;\n    result.add(new org.apache.accumulo.server.master.state.TabletMigration(extent, tooMuch.server, tooLittle.server));\n}",
            "src_parent_type": "Block",
            "src_type": "UnaryOperator"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Return",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "If",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "For",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "tooLittle.count++",
            "src_parent": "{\n    java.lang.String table;\n    java.lang.Integer tooLittleCount;\n    if (tableToBalance == null) {\n        int biggestDifference = 0;\n        java.lang.String biggestDifferenceTable = null;\n        for (java.util.Map.Entry<java.lang.String, java.lang.Integer> tableEntry : tooMuchMap.entrySet()) {\n            java.lang.String tableID = tableEntry.getKey();\n            if (tooLittleMap.get(tableID) == null) {\n                tooLittleMap.put(tableID, 0);\n            }\n            int diff = tableEntry.getValue() - tooLittleMap.get(tableID);\n            if (diff > biggestDifference) {\n                biggestDifference = diff;\n                biggestDifferenceTable = tableID;\n            }\n        }\n        if (biggestDifference < 2) {\n            table = org.apache.accumulo.server.master.balancer.DefaultLoadBalancer.busiest(tooMuch.status.tableMap);\n        } else {\n            table = biggestDifferenceTable;\n        }\n    } else {\n        table = tableToBalance;\n    }\n    java.util.Map<org.apache.accumulo.core.data.KeyExtent, org.apache.accumulo.core.tabletserver.thrift.TabletStats> onlineTabletsForTable = donerTabletStats.get(table);\n    try {\n        if (onlineTabletsForTable == null) {\n            onlineTabletsForTable = new java.util.HashMap<org.apache.accumulo.core.data.KeyExtent, org.apache.accumulo.core.tabletserver.thrift.TabletStats>();\n            for (org.apache.accumulo.core.tabletserver.thrift.TabletStats stat : getOnlineTabletsForTable(tooMuch.server, table)) {\n                onlineTabletsForTable.put(new org.apache.accumulo.core.data.KeyExtent(stat.extent), stat);\n            }\n            donerTabletStats.put(table, onlineTabletsForTable);\n        }\n    } catch (java.lang.Exception ex) {\n        org.apache.accumulo.server.master.balancer.DefaultLoadBalancer.log.error(\"Unable to select a tablet to move\", ex);\n        return result;\n    }\n    org.apache.accumulo.core.data.KeyExtent extent = org.apache.accumulo.server.master.balancer.DefaultLoadBalancer.selectTablet(tooMuch.server, onlineTabletsForTable);\n    onlineTabletsForTable.remove(extent);\n    if (extent == null) {\n        return result;\n    }\n    tooMuchMap.put(table, tooMuchMap.get(table) - 1);\n    tooLittleCount = tooLittleMap.get(table);\n    if (tooLittleCount == null) {\n        tooLittleCount = 0;\n    }\n    tooLittleMap.put(table, tooLittleCount + 1);\n    tooMuch.count--;\n    tooLittle.count++;\n    result.add(new org.apache.accumulo.server.master.state.TabletMigration(extent, tooMuch.server, tooLittle.server));\n}",
            "src_parent_type": "Block",
            "src_type": "UnaryOperator"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Return",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Try",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "tooManyIndex < end",
            "src_parent": "while (tooManyIndex < end) {\n    org.apache.accumulo.server.master.balancer.DefaultLoadBalancer.ServerCounts tooMany = totals.get(tooManyIndex);\n    int goal = even;\n    if (tooManyIndex < numServersOverEven) {\n        goal++;\n    }\n    int needToUnload = tooMany.count - goal;\n    org.apache.accumulo.server.master.balancer.DefaultLoadBalancer.ServerCounts tooLittle = totals.get(end);\n    int needToLoad = (goal - tooLittle.count) - movedAlready;\n    if ((needToUnload < 1) && (needToLoad < 1)) {\n        break;\n    }\n    if (needToUnload >= needToLoad) {\n        result.addAll(move(tooMany, tooLittle, needToLoad, donerTabletStats));\n        end--;\n        movedAlready = 0;\n    } else {\n        result.addAll(move(tooMany, tooLittle, needToUnload, donerTabletStats));\n        movedAlready += needToUnload;\n    }\n    if (needToUnload > needToLoad) {\n        moreBalancingNeeded = true;\n    } else {\n        tooManyIndex++;\n        donerTabletStats.clear();\n    }\n} ",
            "src_parent_type": "While",
            "src_type": "BinaryOperator"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "LocalVariable",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Try",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "While",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "tooManyIndex",
            "dst_parent": "tooManyIndex < end",
            "dst_parent_type": "BinaryOperator",
            "dst_type": "VariableRead",
            "operator": "MOV",
            "src": "tooManyIndex",
            "src_parent": "(tooManyIndex < totals.size())",
            "src_parent_type": "BinaryOperator",
            "src_type": "VariableRead"
          }
        }
      ],
      "file_name": "DefaultLoadBalancer"
    }
  ],
  "id": "accumulo_11d11e0d"
}