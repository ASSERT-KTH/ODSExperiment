{
  "files": [
    {
      "features": [
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Method",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "private void addWarn(org.apache.maven.settings.building.SettingsProblemCollector problems, java.lang.String msg) {\n    problems.add(SettingsProblem.Severity.WARNING, msg, -1, -1, null);\n}",
            "dst_parent": "@org.codehaus.plexus.component.annotations.Component(role = org.apache.maven.settings.validation.SettingsValidator.class)\npublic class DefaultSettingsValidator implements org.apache.maven.settings.validation.SettingsValidator {\n    private static final java.lang.String ID_REGEX = \"[A-Za-z0-9_\\\\-.]+\";\n\n    public void validate(org.apache.maven.settings.Settings settings, org.apache.maven.settings.building.SettingsProblemCollector problems) {\n        if (settings.isUsePluginRegistry()) {\n            addWarn(problems, \"'usePluginRegistry' is deprecated and has no effect.\");\n        }\n        java.util.List<java.lang.String> pluginGroups = settings.getPluginGroups();\n        if (pluginGroups != null) {\n            for (int i = 0; i < pluginGroups.size(); i++) {\n                java.lang.String pluginGroup = pluginGroups.get(i).trim();\n                if (org.codehaus.plexus.util.StringUtils.isBlank(pluginGroup)) {\n                    addError(problems, (\"'pluginGroups.pluginGroup[\" + i) + \"]' must not be empty.\");\n                } else if (!pluginGroup.matches(org.apache.maven.settings.validation.DefaultSettingsValidator.ID_REGEX)) {\n                    addError(problems, ((\"'pluginGroups.pluginGroup[\" + i) + \"]' must denote a valid group id and match the pattern \") + org.apache.maven.settings.validation.DefaultSettingsValidator.ID_REGEX);\n                }\n            }\n        }\n        java.util.List<org.apache.maven.settings.Server> servers = settings.getServers();\n        if (servers != null) {\n            for (int i = 0; i < servers.size(); i++) {\n                org.apache.maven.settings.Server server = servers.get(i);\n                validateStringNotEmpty(problems, (\"servers.server[\" + i) + \"].id\", server.getId(), null);\n            }\n        }\n        java.util.List<org.apache.maven.settings.Mirror> mirrors = settings.getMirrors();\n        if (mirrors != null) {\n            for (org.apache.maven.settings.Mirror mirror : mirrors) {\n                validateStringNotEmpty(problems, \"mirrors.mirror.id\", mirror.getId(), mirror.getUrl());\n                validateStringNotEmpty(problems, \"mirrors.mirror.url\", mirror.getUrl(), mirror.getId());\n                validateStringNotEmpty(problems, \"mirrors.mirror.mirrorOf\", mirror.getMirrorOf(), mirror.getId());\n            }\n        }\n        java.util.List<org.apache.maven.settings.Profile> profiles = settings.getProfiles();\n        if (profiles != null) {\n            for (org.apache.maven.settings.Profile profile : profiles) {\n                validateRepositories(problems, profile.getRepositories(), \"repositories.repository\");\n                validateRepositories(problems, profile.getPluginRepositories(), \"pluginRepositories.pluginRepository\");\n            }\n        }\n    }\n\n    private void validateRepositories(org.apache.maven.settings.building.SettingsProblemCollector problems, java.util.List<org.apache.maven.settings.Repository> repositories, java.lang.String prefix) {\n        for (org.apache.maven.settings.Repository repository : repositories) {\n            validateStringNotEmpty(problems, prefix + \".id\", repository.getId(), repository.getUrl());\n            validateStringNotEmpty(problems, prefix + \".url\", repository.getUrl(), repository.getId());\n            if (\"legacy\".equals(repository.getLayout())) {\n                addWarn(problems, (((\"'\" + prefix) + \".layout' for \") + repository.getId()) + \" uses the deprecated value 'legacy'.\");\n            }\n        }\n    }\n\n    private boolean validateStringNotEmpty(org.apache.maven.settings.building.SettingsProblemCollector problems, java.lang.String fieldName, java.lang.String string, java.lang.String sourceHint) {\n        if (!validateNotNull(problems, fieldName, string, sourceHint)) {\n            return false;\n        }\n        if (string.length() > 0) {\n            return true;\n        }\n        java.lang.String msg;\n        if (sourceHint != null) {\n            msg = ((\"'\" + fieldName) + \"' is missing for \") + sourceHint;\n        } else {\n            msg = (\"'\" + fieldName) + \"' is missing.\";\n        }\n        addError(problems, msg);\n        return false;\n    }\n\n    private boolean validateNotNull(org.apache.maven.settings.building.SettingsProblemCollector problems, java.lang.String fieldName, java.lang.Object object, java.lang.String sourceHint) {\n        if (object != null) {\n            return true;\n        }\n        java.lang.String msg;\n        if (sourceHint != null) {\n            msg = ((\"'\" + fieldName) + \"' is missing for \") + sourceHint;\n        } else {\n            msg = (\"'\" + fieldName) + \"' is missing.\";\n        }\n        addError(problems, msg);\n        return false;\n    }\n\n    private void addError(org.apache.maven.settings.building.SettingsProblemCollector problems, java.lang.String msg) {\n        problems.add(SettingsProblem.Severity.ERROR, msg, -1, -1, null);\n    }\n\n    private void addWarn(org.apache.maven.settings.building.SettingsProblemCollector problems, java.lang.String msg) {\n        problems.add(SettingsProblem.Severity.WARNING, msg, -1, -1, null);\n    }\n}",
            "dst_parent_type": "Class",
            "dst_type": "Method",
            "operator": "UPD",
            "src": "private boolean validateStringNotEmpty(org.apache.maven.settings.building.SettingsProblemCollector problems, java.lang.String fieldName, java.lang.String string) {\n    return validateStringNotEmpty(problems, fieldName, string, null);\n}",
            "src_parent": "@org.codehaus.plexus.component.annotations.Component(role = org.apache.maven.settings.validation.SettingsValidator.class)\npublic class DefaultSettingsValidator implements org.apache.maven.settings.validation.SettingsValidator {\n    public void validate(org.apache.maven.settings.Settings settings, org.apache.maven.settings.building.SettingsProblemCollector problems) {\n        java.util.List<org.apache.maven.settings.Profile> profiles = settings.getProfiles();\n        if (profiles != null) {\n            for (org.apache.maven.settings.Profile prof : profiles) {\n                validateRepositories(problems, prof.getRepositories(), \"repositories.repository\");\n                validateRepositories(problems, prof.getPluginRepositories(), \"pluginRepositories.pluginRepository\");\n            }\n        }\n    }\n\n    private void validateRepositories(org.apache.maven.settings.building.SettingsProblemCollector problems, java.util.List<org.apache.maven.settings.Repository> repositories, java.lang.String prefix) {\n        for (org.apache.maven.settings.Repository repository : repositories) {\n            validateStringNotEmpty(problems, prefix + \".id\", repository.getId());\n            validateStringNotEmpty(problems, prefix + \".url\", repository.getUrl());\n        }\n    }\n\n    private boolean validateStringNotEmpty(org.apache.maven.settings.building.SettingsProblemCollector problems, java.lang.String fieldName, java.lang.String string) {\n        return validateStringNotEmpty(problems, fieldName, string, null);\n    }\n\n    private boolean validateStringNotEmpty(org.apache.maven.settings.building.SettingsProblemCollector problems, java.lang.String fieldName, java.lang.String string, java.lang.String sourceHint) {\n        if (!validateNotNull(problems, fieldName, string, sourceHint)) {\n            return false;\n        }\n        if (string.length() > 0) {\n            return true;\n        }\n        java.lang.String msg;\n        if (sourceHint != null) {\n            msg = ((\"'\" + fieldName) + \"' is missing for \") + sourceHint;\n        } else {\n            msg = (\"'\" + fieldName) + \"' is missing.\";\n        }\n        addError(problems, msg);\n        return false;\n    }\n\n    private boolean validateNotNull(org.apache.maven.settings.building.SettingsProblemCollector problems, java.lang.String fieldName, java.lang.Object object, java.lang.String sourceHint) {\n        if (object != null) {\n            return true;\n        }\n        java.lang.String msg;\n        if (sourceHint != null) {\n            msg = ((\"'\" + fieldName) + \"' is missing for \") + sourceHint;\n        } else {\n            msg = (\"'\" + fieldName) + \"' is missing.\";\n        }\n        addError(problems, msg);\n        return false;\n    }\n\n    private void addError(org.apache.maven.settings.building.SettingsProblemCollector problems, java.lang.String msg) {\n        problems.add(SettingsProblem.Severity.ERROR, msg, -1, -1, null);\n    }\n}",
            "src_parent_type": "Class",
            "src_type": "Method"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "TypeReference",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "void",
            "dst_parent": "private void addWarn(org.apache.maven.settings.building.SettingsProblemCollector problems, java.lang.String msg) {\n    problems.add(SettingsProblem.Severity.WARNING, msg, -1, -1, null);\n}",
            "dst_parent_type": "Method",
            "dst_type": "TypeReference",
            "operator": "UPD",
            "src": "boolean",
            "src_parent": "private boolean validateStringNotEmpty(org.apache.maven.settings.building.SettingsProblemCollector problems, java.lang.String fieldName, java.lang.String string) {\n    return validateStringNotEmpty(problems, fieldName, string, null);\n}",
            "src_parent_type": "Method",
            "src_type": "TypeReference"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Parameter",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "java.lang.String msg",
            "dst_parent": "private void addWarn(org.apache.maven.settings.building.SettingsProblemCollector problems, java.lang.String msg) {\n    problems.add(SettingsProblem.Severity.WARNING, msg, -1, -1, null);\n}",
            "dst_parent_type": "Method",
            "dst_type": "Parameter",
            "operator": "UPD",
            "src": "java.lang.String string",
            "src_parent": "private boolean validateStringNotEmpty(org.apache.maven.settings.building.SettingsProblemCollector problems, java.lang.String fieldName, java.lang.String string) {\n    return validateStringNotEmpty(problems, fieldName, string, null);\n}",
            "src_parent_type": "Method",
            "src_type": "Parameter"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Return",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "msg",
            "dst_parent": "problems.add(SettingsProblem.Severity.WARNING, msg, -1, -1, null)",
            "dst_parent_type": "Invocation",
            "dst_type": "VariableRead",
            "operator": "UPD",
            "src": "string",
            "src_parent": "validateStringNotEmpty(problems, fieldName, string, null)",
            "src_parent_type": "Invocation",
            "src_type": "VariableRead"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "ForEach",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "org.apache.maven.settings.Profile profile",
            "dst_parent": "for (org.apache.maven.settings.Profile profile : profiles) {\n    validateRepositories(problems, profile.getRepositories(), \"repositories.repository\");\n    validateRepositories(problems, profile.getPluginRepositories(), \"pluginRepositories.pluginRepository\");\n}",
            "dst_parent_type": "ForEach",
            "dst_type": "LocalVariable",
            "operator": "UPD",
            "src": "org.apache.maven.settings.Profile prof",
            "src_parent": "for (org.apache.maven.settings.Profile prof : profiles) {\n    validateRepositories(problems, prof.getRepositories(), \"repositories.repository\");\n    validateRepositories(problems, prof.getPluginRepositories(), \"pluginRepositories.pluginRepository\");\n}",
            "src_parent_type": "ForEach",
            "src_type": "LocalVariable"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "ForEach",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Invocation",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "profile",
            "dst_parent": "profile.getRepositories()",
            "dst_parent_type": "Invocation",
            "dst_type": "VariableRead",
            "operator": "UPD",
            "src": "prof",
            "src_parent": "prof.getRepositories()",
            "src_parent_type": "Invocation",
            "src_type": "VariableRead"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "ForEach",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Invocation",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "profile",
            "dst_parent": "profile.getPluginRepositories()",
            "dst_parent_type": "Invocation",
            "dst_type": "VariableRead",
            "operator": "UPD",
            "src": "prof",
            "src_parent": "prof.getPluginRepositories()",
            "src_parent_type": "Invocation",
            "src_type": "VariableRead"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Package",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Class",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "private static final java.lang.String ID_REGEX = \"[A-Za-z0-9_\\\\-.]+\";",
            "src_parent": "@org.codehaus.plexus.component.annotations.Component(role = org.apache.maven.settings.validation.SettingsValidator.class)\npublic class DefaultSettingsValidator implements org.apache.maven.settings.validation.SettingsValidator {\n    private static final java.lang.String ID_REGEX = \"[A-Za-z0-9_\\\\-.]+\";\n\n    public void validate(org.apache.maven.settings.Settings settings, org.apache.maven.settings.building.SettingsProblemCollector problems) {\n        if (settings.isUsePluginRegistry()) {\n            addWarn(problems, \"'usePluginRegistry' is deprecated and has no effect.\");\n        }\n        java.util.List<java.lang.String> pluginGroups = settings.getPluginGroups();\n        if (pluginGroups != null) {\n            for (int i = 0; i < pluginGroups.size(); i++) {\n                java.lang.String pluginGroup = pluginGroups.get(i).trim();\n                if (org.codehaus.plexus.util.StringUtils.isBlank(pluginGroup)) {\n                    addError(problems, (\"'pluginGroups.pluginGroup[\" + i) + \"]' must not be empty.\");\n                } else if (!pluginGroup.matches(org.apache.maven.settings.validation.DefaultSettingsValidator.ID_REGEX)) {\n                    addError(problems, ((\"'pluginGroups.pluginGroup[\" + i) + \"]' must denote a valid group id and match the pattern \") + org.apache.maven.settings.validation.DefaultSettingsValidator.ID_REGEX);\n                }\n            }\n        }\n        java.util.List<org.apache.maven.settings.Server> servers = settings.getServers();\n        if (servers != null) {\n            for (int i = 0; i < servers.size(); i++) {\n                org.apache.maven.settings.Server server = servers.get(i);\n                validateStringNotEmpty(problems, (\"servers.server[\" + i) + \"].id\", server.getId(), null);\n            }\n        }\n        java.util.List<org.apache.maven.settings.Mirror> mirrors = settings.getMirrors();\n        if (mirrors != null) {\n            for (org.apache.maven.settings.Mirror mirror : mirrors) {\n                validateStringNotEmpty(problems, \"mirrors.mirror.id\", mirror.getId(), mirror.getUrl());\n                validateStringNotEmpty(problems, \"mirrors.mirror.url\", mirror.getUrl(), mirror.getId());\n                validateStringNotEmpty(problems, \"mirrors.mirror.mirrorOf\", mirror.getMirrorOf(), mirror.getId());\n            }\n        }\n        java.util.List<org.apache.maven.settings.Profile> profiles = settings.getProfiles();\n        if (profiles != null) {\n            for (org.apache.maven.settings.Profile profile : profiles) {\n                validateRepositories(problems, profile.getRepositories(), \"repositories.repository\");\n                validateRepositories(problems, profile.getPluginRepositories(), \"pluginRepositories.pluginRepository\");\n            }\n        }\n    }\n\n    private void validateRepositories(org.apache.maven.settings.building.SettingsProblemCollector problems, java.util.List<org.apache.maven.settings.Repository> repositories, java.lang.String prefix) {\n        for (org.apache.maven.settings.Repository repository : repositories) {\n            validateStringNotEmpty(problems, prefix + \".id\", repository.getId(), repository.getUrl());\n            validateStringNotEmpty(problems, prefix + \".url\", repository.getUrl(), repository.getId());\n            if (\"legacy\".equals(repository.getLayout())) {\n                addWarn(problems, (((\"'\" + prefix) + \".layout' for \") + repository.getId()) + \" uses the deprecated value 'legacy'.\");\n            }\n        }\n    }\n\n    private boolean validateStringNotEmpty(org.apache.maven.settings.building.SettingsProblemCollector problems, java.lang.String fieldName, java.lang.String string, java.lang.String sourceHint) {\n        if (!validateNotNull(problems, fieldName, string, sourceHint)) {\n            return false;\n        }\n        if (string.length() > 0) {\n            return true;\n        }\n        java.lang.String msg;\n        if (sourceHint != null) {\n            msg = ((\"'\" + fieldName) + \"' is missing for \") + sourceHint;\n        } else {\n            msg = (\"'\" + fieldName) + \"' is missing.\";\n        }\n        addError(problems, msg);\n        return false;\n    }\n\n    private boolean validateNotNull(org.apache.maven.settings.building.SettingsProblemCollector problems, java.lang.String fieldName, java.lang.Object object, java.lang.String sourceHint) {\n        if (object != null) {\n            return true;\n        }\n        java.lang.String msg;\n        if (sourceHint != null) {\n            msg = ((\"'\" + fieldName) + \"' is missing for \") + sourceHint;\n        } else {\n            msg = (\"'\" + fieldName) + \"' is missing.\";\n        }\n        addError(problems, msg);\n        return false;\n    }\n\n    private void addError(org.apache.maven.settings.building.SettingsProblemCollector problems, java.lang.String msg) {\n        problems.add(SettingsProblem.Severity.ERROR, msg, -1, -1, null);\n    }\n\n    private void addWarn(org.apache.maven.settings.building.SettingsProblemCollector problems, java.lang.String msg) {\n        problems.add(SettingsProblem.Severity.WARNING, msg, -1, -1, null);\n    }\n}",
            "src_parent_type": "Class",
            "src_type": "Field"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Method",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "if (settings.isUsePluginRegistry()) {\n    addWarn(problems, \"'usePluginRegistry' is deprecated and has no effect.\");\n}",
            "src_parent": "{\n    if (settings.isUsePluginRegistry()) {\n        addWarn(problems, \"'usePluginRegistry' is deprecated and has no effect.\");\n    }\n    java.util.List<java.lang.String> pluginGroups = settings.getPluginGroups();\n    if (pluginGroups != null) {\n        for (int i = 0; i < pluginGroups.size(); i++) {\n            java.lang.String pluginGroup = pluginGroups.get(i).trim();\n            if (org.codehaus.plexus.util.StringUtils.isBlank(pluginGroup)) {\n                addError(problems, (\"'pluginGroups.pluginGroup[\" + i) + \"]' must not be empty.\");\n            } else if (!pluginGroup.matches(org.apache.maven.settings.validation.DefaultSettingsValidator.ID_REGEX)) {\n                addError(problems, ((\"'pluginGroups.pluginGroup[\" + i) + \"]' must denote a valid group id and match the pattern \") + org.apache.maven.settings.validation.DefaultSettingsValidator.ID_REGEX);\n            }\n        }\n    }\n    java.util.List<org.apache.maven.settings.Server> servers = settings.getServers();\n    if (servers != null) {\n        for (int i = 0; i < servers.size(); i++) {\n            org.apache.maven.settings.Server server = servers.get(i);\n            validateStringNotEmpty(problems, (\"servers.server[\" + i) + \"].id\", server.getId(), null);\n        }\n    }\n    java.util.List<org.apache.maven.settings.Mirror> mirrors = settings.getMirrors();\n    if (mirrors != null) {\n        for (org.apache.maven.settings.Mirror mirror : mirrors) {\n            validateStringNotEmpty(problems, \"mirrors.mirror.id\", mirror.getId(), mirror.getUrl());\n            validateStringNotEmpty(problems, \"mirrors.mirror.url\", mirror.getUrl(), mirror.getId());\n            validateStringNotEmpty(problems, \"mirrors.mirror.mirrorOf\", mirror.getMirrorOf(), mirror.getId());\n        }\n    }\n    java.util.List<org.apache.maven.settings.Profile> profiles = settings.getProfiles();\n    if (profiles != null) {\n        for (org.apache.maven.settings.Profile profile : profiles) {\n            validateRepositories(problems, profile.getRepositories(), \"repositories.repository\");\n            validateRepositories(problems, profile.getPluginRepositories(), \"pluginRepositories.pluginRepository\");\n        }\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "If"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Method",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "java.util.List<java.lang.String> pluginGroups = settings.getPluginGroups()",
            "src_parent": "{\n    if (settings.isUsePluginRegistry()) {\n        addWarn(problems, \"'usePluginRegistry' is deprecated and has no effect.\");\n    }\n    java.util.List<java.lang.String> pluginGroups = settings.getPluginGroups();\n    if (pluginGroups != null) {\n        for (int i = 0; i < pluginGroups.size(); i++) {\n            java.lang.String pluginGroup = pluginGroups.get(i).trim();\n            if (org.codehaus.plexus.util.StringUtils.isBlank(pluginGroup)) {\n                addError(problems, (\"'pluginGroups.pluginGroup[\" + i) + \"]' must not be empty.\");\n            } else if (!pluginGroup.matches(org.apache.maven.settings.validation.DefaultSettingsValidator.ID_REGEX)) {\n                addError(problems, ((\"'pluginGroups.pluginGroup[\" + i) + \"]' must denote a valid group id and match the pattern \") + org.apache.maven.settings.validation.DefaultSettingsValidator.ID_REGEX);\n            }\n        }\n    }\n    java.util.List<org.apache.maven.settings.Server> servers = settings.getServers();\n    if (servers != null) {\n        for (int i = 0; i < servers.size(); i++) {\n            org.apache.maven.settings.Server server = servers.get(i);\n            validateStringNotEmpty(problems, (\"servers.server[\" + i) + \"].id\", server.getId(), null);\n        }\n    }\n    java.util.List<org.apache.maven.settings.Mirror> mirrors = settings.getMirrors();\n    if (mirrors != null) {\n        for (org.apache.maven.settings.Mirror mirror : mirrors) {\n            validateStringNotEmpty(problems, \"mirrors.mirror.id\", mirror.getId(), mirror.getUrl());\n            validateStringNotEmpty(problems, \"mirrors.mirror.url\", mirror.getUrl(), mirror.getId());\n            validateStringNotEmpty(problems, \"mirrors.mirror.mirrorOf\", mirror.getMirrorOf(), mirror.getId());\n        }\n    }\n    java.util.List<org.apache.maven.settings.Profile> profiles = settings.getProfiles();\n    if (profiles != null) {\n        for (org.apache.maven.settings.Profile profile : profiles) {\n            validateRepositories(problems, profile.getRepositories(), \"repositories.repository\");\n            validateRepositories(problems, profile.getPluginRepositories(), \"pluginRepositories.pluginRepository\");\n        }\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "LocalVariable"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Method",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "if (pluginGroups != null) {\n    for (int i = 0; i < pluginGroups.size(); i++) {\n        java.lang.String pluginGroup = pluginGroups.get(i).trim();\n        if (org.codehaus.plexus.util.StringUtils.isBlank(pluginGroup)) {\n            addError(problems, (\"'pluginGroups.pluginGroup[\" + i) + \"]' must not be empty.\");\n        } else if (!pluginGroup.matches(org.apache.maven.settings.validation.DefaultSettingsValidator.ID_REGEX)) {\n            addError(problems, ((\"'pluginGroups.pluginGroup[\" + i) + \"]' must denote a valid group id and match the pattern \") + org.apache.maven.settings.validation.DefaultSettingsValidator.ID_REGEX);\n        }\n    }\n}",
            "src_parent": "{\n    if (settings.isUsePluginRegistry()) {\n        addWarn(problems, \"'usePluginRegistry' is deprecated and has no effect.\");\n    }\n    java.util.List<java.lang.String> pluginGroups = settings.getPluginGroups();\n    if (pluginGroups != null) {\n        for (int i = 0; i < pluginGroups.size(); i++) {\n            java.lang.String pluginGroup = pluginGroups.get(i).trim();\n            if (org.codehaus.plexus.util.StringUtils.isBlank(pluginGroup)) {\n                addError(problems, (\"'pluginGroups.pluginGroup[\" + i) + \"]' must not be empty.\");\n            } else if (!pluginGroup.matches(org.apache.maven.settings.validation.DefaultSettingsValidator.ID_REGEX)) {\n                addError(problems, ((\"'pluginGroups.pluginGroup[\" + i) + \"]' must denote a valid group id and match the pattern \") + org.apache.maven.settings.validation.DefaultSettingsValidator.ID_REGEX);\n            }\n        }\n    }\n    java.util.List<org.apache.maven.settings.Server> servers = settings.getServers();\n    if (servers != null) {\n        for (int i = 0; i < servers.size(); i++) {\n            org.apache.maven.settings.Server server = servers.get(i);\n            validateStringNotEmpty(problems, (\"servers.server[\" + i) + \"].id\", server.getId(), null);\n        }\n    }\n    java.util.List<org.apache.maven.settings.Mirror> mirrors = settings.getMirrors();\n    if (mirrors != null) {\n        for (org.apache.maven.settings.Mirror mirror : mirrors) {\n            validateStringNotEmpty(problems, \"mirrors.mirror.id\", mirror.getId(), mirror.getUrl());\n            validateStringNotEmpty(problems, \"mirrors.mirror.url\", mirror.getUrl(), mirror.getId());\n            validateStringNotEmpty(problems, \"mirrors.mirror.mirrorOf\", mirror.getMirrorOf(), mirror.getId());\n        }\n    }\n    java.util.List<org.apache.maven.settings.Profile> profiles = settings.getProfiles();\n    if (profiles != null) {\n        for (org.apache.maven.settings.Profile profile : profiles) {\n            validateRepositories(problems, profile.getRepositories(), \"repositories.repository\");\n            validateRepositories(problems, profile.getPluginRepositories(), \"pluginRepositories.pluginRepository\");\n        }\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "If"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Method",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "java.util.List<org.apache.maven.settings.Server> servers = settings.getServers()",
            "src_parent": "{\n    if (settings.isUsePluginRegistry()) {\n        addWarn(problems, \"'usePluginRegistry' is deprecated and has no effect.\");\n    }\n    java.util.List<java.lang.String> pluginGroups = settings.getPluginGroups();\n    if (pluginGroups != null) {\n        for (int i = 0; i < pluginGroups.size(); i++) {\n            java.lang.String pluginGroup = pluginGroups.get(i).trim();\n            if (org.codehaus.plexus.util.StringUtils.isBlank(pluginGroup)) {\n                addError(problems, (\"'pluginGroups.pluginGroup[\" + i) + \"]' must not be empty.\");\n            } else if (!pluginGroup.matches(org.apache.maven.settings.validation.DefaultSettingsValidator.ID_REGEX)) {\n                addError(problems, ((\"'pluginGroups.pluginGroup[\" + i) + \"]' must denote a valid group id and match the pattern \") + org.apache.maven.settings.validation.DefaultSettingsValidator.ID_REGEX);\n            }\n        }\n    }\n    java.util.List<org.apache.maven.settings.Server> servers = settings.getServers();\n    if (servers != null) {\n        for (int i = 0; i < servers.size(); i++) {\n            org.apache.maven.settings.Server server = servers.get(i);\n            validateStringNotEmpty(problems, (\"servers.server[\" + i) + \"].id\", server.getId(), null);\n        }\n    }\n    java.util.List<org.apache.maven.settings.Mirror> mirrors = settings.getMirrors();\n    if (mirrors != null) {\n        for (org.apache.maven.settings.Mirror mirror : mirrors) {\n            validateStringNotEmpty(problems, \"mirrors.mirror.id\", mirror.getId(), mirror.getUrl());\n            validateStringNotEmpty(problems, \"mirrors.mirror.url\", mirror.getUrl(), mirror.getId());\n            validateStringNotEmpty(problems, \"mirrors.mirror.mirrorOf\", mirror.getMirrorOf(), mirror.getId());\n        }\n    }\n    java.util.List<org.apache.maven.settings.Profile> profiles = settings.getProfiles();\n    if (profiles != null) {\n        for (org.apache.maven.settings.Profile profile : profiles) {\n            validateRepositories(problems, profile.getRepositories(), \"repositories.repository\");\n            validateRepositories(problems, profile.getPluginRepositories(), \"pluginRepositories.pluginRepository\");\n        }\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "LocalVariable"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Method",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "if (servers != null) {\n    for (int i = 0; i < servers.size(); i++) {\n        org.apache.maven.settings.Server server = servers.get(i);\n        validateStringNotEmpty(problems, (\"servers.server[\" + i) + \"].id\", server.getId(), null);\n    }\n}",
            "src_parent": "{\n    if (settings.isUsePluginRegistry()) {\n        addWarn(problems, \"'usePluginRegistry' is deprecated and has no effect.\");\n    }\n    java.util.List<java.lang.String> pluginGroups = settings.getPluginGroups();\n    if (pluginGroups != null) {\n        for (int i = 0; i < pluginGroups.size(); i++) {\n            java.lang.String pluginGroup = pluginGroups.get(i).trim();\n            if (org.codehaus.plexus.util.StringUtils.isBlank(pluginGroup)) {\n                addError(problems, (\"'pluginGroups.pluginGroup[\" + i) + \"]' must not be empty.\");\n            } else if (!pluginGroup.matches(org.apache.maven.settings.validation.DefaultSettingsValidator.ID_REGEX)) {\n                addError(problems, ((\"'pluginGroups.pluginGroup[\" + i) + \"]' must denote a valid group id and match the pattern \") + org.apache.maven.settings.validation.DefaultSettingsValidator.ID_REGEX);\n            }\n        }\n    }\n    java.util.List<org.apache.maven.settings.Server> servers = settings.getServers();\n    if (servers != null) {\n        for (int i = 0; i < servers.size(); i++) {\n            org.apache.maven.settings.Server server = servers.get(i);\n            validateStringNotEmpty(problems, (\"servers.server[\" + i) + \"].id\", server.getId(), null);\n        }\n    }\n    java.util.List<org.apache.maven.settings.Mirror> mirrors = settings.getMirrors();\n    if (mirrors != null) {\n        for (org.apache.maven.settings.Mirror mirror : mirrors) {\n            validateStringNotEmpty(problems, \"mirrors.mirror.id\", mirror.getId(), mirror.getUrl());\n            validateStringNotEmpty(problems, \"mirrors.mirror.url\", mirror.getUrl(), mirror.getId());\n            validateStringNotEmpty(problems, \"mirrors.mirror.mirrorOf\", mirror.getMirrorOf(), mirror.getId());\n        }\n    }\n    java.util.List<org.apache.maven.settings.Profile> profiles = settings.getProfiles();\n    if (profiles != null) {\n        for (org.apache.maven.settings.Profile profile : profiles) {\n            validateRepositories(problems, profile.getRepositories(), \"repositories.repository\");\n            validateRepositories(problems, profile.getPluginRepositories(), \"pluginRepositories.pluginRepository\");\n        }\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "If"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Method",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "java.util.List<org.apache.maven.settings.Mirror> mirrors = settings.getMirrors()",
            "src_parent": "{\n    if (settings.isUsePluginRegistry()) {\n        addWarn(problems, \"'usePluginRegistry' is deprecated and has no effect.\");\n    }\n    java.util.List<java.lang.String> pluginGroups = settings.getPluginGroups();\n    if (pluginGroups != null) {\n        for (int i = 0; i < pluginGroups.size(); i++) {\n            java.lang.String pluginGroup = pluginGroups.get(i).trim();\n            if (org.codehaus.plexus.util.StringUtils.isBlank(pluginGroup)) {\n                addError(problems, (\"'pluginGroups.pluginGroup[\" + i) + \"]' must not be empty.\");\n            } else if (!pluginGroup.matches(org.apache.maven.settings.validation.DefaultSettingsValidator.ID_REGEX)) {\n                addError(problems, ((\"'pluginGroups.pluginGroup[\" + i) + \"]' must denote a valid group id and match the pattern \") + org.apache.maven.settings.validation.DefaultSettingsValidator.ID_REGEX);\n            }\n        }\n    }\n    java.util.List<org.apache.maven.settings.Server> servers = settings.getServers();\n    if (servers != null) {\n        for (int i = 0; i < servers.size(); i++) {\n            org.apache.maven.settings.Server server = servers.get(i);\n            validateStringNotEmpty(problems, (\"servers.server[\" + i) + \"].id\", server.getId(), null);\n        }\n    }\n    java.util.List<org.apache.maven.settings.Mirror> mirrors = settings.getMirrors();\n    if (mirrors != null) {\n        for (org.apache.maven.settings.Mirror mirror : mirrors) {\n            validateStringNotEmpty(problems, \"mirrors.mirror.id\", mirror.getId(), mirror.getUrl());\n            validateStringNotEmpty(problems, \"mirrors.mirror.url\", mirror.getUrl(), mirror.getId());\n            validateStringNotEmpty(problems, \"mirrors.mirror.mirrorOf\", mirror.getMirrorOf(), mirror.getId());\n        }\n    }\n    java.util.List<org.apache.maven.settings.Profile> profiles = settings.getProfiles();\n    if (profiles != null) {\n        for (org.apache.maven.settings.Profile profile : profiles) {\n            validateRepositories(problems, profile.getRepositories(), \"repositories.repository\");\n            validateRepositories(problems, profile.getPluginRepositories(), \"pluginRepositories.pluginRepository\");\n        }\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "LocalVariable"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Method",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "if (mirrors != null) {\n    for (org.apache.maven.settings.Mirror mirror : mirrors) {\n        validateStringNotEmpty(problems, \"mirrors.mirror.id\", mirror.getId(), mirror.getUrl());\n        validateStringNotEmpty(problems, \"mirrors.mirror.url\", mirror.getUrl(), mirror.getId());\n        validateStringNotEmpty(problems, \"mirrors.mirror.mirrorOf\", mirror.getMirrorOf(), mirror.getId());\n    }\n}",
            "src_parent": "{\n    if (settings.isUsePluginRegistry()) {\n        addWarn(problems, \"'usePluginRegistry' is deprecated and has no effect.\");\n    }\n    java.util.List<java.lang.String> pluginGroups = settings.getPluginGroups();\n    if (pluginGroups != null) {\n        for (int i = 0; i < pluginGroups.size(); i++) {\n            java.lang.String pluginGroup = pluginGroups.get(i).trim();\n            if (org.codehaus.plexus.util.StringUtils.isBlank(pluginGroup)) {\n                addError(problems, (\"'pluginGroups.pluginGroup[\" + i) + \"]' must not be empty.\");\n            } else if (!pluginGroup.matches(org.apache.maven.settings.validation.DefaultSettingsValidator.ID_REGEX)) {\n                addError(problems, ((\"'pluginGroups.pluginGroup[\" + i) + \"]' must denote a valid group id and match the pattern \") + org.apache.maven.settings.validation.DefaultSettingsValidator.ID_REGEX);\n            }\n        }\n    }\n    java.util.List<org.apache.maven.settings.Server> servers = settings.getServers();\n    if (servers != null) {\n        for (int i = 0; i < servers.size(); i++) {\n            org.apache.maven.settings.Server server = servers.get(i);\n            validateStringNotEmpty(problems, (\"servers.server[\" + i) + \"].id\", server.getId(), null);\n        }\n    }\n    java.util.List<org.apache.maven.settings.Mirror> mirrors = settings.getMirrors();\n    if (mirrors != null) {\n        for (org.apache.maven.settings.Mirror mirror : mirrors) {\n            validateStringNotEmpty(problems, \"mirrors.mirror.id\", mirror.getId(), mirror.getUrl());\n            validateStringNotEmpty(problems, \"mirrors.mirror.url\", mirror.getUrl(), mirror.getId());\n            validateStringNotEmpty(problems, \"mirrors.mirror.mirrorOf\", mirror.getMirrorOf(), mirror.getId());\n        }\n    }\n    java.util.List<org.apache.maven.settings.Profile> profiles = settings.getProfiles();\n    if (profiles != null) {\n        for (org.apache.maven.settings.Profile profile : profiles) {\n            validateRepositories(problems, profile.getRepositories(), \"repositories.repository\");\n            validateRepositories(problems, profile.getPluginRepositories(), \"pluginRepositories.pluginRepository\");\n        }\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "If"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "ForEach",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "if (\"legacy\".equals(repository.getLayout())) {\n    addWarn(problems, (((\"'\" + prefix) + \".layout' for \") + repository.getId()) + \" uses the deprecated value 'legacy'.\");\n}",
            "src_parent": "{\n    validateStringNotEmpty(problems, prefix + \".id\", repository.getId(), repository.getUrl());\n    validateStringNotEmpty(problems, prefix + \".url\", repository.getUrl(), repository.getId());\n    if (\"legacy\".equals(repository.getLayout())) {\n        addWarn(problems, (((\"'\" + prefix) + \".layout' for \") + repository.getId()) + \" uses the deprecated value 'legacy'.\");\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "If"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "ForEach",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "repository.getUrl()",
            "src_parent": "validateStringNotEmpty(problems, prefix + \".id\", repository.getId(), repository.getUrl())",
            "src_parent_type": "Invocation",
            "src_type": "Invocation"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "ForEach",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "repository.getId()",
            "src_parent": "validateStringNotEmpty(problems, prefix + \".url\", repository.getUrl(), repository.getId())",
            "src_parent_type": "Invocation",
            "src_type": "Invocation"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Method",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "private void addWarn(org.apache.maven.settings.building.SettingsProblemCollector problems, java.lang.String msg) {\n    problems.add(SettingsProblem.Severity.WARNING, msg, -1, -1, null);\n}",
            "dst_parent": "@org.codehaus.plexus.component.annotations.Component(role = org.apache.maven.settings.validation.SettingsValidator.class)\npublic class DefaultSettingsValidator implements org.apache.maven.settings.validation.SettingsValidator {\n    private static final java.lang.String ID_REGEX = \"[A-Za-z0-9_\\\\-.]+\";\n\n    public void validate(org.apache.maven.settings.Settings settings, org.apache.maven.settings.building.SettingsProblemCollector problems) {\n        if (settings.isUsePluginRegistry()) {\n            addWarn(problems, \"'usePluginRegistry' is deprecated and has no effect.\");\n        }\n        java.util.List<java.lang.String> pluginGroups = settings.getPluginGroups();\n        if (pluginGroups != null) {\n            for (int i = 0; i < pluginGroups.size(); i++) {\n                java.lang.String pluginGroup = pluginGroups.get(i).trim();\n                if (org.codehaus.plexus.util.StringUtils.isBlank(pluginGroup)) {\n                    addError(problems, (\"'pluginGroups.pluginGroup[\" + i) + \"]' must not be empty.\");\n                } else if (!pluginGroup.matches(org.apache.maven.settings.validation.DefaultSettingsValidator.ID_REGEX)) {\n                    addError(problems, ((\"'pluginGroups.pluginGroup[\" + i) + \"]' must denote a valid group id and match the pattern \") + org.apache.maven.settings.validation.DefaultSettingsValidator.ID_REGEX);\n                }\n            }\n        }\n        java.util.List<org.apache.maven.settings.Server> servers = settings.getServers();\n        if (servers != null) {\n            for (int i = 0; i < servers.size(); i++) {\n                org.apache.maven.settings.Server server = servers.get(i);\n                validateStringNotEmpty(problems, (\"servers.server[\" + i) + \"].id\", server.getId(), null);\n            }\n        }\n        java.util.List<org.apache.maven.settings.Mirror> mirrors = settings.getMirrors();\n        if (mirrors != null) {\n            for (org.apache.maven.settings.Mirror mirror : mirrors) {\n                validateStringNotEmpty(problems, \"mirrors.mirror.id\", mirror.getId(), mirror.getUrl());\n                validateStringNotEmpty(problems, \"mirrors.mirror.url\", mirror.getUrl(), mirror.getId());\n                validateStringNotEmpty(problems, \"mirrors.mirror.mirrorOf\", mirror.getMirrorOf(), mirror.getId());\n            }\n        }\n        java.util.List<org.apache.maven.settings.Profile> profiles = settings.getProfiles();\n        if (profiles != null) {\n            for (org.apache.maven.settings.Profile profile : profiles) {\n                validateRepositories(problems, profile.getRepositories(), \"repositories.repository\");\n                validateRepositories(problems, profile.getPluginRepositories(), \"pluginRepositories.pluginRepository\");\n            }\n        }\n    }\n\n    private void validateRepositories(org.apache.maven.settings.building.SettingsProblemCollector problems, java.util.List<org.apache.maven.settings.Repository> repositories, java.lang.String prefix) {\n        for (org.apache.maven.settings.Repository repository : repositories) {\n            validateStringNotEmpty(problems, prefix + \".id\", repository.getId(), repository.getUrl());\n            validateStringNotEmpty(problems, prefix + \".url\", repository.getUrl(), repository.getId());\n            if (\"legacy\".equals(repository.getLayout())) {\n                addWarn(problems, (((\"'\" + prefix) + \".layout' for \") + repository.getId()) + \" uses the deprecated value 'legacy'.\");\n            }\n        }\n    }\n\n    private boolean validateStringNotEmpty(org.apache.maven.settings.building.SettingsProblemCollector problems, java.lang.String fieldName, java.lang.String string, java.lang.String sourceHint) {\n        if (!validateNotNull(problems, fieldName, string, sourceHint)) {\n            return false;\n        }\n        if (string.length() > 0) {\n            return true;\n        }\n        java.lang.String msg;\n        if (sourceHint != null) {\n            msg = ((\"'\" + fieldName) + \"' is missing for \") + sourceHint;\n        } else {\n            msg = (\"'\" + fieldName) + \"' is missing.\";\n        }\n        addError(problems, msg);\n        return false;\n    }\n\n    private boolean validateNotNull(org.apache.maven.settings.building.SettingsProblemCollector problems, java.lang.String fieldName, java.lang.Object object, java.lang.String sourceHint) {\n        if (object != null) {\n            return true;\n        }\n        java.lang.String msg;\n        if (sourceHint != null) {\n            msg = ((\"'\" + fieldName) + \"' is missing for \") + sourceHint;\n        } else {\n            msg = (\"'\" + fieldName) + \"' is missing.\";\n        }\n        addError(problems, msg);\n        return false;\n    }\n\n    private void addError(org.apache.maven.settings.building.SettingsProblemCollector problems, java.lang.String msg) {\n        problems.add(SettingsProblem.Severity.ERROR, msg, -1, -1, null);\n    }\n\n    private void addWarn(org.apache.maven.settings.building.SettingsProblemCollector problems, java.lang.String msg) {\n        problems.add(SettingsProblem.Severity.WARNING, msg, -1, -1, null);\n    }\n}",
            "dst_parent_type": "Class",
            "dst_type": "Method",
            "operator": "MOV",
            "src": "private boolean validateStringNotEmpty(org.apache.maven.settings.building.SettingsProblemCollector problems, java.lang.String fieldName, java.lang.String string) {\n    return validateStringNotEmpty(problems, fieldName, string, null);\n}",
            "src_parent": "@org.codehaus.plexus.component.annotations.Component(role = org.apache.maven.settings.validation.SettingsValidator.class)\npublic class DefaultSettingsValidator implements org.apache.maven.settings.validation.SettingsValidator {\n    public void validate(org.apache.maven.settings.Settings settings, org.apache.maven.settings.building.SettingsProblemCollector problems) {\n        java.util.List<org.apache.maven.settings.Profile> profiles = settings.getProfiles();\n        if (profiles != null) {\n            for (org.apache.maven.settings.Profile prof : profiles) {\n                validateRepositories(problems, prof.getRepositories(), \"repositories.repository\");\n                validateRepositories(problems, prof.getPluginRepositories(), \"pluginRepositories.pluginRepository\");\n            }\n        }\n    }\n\n    private void validateRepositories(org.apache.maven.settings.building.SettingsProblemCollector problems, java.util.List<org.apache.maven.settings.Repository> repositories, java.lang.String prefix) {\n        for (org.apache.maven.settings.Repository repository : repositories) {\n            validateStringNotEmpty(problems, prefix + \".id\", repository.getId());\n            validateStringNotEmpty(problems, prefix + \".url\", repository.getUrl());\n        }\n    }\n\n    private boolean validateStringNotEmpty(org.apache.maven.settings.building.SettingsProblemCollector problems, java.lang.String fieldName, java.lang.String string) {\n        return validateStringNotEmpty(problems, fieldName, string, null);\n    }\n\n    private boolean validateStringNotEmpty(org.apache.maven.settings.building.SettingsProblemCollector problems, java.lang.String fieldName, java.lang.String string, java.lang.String sourceHint) {\n        if (!validateNotNull(problems, fieldName, string, sourceHint)) {\n            return false;\n        }\n        if (string.length() > 0) {\n            return true;\n        }\n        java.lang.String msg;\n        if (sourceHint != null) {\n            msg = ((\"'\" + fieldName) + \"' is missing for \") + sourceHint;\n        } else {\n            msg = (\"'\" + fieldName) + \"' is missing.\";\n        }\n        addError(problems, msg);\n        return false;\n    }\n\n    private boolean validateNotNull(org.apache.maven.settings.building.SettingsProblemCollector problems, java.lang.String fieldName, java.lang.Object object, java.lang.String sourceHint) {\n        if (object != null) {\n            return true;\n        }\n        java.lang.String msg;\n        if (sourceHint != null) {\n            msg = ((\"'\" + fieldName) + \"' is missing for \") + sourceHint;\n        } else {\n            msg = (\"'\" + fieldName) + \"' is missing.\";\n        }\n        addError(problems, msg);\n        return false;\n    }\n\n    private void addError(org.apache.maven.settings.building.SettingsProblemCollector problems, java.lang.String msg) {\n        problems.add(SettingsProblem.Severity.ERROR, msg, -1, -1, null);\n    }\n}",
            "src_parent_type": "Class",
            "src_type": "Method"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Return",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "problems",
            "dst_parent": "problems.add(SettingsProblem.Severity.WARNING, msg, -1, -1, null)",
            "dst_parent_type": "Invocation",
            "dst_type": "VariableRead",
            "operator": "MOV",
            "src": "problems",
            "src_parent": "validateStringNotEmpty(problems, fieldName, string, null)",
            "src_parent_type": "Invocation",
            "src_type": "VariableRead"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Return",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "msg",
            "dst_parent": "problems.add(SettingsProblem.Severity.WARNING, msg, -1, -1, null)",
            "dst_parent_type": "Invocation",
            "dst_type": "VariableRead",
            "operator": "MOV",
            "src": "string",
            "src_parent": "validateStringNotEmpty(problems, fieldName, string, null)",
            "src_parent_type": "Invocation",
            "src_type": "VariableRead"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Return",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "problems.add(SettingsProblem.Severity.WARNING, msg, -1, -1, null)",
            "dst_parent_type": "Invocation",
            "dst_type": "Literal",
            "operator": "MOV",
            "src": "null",
            "src_parent": "validateStringNotEmpty(problems, fieldName, string, null)",
            "src_parent_type": "Invocation",
            "src_type": "Literal"
          }
        }
      ],
      "file_name": "DefaultSettingsValidator"
    }
  ],
  "id": "maven_912a565f"
}