{
  "files": [
    {
      "features": [
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "true",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "messageBuffer.append((((((\"Inside the definition for plugin \\'\" + mojo.getPluginDescriptor().getArtifactId()) + \"\\', specify the following:\\n\\n<configuration>\\n  ...\\n  <\") + param.getName()) + \">VALUE</\") + param.getName()) + \">\\n</configuration>\")",
            "src_parent": "{\n    messageBuffer.append((((((\"Inside the definition for plugin \\'\" + mojo.getPluginDescriptor().getArtifactId()) + \"\\', specify the following:\\n\\n<configuration>\\n  ...\\n  <\") + param.getName()) + \">VALUE</\") + param.getName()) + \">\\n</configuration>\");\n    java.lang.String alias = param.getAlias();\n    if (org.codehaus.plexus.util.StringUtils.isNotEmpty(alias) && (!alias.equals(param.getName()))) {\n        messageBuffer.append((((\"\\n\\n-OR-\\n\\n<configuration>\\n  ...\\n  <\" + alias) + \">VALUE</\") + alias) + \">\\n</configuration>\\n\");\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "Invocation"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "true",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "boolean isArray = param.getType().endsWith(\"[]\")",
            "src_parent": "{\n    boolean isArray = param.getType().endsWith(\"[]\");\n    boolean isCollection = false;\n    boolean isMap = false;\n    if (!isArray) {\n        try {\n            isCollection = java.util.Collection.class.isAssignableFrom(java.lang.Class.forName(param.getType()));\n            isMap = java.util.Map.class.isAssignableFrom(java.lang.Class.forName(param.getType()));\n        } catch (java.lang.ClassNotFoundException e) {\n        }\n    }\n    messageBuffer.append(\"Inside the definition for plugin \\'\");\n    messageBuffer.append(mojo.getPluginDescriptor().getArtifactId());\n    messageBuffer.append(\"\\', specify the following:\\n\\n<configuration>\\n  ...\\n\");\n    messageBuffer.append(\"  <\").append(param.getName()).append('>');\n    if (isArray || isCollection) {\n        messageBuffer.append('\\n');\n        messageBuffer.append(\"    <item>\");\n    } else if (isMap) {\n        messageBuffer.append('\\n');\n        messageBuffer.append(\"    <KEY>\");\n    }\n    messageBuffer.append(\"VALUE\");\n    if (isArray || isCollection) {\n        messageBuffer.append(\"</item>\\n\");\n        messageBuffer.append(\"  \");\n    } else if (isMap) {\n        messageBuffer.append(\"</KEY>\\n\");\n        messageBuffer.append(\"  \");\n    }\n    messageBuffer.append(\"</\").append(param.getName()).append(\">\\n\");\n    messageBuffer.append(\"</configuration>\");\n    java.lang.String alias = param.getAlias();\n    if (org.codehaus.plexus.util.StringUtils.isNotEmpty(alias) && (!alias.equals(param.getName()))) {\n        messageBuffer.append((((\"\\n\\n-OR-\\n\\n<configuration>\\n  ...\\n  <\" + alias) + \">VALUE</\") + alias) + \">\\n</configuration>\\n\");\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "LocalVariable"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "true",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "boolean isCollection = false",
            "src_parent": "{\n    boolean isArray = param.getType().endsWith(\"[]\");\n    boolean isCollection = false;\n    boolean isMap = false;\n    if (!isArray) {\n        try {\n            isCollection = java.util.Collection.class.isAssignableFrom(java.lang.Class.forName(param.getType()));\n            isMap = java.util.Map.class.isAssignableFrom(java.lang.Class.forName(param.getType()));\n        } catch (java.lang.ClassNotFoundException e) {\n        }\n    }\n    messageBuffer.append(\"Inside the definition for plugin \\'\");\n    messageBuffer.append(mojo.getPluginDescriptor().getArtifactId());\n    messageBuffer.append(\"\\', specify the following:\\n\\n<configuration>\\n  ...\\n\");\n    messageBuffer.append(\"  <\").append(param.getName()).append('>');\n    if (isArray || isCollection) {\n        messageBuffer.append('\\n');\n        messageBuffer.append(\"    <item>\");\n    } else if (isMap) {\n        messageBuffer.append('\\n');\n        messageBuffer.append(\"    <KEY>\");\n    }\n    messageBuffer.append(\"VALUE\");\n    if (isArray || isCollection) {\n        messageBuffer.append(\"</item>\\n\");\n        messageBuffer.append(\"  \");\n    } else if (isMap) {\n        messageBuffer.append(\"</KEY>\\n\");\n        messageBuffer.append(\"  \");\n    }\n    messageBuffer.append(\"</\").append(param.getName()).append(\">\\n\");\n    messageBuffer.append(\"</configuration>\");\n    java.lang.String alias = param.getAlias();\n    if (org.codehaus.plexus.util.StringUtils.isNotEmpty(alias) && (!alias.equals(param.getName()))) {\n        messageBuffer.append((((\"\\n\\n-OR-\\n\\n<configuration>\\n  ...\\n  <\" + alias) + \">VALUE</\") + alias) + \">\\n</configuration>\\n\");\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "LocalVariable"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "true",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "boolean isMap = false",
            "src_parent": "{\n    boolean isArray = param.getType().endsWith(\"[]\");\n    boolean isCollection = false;\n    boolean isMap = false;\n    if (!isArray) {\n        try {\n            isCollection = java.util.Collection.class.isAssignableFrom(java.lang.Class.forName(param.getType()));\n            isMap = java.util.Map.class.isAssignableFrom(java.lang.Class.forName(param.getType()));\n        } catch (java.lang.ClassNotFoundException e) {\n        }\n    }\n    messageBuffer.append(\"Inside the definition for plugin \\'\");\n    messageBuffer.append(mojo.getPluginDescriptor().getArtifactId());\n    messageBuffer.append(\"\\', specify the following:\\n\\n<configuration>\\n  ...\\n\");\n    messageBuffer.append(\"  <\").append(param.getName()).append('>');\n    if (isArray || isCollection) {\n        messageBuffer.append('\\n');\n        messageBuffer.append(\"    <item>\");\n    } else if (isMap) {\n        messageBuffer.append('\\n');\n        messageBuffer.append(\"    <KEY>\");\n    }\n    messageBuffer.append(\"VALUE\");\n    if (isArray || isCollection) {\n        messageBuffer.append(\"</item>\\n\");\n        messageBuffer.append(\"  \");\n    } else if (isMap) {\n        messageBuffer.append(\"</KEY>\\n\");\n        messageBuffer.append(\"  \");\n    }\n    messageBuffer.append(\"</\").append(param.getName()).append(\">\\n\");\n    messageBuffer.append(\"</configuration>\");\n    java.lang.String alias = param.getAlias();\n    if (org.codehaus.plexus.util.StringUtils.isNotEmpty(alias) && (!alias.equals(param.getName()))) {\n        messageBuffer.append((((\"\\n\\n-OR-\\n\\n<configuration>\\n  ...\\n  <\" + alias) + \">VALUE</\") + alias) + \">\\n</configuration>\\n\");\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "LocalVariable"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "true",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "if (!isArray) {\n    try {\n        isCollection = java.util.Collection.class.isAssignableFrom(java.lang.Class.forName(param.getType()));\n        isMap = java.util.Map.class.isAssignableFrom(java.lang.Class.forName(param.getType()));\n    } catch (java.lang.ClassNotFoundException e) {\n    }\n}",
            "src_parent": "{\n    boolean isArray = param.getType().endsWith(\"[]\");\n    boolean isCollection = false;\n    boolean isMap = false;\n    if (!isArray) {\n        try {\n            isCollection = java.util.Collection.class.isAssignableFrom(java.lang.Class.forName(param.getType()));\n            isMap = java.util.Map.class.isAssignableFrom(java.lang.Class.forName(param.getType()));\n        } catch (java.lang.ClassNotFoundException e) {\n        }\n    }\n    messageBuffer.append(\"Inside the definition for plugin \\'\");\n    messageBuffer.append(mojo.getPluginDescriptor().getArtifactId());\n    messageBuffer.append(\"\\', specify the following:\\n\\n<configuration>\\n  ...\\n\");\n    messageBuffer.append(\"  <\").append(param.getName()).append('>');\n    if (isArray || isCollection) {\n        messageBuffer.append('\\n');\n        messageBuffer.append(\"    <item>\");\n    } else if (isMap) {\n        messageBuffer.append('\\n');\n        messageBuffer.append(\"    <KEY>\");\n    }\n    messageBuffer.append(\"VALUE\");\n    if (isArray || isCollection) {\n        messageBuffer.append(\"</item>\\n\");\n        messageBuffer.append(\"  \");\n    } else if (isMap) {\n        messageBuffer.append(\"</KEY>\\n\");\n        messageBuffer.append(\"  \");\n    }\n    messageBuffer.append(\"</\").append(param.getName()).append(\">\\n\");\n    messageBuffer.append(\"</configuration>\");\n    java.lang.String alias = param.getAlias();\n    if (org.codehaus.plexus.util.StringUtils.isNotEmpty(alias) && (!alias.equals(param.getName()))) {\n        messageBuffer.append((((\"\\n\\n-OR-\\n\\n<configuration>\\n  ...\\n  <\" + alias) + \">VALUE</\") + alias) + \">\\n</configuration>\\n\");\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "If"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "true",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "messageBuffer.append(\"Inside the definition for plugin \\'\")",
            "src_parent": "{\n    boolean isArray = param.getType().endsWith(\"[]\");\n    boolean isCollection = false;\n    boolean isMap = false;\n    if (!isArray) {\n        try {\n            isCollection = java.util.Collection.class.isAssignableFrom(java.lang.Class.forName(param.getType()));\n            isMap = java.util.Map.class.isAssignableFrom(java.lang.Class.forName(param.getType()));\n        } catch (java.lang.ClassNotFoundException e) {\n        }\n    }\n    messageBuffer.append(\"Inside the definition for plugin \\'\");\n    messageBuffer.append(mojo.getPluginDescriptor().getArtifactId());\n    messageBuffer.append(\"\\', specify the following:\\n\\n<configuration>\\n  ...\\n\");\n    messageBuffer.append(\"  <\").append(param.getName()).append('>');\n    if (isArray || isCollection) {\n        messageBuffer.append('\\n');\n        messageBuffer.append(\"    <item>\");\n    } else if (isMap) {\n        messageBuffer.append('\\n');\n        messageBuffer.append(\"    <KEY>\");\n    }\n    messageBuffer.append(\"VALUE\");\n    if (isArray || isCollection) {\n        messageBuffer.append(\"</item>\\n\");\n        messageBuffer.append(\"  \");\n    } else if (isMap) {\n        messageBuffer.append(\"</KEY>\\n\");\n        messageBuffer.append(\"  \");\n    }\n    messageBuffer.append(\"</\").append(param.getName()).append(\">\\n\");\n    messageBuffer.append(\"</configuration>\");\n    java.lang.String alias = param.getAlias();\n    if (org.codehaus.plexus.util.StringUtils.isNotEmpty(alias) && (!alias.equals(param.getName()))) {\n        messageBuffer.append((((\"\\n\\n-OR-\\n\\n<configuration>\\n  ...\\n  <\" + alias) + \">VALUE</\") + alias) + \">\\n</configuration>\\n\");\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "Invocation"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "true",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "messageBuffer.append(mojo.getPluginDescriptor().getArtifactId())",
            "src_parent": "{\n    boolean isArray = param.getType().endsWith(\"[]\");\n    boolean isCollection = false;\n    boolean isMap = false;\n    if (!isArray) {\n        try {\n            isCollection = java.util.Collection.class.isAssignableFrom(java.lang.Class.forName(param.getType()));\n            isMap = java.util.Map.class.isAssignableFrom(java.lang.Class.forName(param.getType()));\n        } catch (java.lang.ClassNotFoundException e) {\n        }\n    }\n    messageBuffer.append(\"Inside the definition for plugin \\'\");\n    messageBuffer.append(mojo.getPluginDescriptor().getArtifactId());\n    messageBuffer.append(\"\\', specify the following:\\n\\n<configuration>\\n  ...\\n\");\n    messageBuffer.append(\"  <\").append(param.getName()).append('>');\n    if (isArray || isCollection) {\n        messageBuffer.append('\\n');\n        messageBuffer.append(\"    <item>\");\n    } else if (isMap) {\n        messageBuffer.append('\\n');\n        messageBuffer.append(\"    <KEY>\");\n    }\n    messageBuffer.append(\"VALUE\");\n    if (isArray || isCollection) {\n        messageBuffer.append(\"</item>\\n\");\n        messageBuffer.append(\"  \");\n    } else if (isMap) {\n        messageBuffer.append(\"</KEY>\\n\");\n        messageBuffer.append(\"  \");\n    }\n    messageBuffer.append(\"</\").append(param.getName()).append(\">\\n\");\n    messageBuffer.append(\"</configuration>\");\n    java.lang.String alias = param.getAlias();\n    if (org.codehaus.plexus.util.StringUtils.isNotEmpty(alias) && (!alias.equals(param.getName()))) {\n        messageBuffer.append((((\"\\n\\n-OR-\\n\\n<configuration>\\n  ...\\n  <\" + alias) + \">VALUE</\") + alias) + \">\\n</configuration>\\n\");\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "Invocation"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "true",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "messageBuffer.append(\"\\', specify the following:\\n\\n<configuration>\\n  ...\\n\")",
            "src_parent": "{\n    boolean isArray = param.getType().endsWith(\"[]\");\n    boolean isCollection = false;\n    boolean isMap = false;\n    if (!isArray) {\n        try {\n            isCollection = java.util.Collection.class.isAssignableFrom(java.lang.Class.forName(param.getType()));\n            isMap = java.util.Map.class.isAssignableFrom(java.lang.Class.forName(param.getType()));\n        } catch (java.lang.ClassNotFoundException e) {\n        }\n    }\n    messageBuffer.append(\"Inside the definition for plugin \\'\");\n    messageBuffer.append(mojo.getPluginDescriptor().getArtifactId());\n    messageBuffer.append(\"\\', specify the following:\\n\\n<configuration>\\n  ...\\n\");\n    messageBuffer.append(\"  <\").append(param.getName()).append('>');\n    if (isArray || isCollection) {\n        messageBuffer.append('\\n');\n        messageBuffer.append(\"    <item>\");\n    } else if (isMap) {\n        messageBuffer.append('\\n');\n        messageBuffer.append(\"    <KEY>\");\n    }\n    messageBuffer.append(\"VALUE\");\n    if (isArray || isCollection) {\n        messageBuffer.append(\"</item>\\n\");\n        messageBuffer.append(\"  \");\n    } else if (isMap) {\n        messageBuffer.append(\"</KEY>\\n\");\n        messageBuffer.append(\"  \");\n    }\n    messageBuffer.append(\"</\").append(param.getName()).append(\">\\n\");\n    messageBuffer.append(\"</configuration>\");\n    java.lang.String alias = param.getAlias();\n    if (org.codehaus.plexus.util.StringUtils.isNotEmpty(alias) && (!alias.equals(param.getName()))) {\n        messageBuffer.append((((\"\\n\\n-OR-\\n\\n<configuration>\\n  ...\\n  <\" + alias) + \">VALUE</\") + alias) + \">\\n</configuration>\\n\");\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "Invocation"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "true",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "messageBuffer.append(\"  <\").append(param.getName()).append('>')",
            "src_parent": "{\n    boolean isArray = param.getType().endsWith(\"[]\");\n    boolean isCollection = false;\n    boolean isMap = false;\n    if (!isArray) {\n        try {\n            isCollection = java.util.Collection.class.isAssignableFrom(java.lang.Class.forName(param.getType()));\n            isMap = java.util.Map.class.isAssignableFrom(java.lang.Class.forName(param.getType()));\n        } catch (java.lang.ClassNotFoundException e) {\n        }\n    }\n    messageBuffer.append(\"Inside the definition for plugin \\'\");\n    messageBuffer.append(mojo.getPluginDescriptor().getArtifactId());\n    messageBuffer.append(\"\\', specify the following:\\n\\n<configuration>\\n  ...\\n\");\n    messageBuffer.append(\"  <\").append(param.getName()).append('>');\n    if (isArray || isCollection) {\n        messageBuffer.append('\\n');\n        messageBuffer.append(\"    <item>\");\n    } else if (isMap) {\n        messageBuffer.append('\\n');\n        messageBuffer.append(\"    <KEY>\");\n    }\n    messageBuffer.append(\"VALUE\");\n    if (isArray || isCollection) {\n        messageBuffer.append(\"</item>\\n\");\n        messageBuffer.append(\"  \");\n    } else if (isMap) {\n        messageBuffer.append(\"</KEY>\\n\");\n        messageBuffer.append(\"  \");\n    }\n    messageBuffer.append(\"</\").append(param.getName()).append(\">\\n\");\n    messageBuffer.append(\"</configuration>\");\n    java.lang.String alias = param.getAlias();\n    if (org.codehaus.plexus.util.StringUtils.isNotEmpty(alias) && (!alias.equals(param.getName()))) {\n        messageBuffer.append((((\"\\n\\n-OR-\\n\\n<configuration>\\n  ...\\n  <\" + alias) + \">VALUE</\") + alias) + \">\\n</configuration>\\n\");\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "Invocation"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "true",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "if (isArray || isCollection) {\n    messageBuffer.append('\\n');\n    messageBuffer.append(\"    <item>\");\n} else if (isMap) {\n    messageBuffer.append('\\n');\n    messageBuffer.append(\"    <KEY>\");\n}",
            "src_parent": "{\n    boolean isArray = param.getType().endsWith(\"[]\");\n    boolean isCollection = false;\n    boolean isMap = false;\n    if (!isArray) {\n        try {\n            isCollection = java.util.Collection.class.isAssignableFrom(java.lang.Class.forName(param.getType()));\n            isMap = java.util.Map.class.isAssignableFrom(java.lang.Class.forName(param.getType()));\n        } catch (java.lang.ClassNotFoundException e) {\n        }\n    }\n    messageBuffer.append(\"Inside the definition for plugin \\'\");\n    messageBuffer.append(mojo.getPluginDescriptor().getArtifactId());\n    messageBuffer.append(\"\\', specify the following:\\n\\n<configuration>\\n  ...\\n\");\n    messageBuffer.append(\"  <\").append(param.getName()).append('>');\n    if (isArray || isCollection) {\n        messageBuffer.append('\\n');\n        messageBuffer.append(\"    <item>\");\n    } else if (isMap) {\n        messageBuffer.append('\\n');\n        messageBuffer.append(\"    <KEY>\");\n    }\n    messageBuffer.append(\"VALUE\");\n    if (isArray || isCollection) {\n        messageBuffer.append(\"</item>\\n\");\n        messageBuffer.append(\"  \");\n    } else if (isMap) {\n        messageBuffer.append(\"</KEY>\\n\");\n        messageBuffer.append(\"  \");\n    }\n    messageBuffer.append(\"</\").append(param.getName()).append(\">\\n\");\n    messageBuffer.append(\"</configuration>\");\n    java.lang.String alias = param.getAlias();\n    if (org.codehaus.plexus.util.StringUtils.isNotEmpty(alias) && (!alias.equals(param.getName()))) {\n        messageBuffer.append((((\"\\n\\n-OR-\\n\\n<configuration>\\n  ...\\n  <\" + alias) + \">VALUE</\") + alias) + \">\\n</configuration>\\n\");\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "If"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "true",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "messageBuffer.append(\"VALUE\")",
            "src_parent": "{\n    boolean isArray = param.getType().endsWith(\"[]\");\n    boolean isCollection = false;\n    boolean isMap = false;\n    if (!isArray) {\n        try {\n            isCollection = java.util.Collection.class.isAssignableFrom(java.lang.Class.forName(param.getType()));\n            isMap = java.util.Map.class.isAssignableFrom(java.lang.Class.forName(param.getType()));\n        } catch (java.lang.ClassNotFoundException e) {\n        }\n    }\n    messageBuffer.append(\"Inside the definition for plugin \\'\");\n    messageBuffer.append(mojo.getPluginDescriptor().getArtifactId());\n    messageBuffer.append(\"\\', specify the following:\\n\\n<configuration>\\n  ...\\n\");\n    messageBuffer.append(\"  <\").append(param.getName()).append('>');\n    if (isArray || isCollection) {\n        messageBuffer.append('\\n');\n        messageBuffer.append(\"    <item>\");\n    } else if (isMap) {\n        messageBuffer.append('\\n');\n        messageBuffer.append(\"    <KEY>\");\n    }\n    messageBuffer.append(\"VALUE\");\n    if (isArray || isCollection) {\n        messageBuffer.append(\"</item>\\n\");\n        messageBuffer.append(\"  \");\n    } else if (isMap) {\n        messageBuffer.append(\"</KEY>\\n\");\n        messageBuffer.append(\"  \");\n    }\n    messageBuffer.append(\"</\").append(param.getName()).append(\">\\n\");\n    messageBuffer.append(\"</configuration>\");\n    java.lang.String alias = param.getAlias();\n    if (org.codehaus.plexus.util.StringUtils.isNotEmpty(alias) && (!alias.equals(param.getName()))) {\n        messageBuffer.append((((\"\\n\\n-OR-\\n\\n<configuration>\\n  ...\\n  <\" + alias) + \">VALUE</\") + alias) + \">\\n</configuration>\\n\");\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "Invocation"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "true",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "if (isArray || isCollection) {\n    messageBuffer.append(\"</item>\\n\");\n    messageBuffer.append(\"  \");\n} else if (isMap) {\n    messageBuffer.append(\"</KEY>\\n\");\n    messageBuffer.append(\"  \");\n}",
            "src_parent": "{\n    boolean isArray = param.getType().endsWith(\"[]\");\n    boolean isCollection = false;\n    boolean isMap = false;\n    if (!isArray) {\n        try {\n            isCollection = java.util.Collection.class.isAssignableFrom(java.lang.Class.forName(param.getType()));\n            isMap = java.util.Map.class.isAssignableFrom(java.lang.Class.forName(param.getType()));\n        } catch (java.lang.ClassNotFoundException e) {\n        }\n    }\n    messageBuffer.append(\"Inside the definition for plugin \\'\");\n    messageBuffer.append(mojo.getPluginDescriptor().getArtifactId());\n    messageBuffer.append(\"\\', specify the following:\\n\\n<configuration>\\n  ...\\n\");\n    messageBuffer.append(\"  <\").append(param.getName()).append('>');\n    if (isArray || isCollection) {\n        messageBuffer.append('\\n');\n        messageBuffer.append(\"    <item>\");\n    } else if (isMap) {\n        messageBuffer.append('\\n');\n        messageBuffer.append(\"    <KEY>\");\n    }\n    messageBuffer.append(\"VALUE\");\n    if (isArray || isCollection) {\n        messageBuffer.append(\"</item>\\n\");\n        messageBuffer.append(\"  \");\n    } else if (isMap) {\n        messageBuffer.append(\"</KEY>\\n\");\n        messageBuffer.append(\"  \");\n    }\n    messageBuffer.append(\"</\").append(param.getName()).append(\">\\n\");\n    messageBuffer.append(\"</configuration>\");\n    java.lang.String alias = param.getAlias();\n    if (org.codehaus.plexus.util.StringUtils.isNotEmpty(alias) && (!alias.equals(param.getName()))) {\n        messageBuffer.append((((\"\\n\\n-OR-\\n\\n<configuration>\\n  ...\\n  <\" + alias) + \">VALUE</\") + alias) + \">\\n</configuration>\\n\");\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "If"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "true",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "messageBuffer.append(\"</\").append(param.getName()).append(\">\\n\")",
            "src_parent": "{\n    boolean isArray = param.getType().endsWith(\"[]\");\n    boolean isCollection = false;\n    boolean isMap = false;\n    if (!isArray) {\n        try {\n            isCollection = java.util.Collection.class.isAssignableFrom(java.lang.Class.forName(param.getType()));\n            isMap = java.util.Map.class.isAssignableFrom(java.lang.Class.forName(param.getType()));\n        } catch (java.lang.ClassNotFoundException e) {\n        }\n    }\n    messageBuffer.append(\"Inside the definition for plugin \\'\");\n    messageBuffer.append(mojo.getPluginDescriptor().getArtifactId());\n    messageBuffer.append(\"\\', specify the following:\\n\\n<configuration>\\n  ...\\n\");\n    messageBuffer.append(\"  <\").append(param.getName()).append('>');\n    if (isArray || isCollection) {\n        messageBuffer.append('\\n');\n        messageBuffer.append(\"    <item>\");\n    } else if (isMap) {\n        messageBuffer.append('\\n');\n        messageBuffer.append(\"    <KEY>\");\n    }\n    messageBuffer.append(\"VALUE\");\n    if (isArray || isCollection) {\n        messageBuffer.append(\"</item>\\n\");\n        messageBuffer.append(\"  \");\n    } else if (isMap) {\n        messageBuffer.append(\"</KEY>\\n\");\n        messageBuffer.append(\"  \");\n    }\n    messageBuffer.append(\"</\").append(param.getName()).append(\">\\n\");\n    messageBuffer.append(\"</configuration>\");\n    java.lang.String alias = param.getAlias();\n    if (org.codehaus.plexus.util.StringUtils.isNotEmpty(alias) && (!alias.equals(param.getName()))) {\n        messageBuffer.append((((\"\\n\\n-OR-\\n\\n<configuration>\\n  ...\\n  <\" + alias) + \">VALUE</\") + alias) + \">\\n</configuration>\\n\");\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "Invocation"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "true",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "messageBuffer.append(\"</configuration>\")",
            "src_parent": "{\n    boolean isArray = param.getType().endsWith(\"[]\");\n    boolean isCollection = false;\n    boolean isMap = false;\n    if (!isArray) {\n        try {\n            isCollection = java.util.Collection.class.isAssignableFrom(java.lang.Class.forName(param.getType()));\n            isMap = java.util.Map.class.isAssignableFrom(java.lang.Class.forName(param.getType()));\n        } catch (java.lang.ClassNotFoundException e) {\n        }\n    }\n    messageBuffer.append(\"Inside the definition for plugin \\'\");\n    messageBuffer.append(mojo.getPluginDescriptor().getArtifactId());\n    messageBuffer.append(\"\\', specify the following:\\n\\n<configuration>\\n  ...\\n\");\n    messageBuffer.append(\"  <\").append(param.getName()).append('>');\n    if (isArray || isCollection) {\n        messageBuffer.append('\\n');\n        messageBuffer.append(\"    <item>\");\n    } else if (isMap) {\n        messageBuffer.append('\\n');\n        messageBuffer.append(\"    <KEY>\");\n    }\n    messageBuffer.append(\"VALUE\");\n    if (isArray || isCollection) {\n        messageBuffer.append(\"</item>\\n\");\n        messageBuffer.append(\"  \");\n    } else if (isMap) {\n        messageBuffer.append(\"</KEY>\\n\");\n        messageBuffer.append(\"  \");\n    }\n    messageBuffer.append(\"</\").append(param.getName()).append(\">\\n\");\n    messageBuffer.append(\"</configuration>\");\n    java.lang.String alias = param.getAlias();\n    if (org.codehaus.plexus.util.StringUtils.isNotEmpty(alias) && (!alias.equals(param.getName()))) {\n        messageBuffer.append((((\"\\n\\n-OR-\\n\\n<configuration>\\n  ...\\n  <\" + alias) + \">VALUE</\") + alias) + \">\\n</configuration>\\n\");\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "Invocation"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "true",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Invocation",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "messageBuffer",
            "dst_parent": "messageBuffer.append(\"Inside the definition for plugin \\'\")",
            "dst_parent_type": "Invocation",
            "dst_type": "VariableRead",
            "operator": "MOV",
            "src": "messageBuffer",
            "src_parent": "messageBuffer.append((((((\"Inside the definition for plugin \\'\" + mojo.getPluginDescriptor().getArtifactId()) + \"\\', specify the following:\\n\\n<configuration>\\n  ...\\n  <\") + param.getName()) + \">VALUE</\") + param.getName()) + \">\\n</configuration>\")",
            "src_parent_type": "Invocation",
            "src_type": "VariableRead"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "true",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Invocation",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "mojo.getPluginDescriptor().getArtifactId()",
            "dst_parent": "messageBuffer.append(mojo.getPluginDescriptor().getArtifactId())",
            "dst_parent_type": "Invocation",
            "dst_type": "Invocation",
            "operator": "MOV",
            "src": "mojo.getPluginDescriptor().getArtifactId()",
            "src_parent": "(\"Inside the definition for plugin \\'\" + mojo.getPluginDescriptor().getArtifactId())",
            "src_parent_type": "BinaryOperator",
            "src_type": "Invocation"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "true",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Invocation",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "param.getName()",
            "dst_parent": "messageBuffer.append(\"  <\").append(param.getName())",
            "dst_parent_type": "Invocation",
            "dst_type": "Invocation",
            "operator": "MOV",
            "src": "param.getName()",
            "src_parent": "(((((\"Inside the definition for plugin \\'\" + mojo.getPluginDescriptor().getArtifactId()) + \"\\', specify the following:\\n\\n<configuration>\\n  ...\\n  <\") + param.getName()) + \">VALUE</\") + param.getName())",
            "src_parent_type": "BinaryOperator",
            "src_type": "Invocation"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "true",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Invocation",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "param.getName()",
            "dst_parent": "messageBuffer.append(\"</\").append(param.getName())",
            "dst_parent_type": "Invocation",
            "dst_type": "Invocation",
            "operator": "MOV",
            "src": "param.getName()",
            "src_parent": "(((\"Inside the definition for plugin \\'\" + mojo.getPluginDescriptor().getArtifactId()) + \"\\', specify the following:\\n\\n<configuration>\\n  ...\\n  <\") + param.getName())",
            "src_parent_type": "BinaryOperator",
            "src_type": "Invocation"
          }
        }
      ],
      "file_name": "PluginParameterException"
    }
  ],
  "id": "maven_56cd921f"
}