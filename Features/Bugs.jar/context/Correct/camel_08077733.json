{
  "files": [
    {
      "features": [
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Try",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "true",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Invocation",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "org.apache.camel.util.ServiceHelper.stopAndShutdownService(statistics)",
            "dst_parent": "{\n    org.apache.camel.util.ServiceHelper.stopAndShutdownService(statistics);\n    if (stopServicePool) {\n        org.apache.camel.util.ServiceHelper.stopAndShutdownService(pool);\n    }\n    try {\n        org.apache.camel.util.ServiceHelper.stopAndShutdownServices(producers.values());\n    } finally {\n        for (org.apache.camel.Producer producer : producers.values()) {\n            getCamelContext().removeService(producer);\n        }\n    }\n    producers.clear();\n    if (statistics != null) {\n        statistics.clear();\n    }\n}",
            "dst_parent_type": "Block",
            "dst_type": "Invocation",
            "operator": "UPD",
            "src": "org.apache.camel.util.ServiceHelper.stopAndShutdownServices(statistics, pool)",
            "src_parent": "{\n    org.apache.camel.util.ServiceHelper.stopAndShutdownServices(statistics, pool);\n    try {\n        org.apache.camel.util.ServiceHelper.stopAndShutdownServices(producers.values());\n    } finally {\n        for (org.apache.camel.Producer producer : producers.values()) {\n            getCamelContext().removeService(producer);\n        }\n    }\n    producers.clear();\n    if (statistics != null) {\n        statistics.clear();\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "Invocation"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Constructor",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Invocation",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "camelContext.getProducerServicePool()",
            "src_parent": "this(source, camelContext, camelContext.getProducerServicePool(), org.apache.camel.impl.ProducerCache.createLRUCache(cacheSize))",
            "src_parent_type": "Invocation",
            "src_type": "Invocation"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Package",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "true",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Class",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "private boolean stopServicePool;",
            "src_parent": "public class ProducerCache extends org.apache.camel.support.ServiceSupport {\n    private static final org.slf4j.Logger LOG = org.slf4j.LoggerFactory.getLogger(org.apache.camel.impl.ProducerCache.class);\n\n    private final org.apache.camel.CamelContext camelContext;\n\n    private final org.apache.camel.spi.ServicePool<org.apache.camel.Endpoint, org.apache.camel.Producer> pool;\n\n    private final java.util.Map<java.lang.String, org.apache.camel.Producer> producers;\n\n    private final java.lang.Object source;\n\n    private org.apache.camel.spi.EndpointUtilizationStatistics statistics;\n\n    private boolean eventNotifierEnabled = true;\n\n    private boolean extendedStatistics;\n\n    private int maxCacheSize;\n\n    private boolean stopServicePool;\n\n    public ProducerCache(java.lang.Object source, org.apache.camel.CamelContext camelContext) {\n        this(source, camelContext, org.apache.camel.util.CamelContextHelper.getMaximumCachePoolSize(camelContext));\n    }\n\n    public ProducerCache(java.lang.Object source, org.apache.camel.CamelContext camelContext, int cacheSize) {\n        this(source, camelContext, null, org.apache.camel.impl.ProducerCache.createLRUCache(cacheSize));\n    }\n\n    public ProducerCache(java.lang.Object source, org.apache.camel.CamelContext camelContext, java.util.Map<java.lang.String, org.apache.camel.Producer> cache) {\n        this(source, camelContext, null, cache);\n    }\n\n    public ProducerCache(java.lang.Object source, org.apache.camel.CamelContext camelContext, org.apache.camel.spi.ServicePool<org.apache.camel.Endpoint, org.apache.camel.Producer> producerServicePool, java.util.Map<java.lang.String, org.apache.camel.Producer> cache) {\n        this.source = source;\n        this.camelContext = camelContext;\n        if (producerServicePool == null) {\n            this.pool = camelContext.getProducerServicePool();\n            this.stopServicePool = false;\n        } else {\n            this.pool = producerServicePool;\n            this.stopServicePool = true;\n        }\n        this.producers = cache;\n        if (producers instanceof org.apache.camel.util.LRUCache) {\n            maxCacheSize = ((org.apache.camel.util.LRUCache) (producers)).getMaxCacheSize();\n        }\n        if (camelContext.getManagementStrategy().getManagementAgent() != null) {\n            this.extendedStatistics = camelContext.getManagementStrategy().getManagementAgent().getStatisticsLevel().isExtended();\n        } else {\n            this.extendedStatistics = false;\n        }\n    }\n\n    public boolean isEventNotifierEnabled() {\n        return eventNotifierEnabled;\n    }\n\n    public void setEventNotifierEnabled(boolean eventNotifierEnabled) {\n        this.eventNotifierEnabled = eventNotifierEnabled;\n    }\n\n    public boolean isExtendedStatistics() {\n        return extendedStatistics;\n    }\n\n    public void setExtendedStatistics(boolean extendedStatistics) {\n        this.extendedStatistics = extendedStatistics;\n    }\n\n    protected static org.apache.camel.util.LRUCache<java.lang.String, org.apache.camel.Producer> createLRUCache(int cacheSize) {\n        return new org.apache.camel.util.LRUCache<java.lang.String, org.apache.camel.Producer>(cacheSize);\n    }\n\n    public org.apache.camel.CamelContext getCamelContext() {\n        return camelContext;\n    }\n\n    public java.lang.Object getSource() {\n        return source;\n    }\n\n    public org.apache.camel.Producer acquireProducer(org.apache.camel.Endpoint endpoint) {\n        return doGetProducer(endpoint, true);\n    }\n\n    public void releaseProducer(org.apache.camel.Endpoint endpoint, org.apache.camel.Producer producer) throws java.lang.Exception {\n        if (producer instanceof org.apache.camel.ServicePoolAware) {\n            pool.release(endpoint, producer);\n        } else if (!producer.isSingleton()) {\n            org.apache.camel.util.ServiceHelper.stopAndShutdownService(producer);\n        }\n    }\n\n    public void startProducer(org.apache.camel.Endpoint endpoint) throws java.lang.Exception {\n        org.apache.camel.Producer producer = acquireProducer(endpoint);\n        releaseProducer(endpoint, producer);\n    }\n\n    public void send(org.apache.camel.Endpoint endpoint, org.apache.camel.Exchange exchange) {\n        sendExchange(endpoint, null, null, exchange);\n    }\n\n    public org.apache.camel.Exchange send(org.apache.camel.Endpoint endpoint, org.apache.camel.Processor processor) {\n        return sendExchange(endpoint, null, processor, null);\n    }\n\n    public org.apache.camel.Exchange send(org.apache.camel.Endpoint endpoint, org.apache.camel.ExchangePattern pattern, org.apache.camel.Processor processor) {\n        return sendExchange(endpoint, pattern, processor, null);\n    }\n\n    public <T> T doInProducer(org.apache.camel.Endpoint endpoint, org.apache.camel.Exchange exchange, org.apache.camel.ExchangePattern pattern, org.apache.camel.ProducerCallback<T> callback) {\n        T answer = null;\n        org.apache.camel.Producer producer = doGetProducer(endpoint, true);\n        if (producer == null) {\n            if (isStopped()) {\n                org.apache.camel.impl.ProducerCache.LOG.warn(\"Ignoring exchange sent after processor is stopped: \" + exchange);\n                return null;\n            } else {\n                throw new java.lang.IllegalStateException(\"No producer, this processor has not been started: \" + this);\n            }\n        }\n        try {\n            answer = callback.doInProducer(producer, exchange, pattern);\n        } catch (java.lang.Throwable e) {\n            if (exchange != null) {\n                exchange.setException(e);\n            }\n        } finally {\n            if (producer instanceof org.apache.camel.ServicePoolAware) {\n                pool.release(endpoint, producer);\n            } else if (!producer.isSingleton()) {\n                try {\n                    org.apache.camel.util.ServiceHelper.stopAndShutdownService(producer);\n                } catch (java.lang.Exception e) {\n                    org.apache.camel.impl.ProducerCache.LOG.warn(\"Error stopping/shutting down producer: \" + producer, e);\n                }\n            }\n        }\n        return answer;\n    }\n\n    public boolean doInAsyncProducer(final org.apache.camel.Endpoint endpoint, final org.apache.camel.Exchange exchange, final org.apache.camel.ExchangePattern pattern, final org.apache.camel.AsyncCallback callback, final org.apache.camel.AsyncProducerCallback producerCallback) {\n        org.apache.camel.Producer target;\n        try {\n            target = doGetProducer(endpoint, true);\n            if (target == null) {\n                if (isStopped()) {\n                    org.apache.camel.impl.ProducerCache.LOG.warn(\"Ignoring exchange sent after processor is stopped: \" + exchange);\n                    callback.done(true);\n                    return true;\n                } else {\n                    exchange.setException(new java.lang.IllegalStateException(\"No producer, this processor has not been started: \" + this));\n                    callback.done(true);\n                    return true;\n                }\n            }\n        } catch (java.lang.Throwable e) {\n            exchange.setException(e);\n            callback.done(true);\n            return true;\n        }\n        final org.apache.camel.Producer producer = target;\n        final org.apache.camel.util.StopWatch watch = (eventNotifierEnabled && (exchange != null)) ? new org.apache.camel.util.StopWatch() : null;\n        try {\n            if (eventNotifierEnabled && (exchange != null)) {\n                org.apache.camel.util.EventHelper.notifyExchangeSending(exchange.getContext(), exchange, endpoint);\n            }\n            org.apache.camel.AsyncProcessor asyncProcessor = org.apache.camel.util.AsyncProcessorConverterHelper.convert(producer);\n            return producerCallback.doInAsyncProducer(producer, asyncProcessor, exchange, pattern, new org.apache.camel.AsyncCallback() {\n                @java.lang.Override\n                public void done(boolean doneSync) {\n                    try {\n                        if (eventNotifierEnabled && (watch != null)) {\n                            long timeTaken = watch.stop();\n                            org.apache.camel.util.EventHelper.notifyExchangeSent(exchange.getContext(), exchange, endpoint, timeTaken);\n                        }\n                        if (producer instanceof org.apache.camel.ServicePoolAware) {\n                            pool.release(endpoint, producer);\n                        } else if (!producer.isSingleton()) {\n                            try {\n                                org.apache.camel.util.ServiceHelper.stopAndShutdownService(producer);\n                            } catch (java.lang.Exception e) {\n                                org.apache.camel.impl.ProducerCache.LOG.warn(\"Error stopping/shutting down producer: \" + producer, e);\n                            }\n                        }\n                    } finally {\n                        callback.done(doneSync);\n                    }\n                }\n            });\n        } catch (java.lang.Throwable e) {\n            if (exchange != null) {\n                exchange.setException(e);\n            }\n            callback.done(true);\n            return true;\n        }\n    }\n\n    protected org.apache.camel.Exchange sendExchange(final org.apache.camel.Endpoint endpoint, org.apache.camel.ExchangePattern pattern, final org.apache.camel.Processor processor, org.apache.camel.Exchange exchange) {\n        return doInProducer(endpoint, exchange, pattern, new org.apache.camel.ProducerCallback<org.apache.camel.Exchange>() {\n            public org.apache.camel.Exchange doInProducer(org.apache.camel.Producer producer, org.apache.camel.Exchange exchange, org.apache.camel.ExchangePattern pattern) {\n                if (exchange == null) {\n                    exchange = (pattern != null) ? producer.createExchange(pattern) : producer.createExchange();\n                }\n                if (processor != null) {\n                    try {\n                        processor.process(exchange);\n                    } catch (java.lang.Exception e) {\n                        exchange.setException(e);\n                        return exchange;\n                    }\n                }\n                org.apache.camel.impl.ProducerCache.LOG.debug(\">>>> {} {}\", endpoint, exchange);\n                exchange.setProperty(Exchange.TO_ENDPOINT, endpoint.getEndpointUri());\n                org.apache.camel.util.StopWatch watch = null;\n                try {\n                    if (eventNotifierEnabled) {\n                        watch = new org.apache.camel.util.StopWatch();\n                        org.apache.camel.util.EventHelper.notifyExchangeSending(exchange.getContext(), exchange, endpoint);\n                    }\n                    org.apache.camel.Producer target = new org.apache.camel.processor.UnitOfWorkProducer(producer);\n                    target.process(exchange);\n                } catch (java.lang.Throwable e) {\n                    exchange.setException(e);\n                } finally {\n                    if (eventNotifierEnabled && (watch != null)) {\n                        long timeTaken = watch.stop();\n                        org.apache.camel.util.EventHelper.notifyExchangeSent(exchange.getContext(), exchange, endpoint, timeTaken);\n                    }\n                }\n                return exchange;\n            }\n        });\n    }\n\n    protected synchronized org.apache.camel.Producer doGetProducer(org.apache.camel.Endpoint endpoint, boolean pooled) {\n        java.lang.String key = endpoint.getEndpointUri();\n        org.apache.camel.Producer answer = producers.get(key);\n        if (pooled && (answer == null)) {\n            answer = pool.acquire(endpoint);\n        }\n        if (answer == null) {\n            try {\n                answer = endpoint.createProducer();\n                getCamelContext().addService(answer, false);\n            } catch (java.lang.Exception e) {\n                throw new org.apache.camel.FailedToCreateProducerException(endpoint, e);\n            }\n            if (pooled && (answer instanceof org.apache.camel.ServicePoolAware)) {\n                org.apache.camel.impl.ProducerCache.LOG.debug(\"Adding to producer service pool with key: {} for producer: {}\", endpoint, answer);\n                answer = pool.addAndAcquire(endpoint, answer);\n            } else if (answer.isSingleton()) {\n                org.apache.camel.impl.ProducerCache.LOG.debug(\"Adding to producer cache with key: {} for producer: {}\", endpoint, answer);\n                producers.put(key, answer);\n            }\n        }\n        if (answer != null) {\n            if (extendedStatistics) {\n                statistics.onHit(key);\n            }\n        }\n        return answer;\n    }\n\n    protected void doStart() throws java.lang.Exception {\n        if (extendedStatistics) {\n            int max = (maxCacheSize == 0) ? org.apache.camel.util.CamelContextHelper.getMaximumCachePoolSize(camelContext) : maxCacheSize;\n            statistics = new org.apache.camel.impl.DefaultEndpointUtilizationStatistics(max);\n        }\n        org.apache.camel.util.ServiceHelper.startServices(producers.values());\n        org.apache.camel.util.ServiceHelper.startServices(statistics, pool);\n    }\n\n    protected void doStop() throws java.lang.Exception {\n        org.apache.camel.util.ServiceHelper.stopAndShutdownService(statistics);\n        if (stopServicePool) {\n            org.apache.camel.util.ServiceHelper.stopAndShutdownService(pool);\n        }\n        try {\n            org.apache.camel.util.ServiceHelper.stopAndShutdownServices(producers.values());\n        } finally {\n            for (org.apache.camel.Producer producer : producers.values()) {\n                getCamelContext().removeService(producer);\n            }\n        }\n        producers.clear();\n        if (statistics != null) {\n            statistics.clear();\n        }\n    }\n\n    public int size() {\n        int size = producers.size();\n        size += pool.size();\n        org.apache.camel.impl.ProducerCache.LOG.trace(\"size = {}\", size);\n        return size;\n    }\n\n    public int getCapacity() {\n        int capacity = -1;\n        if (producers instanceof org.apache.camel.util.LRUCache) {\n            org.apache.camel.util.LRUCache<java.lang.String, org.apache.camel.Producer> cache = ((org.apache.camel.util.LRUCache<java.lang.String, org.apache.camel.Producer>) (producers));\n            capacity = cache.getMaxCacheSize();\n        }\n        return capacity;\n    }\n\n    public long getHits() {\n        long hits = -1;\n        if (producers instanceof org.apache.camel.util.LRUCache) {\n            org.apache.camel.util.LRUCache<java.lang.String, org.apache.camel.Producer> cache = ((org.apache.camel.util.LRUCache<java.lang.String, org.apache.camel.Producer>) (producers));\n            hits = cache.getHits();\n        }\n        return hits;\n    }\n\n    public long getMisses() {\n        long misses = -1;\n        if (producers instanceof org.apache.camel.util.LRUCache) {\n            org.apache.camel.util.LRUCache<java.lang.String, org.apache.camel.Producer> cache = ((org.apache.camel.util.LRUCache<java.lang.String, org.apache.camel.Producer>) (producers));\n            misses = cache.getMisses();\n        }\n        return misses;\n    }\n\n    public long getEvicted() {\n        long evicted = -1;\n        if (producers instanceof org.apache.camel.util.LRUCache) {\n            org.apache.camel.util.LRUCache<java.lang.String, org.apache.camel.Producer> cache = ((org.apache.camel.util.LRUCache<java.lang.String, org.apache.camel.Producer>) (producers));\n            evicted = cache.getEvicted();\n        }\n        return evicted;\n    }\n\n    public void resetCacheStatistics() {\n        if (producers instanceof org.apache.camel.util.LRUCache) {\n            org.apache.camel.util.LRUCache<java.lang.String, org.apache.camel.Producer> cache = ((org.apache.camel.util.LRUCache<java.lang.String, org.apache.camel.Producer>) (producers));\n            cache.resetStatistics();\n        }\n        if (statistics != null) {\n            statistics.clear();\n        }\n    }\n\n    public synchronized void purge() {\n        producers.clear();\n        pool.purge();\n        if (statistics != null) {\n            statistics.clear();\n        }\n    }\n\n    public org.apache.camel.spi.EndpointUtilizationStatistics getEndpointUtilizationStatistics() {\n        return statistics;\n    }\n\n    @java.lang.Override\n    public java.lang.String toString() {\n        return ((\"ProducerCache for source: \" + source) + \", capacity: \") + getCapacity();\n    }\n}",
            "src_parent_type": "Class",
            "src_type": "Field"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Constructor",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "if (producerServicePool == null) {\n    this.pool = camelContext.getProducerServicePool();\n    this.stopServicePool = false;\n} else {\n    this.pool = producerServicePool;\n    this.stopServicePool = true;\n}",
            "src_parent": "{\n    this.source = source;\n    this.camelContext = camelContext;\n    if (producerServicePool == null) {\n        this.pool = camelContext.getProducerServicePool();\n        this.stopServicePool = false;\n    } else {\n        this.pool = producerServicePool;\n        this.stopServicePool = true;\n    }\n    this.producers = cache;\n    if (producers instanceof org.apache.camel.util.LRUCache) {\n        maxCacheSize = ((org.apache.camel.util.LRUCache) (producers)).getMaxCacheSize();\n    }\n    if (camelContext.getManagementStrategy().getManagementAgent() != null) {\n        this.extendedStatistics = camelContext.getManagementStrategy().getManagementAgent().getStatisticsLevel().isExtended();\n    } else {\n        this.extendedStatistics = false;\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "If"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "true",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Method",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "if (stopServicePool) {\n    org.apache.camel.util.ServiceHelper.stopAndShutdownService(pool);\n}",
            "src_parent": "{\n    org.apache.camel.util.ServiceHelper.stopAndShutdownService(statistics);\n    if (stopServicePool) {\n        org.apache.camel.util.ServiceHelper.stopAndShutdownService(pool);\n    }\n    try {\n        org.apache.camel.util.ServiceHelper.stopAndShutdownServices(producers.values());\n    } finally {\n        for (org.apache.camel.Producer producer : producers.values()) {\n            getCamelContext().removeService(producer);\n        }\n    }\n    producers.clear();\n    if (statistics != null) {\n        statistics.clear();\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "If"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Constructor",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Invocation",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "null",
            "src_parent": "this(source, camelContext, null, org.apache.camel.impl.ProducerCache.createLRUCache(cacheSize))",
            "src_parent_type": "Invocation",
            "src_type": "Literal"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Constructor",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Invocation",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "null",
            "src_parent": "this(source, camelContext, null, cache)",
            "src_parent_type": "Invocation",
            "src_type": "Literal"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Assignment",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "Assignment",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "Assignment",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "Invocation",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Constructor",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Assignment",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "this.pool = producerServicePool",
            "dst_parent": "{\n    this.pool = producerServicePool;\n    this.stopServicePool = true;\n}",
            "dst_parent_type": "Block",
            "dst_type": "Assignment",
            "operator": "MOV",
            "src": "this.pool = producerServicePool",
            "src_parent": "{\n    this.source = source;\n    this.camelContext = camelContext;\n    this.pool = producerServicePool;\n    this.producers = cache;\n    if (producers instanceof org.apache.camel.util.LRUCache) {\n        maxCacheSize = ((org.apache.camel.util.LRUCache) (producers)).getMaxCacheSize();\n    }\n    if (camelContext.getManagementStrategy().getManagementAgent() != null) {\n        this.extendedStatistics = camelContext.getManagementStrategy().getManagementAgent().getStatisticsLevel().isExtended();\n    } else {\n        this.extendedStatistics = false;\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "Assignment"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Constructor",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Invocation",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "camelContext.getProducerServicePool()",
            "dst_parent": "this.pool = camelContext.getProducerServicePool()",
            "dst_parent_type": "Assignment",
            "dst_type": "Invocation",
            "operator": "MOV",
            "src": "camelContext.getProducerServicePool()",
            "src_parent": "this(source, camelContext, camelContext.getProducerServicePool(), cache)",
            "src_parent_type": "Invocation",
            "src_type": "Invocation"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Try",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "true",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Invocation",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "pool",
            "dst_parent": "org.apache.camel.util.ServiceHelper.stopAndShutdownService(pool)",
            "dst_parent_type": "Invocation",
            "dst_type": "FieldRead",
            "operator": "MOV",
            "src": "pool",
            "src_parent": "org.apache.camel.util.ServiceHelper.stopAndShutdownServices(statistics, pool)",
            "src_parent_type": "Invocation",
            "src_type": "FieldRead"
          }
        }
      ],
      "file_name": "ProducerCache"
    }
  ],
  "id": "camel_08077733"
}