{
  "files": [
    {
      "features": [
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "true",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Constructor",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "org.apache.wicket.markup.MarkupResourceStream baseResourceStream = baseMarkup.getMarkupResourceStream()",
            "src_parent": "{\n    super(markup.getMarkupResourceStream());\n    getMarkupResourceStream().setBaseMarkup(baseMarkup);\n    org.apache.wicket.markup.MarkupResourceStream baseResourceStream = baseMarkup.getMarkupResourceStream();\n    getMarkupResourceStream().setXmlDeclaration(baseResourceStream.getXmlDeclaration());\n    getMarkupResourceStream().setEncoding(baseResourceStream.getEncoding());\n    getMarkupResourceStream().setWicketNamespace(baseResourceStream.getWicketNamespace());\n    if (org.apache.wicket.markup.MergedMarkup.log.isDebugEnabled()) {\n        java.lang.String derivedResource = org.apache.wicket.util.string.Strings.afterLast(markup.getMarkupResourceStream().getResource().toString(), '/');\n        java.lang.String baseResource = org.apache.wicket.util.string.Strings.afterLast(baseMarkup.getMarkupResourceStream().getResource().toString(), '/');\n        org.apache.wicket.markup.MergedMarkup.log.debug(((\"Merge markup: derived markup: \" + derivedResource) + \"; base markup: \") + baseResource);\n    }\n    merge(markup, baseMarkup, extendIndex);\n    if (org.apache.wicket.markup.MergedMarkup.log.isDebugEnabled()) {\n        org.apache.wicket.markup.MergedMarkup.log.debug(\"Merge markup: \" + toString());\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "LocalVariable"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "true",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Constructor",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "getMarkupResourceStream().setXmlDeclaration(baseResourceStream.getXmlDeclaration())",
            "src_parent": "{\n    super(markup.getMarkupResourceStream());\n    getMarkupResourceStream().setBaseMarkup(baseMarkup);\n    org.apache.wicket.markup.MarkupResourceStream baseResourceStream = baseMarkup.getMarkupResourceStream();\n    getMarkupResourceStream().setXmlDeclaration(baseResourceStream.getXmlDeclaration());\n    getMarkupResourceStream().setEncoding(baseResourceStream.getEncoding());\n    getMarkupResourceStream().setWicketNamespace(baseResourceStream.getWicketNamespace());\n    if (org.apache.wicket.markup.MergedMarkup.log.isDebugEnabled()) {\n        java.lang.String derivedResource = org.apache.wicket.util.string.Strings.afterLast(markup.getMarkupResourceStream().getResource().toString(), '/');\n        java.lang.String baseResource = org.apache.wicket.util.string.Strings.afterLast(baseMarkup.getMarkupResourceStream().getResource().toString(), '/');\n        org.apache.wicket.markup.MergedMarkup.log.debug(((\"Merge markup: derived markup: \" + derivedResource) + \"; base markup: \") + baseResource);\n    }\n    merge(markup, baseMarkup, extendIndex);\n    if (org.apache.wicket.markup.MergedMarkup.log.isDebugEnabled()) {\n        org.apache.wicket.markup.MergedMarkup.log.debug(\"Merge markup: \" + toString());\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "Invocation"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "true",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Constructor",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "getMarkupResourceStream().setEncoding(baseResourceStream.getEncoding())",
            "src_parent": "{\n    super(markup.getMarkupResourceStream());\n    getMarkupResourceStream().setBaseMarkup(baseMarkup);\n    org.apache.wicket.markup.MarkupResourceStream baseResourceStream = baseMarkup.getMarkupResourceStream();\n    getMarkupResourceStream().setXmlDeclaration(baseResourceStream.getXmlDeclaration());\n    getMarkupResourceStream().setEncoding(baseResourceStream.getEncoding());\n    getMarkupResourceStream().setWicketNamespace(baseResourceStream.getWicketNamespace());\n    if (org.apache.wicket.markup.MergedMarkup.log.isDebugEnabled()) {\n        java.lang.String derivedResource = org.apache.wicket.util.string.Strings.afterLast(markup.getMarkupResourceStream().getResource().toString(), '/');\n        java.lang.String baseResource = org.apache.wicket.util.string.Strings.afterLast(baseMarkup.getMarkupResourceStream().getResource().toString(), '/');\n        org.apache.wicket.markup.MergedMarkup.log.debug(((\"Merge markup: derived markup: \" + derivedResource) + \"; base markup: \") + baseResource);\n    }\n    merge(markup, baseMarkup, extendIndex);\n    if (org.apache.wicket.markup.MergedMarkup.log.isDebugEnabled()) {\n        org.apache.wicket.markup.MergedMarkup.log.debug(\"Merge markup: \" + toString());\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "Invocation"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "true",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Constructor",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "getMarkupResourceStream().setWicketNamespace(baseResourceStream.getWicketNamespace())",
            "src_parent": "{\n    super(markup.getMarkupResourceStream());\n    getMarkupResourceStream().setBaseMarkup(baseMarkup);\n    org.apache.wicket.markup.MarkupResourceStream baseResourceStream = baseMarkup.getMarkupResourceStream();\n    getMarkupResourceStream().setXmlDeclaration(baseResourceStream.getXmlDeclaration());\n    getMarkupResourceStream().setEncoding(baseResourceStream.getEncoding());\n    getMarkupResourceStream().setWicketNamespace(baseResourceStream.getWicketNamespace());\n    if (org.apache.wicket.markup.MergedMarkup.log.isDebugEnabled()) {\n        java.lang.String derivedResource = org.apache.wicket.util.string.Strings.afterLast(markup.getMarkupResourceStream().getResource().toString(), '/');\n        java.lang.String baseResource = org.apache.wicket.util.string.Strings.afterLast(baseMarkup.getMarkupResourceStream().getResource().toString(), '/');\n        org.apache.wicket.markup.MergedMarkup.log.debug(((\"Merge markup: derived markup: \" + derivedResource) + \"; base markup: \") + baseResource);\n    }\n    merge(markup, baseMarkup, extendIndex);\n    if (org.apache.wicket.markup.MergedMarkup.log.isDebugEnabled()) {\n        org.apache.wicket.markup.MergedMarkup.log.debug(\"Merge markup: \" + toString());\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "Invocation"
          }
        }
      ],
      "file_name": "MergedMarkup"
    }
  ],
  "id": "wicket_9ced53a5"
}