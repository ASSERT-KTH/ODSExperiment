{
  "files": [
    {
      "features": [
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Method",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "result[resultOffset] = org.apache.commons.math3.util.FastMath.atan2(y[yOffset], x[xOffset])",
            "src_parent": "{\n    double[] tmp1 = new double[getSize()];\n    multiply(x, xOffset, x, xOffset, tmp1, 0);\n    double[] tmp2 = new double[getSize()];\n    multiply(y, yOffset, y, yOffset, tmp2, 0);\n    add(tmp1, 0, tmp2, 0, tmp2, 0);\n    rootN(tmp2, 0, 2, tmp1, 0);\n    if (x[xOffset] >= 0) {\n        add(tmp1, 0, x, xOffset, tmp2, 0);\n        divide(y, yOffset, tmp2, 0, tmp1, 0);\n        atan(tmp1, 0, tmp2, 0);\n        for (int i = 0; i < tmp2.length; ++i) {\n            result[resultOffset + i] = 2 * tmp2[i];\n        }\n    } else {\n        subtract(tmp1, 0, x, xOffset, tmp2, 0);\n        divide(y, yOffset, tmp2, 0, tmp1, 0);\n        atan(tmp1, 0, tmp2, 0);\n        result[resultOffset] = (tmp2[0] <= 0 ? -org.apache.commons.math3.util.FastMath.PI : org.apache.commons.math3.util.FastMath.PI) - (2 * tmp2[0]);\n        for (int i = 1; i < tmp2.length; ++i) {\n            result[resultOffset + i] = (-2) * tmp2[i];\n        }\n    }\n    result[resultOffset] = org.apache.commons.math3.util.FastMath.atan2(y[yOffset], x[xOffset]);\n}",
            "src_parent_type": "Block",
            "src_type": "Assignment"
          }
        }
      ],
      "file_name": "DSCompiler"
    }
  ],
  "id": "commons-math_48dde378"
}