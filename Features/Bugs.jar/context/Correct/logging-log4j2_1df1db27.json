{
  "files": [
    {
      "features": [
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "true",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Method",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "if (servletContext.getMajorVersion() > 2) {\n    servletContext.log(\"Log4jServletContainerInitializer starting up Log4j in Servlet 3.0+ environment.\");\n    final org.apache.logging.log4j.core.web.Log4jWebInitializer initializer = org.apache.logging.log4j.core.web.Log4jWebInitializerImpl.getLog4jWebInitializer(servletContext);\n    initializer.initialize();\n    initializer.setLoggerContext();\n    servletContext.addListener(new org.apache.logging.log4j.core.web.Log4jServletContextListener());\n    final javax.servlet.FilterRegistration.Dynamic filter = servletContext.addFilter(\"log4jServletFilter\", new org.apache.logging.log4j.core.web.Log4jServletFilter());\n    if (filter == null) {\n        throw new javax.servlet.UnavailableException(\"In a Servlet 3.0+ application, you must not define a \" + \"log4jServletFilter in web.xml. Log4j 2 defines this for you automatically.\");\n    }\n    filter.addMappingForUrlPatterns(java.util.EnumSet.allOf(javax.servlet.DispatcherType.class), false, \"/*\");\n}",
            "src_parent": "{\n    if (servletContext.getMajorVersion() > 2) {\n        servletContext.log(\"Log4jServletContainerInitializer starting up Log4j in Servlet 3.0+ environment.\");\n        final org.apache.logging.log4j.core.web.Log4jWebInitializer initializer = org.apache.logging.log4j.core.web.Log4jWebInitializerImpl.getLog4jWebInitializer(servletContext);\n        initializer.initialize();\n        initializer.setLoggerContext();\n        servletContext.addListener(new org.apache.logging.log4j.core.web.Log4jServletContextListener());\n        final javax.servlet.FilterRegistration.Dynamic filter = servletContext.addFilter(\"log4jServletFilter\", new org.apache.logging.log4j.core.web.Log4jServletFilter());\n        if (filter == null) {\n            throw new javax.servlet.UnavailableException(\"In a Servlet 3.0+ application, you must not define a \" + \"log4jServletFilter in web.xml. Log4j 2 defines this for you automatically.\");\n        }\n        filter.addMappingForUrlPatterns(java.util.EnumSet.allOf(javax.servlet.DispatcherType.class), false, \"/*\");\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "If"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Invocation",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "servletContext.log(\"Log4jServletContainerInitializer starting up Log4j in Servlet 3.0+ environment.\")",
            "dst_parent": "{\n    servletContext.log(\"Log4jServletContainerInitializer starting up Log4j in Servlet 3.0+ environment.\");\n    final org.apache.logging.log4j.core.web.Log4jWebInitializer initializer = org.apache.logging.log4j.core.web.Log4jWebInitializerImpl.getLog4jWebInitializer(servletContext);\n    initializer.initialize();\n    initializer.setLoggerContext();\n    servletContext.addListener(new org.apache.logging.log4j.core.web.Log4jServletContextListener());\n    final javax.servlet.FilterRegistration.Dynamic filter = servletContext.addFilter(\"log4jServletFilter\", new org.apache.logging.log4j.core.web.Log4jServletFilter());\n    if (filter == null) {\n        throw new javax.servlet.UnavailableException(\"In a Servlet 3.0+ application, you must not define a \" + \"log4jServletFilter in web.xml. Log4j 2 defines this for you automatically.\");\n    }\n    filter.addMappingForUrlPatterns(java.util.EnumSet.allOf(javax.servlet.DispatcherType.class), false, \"/*\");\n}",
            "dst_parent_type": "Block",
            "dst_type": "Invocation",
            "operator": "MOV",
            "src": "servletContext.log(\"Log4jServletContainerInitializer starting up Log4j in Servlet 3.0+ environment.\")",
            "src_parent": "{\n    servletContext.log(\"Log4jServletContainerInitializer starting up Log4j in Servlet 3.0+ environment.\");\n    final org.apache.logging.log4j.core.web.Log4jWebInitializer initializer = org.apache.logging.log4j.core.web.Log4jWebInitializerImpl.getLog4jWebInitializer(servletContext);\n    initializer.initialize();\n    initializer.setLoggerContext();\n    servletContext.addListener(new org.apache.logging.log4j.core.web.Log4jServletContextListener());\n    final javax.servlet.FilterRegistration.Dynamic filter = servletContext.addFilter(\"log4jServletFilter\", new org.apache.logging.log4j.core.web.Log4jServletFilter());\n    filter.addMappingForUrlPatterns(java.util.EnumSet.allOf(javax.servlet.DispatcherType.class), false, \"/*\");\n}",
            "src_parent_type": "Block",
            "src_type": "Invocation"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "LocalVariable",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "final org.apache.logging.log4j.core.web.Log4jWebInitializer initializer = org.apache.logging.log4j.core.web.Log4jWebInitializerImpl.getLog4jWebInitializer(servletContext)",
            "dst_parent": "{\n    servletContext.log(\"Log4jServletContainerInitializer starting up Log4j in Servlet 3.0+ environment.\");\n    final org.apache.logging.log4j.core.web.Log4jWebInitializer initializer = org.apache.logging.log4j.core.web.Log4jWebInitializerImpl.getLog4jWebInitializer(servletContext);\n    initializer.initialize();\n    initializer.setLoggerContext();\n    servletContext.addListener(new org.apache.logging.log4j.core.web.Log4jServletContextListener());\n    final javax.servlet.FilterRegistration.Dynamic filter = servletContext.addFilter(\"log4jServletFilter\", new org.apache.logging.log4j.core.web.Log4jServletFilter());\n    if (filter == null) {\n        throw new javax.servlet.UnavailableException(\"In a Servlet 3.0+ application, you must not define a \" + \"log4jServletFilter in web.xml. Log4j 2 defines this for you automatically.\");\n    }\n    filter.addMappingForUrlPatterns(java.util.EnumSet.allOf(javax.servlet.DispatcherType.class), false, \"/*\");\n}",
            "dst_parent_type": "Block",
            "dst_type": "LocalVariable",
            "operator": "MOV",
            "src": "final org.apache.logging.log4j.core.web.Log4jWebInitializer initializer = org.apache.logging.log4j.core.web.Log4jWebInitializerImpl.getLog4jWebInitializer(servletContext)",
            "src_parent": "{\n    servletContext.log(\"Log4jServletContainerInitializer starting up Log4j in Servlet 3.0+ environment.\");\n    final org.apache.logging.log4j.core.web.Log4jWebInitializer initializer = org.apache.logging.log4j.core.web.Log4jWebInitializerImpl.getLog4jWebInitializer(servletContext);\n    initializer.initialize();\n    initializer.setLoggerContext();\n    servletContext.addListener(new org.apache.logging.log4j.core.web.Log4jServletContextListener());\n    final javax.servlet.FilterRegistration.Dynamic filter = servletContext.addFilter(\"log4jServletFilter\", new org.apache.logging.log4j.core.web.Log4jServletFilter());\n    filter.addMappingForUrlPatterns(java.util.EnumSet.allOf(javax.servlet.DispatcherType.class), false, \"/*\");\n}",
            "src_parent_type": "Block",
            "src_type": "LocalVariable"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Invocation",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "initializer.initialize()",
            "dst_parent": "{\n    servletContext.log(\"Log4jServletContainerInitializer starting up Log4j in Servlet 3.0+ environment.\");\n    final org.apache.logging.log4j.core.web.Log4jWebInitializer initializer = org.apache.logging.log4j.core.web.Log4jWebInitializerImpl.getLog4jWebInitializer(servletContext);\n    initializer.initialize();\n    initializer.setLoggerContext();\n    servletContext.addListener(new org.apache.logging.log4j.core.web.Log4jServletContextListener());\n    final javax.servlet.FilterRegistration.Dynamic filter = servletContext.addFilter(\"log4jServletFilter\", new org.apache.logging.log4j.core.web.Log4jServletFilter());\n    if (filter == null) {\n        throw new javax.servlet.UnavailableException(\"In a Servlet 3.0+ application, you must not define a \" + \"log4jServletFilter in web.xml. Log4j 2 defines this for you automatically.\");\n    }\n    filter.addMappingForUrlPatterns(java.util.EnumSet.allOf(javax.servlet.DispatcherType.class), false, \"/*\");\n}",
            "dst_parent_type": "Block",
            "dst_type": "Invocation",
            "operator": "MOV",
            "src": "initializer.initialize()",
            "src_parent": "{\n    servletContext.log(\"Log4jServletContainerInitializer starting up Log4j in Servlet 3.0+ environment.\");\n    final org.apache.logging.log4j.core.web.Log4jWebInitializer initializer = org.apache.logging.log4j.core.web.Log4jWebInitializerImpl.getLog4jWebInitializer(servletContext);\n    initializer.initialize();\n    initializer.setLoggerContext();\n    servletContext.addListener(new org.apache.logging.log4j.core.web.Log4jServletContextListener());\n    final javax.servlet.FilterRegistration.Dynamic filter = servletContext.addFilter(\"log4jServletFilter\", new org.apache.logging.log4j.core.web.Log4jServletFilter());\n    filter.addMappingForUrlPatterns(java.util.EnumSet.allOf(javax.servlet.DispatcherType.class), false, \"/*\");\n}",
            "src_parent_type": "Block",
            "src_type": "Invocation"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "Invocation",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "true",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Invocation",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "initializer.setLoggerContext()",
            "dst_parent": "{\n    servletContext.log(\"Log4jServletContainerInitializer starting up Log4j in Servlet 3.0+ environment.\");\n    final org.apache.logging.log4j.core.web.Log4jWebInitializer initializer = org.apache.logging.log4j.core.web.Log4jWebInitializerImpl.getLog4jWebInitializer(servletContext);\n    initializer.initialize();\n    initializer.setLoggerContext();\n    servletContext.addListener(new org.apache.logging.log4j.core.web.Log4jServletContextListener());\n    final javax.servlet.FilterRegistration.Dynamic filter = servletContext.addFilter(\"log4jServletFilter\", new org.apache.logging.log4j.core.web.Log4jServletFilter());\n    if (filter == null) {\n        throw new javax.servlet.UnavailableException(\"In a Servlet 3.0+ application, you must not define a \" + \"log4jServletFilter in web.xml. Log4j 2 defines this for you automatically.\");\n    }\n    filter.addMappingForUrlPatterns(java.util.EnumSet.allOf(javax.servlet.DispatcherType.class), false, \"/*\");\n}",
            "dst_parent_type": "Block",
            "dst_type": "Invocation",
            "operator": "MOV",
            "src": "initializer.setLoggerContext()",
            "src_parent": "{\n    servletContext.log(\"Log4jServletContainerInitializer starting up Log4j in Servlet 3.0+ environment.\");\n    final org.apache.logging.log4j.core.web.Log4jWebInitializer initializer = org.apache.logging.log4j.core.web.Log4jWebInitializerImpl.getLog4jWebInitializer(servletContext);\n    initializer.initialize();\n    initializer.setLoggerContext();\n    servletContext.addListener(new org.apache.logging.log4j.core.web.Log4jServletContextListener());\n    final javax.servlet.FilterRegistration.Dynamic filter = servletContext.addFilter(\"log4jServletFilter\", new org.apache.logging.log4j.core.web.Log4jServletFilter());\n    filter.addMappingForUrlPatterns(java.util.EnumSet.allOf(javax.servlet.DispatcherType.class), false, \"/*\");\n}",
            "src_parent_type": "Block",
            "src_type": "Invocation"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "LocalVariable",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "true",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Invocation",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "servletContext.addListener(new org.apache.logging.log4j.core.web.Log4jServletContextListener())",
            "dst_parent": "{\n    servletContext.log(\"Log4jServletContainerInitializer starting up Log4j in Servlet 3.0+ environment.\");\n    final org.apache.logging.log4j.core.web.Log4jWebInitializer initializer = org.apache.logging.log4j.core.web.Log4jWebInitializerImpl.getLog4jWebInitializer(servletContext);\n    initializer.initialize();\n    initializer.setLoggerContext();\n    servletContext.addListener(new org.apache.logging.log4j.core.web.Log4jServletContextListener());\n    final javax.servlet.FilterRegistration.Dynamic filter = servletContext.addFilter(\"log4jServletFilter\", new org.apache.logging.log4j.core.web.Log4jServletFilter());\n    if (filter == null) {\n        throw new javax.servlet.UnavailableException(\"In a Servlet 3.0+ application, you must not define a \" + \"log4jServletFilter in web.xml. Log4j 2 defines this for you automatically.\");\n    }\n    filter.addMappingForUrlPatterns(java.util.EnumSet.allOf(javax.servlet.DispatcherType.class), false, \"/*\");\n}",
            "dst_parent_type": "Block",
            "dst_type": "Invocation",
            "operator": "MOV",
            "src": "servletContext.addListener(new org.apache.logging.log4j.core.web.Log4jServletContextListener())",
            "src_parent": "{\n    servletContext.log(\"Log4jServletContainerInitializer starting up Log4j in Servlet 3.0+ environment.\");\n    final org.apache.logging.log4j.core.web.Log4jWebInitializer initializer = org.apache.logging.log4j.core.web.Log4jWebInitializerImpl.getLog4jWebInitializer(servletContext);\n    initializer.initialize();\n    initializer.setLoggerContext();\n    servletContext.addListener(new org.apache.logging.log4j.core.web.Log4jServletContextListener());\n    final javax.servlet.FilterRegistration.Dynamic filter = servletContext.addFilter(\"log4jServletFilter\", new org.apache.logging.log4j.core.web.Log4jServletFilter());\n    filter.addMappingForUrlPatterns(java.util.EnumSet.allOf(javax.servlet.DispatcherType.class), false, \"/*\");\n}",
            "src_parent_type": "Block",
            "src_type": "Invocation"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "Invocation",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "LocalVariable",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "final javax.servlet.FilterRegistration.Dynamic filter = servletContext.addFilter(\"log4jServletFilter\", new org.apache.logging.log4j.core.web.Log4jServletFilter())",
            "dst_parent": "{\n    servletContext.log(\"Log4jServletContainerInitializer starting up Log4j in Servlet 3.0+ environment.\");\n    final org.apache.logging.log4j.core.web.Log4jWebInitializer initializer = org.apache.logging.log4j.core.web.Log4jWebInitializerImpl.getLog4jWebInitializer(servletContext);\n    initializer.initialize();\n    initializer.setLoggerContext();\n    servletContext.addListener(new org.apache.logging.log4j.core.web.Log4jServletContextListener());\n    final javax.servlet.FilterRegistration.Dynamic filter = servletContext.addFilter(\"log4jServletFilter\", new org.apache.logging.log4j.core.web.Log4jServletFilter());\n    if (filter == null) {\n        throw new javax.servlet.UnavailableException(\"In a Servlet 3.0+ application, you must not define a \" + \"log4jServletFilter in web.xml. Log4j 2 defines this for you automatically.\");\n    }\n    filter.addMappingForUrlPatterns(java.util.EnumSet.allOf(javax.servlet.DispatcherType.class), false, \"/*\");\n}",
            "dst_parent_type": "Block",
            "dst_type": "LocalVariable",
            "operator": "MOV",
            "src": "final javax.servlet.FilterRegistration.Dynamic filter = servletContext.addFilter(\"log4jServletFilter\", new org.apache.logging.log4j.core.web.Log4jServletFilter())",
            "src_parent": "{\n    servletContext.log(\"Log4jServletContainerInitializer starting up Log4j in Servlet 3.0+ environment.\");\n    final org.apache.logging.log4j.core.web.Log4jWebInitializer initializer = org.apache.logging.log4j.core.web.Log4jWebInitializerImpl.getLog4jWebInitializer(servletContext);\n    initializer.initialize();\n    initializer.setLoggerContext();\n    servletContext.addListener(new org.apache.logging.log4j.core.web.Log4jServletContextListener());\n    final javax.servlet.FilterRegistration.Dynamic filter = servletContext.addFilter(\"log4jServletFilter\", new org.apache.logging.log4j.core.web.Log4jServletFilter());\n    filter.addMappingForUrlPatterns(java.util.EnumSet.allOf(javax.servlet.DispatcherType.class), false, \"/*\");\n}",
            "src_parent_type": "Block",
            "src_type": "LocalVariable"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "Invocation",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Invocation",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "filter.addMappingForUrlPatterns(java.util.EnumSet.allOf(javax.servlet.DispatcherType.class), false, \"/*\")",
            "dst_parent": "{\n    servletContext.log(\"Log4jServletContainerInitializer starting up Log4j in Servlet 3.0+ environment.\");\n    final org.apache.logging.log4j.core.web.Log4jWebInitializer initializer = org.apache.logging.log4j.core.web.Log4jWebInitializerImpl.getLog4jWebInitializer(servletContext);\n    initializer.initialize();\n    initializer.setLoggerContext();\n    servletContext.addListener(new org.apache.logging.log4j.core.web.Log4jServletContextListener());\n    final javax.servlet.FilterRegistration.Dynamic filter = servletContext.addFilter(\"log4jServletFilter\", new org.apache.logging.log4j.core.web.Log4jServletFilter());\n    if (filter == null) {\n        throw new javax.servlet.UnavailableException(\"In a Servlet 3.0+ application, you must not define a \" + \"log4jServletFilter in web.xml. Log4j 2 defines this for you automatically.\");\n    }\n    filter.addMappingForUrlPatterns(java.util.EnumSet.allOf(javax.servlet.DispatcherType.class), false, \"/*\");\n}",
            "dst_parent_type": "Block",
            "dst_type": "Invocation",
            "operator": "MOV",
            "src": "filter.addMappingForUrlPatterns(java.util.EnumSet.allOf(javax.servlet.DispatcherType.class), false, \"/*\")",
            "src_parent": "{\n    servletContext.log(\"Log4jServletContainerInitializer starting up Log4j in Servlet 3.0+ environment.\");\n    final org.apache.logging.log4j.core.web.Log4jWebInitializer initializer = org.apache.logging.log4j.core.web.Log4jWebInitializerImpl.getLog4jWebInitializer(servletContext);\n    initializer.initialize();\n    initializer.setLoggerContext();\n    servletContext.addListener(new org.apache.logging.log4j.core.web.Log4jServletContextListener());\n    final javax.servlet.FilterRegistration.Dynamic filter = servletContext.addFilter(\"log4jServletFilter\", new org.apache.logging.log4j.core.web.Log4jServletFilter());\n    filter.addMappingForUrlPatterns(java.util.EnumSet.allOf(javax.servlet.DispatcherType.class), false, \"/*\");\n}",
            "src_parent_type": "Block",
            "src_type": "Invocation"
          }
        }
      ],
      "file_name": "Log4jServletContainerInitializer"
    }
  ],
  "id": "logging-log4j2_1df1db27"
}