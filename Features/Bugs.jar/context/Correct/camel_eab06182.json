{
  "files": [
    {
      "features": [
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "Return",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "LocalVariable",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "if (cache != null) {\n    cache.reset();\n}",
            "src_parent": "{\n    if (maxChars < 0) {\n        return prepend + \"[Body is not logged]\";\n    }\n    if (obj == null) {\n        return prepend + \"[Body is null]\";\n    }\n    if (!allowStreams) {\n        if ((obj instanceof javax.xml.transform.Source) && (!((obj instanceof org.apache.camel.StringSource) || (obj instanceof org.apache.camel.BytesSource)))) {\n            return prepend + \"[Body is instance of java.xml.transform.Source]\";\n        } else if (obj instanceof org.apache.camel.StreamCache) {\n            return prepend + \"[Body is instance of org.apache.camel.StreamCache]\";\n        } else if (obj instanceof java.io.InputStream) {\n            return prepend + \"[Body is instance of java.io.InputStream]\";\n        } else if (obj instanceof java.io.OutputStream) {\n            return prepend + \"[Body is instance of java.io.OutputStream]\";\n        } else if (obj instanceof java.io.Reader) {\n            return prepend + \"[Body is instance of java.io.Reader]\";\n        } else if (obj instanceof java.io.Writer) {\n            return prepend + \"[Body is instance of java.io.Writer]\";\n        } else if ((obj instanceof org.apache.camel.WrappedFile) || (obj instanceof java.io.File)) {\n            if (!allowFiles) {\n                return ((prepend + \"[Body is file based: \") + obj) + \"]\";\n            }\n        }\n    }\n    if (!allowFiles) {\n        if ((obj instanceof org.apache.camel.WrappedFile) || (obj instanceof java.io.File)) {\n            return ((prepend + \"[Body is file based: \") + obj) + \"]\";\n        }\n    }\n    org.apache.camel.StreamCache cache;\n    if (obj instanceof org.apache.camel.StreamCache) {\n        cache = ((org.apache.camel.StreamCache) (obj));\n    } else {\n        cache = null;\n    }\n    java.lang.String body = null;\n    if (message.getExchange() != null) {\n        try {\n            body = message.getExchange().getContext().getTypeConverter().convertTo(java.lang.String.class, message.getExchange(), obj);\n        } catch (java.lang.Exception e) {\n        }\n    }\n    if (body == null) {\n        body = obj.toString();\n    }\n    if (cache != null) {\n        cache.reset();\n    }\n    if (body == null) {\n        return prepend + \"[Body is null]\";\n    }\n    if ((maxChars > 0) && (body.length() > maxChars)) {\n        body = ((((body.substring(0, maxChars) + \"... [Body clipped after \") + maxChars) + \" chars, total length is \") + body.length()) + \"]\";\n    }\n    return prepend + body;\n}",
            "src_parent_type": "Block",
            "src_type": "If"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "true",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Method",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "java.io.InputStream is = null",
            "src_parent": "{\n    if (maxChars < 0) {\n        return prepend + \"[Body is not logged]\";\n    }\n    if (obj == null) {\n        return prepend + \"[Body is null]\";\n    }\n    if (!allowStreams) {\n        if ((obj instanceof javax.xml.transform.Source) && (!((obj instanceof org.apache.camel.StringSource) || (obj instanceof org.apache.camel.BytesSource)))) {\n            return prepend + \"[Body is instance of java.xml.transform.Source]\";\n        } else if (obj instanceof org.apache.camel.StreamCache) {\n            return prepend + \"[Body is instance of org.apache.camel.StreamCache]\";\n        } else if (obj instanceof java.io.InputStream) {\n            return prepend + \"[Body is instance of java.io.InputStream]\";\n        } else if (obj instanceof java.io.OutputStream) {\n            return prepend + \"[Body is instance of java.io.OutputStream]\";\n        } else if (obj instanceof java.io.Reader) {\n            return prepend + \"[Body is instance of java.io.Reader]\";\n        } else if (obj instanceof java.io.Writer) {\n            return prepend + \"[Body is instance of java.io.Writer]\";\n        } else if ((obj instanceof org.apache.camel.WrappedFile) || (obj instanceof java.io.File)) {\n            if (!allowFiles) {\n                return ((prepend + \"[Body is file based: \") + obj) + \"]\";\n            }\n        }\n    }\n    if (!allowFiles) {\n        if ((obj instanceof org.apache.camel.WrappedFile) || (obj instanceof java.io.File)) {\n            return ((prepend + \"[Body is file based: \") + obj) + \"]\";\n        }\n    }\n    org.apache.camel.StreamCache cache = null;\n    java.io.InputStream is = null;\n    if (obj instanceof org.apache.camel.StreamCache) {\n        cache = ((org.apache.camel.StreamCache) (obj));\n        is = null;\n    } else if (obj instanceof java.io.InputStream) {\n        cache = null;\n        is = ((java.io.InputStream) (obj));\n    }\n    java.lang.String body = null;\n    if (message.getExchange() != null) {\n        try {\n            body = message.getExchange().getContext().getTypeConverter().convertTo(java.lang.String.class, message.getExchange(), obj);\n        } catch (java.lang.Exception e) {\n        }\n    }\n    if (body == null) {\n        body = obj.toString();\n    }\n    if (cache != null) {\n        cache.reset();\n    } else if ((is != null) && is.markSupported()) {\n        try {\n            is.reset();\n        } catch (java.io.IOException e) {\n        }\n    }\n    if (body == null) {\n        return prepend + \"[Body is null]\";\n    }\n    if ((maxChars > 0) && (body.length() > maxChars)) {\n        body = ((((body.substring(0, maxChars) + \"... [Body clipped after \") + maxChars) + \" chars, total length is \") + body.length()) + \"]\";\n    }\n    return prepend + body;\n}",
            "src_parent_type": "Block",
            "src_type": "LocalVariable"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "true",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Method",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "if (cache != null) {\n    cache.reset();\n} else if ((is != null) && is.markSupported()) {\n    try {\n        is.reset();\n    } catch (java.io.IOException e) {\n    }\n}",
            "src_parent": "{\n    if (maxChars < 0) {\n        return prepend + \"[Body is not logged]\";\n    }\n    if (obj == null) {\n        return prepend + \"[Body is null]\";\n    }\n    if (!allowStreams) {\n        if ((obj instanceof javax.xml.transform.Source) && (!((obj instanceof org.apache.camel.StringSource) || (obj instanceof org.apache.camel.BytesSource)))) {\n            return prepend + \"[Body is instance of java.xml.transform.Source]\";\n        } else if (obj instanceof org.apache.camel.StreamCache) {\n            return prepend + \"[Body is instance of org.apache.camel.StreamCache]\";\n        } else if (obj instanceof java.io.InputStream) {\n            return prepend + \"[Body is instance of java.io.InputStream]\";\n        } else if (obj instanceof java.io.OutputStream) {\n            return prepend + \"[Body is instance of java.io.OutputStream]\";\n        } else if (obj instanceof java.io.Reader) {\n            return prepend + \"[Body is instance of java.io.Reader]\";\n        } else if (obj instanceof java.io.Writer) {\n            return prepend + \"[Body is instance of java.io.Writer]\";\n        } else if ((obj instanceof org.apache.camel.WrappedFile) || (obj instanceof java.io.File)) {\n            if (!allowFiles) {\n                return ((prepend + \"[Body is file based: \") + obj) + \"]\";\n            }\n        }\n    }\n    if (!allowFiles) {\n        if ((obj instanceof org.apache.camel.WrappedFile) || (obj instanceof java.io.File)) {\n            return ((prepend + \"[Body is file based: \") + obj) + \"]\";\n        }\n    }\n    org.apache.camel.StreamCache cache = null;\n    java.io.InputStream is = null;\n    if (obj instanceof org.apache.camel.StreamCache) {\n        cache = ((org.apache.camel.StreamCache) (obj));\n        is = null;\n    } else if (obj instanceof java.io.InputStream) {\n        cache = null;\n        is = ((java.io.InputStream) (obj));\n    }\n    java.lang.String body = null;\n    if (message.getExchange() != null) {\n        try {\n            body = message.getExchange().getContext().getTypeConverter().convertTo(java.lang.String.class, message.getExchange(), obj);\n        } catch (java.lang.Exception e) {\n        }\n    }\n    if (body == null) {\n        body = obj.toString();\n    }\n    if (cache != null) {\n        cache.reset();\n    } else if ((is != null) && is.markSupported()) {\n        try {\n            is.reset();\n        } catch (java.io.IOException e) {\n        }\n    }\n    if (body == null) {\n        return prepend + \"[Body is null]\";\n    }\n    if ((maxChars > 0) && (body.length() > maxChars)) {\n        body = ((((body.substring(0, maxChars) + \"... [Body clipped after \") + maxChars) + \" chars, total length is \") + body.length()) + \"]\";\n    }\n    return prepend + body;\n}",
            "src_parent_type": "Block",
            "src_type": "If"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "If",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "LocalVariable",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "null",
            "src_parent": "org.apache.camel.StreamCache cache = null",
            "src_parent_type": "LocalVariable",
            "src_type": "Literal"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "If",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "is = null",
            "src_parent": "{\n    cache = ((org.apache.camel.StreamCache) (obj));\n    is = null;\n}",
            "src_parent_type": "Block",
            "src_type": "Assignment"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "If",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "if (obj instanceof java.io.InputStream) {\n    cache = null;\n    is = ((java.io.InputStream) (obj));\n}",
            "src_parent": "{\n    if (obj instanceof java.io.InputStream) {\n        cache = null;\n        is = ((java.io.InputStream) (obj));\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "If"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "Return",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "LocalVariable",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "cache != null",
            "dst_parent": "if (cache != null) {\n    cache.reset();\n} else if ((is != null) && is.markSupported()) {\n    try {\n        is.reset();\n    } catch (java.io.IOException e) {\n    }\n}",
            "dst_parent_type": "If",
            "dst_type": "BinaryOperator",
            "operator": "MOV",
            "src": "cache != null",
            "src_parent": "if (cache != null) {\n    cache.reset();\n}",
            "src_parent_type": "If",
            "src_type": "BinaryOperator"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "Return",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "LocalVariable",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "{\n    cache.reset();\n}",
            "dst_parent": "if (cache != null) {\n    cache.reset();\n} else if ((is != null) && is.markSupported()) {\n    try {\n        is.reset();\n    } catch (java.io.IOException e) {\n    }\n}",
            "dst_parent_type": "If",
            "dst_type": "Block",
            "operator": "MOV",
            "src": "{\n    cache.reset();\n}",
            "src_parent": "if (cache != null) {\n    cache.reset();\n}",
            "src_parent_type": "If",
            "src_type": "Block"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "If",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "cache = null",
            "dst_parent": "{\n    cache = null;\n    is = ((java.io.InputStream) (obj));\n}",
            "dst_parent_type": "Block",
            "dst_type": "Assignment",
            "operator": "MOV",
            "src": "cache = null",
            "src_parent": "{\n    cache = null;\n}",
            "src_parent_type": "Block",
            "src_type": "Assignment"
          }
        }
      ],
      "file_name": "MessageHelper"
    }
  ],
  "id": "camel_eab06182"
}