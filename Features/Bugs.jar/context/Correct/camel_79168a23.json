{
  "files": [
    {
      "features": [
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "true",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Method",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "org.apache.camel.util.ServiceHelper.startServices(lifecycleStrategies)",
            "src_parent": "{\n    if (isStreamCaching()) {\n        if (org.apache.camel.processor.interceptor.StreamCaching.getStreamCaching(this) == null) {\n            log.info(\"StreamCaching is enabled on CamelContext: \" + getName());\n            addInterceptStrategy(new org.apache.camel.processor.interceptor.StreamCaching());\n        }\n    }\n    if (isTracing()) {\n        log.info(\"Tracing is enabled on CamelContext: \" + getName());\n    }\n    if (isUseMDCLogging()) {\n        log.info(\"MDC logging is enabled on CamelContext: \" + getName());\n    }\n    if (isHandleFault()) {\n        if (org.apache.camel.processor.interceptor.HandleFault.getHandleFault(this) == null) {\n            log.info(\"HandleFault is enabled on CamelContext: \" + getName());\n            addInterceptStrategy(new org.apache.camel.processor.interceptor.HandleFault());\n        }\n    }\n    if ((getDelayer() != null) && (getDelayer() > 0)) {\n        if (org.apache.camel.processor.interceptor.Delayer.getDelayer(this) == null) {\n            long millis = getDelayer();\n            log.info(((\"Delayer is enabled with: \" + millis) + \" ms. on CamelContext: \") + getName());\n            addInterceptStrategy(new org.apache.camel.processor.interceptor.Delayer(millis));\n        }\n    }\n    if (getDebugger() != null) {\n        log.info(((\"Debugger: \" + getDebugger()) + \" is enabled on CamelContext: \") + getName());\n        getDebugger().setCamelContext(this);\n        startService(getDebugger());\n        addInterceptStrategy(new org.apache.camel.processor.interceptor.Debug(getDebugger()));\n    }\n    getManagementStrategy().start();\n    org.apache.camel.util.ServiceHelper.startServices(lifecycleStrategies);\n    java.util.Iterator<org.apache.camel.spi.LifecycleStrategy> it = lifecycleStrategies.iterator();\n    while (it.hasNext()) {\n        org.apache.camel.spi.LifecycleStrategy strategy = it.next();\n        try {\n            strategy.onContextStart(this);\n        } catch (org.apache.camel.VetoCamelContextStartException e) {\n            log.warn((\"Lifecycle strategy vetoed starting CamelContext (\" + getName()) + \")\", e);\n            throw e;\n        } catch (java.lang.Exception e) {\n            log.warn((((\"Lifecycle strategy \" + strategy) + \" failed starting CamelContext (\") + getName()) + \")\", e);\n            throw e;\n        }\n    } \n    for (org.apache.camel.spi.EventNotifier notifier : getManagementStrategy().getEventNotifiers()) {\n        if (notifier instanceof org.apache.camel.Service) {\n            org.apache.camel.Service service = ((org.apache.camel.Service) (notifier));\n            for (org.apache.camel.spi.LifecycleStrategy strategy : lifecycleStrategies) {\n                strategy.onServiceAdd(this, service, null);\n            }\n        }\n        if (notifier instanceof org.apache.camel.Service) {\n            startService(((org.apache.camel.Service) (notifier)));\n        }\n    }\n    org.apache.camel.util.EventHelper.notifyCamelContextStarting(this);\n    forceLazyInitialization();\n    endpoints = new org.apache.camel.impl.EndpointRegistry(this, endpoints);\n    addService(endpoints);\n    addService(executorServiceManager);\n    addService(producerServicePool);\n    addService(inflightRepository);\n    addService(shutdownStrategy);\n    addService(packageScanClassResolver);\n    startServices(components.values());\n    startRouteDefinitions(routeDefinitions);\n    if (doNotStartRoutesOnFirstStart) {\n        log.info(\"Cannot start routes as CamelContext has been configured with autoStartup=false\");\n    }\n    doStartOrResumeRoutes(routeServices, true, !doNotStartRoutesOnFirstStart, false, true);\n}",
            "src_parent_type": "Block",
            "src_type": "Invocation"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "true",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Method",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "shutdownServices(lifecycleStrategies)",
            "src_parent": "{\n    stopWatch.restart();\n    log.info((((\"Apache Camel \" + getVersion()) + \" (CamelContext:\") + getName()) + \") is shutting down\");\n    org.apache.camel.util.EventHelper.notifyCamelContextStopping(this);\n    try {\n        shutdownStrategy.shutdown(this, getRouteStartupOrder());\n    } catch (java.lang.Throwable e) {\n        log.warn(\"Error occurred while shutting down routes. This exception will be ignored.\", e);\n    }\n    getRouteStartupOrder().clear();\n    shutdownServices(routeServices.values());\n    suspendedRouteServices.clear();\n    org.apache.camel.util.ServiceHelper.stopAndShutdownService(getDebugger());\n    shutdownServices(endpoints.values());\n    endpoints.clear();\n    shutdownServices(components.values());\n    components.clear();\n    try {\n        for (org.apache.camel.spi.LifecycleStrategy strategy : lifecycleStrategies) {\n            strategy.onContextStop(this);\n        }\n    } catch (java.lang.Throwable e) {\n        log.warn(\"Error occurred while stopping lifecycle strategies. This exception will be ignored.\", e);\n    }\n    shutdownServices(servicesToClose);\n    servicesToClose.clear();\n    org.apache.camel.util.EventHelper.notifyCamelContextStopped(this);\n    for (org.apache.camel.spi.EventNotifier notifier : getManagementStrategy().getEventNotifiers()) {\n        shutdownServices(notifier);\n    }\n    shutdownServices(managementStrategy);\n    shutdownServices(lifecycleStrategies);\n    lifecycleStrategies.clear();\n    forceStopLazyInitialization();\n    stopWatch.stop();\n    if (log.isInfoEnabled()) {\n        log.info(\"Uptime: \" + getUptime());\n        log.info(((((\"Apache Camel \" + getVersion()) + \" (CamelContext: \") + getName()) + \") is shutdown in \") + org.apache.camel.util.TimeUtils.printDuration(stopWatch.taken()));\n    }\n    startDate = null;\n}",
            "src_parent_type": "Block",
            "src_type": "Invocation"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "true",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Method",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "lifecycleStrategies.clear()",
            "src_parent": "{\n    stopWatch.restart();\n    log.info((((\"Apache Camel \" + getVersion()) + \" (CamelContext:\") + getName()) + \") is shutting down\");\n    org.apache.camel.util.EventHelper.notifyCamelContextStopping(this);\n    try {\n        shutdownStrategy.shutdown(this, getRouteStartupOrder());\n    } catch (java.lang.Throwable e) {\n        log.warn(\"Error occurred while shutting down routes. This exception will be ignored.\", e);\n    }\n    getRouteStartupOrder().clear();\n    shutdownServices(routeServices.values());\n    suspendedRouteServices.clear();\n    org.apache.camel.util.ServiceHelper.stopAndShutdownService(getDebugger());\n    shutdownServices(endpoints.values());\n    endpoints.clear();\n    shutdownServices(components.values());\n    components.clear();\n    try {\n        for (org.apache.camel.spi.LifecycleStrategy strategy : lifecycleStrategies) {\n            strategy.onContextStop(this);\n        }\n    } catch (java.lang.Throwable e) {\n        log.warn(\"Error occurred while stopping lifecycle strategies. This exception will be ignored.\", e);\n    }\n    shutdownServices(servicesToClose);\n    servicesToClose.clear();\n    org.apache.camel.util.EventHelper.notifyCamelContextStopped(this);\n    for (org.apache.camel.spi.EventNotifier notifier : getManagementStrategy().getEventNotifiers()) {\n        shutdownServices(notifier);\n    }\n    shutdownServices(managementStrategy);\n    shutdownServices(lifecycleStrategies);\n    lifecycleStrategies.clear();\n    forceStopLazyInitialization();\n    stopWatch.stop();\n    if (log.isInfoEnabled()) {\n        log.info(\"Uptime: \" + getUptime());\n        log.info(((((\"Apache Camel \" + getVersion()) + \" (CamelContext: \") + getName()) + \") is shutdown in \") + org.apache.camel.util.TimeUtils.printDuration(stopWatch.taken()));\n    }\n    startDate = null;\n}",
            "src_parent_type": "Block",
            "src_type": "Invocation"
          }
        }
      ],
      "file_name": "DefaultCamelContext"
    }
  ],
  "id": "camel_79168a23"
}