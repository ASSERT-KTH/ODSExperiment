{
  "files": [
    {
      "features": [
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Throw",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "\"jcr:like | jcr:contains | jcr:score | jcr:deref | fn:lower-case | fn:upper-case\"",
            "dst_parent": "getSyntaxError(\"jcr:like | jcr:contains | jcr:score | jcr:deref | fn:lower-case | fn:upper-case\")",
            "dst_parent_type": "Invocation",
            "dst_type": "Literal",
            "operator": "UPD",
            "src": "\"jcr:like | jcr:contains | jcr:score | jcr:deref\"",
            "src_parent": "getSyntaxError(\"jcr:like | jcr:contains | jcr:score | jcr:deref\")",
            "src_parent_type": "Invocation",
            "src_type": "Literal"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "{\n    if (\"jcr:score\".equals(functionName)) {\n        org.apache.jackrabbit.oak.query.XPathToSQL2Converter.Function f = new org.apache.jackrabbit.oak.query.XPathToSQL2Converter.Function(\"score\");\n        read(\")\");\n        return f;\n    } else if (\"xs:dateTime\".equals(functionName)) {\n        org.apache.jackrabbit.oak.query.XPathToSQL2Converter.Expression expr = parseExpression();\n        org.apache.jackrabbit.oak.query.XPathToSQL2Converter.Cast c = new org.apache.jackrabbit.oak.query.XPathToSQL2Converter.Cast(expr, \"date\");\n        read(\")\");\n        return c;\n    } else if (\"fn:lower-case\".equals(functionName)) {\n        org.apache.jackrabbit.oak.query.XPathToSQL2Converter.Function f = new org.apache.jackrabbit.oak.query.XPathToSQL2Converter.Function(\"lower\");\n        f.params.add(parseExpression());\n        read(\")\");\n        return f;\n    } else if (\"fn:upper-case\".equals(functionName)) {\n        org.apache.jackrabbit.oak.query.XPathToSQL2Converter.Function f = new org.apache.jackrabbit.oak.query.XPathToSQL2Converter.Function(\"upper\");\n        f.params.add(parseExpression());\n        read(\")\");\n        return f;\n    } else {\n        throw getSyntaxError(\"jcr:like | jcr:contains | jcr:score | jcr:deref | fn:lower-case | fn:upper-case\");\n    }\n}",
            "src_parent": "if (\"jcr:contains\".equals(functionName)) {\n    org.apache.jackrabbit.oak.query.XPathToSQL2Converter.Function f = new org.apache.jackrabbit.oak.query.XPathToSQL2Converter.Function(\"contains\");\n    if (readIf(\".\")) {\n        f.params.add(new org.apache.jackrabbit.oak.query.XPathToSQL2Converter.Literal(\"*\"));\n    } else {\n        f.params.add(parseExpression());\n    }\n    read(\",\");\n    f.params.add(parseExpression());\n    read(\")\");\n    return f;\n} else if (\"jcr:score\".equals(functionName)) {\n    org.apache.jackrabbit.oak.query.XPathToSQL2Converter.Function f = new org.apache.jackrabbit.oak.query.XPathToSQL2Converter.Function(\"score\");\n    read(\")\");\n    return f;\n} else if (\"xs:dateTime\".equals(functionName)) {\n    org.apache.jackrabbit.oak.query.XPathToSQL2Converter.Expression expr = parseExpression();\n    org.apache.jackrabbit.oak.query.XPathToSQL2Converter.Cast c = new org.apache.jackrabbit.oak.query.XPathToSQL2Converter.Cast(expr, \"date\");\n    read(\")\");\n    return c;\n} else if (\"fn:lower-case\".equals(functionName)) {\n    org.apache.jackrabbit.oak.query.XPathToSQL2Converter.Function f = new org.apache.jackrabbit.oak.query.XPathToSQL2Converter.Function(\"lower\");\n    f.params.add(parseExpression());\n    read(\")\");\n    return f;\n} else if (\"fn:upper-case\".equals(functionName)) {\n    org.apache.jackrabbit.oak.query.XPathToSQL2Converter.Function f = new org.apache.jackrabbit.oak.query.XPathToSQL2Converter.Function(\"upper\");\n    f.params.add(parseExpression());\n    read(\")\");\n    return f;\n} else {\n    throw getSyntaxError(\"jcr:like | jcr:contains | jcr:score | jcr:deref | fn:lower-case | fn:upper-case\");\n}",
            "src_parent_type": "If",
            "src_type": "Block"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Assignment",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "Assignment",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Case",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "While",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "((type != org.apache.jackrabbit.oak.query.XPathToSQL2Converter.CHAR_NAME) && (type != org.apache.jackrabbit.oak.query.XPathToSQL2Converter.CHAR_VALUE)) && (chars[i] != '-')",
            "src_parent": "if (((type != org.apache.jackrabbit.oak.query.XPathToSQL2Converter.CHAR_NAME) && (type != org.apache.jackrabbit.oak.query.XPathToSQL2Converter.CHAR_VALUE)) && (chars[i] != '-')) {\n    c = chars[i];\n    break;\n}",
            "src_parent_type": "If",
            "src_type": "BinaryOperator"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "\"fn:lower-case\".equals(functionName)",
            "src_parent": "if (\"fn:lower-case\".equals(functionName)) {\n    org.apache.jackrabbit.oak.query.XPathToSQL2Converter.Function f = new org.apache.jackrabbit.oak.query.XPathToSQL2Converter.Function(\"lower\");\n    f.params.add(parseExpression());\n    read(\")\");\n    return f;\n} else if (\"fn:upper-case\".equals(functionName)) {\n    org.apache.jackrabbit.oak.query.XPathToSQL2Converter.Function f = new org.apache.jackrabbit.oak.query.XPathToSQL2Converter.Function(\"upper\");\n    f.params.add(parseExpression());\n    read(\")\");\n    return f;\n} else {\n    throw getSyntaxError(\"jcr:like | jcr:contains | jcr:score | jcr:deref | fn:lower-case | fn:upper-case\");\n}",
            "src_parent_type": "If",
            "src_type": "Invocation"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "{\n    org.apache.jackrabbit.oak.query.XPathToSQL2Converter.Function f = new org.apache.jackrabbit.oak.query.XPathToSQL2Converter.Function(\"lower\");\n    f.params.add(parseExpression());\n    read(\")\");\n    return f;\n}",
            "src_parent": "if (\"fn:lower-case\".equals(functionName)) {\n    org.apache.jackrabbit.oak.query.XPathToSQL2Converter.Function f = new org.apache.jackrabbit.oak.query.XPathToSQL2Converter.Function(\"lower\");\n    f.params.add(parseExpression());\n    read(\")\");\n    return f;\n} else if (\"fn:upper-case\".equals(functionName)) {\n    org.apache.jackrabbit.oak.query.XPathToSQL2Converter.Function f = new org.apache.jackrabbit.oak.query.XPathToSQL2Converter.Function(\"upper\");\n    f.params.add(parseExpression());\n    read(\")\");\n    return f;\n} else {\n    throw getSyntaxError(\"jcr:like | jcr:contains | jcr:score | jcr:deref | fn:lower-case | fn:upper-case\");\n}",
            "src_parent_type": "If",
            "src_type": "Block"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "\"fn:upper-case\".equals(functionName)",
            "src_parent": "if (\"fn:upper-case\".equals(functionName)) {\n    org.apache.jackrabbit.oak.query.XPathToSQL2Converter.Function f = new org.apache.jackrabbit.oak.query.XPathToSQL2Converter.Function(\"upper\");\n    f.params.add(parseExpression());\n    read(\")\");\n    return f;\n} else {\n    throw getSyntaxError(\"jcr:like | jcr:contains | jcr:score | jcr:deref | fn:lower-case | fn:upper-case\");\n}",
            "src_parent_type": "If",
            "src_type": "Invocation"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "{\n    org.apache.jackrabbit.oak.query.XPathToSQL2Converter.Function f = new org.apache.jackrabbit.oak.query.XPathToSQL2Converter.Function(\"upper\");\n    f.params.add(parseExpression());\n    read(\")\");\n    return f;\n}",
            "src_parent": "if (\"fn:upper-case\".equals(functionName)) {\n    org.apache.jackrabbit.oak.query.XPathToSQL2Converter.Function f = new org.apache.jackrabbit.oak.query.XPathToSQL2Converter.Function(\"upper\");\n    f.params.add(parseExpression());\n    read(\")\");\n    return f;\n} else {\n    throw getSyntaxError(\"jcr:like | jcr:contains | jcr:score | jcr:deref | fn:lower-case | fn:upper-case\");\n}",
            "src_parent_type": "If",
            "src_type": "Block"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "\"jcr:score\".equals(functionName)",
            "dst_parent": "if (\"jcr:score\".equals(functionName)) {\n    org.apache.jackrabbit.oak.query.XPathToSQL2Converter.Function f = new org.apache.jackrabbit.oak.query.XPathToSQL2Converter.Function(\"score\");\n    read(\")\");\n    return f;\n} else if (\"xs:dateTime\".equals(functionName)) {\n    org.apache.jackrabbit.oak.query.XPathToSQL2Converter.Expression expr = parseExpression();\n    org.apache.jackrabbit.oak.query.XPathToSQL2Converter.Cast c = new org.apache.jackrabbit.oak.query.XPathToSQL2Converter.Cast(expr, \"date\");\n    read(\")\");\n    return c;\n} else if (\"fn:lower-case\".equals(functionName)) {\n    org.apache.jackrabbit.oak.query.XPathToSQL2Converter.Function f = new org.apache.jackrabbit.oak.query.XPathToSQL2Converter.Function(\"lower\");\n    f.params.add(parseExpression());\n    read(\")\");\n    return f;\n} else if (\"fn:upper-case\".equals(functionName)) {\n    org.apache.jackrabbit.oak.query.XPathToSQL2Converter.Function f = new org.apache.jackrabbit.oak.query.XPathToSQL2Converter.Function(\"upper\");\n    f.params.add(parseExpression());\n    read(\")\");\n    return f;\n} else {\n    throw getSyntaxError(\"jcr:like | jcr:contains | jcr:score | jcr:deref | fn:lower-case | fn:upper-case\");\n}",
            "dst_parent_type": "If",
            "dst_type": "Invocation",
            "operator": "MOV",
            "src": "\"jcr:score\".equals(functionName)",
            "src_parent": "if (\"jcr:score\".equals(functionName)) {\n    org.apache.jackrabbit.oak.query.XPathToSQL2Converter.Function f = new org.apache.jackrabbit.oak.query.XPathToSQL2Converter.Function(\"score\");\n    read(\")\");\n    return f;\n} else if (\"xs:dateTime\".equals(functionName)) {\n    org.apache.jackrabbit.oak.query.XPathToSQL2Converter.Expression expr = parseExpression();\n    org.apache.jackrabbit.oak.query.XPathToSQL2Converter.Cast c = new org.apache.jackrabbit.oak.query.XPathToSQL2Converter.Cast(expr, \"date\");\n    read(\")\");\n    return c;\n} else {\n    throw getSyntaxError(\"jcr:like | jcr:contains | jcr:score | jcr:deref\");\n}",
            "src_parent_type": "If",
            "src_type": "Invocation"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "{\n    org.apache.jackrabbit.oak.query.XPathToSQL2Converter.Function f = new org.apache.jackrabbit.oak.query.XPathToSQL2Converter.Function(\"score\");\n    read(\")\");\n    return f;\n}",
            "dst_parent": "if (\"jcr:score\".equals(functionName)) {\n    org.apache.jackrabbit.oak.query.XPathToSQL2Converter.Function f = new org.apache.jackrabbit.oak.query.XPathToSQL2Converter.Function(\"score\");\n    read(\")\");\n    return f;\n} else if (\"xs:dateTime\".equals(functionName)) {\n    org.apache.jackrabbit.oak.query.XPathToSQL2Converter.Expression expr = parseExpression();\n    org.apache.jackrabbit.oak.query.XPathToSQL2Converter.Cast c = new org.apache.jackrabbit.oak.query.XPathToSQL2Converter.Cast(expr, \"date\");\n    read(\")\");\n    return c;\n} else if (\"fn:lower-case\".equals(functionName)) {\n    org.apache.jackrabbit.oak.query.XPathToSQL2Converter.Function f = new org.apache.jackrabbit.oak.query.XPathToSQL2Converter.Function(\"lower\");\n    f.params.add(parseExpression());\n    read(\")\");\n    return f;\n} else if (\"fn:upper-case\".equals(functionName)) {\n    org.apache.jackrabbit.oak.query.XPathToSQL2Converter.Function f = new org.apache.jackrabbit.oak.query.XPathToSQL2Converter.Function(\"upper\");\n    f.params.add(parseExpression());\n    read(\")\");\n    return f;\n} else {\n    throw getSyntaxError(\"jcr:like | jcr:contains | jcr:score | jcr:deref | fn:lower-case | fn:upper-case\");\n}",
            "dst_parent_type": "If",
            "dst_type": "Block",
            "operator": "MOV",
            "src": "{\n    org.apache.jackrabbit.oak.query.XPathToSQL2Converter.Function f = new org.apache.jackrabbit.oak.query.XPathToSQL2Converter.Function(\"score\");\n    read(\")\");\n    return f;\n}",
            "src_parent": "if (\"jcr:score\".equals(functionName)) {\n    org.apache.jackrabbit.oak.query.XPathToSQL2Converter.Function f = new org.apache.jackrabbit.oak.query.XPathToSQL2Converter.Function(\"score\");\n    read(\")\");\n    return f;\n} else if (\"xs:dateTime\".equals(functionName)) {\n    org.apache.jackrabbit.oak.query.XPathToSQL2Converter.Expression expr = parseExpression();\n    org.apache.jackrabbit.oak.query.XPathToSQL2Converter.Cast c = new org.apache.jackrabbit.oak.query.XPathToSQL2Converter.Cast(expr, \"date\");\n    read(\")\");\n    return c;\n} else {\n    throw getSyntaxError(\"jcr:like | jcr:contains | jcr:score | jcr:deref\");\n}",
            "src_parent_type": "If",
            "src_type": "Block"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "UnaryOperator",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "Assignment",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "While",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "((type != org.apache.jackrabbit.oak.query.XPathToSQL2Converter.CHAR_NAME) && (type != org.apache.jackrabbit.oak.query.XPathToSQL2Converter.CHAR_VALUE))",
            "dst_parent": "((type != org.apache.jackrabbit.oak.query.XPathToSQL2Converter.CHAR_NAME) && (type != org.apache.jackrabbit.oak.query.XPathToSQL2Converter.CHAR_VALUE)) && (chars[i] != '-')",
            "dst_parent_type": "BinaryOperator",
            "dst_type": "BinaryOperator",
            "operator": "MOV",
            "src": "(type != org.apache.jackrabbit.oak.query.XPathToSQL2Converter.CHAR_NAME) && (type != org.apache.jackrabbit.oak.query.XPathToSQL2Converter.CHAR_VALUE)",
            "src_parent": "if ((type != org.apache.jackrabbit.oak.query.XPathToSQL2Converter.CHAR_NAME) && (type != org.apache.jackrabbit.oak.query.XPathToSQL2Converter.CHAR_VALUE)) {\n    c = chars[i];\n    break;\n}",
            "src_parent_type": "If",
            "src_type": "BinaryOperator"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "\"xs:dateTime\".equals(functionName)",
            "dst_parent": "if (\"xs:dateTime\".equals(functionName)) {\n    org.apache.jackrabbit.oak.query.XPathToSQL2Converter.Expression expr = parseExpression();\n    org.apache.jackrabbit.oak.query.XPathToSQL2Converter.Cast c = new org.apache.jackrabbit.oak.query.XPathToSQL2Converter.Cast(expr, \"date\");\n    read(\")\");\n    return c;\n} else if (\"fn:lower-case\".equals(functionName)) {\n    org.apache.jackrabbit.oak.query.XPathToSQL2Converter.Function f = new org.apache.jackrabbit.oak.query.XPathToSQL2Converter.Function(\"lower\");\n    f.params.add(parseExpression());\n    read(\")\");\n    return f;\n} else if (\"fn:upper-case\".equals(functionName)) {\n    org.apache.jackrabbit.oak.query.XPathToSQL2Converter.Function f = new org.apache.jackrabbit.oak.query.XPathToSQL2Converter.Function(\"upper\");\n    f.params.add(parseExpression());\n    read(\")\");\n    return f;\n} else {\n    throw getSyntaxError(\"jcr:like | jcr:contains | jcr:score | jcr:deref | fn:lower-case | fn:upper-case\");\n}",
            "dst_parent_type": "If",
            "dst_type": "Invocation",
            "operator": "MOV",
            "src": "\"xs:dateTime\".equals(functionName)",
            "src_parent": "if (\"xs:dateTime\".equals(functionName)) {\n    org.apache.jackrabbit.oak.query.XPathToSQL2Converter.Expression expr = parseExpression();\n    org.apache.jackrabbit.oak.query.XPathToSQL2Converter.Cast c = new org.apache.jackrabbit.oak.query.XPathToSQL2Converter.Cast(expr, \"date\");\n    read(\")\");\n    return c;\n} else {\n    throw getSyntaxError(\"jcr:like | jcr:contains | jcr:score | jcr:deref\");\n}",
            "src_parent_type": "If",
            "src_type": "Invocation"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "{\n    org.apache.jackrabbit.oak.query.XPathToSQL2Converter.Expression expr = parseExpression();\n    org.apache.jackrabbit.oak.query.XPathToSQL2Converter.Cast c = new org.apache.jackrabbit.oak.query.XPathToSQL2Converter.Cast(expr, \"date\");\n    read(\")\");\n    return c;\n}",
            "dst_parent": "if (\"xs:dateTime\".equals(functionName)) {\n    org.apache.jackrabbit.oak.query.XPathToSQL2Converter.Expression expr = parseExpression();\n    org.apache.jackrabbit.oak.query.XPathToSQL2Converter.Cast c = new org.apache.jackrabbit.oak.query.XPathToSQL2Converter.Cast(expr, \"date\");\n    read(\")\");\n    return c;\n} else if (\"fn:lower-case\".equals(functionName)) {\n    org.apache.jackrabbit.oak.query.XPathToSQL2Converter.Function f = new org.apache.jackrabbit.oak.query.XPathToSQL2Converter.Function(\"lower\");\n    f.params.add(parseExpression());\n    read(\")\");\n    return f;\n} else if (\"fn:upper-case\".equals(functionName)) {\n    org.apache.jackrabbit.oak.query.XPathToSQL2Converter.Function f = new org.apache.jackrabbit.oak.query.XPathToSQL2Converter.Function(\"upper\");\n    f.params.add(parseExpression());\n    read(\")\");\n    return f;\n} else {\n    throw getSyntaxError(\"jcr:like | jcr:contains | jcr:score | jcr:deref | fn:lower-case | fn:upper-case\");\n}",
            "dst_parent_type": "If",
            "dst_type": "Block",
            "operator": "MOV",
            "src": "{\n    org.apache.jackrabbit.oak.query.XPathToSQL2Converter.Expression expr = parseExpression();\n    org.apache.jackrabbit.oak.query.XPathToSQL2Converter.Cast c = new org.apache.jackrabbit.oak.query.XPathToSQL2Converter.Cast(expr, \"date\");\n    read(\")\");\n    return c;\n}",
            "src_parent": "if (\"xs:dateTime\".equals(functionName)) {\n    org.apache.jackrabbit.oak.query.XPathToSQL2Converter.Expression expr = parseExpression();\n    org.apache.jackrabbit.oak.query.XPathToSQL2Converter.Cast c = new org.apache.jackrabbit.oak.query.XPathToSQL2Converter.Cast(expr, \"date\");\n    read(\")\");\n    return c;\n} else {\n    throw getSyntaxError(\"jcr:like | jcr:contains | jcr:score | jcr:deref\");\n}",
            "src_parent_type": "If",
            "src_type": "Block"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "{\n    if (\"fn:lower-case\".equals(functionName)) {\n        org.apache.jackrabbit.oak.query.XPathToSQL2Converter.Function f = new org.apache.jackrabbit.oak.query.XPathToSQL2Converter.Function(\"lower\");\n        f.params.add(parseExpression());\n        read(\")\");\n        return f;\n    } else if (\"fn:upper-case\".equals(functionName)) {\n        org.apache.jackrabbit.oak.query.XPathToSQL2Converter.Function f = new org.apache.jackrabbit.oak.query.XPathToSQL2Converter.Function(\"upper\");\n        f.params.add(parseExpression());\n        read(\")\");\n        return f;\n    } else {\n        throw getSyntaxError(\"jcr:like | jcr:contains | jcr:score | jcr:deref | fn:lower-case | fn:upper-case\");\n    }\n}",
            "dst_parent": "if (\"xs:dateTime\".equals(functionName)) {\n    org.apache.jackrabbit.oak.query.XPathToSQL2Converter.Expression expr = parseExpression();\n    org.apache.jackrabbit.oak.query.XPathToSQL2Converter.Cast c = new org.apache.jackrabbit.oak.query.XPathToSQL2Converter.Cast(expr, \"date\");\n    read(\")\");\n    return c;\n} else if (\"fn:lower-case\".equals(functionName)) {\n    org.apache.jackrabbit.oak.query.XPathToSQL2Converter.Function f = new org.apache.jackrabbit.oak.query.XPathToSQL2Converter.Function(\"lower\");\n    f.params.add(parseExpression());\n    read(\")\");\n    return f;\n} else if (\"fn:upper-case\".equals(functionName)) {\n    org.apache.jackrabbit.oak.query.XPathToSQL2Converter.Function f = new org.apache.jackrabbit.oak.query.XPathToSQL2Converter.Function(\"upper\");\n    f.params.add(parseExpression());\n    read(\")\");\n    return f;\n} else {\n    throw getSyntaxError(\"jcr:like | jcr:contains | jcr:score | jcr:deref | fn:lower-case | fn:upper-case\");\n}",
            "dst_parent_type": "If",
            "dst_type": "Block",
            "operator": "MOV",
            "src": "{\n    if (\"jcr:score\".equals(functionName)) {\n        org.apache.jackrabbit.oak.query.XPathToSQL2Converter.Function f = new org.apache.jackrabbit.oak.query.XPathToSQL2Converter.Function(\"score\");\n        read(\")\");\n        return f;\n    } else if (\"xs:dateTime\".equals(functionName)) {\n        org.apache.jackrabbit.oak.query.XPathToSQL2Converter.Expression expr = parseExpression();\n        org.apache.jackrabbit.oak.query.XPathToSQL2Converter.Cast c = new org.apache.jackrabbit.oak.query.XPathToSQL2Converter.Cast(expr, \"date\");\n        read(\")\");\n        return c;\n    } else {\n        throw getSyntaxError(\"jcr:like | jcr:contains | jcr:score | jcr:deref\");\n    }\n}",
            "src_parent": "if (\"jcr:contains\".equals(functionName)) {\n    org.apache.jackrabbit.oak.query.XPathToSQL2Converter.Function f = new org.apache.jackrabbit.oak.query.XPathToSQL2Converter.Function(\"contains\");\n    if (readIf(\".\")) {\n        f.params.add(new org.apache.jackrabbit.oak.query.XPathToSQL2Converter.Literal(\"*\"));\n    } else {\n        f.params.add(parseExpression());\n    }\n    read(\",\");\n    f.params.add(parseExpression());\n    read(\")\");\n    return f;\n} else if (\"jcr:score\".equals(functionName)) {\n    org.apache.jackrabbit.oak.query.XPathToSQL2Converter.Function f = new org.apache.jackrabbit.oak.query.XPathToSQL2Converter.Function(\"score\");\n    read(\")\");\n    return f;\n} else if (\"xs:dateTime\".equals(functionName)) {\n    org.apache.jackrabbit.oak.query.XPathToSQL2Converter.Expression expr = parseExpression();\n    org.apache.jackrabbit.oak.query.XPathToSQL2Converter.Cast c = new org.apache.jackrabbit.oak.query.XPathToSQL2Converter.Cast(expr, \"date\");\n    read(\")\");\n    return c;\n} else {\n    throw getSyntaxError(\"jcr:like | jcr:contains | jcr:score | jcr:deref\");\n}",
            "src_parent_type": "If",
            "src_type": "Block"
          }
        }
      ],
      "file_name": "XPathToSQL2Converter"
    }
  ],
  "id": "jackrabbit-oak_e33328e0"
}