{
  "files": [
    {
      "features": [
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "If",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "LocalVariable",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "final java.lang.String marker = \"wicket-\" + getGroup().getMarkupId()",
            "src_parent": "{\n    super.onComponentTag(tag);\n    checkComponentTag(tag, \"input\");\n    checkComponentTagAttribute(tag, \"type\", \"radio\");\n    final java.lang.String value = getValue();\n    org.apache.wicket.markup.html.form.RadioGroup<?> group = getGroup();\n    tag.put(\"name\", group.getInputName());\n    tag.put(\"value\", value);\n    if (group.hasRawInput()) {\n        java.lang.String rawInput = group.getRawInput();\n        if ((rawInput != null) && rawInput.equals(value)) {\n            tag.put(\"checked\", \"checked\");\n        }\n    } else if (group.getModelComparator().compare(group, org.apache.wicket.markup.html.form.Radio.getDefaultModelObject())) {\n        tag.put(\"checked\", \"checked\");\n    }\n    if (group.wantOnSelectionChangedNotifications()) {\n        java.lang.CharSequence url = group.urlFor(IOnChangeListener.INTERFACE, new org.apache.wicket.request.mapper.parameter.PageParameters());\n        org.apache.wicket.markup.html.form.Form<?> form = group.findParent(org.apache.wicket.markup.html.form.Form.class);\n        if (form != null) {\n            tag.put(\"onclick\", form.getJsForInterfaceUrl(url));\n        } else {\n            tag.put(\"onclick\", (((\"window.location.href='\" + url) + (url.toString().indexOf('?') > (-1) ? \"&\" : \"?\")) + group.getInputName()) + \"=' + this.value;\");\n        }\n    }\n    if (!org.apache.wicket.markup.html.form.Radio.isEnabledInHierarchy()) {\n        tag.put(org.apache.wicket.markup.html.form.Radio.ATTR_DISABLED, org.apache.wicket.markup.html.form.Radio.ATTR_DISABLED);\n    }\n    final java.lang.String marker = \"wicket-\" + getGroup().getMarkupId();\n    java.lang.String clazz = tag.getAttribute(\"class\");\n    if (org.apache.wicket.util.string.Strings.isEmpty(clazz)) {\n        clazz = marker;\n    } else {\n        clazz = (clazz + \" \") + marker;\n    }\n    tag.put(\"class\", clazz);\n}",
            "src_parent_type": "Block",
            "src_type": "LocalVariable"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "If",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "LocalVariable",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "java.lang.String clazz = tag.getAttribute(\"class\")",
            "src_parent": "{\n    super.onComponentTag(tag);\n    checkComponentTag(tag, \"input\");\n    checkComponentTagAttribute(tag, \"type\", \"radio\");\n    final java.lang.String value = getValue();\n    org.apache.wicket.markup.html.form.RadioGroup<?> group = getGroup();\n    tag.put(\"name\", group.getInputName());\n    tag.put(\"value\", value);\n    if (group.hasRawInput()) {\n        java.lang.String rawInput = group.getRawInput();\n        if ((rawInput != null) && rawInput.equals(value)) {\n            tag.put(\"checked\", \"checked\");\n        }\n    } else if (group.getModelComparator().compare(group, org.apache.wicket.markup.html.form.Radio.getDefaultModelObject())) {\n        tag.put(\"checked\", \"checked\");\n    }\n    if (group.wantOnSelectionChangedNotifications()) {\n        java.lang.CharSequence url = group.urlFor(IOnChangeListener.INTERFACE, new org.apache.wicket.request.mapper.parameter.PageParameters());\n        org.apache.wicket.markup.html.form.Form<?> form = group.findParent(org.apache.wicket.markup.html.form.Form.class);\n        if (form != null) {\n            tag.put(\"onclick\", form.getJsForInterfaceUrl(url));\n        } else {\n            tag.put(\"onclick\", (((\"window.location.href='\" + url) + (url.toString().indexOf('?') > (-1) ? \"&\" : \"?\")) + group.getInputName()) + \"=' + this.value;\");\n        }\n    }\n    if (!org.apache.wicket.markup.html.form.Radio.isEnabledInHierarchy()) {\n        tag.put(org.apache.wicket.markup.html.form.Radio.ATTR_DISABLED, org.apache.wicket.markup.html.form.Radio.ATTR_DISABLED);\n    }\n    final java.lang.String marker = \"wicket-\" + getGroup().getMarkupId();\n    java.lang.String clazz = tag.getAttribute(\"class\");\n    if (org.apache.wicket.util.string.Strings.isEmpty(clazz)) {\n        clazz = marker;\n    } else {\n        clazz = (clazz + \" \") + marker;\n    }\n    tag.put(\"class\", clazz);\n}",
            "src_parent_type": "Block",
            "src_type": "LocalVariable"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "If",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "if (org.apache.wicket.util.string.Strings.isEmpty(clazz)) {\n    clazz = marker;\n} else {\n    clazz = (clazz + \" \") + marker;\n}",
            "src_parent": "{\n    super.onComponentTag(tag);\n    checkComponentTag(tag, \"input\");\n    checkComponentTagAttribute(tag, \"type\", \"radio\");\n    final java.lang.String value = getValue();\n    org.apache.wicket.markup.html.form.RadioGroup<?> group = getGroup();\n    tag.put(\"name\", group.getInputName());\n    tag.put(\"value\", value);\n    if (group.hasRawInput()) {\n        java.lang.String rawInput = group.getRawInput();\n        if ((rawInput != null) && rawInput.equals(value)) {\n            tag.put(\"checked\", \"checked\");\n        }\n    } else if (group.getModelComparator().compare(group, org.apache.wicket.markup.html.form.Radio.getDefaultModelObject())) {\n        tag.put(\"checked\", \"checked\");\n    }\n    if (group.wantOnSelectionChangedNotifications()) {\n        java.lang.CharSequence url = group.urlFor(IOnChangeListener.INTERFACE, new org.apache.wicket.request.mapper.parameter.PageParameters());\n        org.apache.wicket.markup.html.form.Form<?> form = group.findParent(org.apache.wicket.markup.html.form.Form.class);\n        if (form != null) {\n            tag.put(\"onclick\", form.getJsForInterfaceUrl(url));\n        } else {\n            tag.put(\"onclick\", (((\"window.location.href='\" + url) + (url.toString().indexOf('?') > (-1) ? \"&\" : \"?\")) + group.getInputName()) + \"=' + this.value;\");\n        }\n    }\n    if (!org.apache.wicket.markup.html.form.Radio.isEnabledInHierarchy()) {\n        tag.put(org.apache.wicket.markup.html.form.Radio.ATTR_DISABLED, org.apache.wicket.markup.html.form.Radio.ATTR_DISABLED);\n    }\n    final java.lang.String marker = \"wicket-\" + getGroup().getMarkupId();\n    java.lang.String clazz = tag.getAttribute(\"class\");\n    if (org.apache.wicket.util.string.Strings.isEmpty(clazz)) {\n        clazz = marker;\n    } else {\n        clazz = (clazz + \" \") + marker;\n    }\n    tag.put(\"class\", clazz);\n}",
            "src_parent_type": "Block",
            "src_type": "If"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "LocalVariable",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Invocation",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "tag.put(\"class\", clazz)",
            "src_parent": "{\n    super.onComponentTag(tag);\n    checkComponentTag(tag, \"input\");\n    checkComponentTagAttribute(tag, \"type\", \"radio\");\n    final java.lang.String value = getValue();\n    org.apache.wicket.markup.html.form.RadioGroup<?> group = getGroup();\n    tag.put(\"name\", group.getInputName());\n    tag.put(\"value\", value);\n    if (group.hasRawInput()) {\n        java.lang.String rawInput = group.getRawInput();\n        if ((rawInput != null) && rawInput.equals(value)) {\n            tag.put(\"checked\", \"checked\");\n        }\n    } else if (group.getModelComparator().compare(group, org.apache.wicket.markup.html.form.Radio.getDefaultModelObject())) {\n        tag.put(\"checked\", \"checked\");\n    }\n    if (group.wantOnSelectionChangedNotifications()) {\n        java.lang.CharSequence url = group.urlFor(IOnChangeListener.INTERFACE, new org.apache.wicket.request.mapper.parameter.PageParameters());\n        org.apache.wicket.markup.html.form.Form<?> form = group.findParent(org.apache.wicket.markup.html.form.Form.class);\n        if (form != null) {\n            tag.put(\"onclick\", form.getJsForInterfaceUrl(url));\n        } else {\n            tag.put(\"onclick\", (((\"window.location.href='\" + url) + (url.toString().indexOf('?') > (-1) ? \"&\" : \"?\")) + group.getInputName()) + \"=' + this.value;\");\n        }\n    }\n    if (!org.apache.wicket.markup.html.form.Radio.isEnabledInHierarchy()) {\n        tag.put(org.apache.wicket.markup.html.form.Radio.ATTR_DISABLED, org.apache.wicket.markup.html.form.Radio.ATTR_DISABLED);\n    }\n    final java.lang.String marker = \"wicket-\" + getGroup().getMarkupId();\n    java.lang.String clazz = tag.getAttribute(\"class\");\n    if (org.apache.wicket.util.string.Strings.isEmpty(clazz)) {\n        clazz = marker;\n    } else {\n        clazz = (clazz + \" \") + marker;\n    }\n    tag.put(\"class\", clazz);\n}",
            "src_parent_type": "Block",
            "src_type": "Invocation"
          }
        }
      ],
      "file_name": "Radio"
    }
  ],
  "id": "wicket_813d8bee"
}