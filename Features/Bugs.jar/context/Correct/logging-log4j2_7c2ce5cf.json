{
  "files": [
    {
      "features": [
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "If",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Invocation",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "java.util.Calendar.HOUR_OF_DAY",
            "dst_parent": "cal.set(java.util.Calendar.HOUR_OF_DAY, currentCal.get(java.util.Calendar.HOUR_OF_DAY))",
            "dst_parent_type": "Invocation",
            "dst_type": "FieldRead",
            "operator": "UPD",
            "src": "java.util.Calendar.HOUR",
            "src_parent": "cal.set(java.util.Calendar.HOUR, currentCal.get(java.util.Calendar.HOUR))",
            "src_parent_type": "Invocation",
            "src_type": "FieldRead"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "If",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Invocation",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "java.util.Calendar.HOUR_OF_DAY",
            "dst_parent": "currentCal.get(java.util.Calendar.HOUR_OF_DAY)",
            "dst_parent_type": "Invocation",
            "dst_type": "FieldRead",
            "operator": "UPD",
            "src": "java.util.Calendar.HOUR",
            "src_parent": "currentCal.get(java.util.Calendar.HOUR)",
            "src_parent_type": "Invocation",
            "src_type": "FieldRead"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Assignment",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "Assignment",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Invocation",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "java.util.Calendar.HOUR_OF_DAY",
            "dst_parent": "increment(cal, java.util.Calendar.HOUR_OF_DAY, increment, modulus)",
            "dst_parent_type": "Invocation",
            "dst_type": "FieldRead",
            "operator": "UPD",
            "src": "java.util.Calendar.HOUR",
            "src_parent": "increment(cal, java.util.Calendar.HOUR, increment, modulus)",
            "src_parent_type": "Invocation",
            "src_type": "FieldRead"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Assignment",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "Return",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "Assignment",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Invocation",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "java.util.Calendar.HOUR_OF_DAY",
            "dst_parent": "cal.add(java.util.Calendar.HOUR_OF_DAY, -1)",
            "dst_parent_type": "Invocation",
            "dst_type": "FieldRead",
            "operator": "UPD",
            "src": "java.util.Calendar.HOUR",
            "src_parent": "cal.add(java.util.Calendar.HOUR, -1)",
            "src_parent_type": "Invocation",
            "src_type": "FieldRead"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Method",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "cal.set(java.util.Calendar.MONTH, currentCal.get(java.util.Calendar.MONTH))",
            "src_parent": "{\n    prevFileTime = nextFileTime;\n    long nextTime;\n    if (frequency == null) {\n        throw new java.lang.IllegalStateException(\"Pattern does not contain a date\");\n    }\n    final java.util.Calendar currentCal = java.util.Calendar.getInstance();\n    currentCal.setTimeInMillis(current);\n    final java.util.Calendar cal = java.util.Calendar.getInstance();\n    cal.set(currentCal.get(java.util.Calendar.YEAR), 0, 1, 0, 0, 0);\n    cal.set(java.util.Calendar.MILLISECOND, 0);\n    if (frequency == org.apache.logging.log4j.core.appender.rolling.RolloverFrequency.ANNUALLY) {\n        increment(cal, java.util.Calendar.YEAR, increment, modulus);\n        nextTime = cal.getTimeInMillis();\n        cal.add(java.util.Calendar.YEAR, -1);\n        nextFileTime = cal.getTimeInMillis();\n        return nextTime;\n    }\n    cal.set(java.util.Calendar.MONTH, currentCal.get(java.util.Calendar.MONTH));\n    if (frequency == org.apache.logging.log4j.core.appender.rolling.RolloverFrequency.MONTHLY) {\n        increment(cal, java.util.Calendar.MONTH, increment, modulus);\n        nextTime = cal.getTimeInMillis();\n        cal.add(java.util.Calendar.MONTH, -1);\n        nextFileTime = cal.getTimeInMillis();\n        return nextTime;\n    }\n    if (frequency == org.apache.logging.log4j.core.appender.rolling.RolloverFrequency.WEEKLY) {\n        cal.set(java.util.Calendar.WEEK_OF_YEAR, currentCal.get(java.util.Calendar.WEEK_OF_YEAR));\n        increment(cal, java.util.Calendar.WEEK_OF_YEAR, increment, modulus);\n        cal.set(java.util.Calendar.DAY_OF_WEEK, currentCal.getFirstDayOfWeek());\n        nextTime = cal.getTimeInMillis();\n        cal.add(java.util.Calendar.WEEK_OF_YEAR, -1);\n        nextFileTime = cal.getTimeInMillis();\n        return nextTime;\n    }\n    cal.set(java.util.Calendar.DAY_OF_YEAR, currentCal.get(java.util.Calendar.DAY_OF_YEAR));\n    if (frequency == org.apache.logging.log4j.core.appender.rolling.RolloverFrequency.DAILY) {\n        increment(cal, java.util.Calendar.DAY_OF_YEAR, increment, modulus);\n        nextTime = cal.getTimeInMillis();\n        cal.add(java.util.Calendar.DAY_OF_YEAR, -1);\n        nextFileTime = cal.getTimeInMillis();\n        return nextTime;\n    }\n    cal.set(java.util.Calendar.HOUR_OF_DAY, currentCal.get(java.util.Calendar.HOUR_OF_DAY));\n    if (frequency == org.apache.logging.log4j.core.appender.rolling.RolloverFrequency.HOURLY) {\n        increment(cal, java.util.Calendar.HOUR_OF_DAY, increment, modulus);\n        nextTime = cal.getTimeInMillis();\n        cal.add(java.util.Calendar.HOUR_OF_DAY, -1);\n        nextFileTime = cal.getTimeInMillis();\n        return nextTime;\n    }\n    cal.set(java.util.Calendar.MINUTE, currentCal.get(java.util.Calendar.MINUTE));\n    if (frequency == org.apache.logging.log4j.core.appender.rolling.RolloverFrequency.EVERY_MINUTE) {\n        increment(cal, java.util.Calendar.MINUTE, increment, modulus);\n        nextTime = cal.getTimeInMillis();\n        cal.add(java.util.Calendar.MINUTE, -1);\n        nextFileTime = cal.getTimeInMillis();\n        return nextTime;\n    }\n    cal.set(java.util.Calendar.SECOND, currentCal.get(java.util.Calendar.SECOND));\n    if (frequency == org.apache.logging.log4j.core.appender.rolling.RolloverFrequency.EVERY_SECOND) {\n        increment(cal, java.util.Calendar.SECOND, increment, modulus);\n        nextTime = cal.getTimeInMillis();\n        cal.add(java.util.Calendar.SECOND, -1);\n        nextFileTime = cal.getTimeInMillis();\n        return nextTime;\n    }\n    cal.set(java.util.Calendar.MILLISECOND, currentCal.get(java.util.Calendar.MILLISECOND));\n    increment(cal, java.util.Calendar.MILLISECOND, increment, modulus);\n    nextTime = cal.getTimeInMillis();\n    cal.add(java.util.Calendar.MILLISECOND, -1);\n    nextFileTime = cal.getTimeInMillis();\n    return nextTime;\n}",
            "src_parent_type": "Block",
            "src_type": "Invocation"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Method",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "cal.set(java.util.Calendar.MILLISECOND, currentCal.get(java.util.Calendar.MILLISECOND))",
            "src_parent": "{\n    prevFileTime = nextFileTime;\n    long nextTime;\n    if (frequency == null) {\n        throw new java.lang.IllegalStateException(\"Pattern does not contain a date\");\n    }\n    final java.util.Calendar currentCal = java.util.Calendar.getInstance();\n    currentCal.setTimeInMillis(current);\n    final java.util.Calendar cal = java.util.Calendar.getInstance();\n    cal.set(currentCal.get(java.util.Calendar.YEAR), 0, 1, 0, 0, 0);\n    cal.set(java.util.Calendar.MILLISECOND, 0);\n    if (frequency == org.apache.logging.log4j.core.appender.rolling.RolloverFrequency.ANNUALLY) {\n        increment(cal, java.util.Calendar.YEAR, increment, modulus);\n        nextTime = cal.getTimeInMillis();\n        cal.add(java.util.Calendar.YEAR, -1);\n        nextFileTime = cal.getTimeInMillis();\n        return nextTime;\n    }\n    cal.set(java.util.Calendar.MONTH, currentCal.get(java.util.Calendar.MONTH));\n    if (frequency == org.apache.logging.log4j.core.appender.rolling.RolloverFrequency.MONTHLY) {\n        increment(cal, java.util.Calendar.MONTH, increment, modulus);\n        nextTime = cal.getTimeInMillis();\n        cal.add(java.util.Calendar.MONTH, -1);\n        nextFileTime = cal.getTimeInMillis();\n        return nextTime;\n    }\n    if (frequency == org.apache.logging.log4j.core.appender.rolling.RolloverFrequency.WEEKLY) {\n        cal.set(java.util.Calendar.WEEK_OF_YEAR, currentCal.get(java.util.Calendar.WEEK_OF_YEAR));\n        increment(cal, java.util.Calendar.WEEK_OF_YEAR, increment, modulus);\n        cal.set(java.util.Calendar.DAY_OF_WEEK, currentCal.getFirstDayOfWeek());\n        nextTime = cal.getTimeInMillis();\n        cal.add(java.util.Calendar.WEEK_OF_YEAR, -1);\n        nextFileTime = cal.getTimeInMillis();\n        return nextTime;\n    }\n    cal.set(java.util.Calendar.DAY_OF_YEAR, currentCal.get(java.util.Calendar.DAY_OF_YEAR));\n    if (frequency == org.apache.logging.log4j.core.appender.rolling.RolloverFrequency.DAILY) {\n        increment(cal, java.util.Calendar.DAY_OF_YEAR, increment, modulus);\n        nextTime = cal.getTimeInMillis();\n        cal.add(java.util.Calendar.DAY_OF_YEAR, -1);\n        nextFileTime = cal.getTimeInMillis();\n        return nextTime;\n    }\n    cal.set(java.util.Calendar.HOUR_OF_DAY, currentCal.get(java.util.Calendar.HOUR_OF_DAY));\n    if (frequency == org.apache.logging.log4j.core.appender.rolling.RolloverFrequency.HOURLY) {\n        increment(cal, java.util.Calendar.HOUR_OF_DAY, increment, modulus);\n        nextTime = cal.getTimeInMillis();\n        cal.add(java.util.Calendar.HOUR_OF_DAY, -1);\n        nextFileTime = cal.getTimeInMillis();\n        return nextTime;\n    }\n    cal.set(java.util.Calendar.MINUTE, currentCal.get(java.util.Calendar.MINUTE));\n    if (frequency == org.apache.logging.log4j.core.appender.rolling.RolloverFrequency.EVERY_MINUTE) {\n        increment(cal, java.util.Calendar.MINUTE, increment, modulus);\n        nextTime = cal.getTimeInMillis();\n        cal.add(java.util.Calendar.MINUTE, -1);\n        nextFileTime = cal.getTimeInMillis();\n        return nextTime;\n    }\n    cal.set(java.util.Calendar.SECOND, currentCal.get(java.util.Calendar.SECOND));\n    if (frequency == org.apache.logging.log4j.core.appender.rolling.RolloverFrequency.EVERY_SECOND) {\n        increment(cal, java.util.Calendar.SECOND, increment, modulus);\n        nextTime = cal.getTimeInMillis();\n        cal.add(java.util.Calendar.SECOND, -1);\n        nextFileTime = cal.getTimeInMillis();\n        return nextTime;\n    }\n    cal.set(java.util.Calendar.MILLISECOND, currentCal.get(java.util.Calendar.MILLISECOND));\n    increment(cal, java.util.Calendar.MILLISECOND, increment, modulus);\n    nextTime = cal.getTimeInMillis();\n    cal.add(java.util.Calendar.MILLISECOND, -1);\n    nextFileTime = cal.getTimeInMillis();\n    return nextTime;\n}",
            "src_parent_type": "Block",
            "src_type": "Invocation"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "Invocation",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "cal.set(java.util.Calendar.WEEK_OF_YEAR, currentCal.get(java.util.Calendar.WEEK_OF_YEAR))",
            "src_parent": "{\n    cal.set(java.util.Calendar.WEEK_OF_YEAR, currentCal.get(java.util.Calendar.WEEK_OF_YEAR));\n    increment(cal, java.util.Calendar.WEEK_OF_YEAR, increment, modulus);\n    cal.set(java.util.Calendar.DAY_OF_WEEK, currentCal.getFirstDayOfWeek());\n    nextTime = cal.getTimeInMillis();\n    cal.add(java.util.Calendar.WEEK_OF_YEAR, -1);\n    nextFileTime = cal.getTimeInMillis();\n    return nextTime;\n}",
            "src_parent_type": "Block",
            "src_type": "Invocation"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "Invocation",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "cal.set(java.util.Calendar.DAY_OF_WEEK, currentCal.getFirstDayOfWeek())",
            "src_parent": "{\n    cal.set(java.util.Calendar.WEEK_OF_YEAR, currentCal.get(java.util.Calendar.WEEK_OF_YEAR));\n    increment(cal, java.util.Calendar.WEEK_OF_YEAR, increment, modulus);\n    cal.set(java.util.Calendar.DAY_OF_WEEK, currentCal.getFirstDayOfWeek());\n    nextTime = cal.getTimeInMillis();\n    cal.add(java.util.Calendar.WEEK_OF_YEAR, -1);\n    nextFileTime = cal.getTimeInMillis();\n    return nextTime;\n}",
            "src_parent_type": "Block",
            "src_type": "Invocation"
          }
        }
      ],
      "file_name": "PatternProcessor"
    }
  ],
  "id": "logging-log4j2_7c2ce5cf"
}