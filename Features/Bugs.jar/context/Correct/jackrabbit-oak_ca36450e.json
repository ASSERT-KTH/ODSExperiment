{
  "files": [
    {
      "features": [
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Method",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "if (p.getType().isArray()) {\n    java.lang.Iterable<java.lang.String> lowerCase = com.google.common.collect.Iterables.transform(p.getValue(org.apache.jackrabbit.oak.query.ast.STRINGS), new com.google.common.base.Function<java.lang.String, java.lang.String>() {\n        @java.lang.Override\n        public java.lang.String apply(java.lang.String input) {\n            return input.toLowerCase();\n        }\n    });\n    return org.apache.jackrabbit.oak.spi.query.PropertyValues.newString(lowerCase);\n} else {\n    java.lang.String value = p.getValue(org.apache.jackrabbit.oak.query.ast.STRING);\n    return org.apache.jackrabbit.oak.spi.query.PropertyValues.newString(value.toLowerCase());\n}",
            "src_parent": "{\n    org.apache.jackrabbit.oak.api.PropertyValue p = operand.currentProperty();\n    if (p == null) {\n        return null;\n    }\n    if (p.getType().isArray()) {\n        java.lang.Iterable<java.lang.String> lowerCase = com.google.common.collect.Iterables.transform(p.getValue(org.apache.jackrabbit.oak.query.ast.STRINGS), new com.google.common.base.Function<java.lang.String, java.lang.String>() {\n            @java.lang.Override\n            public java.lang.String apply(java.lang.String input) {\n                return input.toLowerCase();\n            }\n        });\n        return org.apache.jackrabbit.oak.spi.query.PropertyValues.newString(lowerCase);\n    } else {\n        java.lang.String value = p.getValue(org.apache.jackrabbit.oak.query.ast.STRING);\n        return org.apache.jackrabbit.oak.spi.query.PropertyValues.newString(value.toLowerCase());\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "If"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Return",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "LocalVariable",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "java.lang.String value = p.getValue(org.apache.jackrabbit.oak.query.ast.STRING)",
            "dst_parent": "{\n    java.lang.String value = p.getValue(org.apache.jackrabbit.oak.query.ast.STRING);\n    return org.apache.jackrabbit.oak.spi.query.PropertyValues.newString(value.toLowerCase());\n}",
            "dst_parent_type": "Block",
            "dst_type": "LocalVariable",
            "operator": "MOV",
            "src": "java.lang.String value = p.getValue(org.apache.jackrabbit.oak.query.ast.STRING)",
            "src_parent": "{\n    org.apache.jackrabbit.oak.api.PropertyValue p = operand.currentProperty();\n    if (p == null) {\n        return null;\n    }\n    java.lang.String value = p.getValue(org.apache.jackrabbit.oak.query.ast.STRING);\n    return org.apache.jackrabbit.oak.spi.query.PropertyValues.newString(value.toLowerCase());\n}",
            "src_parent_type": "Block",
            "src_type": "LocalVariable"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "LocalVariable",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Return",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "return org.apache.jackrabbit.oak.spi.query.PropertyValues.newString(value.toLowerCase())",
            "dst_parent": "{\n    java.lang.String value = p.getValue(org.apache.jackrabbit.oak.query.ast.STRING);\n    return org.apache.jackrabbit.oak.spi.query.PropertyValues.newString(value.toLowerCase());\n}",
            "dst_parent_type": "Block",
            "dst_type": "Return",
            "operator": "MOV",
            "src": "return org.apache.jackrabbit.oak.spi.query.PropertyValues.newString(value.toLowerCase())",
            "src_parent": "{\n    org.apache.jackrabbit.oak.api.PropertyValue p = operand.currentProperty();\n    if (p == null) {\n        return null;\n    }\n    java.lang.String value = p.getValue(org.apache.jackrabbit.oak.query.ast.STRING);\n    return org.apache.jackrabbit.oak.spi.query.PropertyValues.newString(value.toLowerCase());\n}",
            "src_parent_type": "Block",
            "src_type": "Return"
          }
        }
      ],
      "file_name": "LowerCaseImpl"
    }
  ],
  "id": "jackrabbit-oak_ca36450e"
}