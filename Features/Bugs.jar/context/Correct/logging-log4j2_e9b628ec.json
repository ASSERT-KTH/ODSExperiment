{
  "files": [
    {
      "features": [
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "For",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "!inEsc",
            "src_parent": "if (!inEsc) {\n    inEsc = false;\n    switch (c) {\n        case org.apache.logging.log4j.core.net.server.JsonInputStreamLogEventBridge.EVENT_START_MARKER :\n            if (!inStr) {\n                stack++;\n            }\n            break;\n        case org.apache.logging.log4j.core.net.server.JsonInputStreamLogEventBridge.EVENT_END_MARKER :\n            if (!inStr) {\n                stack--;\n            }\n            break;\n        case org.apache.logging.log4j.core.net.server.JsonInputStreamLogEventBridge.JSON_STR_DELIM :\n            inStr = !inStr;\n            break;\n        case org.apache.logging.log4j.core.net.server.JsonInputStreamLogEventBridge.JSON_ESC :\n            inEsc = true;\n            break;\n    }\n    if (stack == 0) {\n        return new int[]{ start, i };\n    }\n}",
            "src_parent_type": "If",
            "src_type": "UnaryOperator"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Return",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "LocalVariable",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "For",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "inEsc",
            "src_parent": "if (inEsc) {\n    inEsc = false;\n} else {\n    switch (c) {\n        case org.apache.logging.log4j.core.net.server.JsonInputStreamLogEventBridge.EVENT_START_MARKER :\n            if (!inStr) {\n                stack++;\n            }\n            break;\n        case org.apache.logging.log4j.core.net.server.JsonInputStreamLogEventBridge.EVENT_END_MARKER :\n            if (!inStr) {\n                stack--;\n            }\n            break;\n        case org.apache.logging.log4j.core.net.server.JsonInputStreamLogEventBridge.JSON_STR_DELIM :\n            inStr = !inStr;\n            break;\n        case org.apache.logging.log4j.core.net.server.JsonInputStreamLogEventBridge.JSON_ESC :\n            inEsc = true;\n            break;\n    }\n    if (stack == 0) {\n        return new int[]{ start, i };\n    }\n}",
            "src_parent_type": "If",
            "src_type": "VariableRead"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Return",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "LocalVariable",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "For",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "{\n    switch (c) {\n        case org.apache.logging.log4j.core.net.server.JsonInputStreamLogEventBridge.EVENT_START_MARKER :\n            if (!inStr) {\n                stack++;\n            }\n            break;\n        case org.apache.logging.log4j.core.net.server.JsonInputStreamLogEventBridge.EVENT_END_MARKER :\n            if (!inStr) {\n                stack--;\n            }\n            break;\n        case org.apache.logging.log4j.core.net.server.JsonInputStreamLogEventBridge.JSON_STR_DELIM :\n            inStr = !inStr;\n            break;\n        case org.apache.logging.log4j.core.net.server.JsonInputStreamLogEventBridge.JSON_ESC :\n            inEsc = true;\n            break;\n    }\n    if (stack == 0) {\n        return new int[]{ start, i };\n    }\n}",
            "src_parent": "if (inEsc) {\n    inEsc = false;\n} else {\n    switch (c) {\n        case org.apache.logging.log4j.core.net.server.JsonInputStreamLogEventBridge.EVENT_START_MARKER :\n            if (!inStr) {\n                stack++;\n            }\n            break;\n        case org.apache.logging.log4j.core.net.server.JsonInputStreamLogEventBridge.EVENT_END_MARKER :\n            if (!inStr) {\n                stack--;\n            }\n            break;\n        case org.apache.logging.log4j.core.net.server.JsonInputStreamLogEventBridge.JSON_STR_DELIM :\n            inStr = !inStr;\n            break;\n        case org.apache.logging.log4j.core.net.server.JsonInputStreamLogEventBridge.JSON_ESC :\n            inEsc = true;\n            break;\n    }\n    if (stack == 0) {\n        return new int[]{ start, i };\n    }\n}",
            "src_parent_type": "If",
            "src_type": "Block"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "For",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "switch (c) {\n    case org.apache.logging.log4j.core.net.server.JsonInputStreamLogEventBridge.EVENT_START_MARKER :\n        if (!inStr) {\n            stack++;\n        }\n        break;\n    case org.apache.logging.log4j.core.net.server.JsonInputStreamLogEventBridge.EVENT_END_MARKER :\n        if (!inStr) {\n            stack--;\n        }\n        break;\n    case org.apache.logging.log4j.core.net.server.JsonInputStreamLogEventBridge.JSON_STR_DELIM :\n        inStr = !inStr;\n        break;\n    case org.apache.logging.log4j.core.net.server.JsonInputStreamLogEventBridge.JSON_ESC :\n        inEsc = true;\n        break;\n}",
            "dst_parent": "{\n    switch (c) {\n        case org.apache.logging.log4j.core.net.server.JsonInputStreamLogEventBridge.EVENT_START_MARKER :\n            if (!inStr) {\n                stack++;\n            }\n            break;\n        case org.apache.logging.log4j.core.net.server.JsonInputStreamLogEventBridge.EVENT_END_MARKER :\n            if (!inStr) {\n                stack--;\n            }\n            break;\n        case org.apache.logging.log4j.core.net.server.JsonInputStreamLogEventBridge.JSON_STR_DELIM :\n            inStr = !inStr;\n            break;\n        case org.apache.logging.log4j.core.net.server.JsonInputStreamLogEventBridge.JSON_ESC :\n            inEsc = true;\n            break;\n    }\n    if (stack == 0) {\n        return new int[]{ start, i };\n    }\n}",
            "dst_parent_type": "Block",
            "dst_type": "Switch",
            "operator": "MOV",
            "src": "switch (c) {\n    case org.apache.logging.log4j.core.net.server.JsonInputStreamLogEventBridge.EVENT_START_MARKER :\n        if (!inStr) {\n            stack++;\n        }\n        break;\n    case org.apache.logging.log4j.core.net.server.JsonInputStreamLogEventBridge.EVENT_END_MARKER :\n        if (!inStr) {\n            stack--;\n        }\n        break;\n    case org.apache.logging.log4j.core.net.server.JsonInputStreamLogEventBridge.JSON_STR_DELIM :\n        inStr = !inStr;\n        break;\n    case org.apache.logging.log4j.core.net.server.JsonInputStreamLogEventBridge.JSON_ESC :\n        inEsc = true;\n        break;\n}",
            "src_parent": "{\n    inEsc = false;\n    switch (c) {\n        case org.apache.logging.log4j.core.net.server.JsonInputStreamLogEventBridge.EVENT_START_MARKER :\n            if (!inStr) {\n                stack++;\n            }\n            break;\n        case org.apache.logging.log4j.core.net.server.JsonInputStreamLogEventBridge.EVENT_END_MARKER :\n            if (!inStr) {\n                stack--;\n            }\n            break;\n        case org.apache.logging.log4j.core.net.server.JsonInputStreamLogEventBridge.JSON_STR_DELIM :\n            inStr = !inStr;\n            break;\n        case org.apache.logging.log4j.core.net.server.JsonInputStreamLogEventBridge.JSON_ESC :\n            inEsc = true;\n            break;\n    }\n    if (stack == 0) {\n        return new int[]{ start, i };\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "Switch"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "For",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "if (stack == 0) {\n    return new int[]{ start, i };\n}",
            "dst_parent": "{\n    switch (c) {\n        case org.apache.logging.log4j.core.net.server.JsonInputStreamLogEventBridge.EVENT_START_MARKER :\n            if (!inStr) {\n                stack++;\n            }\n            break;\n        case org.apache.logging.log4j.core.net.server.JsonInputStreamLogEventBridge.EVENT_END_MARKER :\n            if (!inStr) {\n                stack--;\n            }\n            break;\n        case org.apache.logging.log4j.core.net.server.JsonInputStreamLogEventBridge.JSON_STR_DELIM :\n            inStr = !inStr;\n            break;\n        case org.apache.logging.log4j.core.net.server.JsonInputStreamLogEventBridge.JSON_ESC :\n            inEsc = true;\n            break;\n    }\n    if (stack == 0) {\n        return new int[]{ start, i };\n    }\n}",
            "dst_parent_type": "Block",
            "dst_type": "If",
            "operator": "MOV",
            "src": "if (stack == 0) {\n    return new int[]{ start, i };\n}",
            "src_parent": "{\n    inEsc = false;\n    switch (c) {\n        case org.apache.logging.log4j.core.net.server.JsonInputStreamLogEventBridge.EVENT_START_MARKER :\n            if (!inStr) {\n                stack++;\n            }\n            break;\n        case org.apache.logging.log4j.core.net.server.JsonInputStreamLogEventBridge.EVENT_END_MARKER :\n            if (!inStr) {\n                stack--;\n            }\n            break;\n        case org.apache.logging.log4j.core.net.server.JsonInputStreamLogEventBridge.JSON_STR_DELIM :\n            inStr = !inStr;\n            break;\n        case org.apache.logging.log4j.core.net.server.JsonInputStreamLogEventBridge.JSON_ESC :\n            inEsc = true;\n            break;\n    }\n    if (stack == 0) {\n        return new int[]{ start, i };\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "If"
          }
        }
      ],
      "file_name": "JsonInputStreamLogEventBridge"
    }
  ],
  "id": "logging-log4j2_e9b628ec"
}