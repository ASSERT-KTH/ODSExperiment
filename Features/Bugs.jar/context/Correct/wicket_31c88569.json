{
  "files": [
    {
      "features": [
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Package",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "true",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Class",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "private static final org.apache.wicket.markup.ComponentTag.IAutoComponentFactory HTML_HEADER_FACTORY = new org.apache.wicket.markup.ComponentTag.IAutoComponentFactory() {\n    @java.lang.Override\n    public org.apache.wicket.Component newComponent(org.apache.wicket.MarkupContainer container, org.apache.wicket.markup.ComponentTag tag) {\n        return new org.apache.wicket.markup.html.internal.HtmlHeaderContainer(tag.getId());\n    }\n};",
            "src_parent": "public final class HtmlHeaderSectionHandler extends org.apache.wicket.markup.parser.AbstractMarkupFilter {\n    public static final java.lang.String BODY = \"body\";\n\n    public static final java.lang.String HEAD = \"head\";\n\n    public static final java.lang.String HEADER_ID = \"_header_\";\n\n    public static final java.lang.String HEADER_ID_ITEM = \"_header_item_\";\n\n    private boolean foundHead = false;\n\n    private boolean foundClosingHead = false;\n\n    private boolean foundHeaderItemsTag = false;\n\n    private boolean ignoreTheRest = false;\n\n    private final org.apache.wicket.markup.Markup markup;\n\n    private static final org.apache.wicket.markup.ComponentTag.IAutoComponentFactory HTML_HEADER_FACTORY = new org.apache.wicket.markup.ComponentTag.IAutoComponentFactory() {\n        @java.lang.Override\n        public org.apache.wicket.Component newComponent(org.apache.wicket.MarkupContainer container, org.apache.wicket.markup.ComponentTag tag) {\n            return new org.apache.wicket.markup.html.internal.HtmlHeaderContainer(tag.getId());\n        }\n    };\n\n    private static final org.apache.wicket.markup.ComponentTag.IAutoComponentFactory HTML_HEADER_ITEMS_FACTORY = new org.apache.wicket.markup.ComponentTag.IAutoComponentFactory() {\n        @java.lang.Override\n        public org.apache.wicket.Component newComponent(org.apache.wicket.MarkupContainer container, org.apache.wicket.markup.ComponentTag tag) {\n            return new org.apache.wicket.markup.html.internal.HtmlHeaderItemsContainer(tag.getId());\n        }\n    };\n\n    public HtmlHeaderSectionHandler(final org.apache.wicket.markup.Markup markup) {\n        super(markup.getMarkupResourceStream());\n        this.markup = markup;\n    }\n\n    @java.lang.Override\n    protected final org.apache.wicket.markup.MarkupElement onComponentTag(org.apache.wicket.markup.ComponentTag tag) throws java.text.ParseException {\n        if (ignoreTheRest == true) {\n            return tag;\n        }\n        if (org.apache.wicket.markup.parser.filter.HtmlHeaderSectionHandler.HEAD.equalsIgnoreCase(tag.getName())) {\n            if (tag.getNamespace() == null) {\n                handleHeadTag(tag);\n            } else {\n                foundHead = true;\n                foundClosingHead = true;\n            }\n        } else if (HtmlHeaderResolver.HEADER_ITEMS.equalsIgnoreCase(tag.getName()) && tag.getNamespace().equalsIgnoreCase(getWicketNamespace())) {\n            handleHeaderItemsTag(tag);\n        } else if (org.apache.wicket.markup.parser.filter.HtmlHeaderSectionHandler.BODY.equalsIgnoreCase(tag.getName()) && (tag.getNamespace() == null)) {\n            handleBodyTag();\n        }\n        return tag;\n    }\n\n    private void handleBodyTag() {\n        if (foundHead && (!foundClosingHead)) {\n            throw new org.apache.wicket.markup.MarkupException(new org.apache.wicket.markup.MarkupStream(markup), \"Invalid page markup. Tag <BODY> found inside <HEAD>\");\n        }\n        if (foundHead == false) {\n            insertHeadTag();\n        }\n        ignoreTheRest = true;\n    }\n\n    private void handleHeaderItemsTag(org.apache.wicket.markup.ComponentTag tag) {\n        if (foundHeaderItemsTag) {\n            throw new org.apache.wicket.markup.MarkupException(new org.apache.wicket.markup.MarkupStream(markup), \"More than one <wicket:header-items/> detected in the <head> element. Only one is allowed.\");\n        } else if (foundClosingHead) {\n            throw new org.apache.wicket.markup.MarkupException(new org.apache.wicket.markup.MarkupStream(markup), \"Detected <wicket:header-items/> after the closing </head> element.\");\n        }\n        foundHeaderItemsTag = true;\n        tag.setId(org.apache.wicket.markup.parser.filter.HtmlHeaderSectionHandler.HEADER_ID);\n        tag.setAutoComponentTag(true);\n        tag.setModified(true);\n        tag.setAutoComponentFactory(org.apache.wicket.markup.parser.filter.HtmlHeaderSectionHandler.HTML_HEADER_ITEMS_FACTORY);\n    }\n\n    private void handleHeadTag(org.apache.wicket.markup.ComponentTag tag) {\n        if (tag.isOpen()) {\n            if (foundHead) {\n                throw new org.apache.wicket.markup.MarkupException(new org.apache.wicket.markup.MarkupStream(markup), \"Tag <head> is not allowed at this position (do you have multiple <head> tags in your markup?).\");\n            }\n            foundHead = true;\n            if (tag.getId() == null) {\n                tag.setId(org.apache.wicket.markup.parser.filter.HtmlHeaderSectionHandler.HEADER_ID);\n                tag.setAutoComponentTag(true);\n                tag.setModified(true);\n                tag.setAutoComponentFactory(org.apache.wicket.markup.parser.filter.HtmlHeaderSectionHandler.HTML_HEADER_FACTORY);\n            }\n        } else if (tag.isClose()) {\n            if (foundHeaderItemsTag) {\n                org.apache.wicket.markup.ComponentTag headOpenTag = tag.getOpenTag();\n                headOpenTag.setId(org.apache.wicket.markup.parser.filter.HtmlHeaderSectionHandler.HEADER_ID + \"-Ignored\");\n                headOpenTag.setAutoComponentTag(false);\n                headOpenTag.setModified(false);\n                headOpenTag.setFlag(ComponentTag.RENDER_RAW, true);\n                headOpenTag.setAutoComponentFactory(null);\n            }\n            foundClosingHead = true;\n        }\n    }\n\n    private void insertHeadTag() {\n        final org.apache.wicket.markup.ComponentTag openTag = new org.apache.wicket.markup.ComponentTag(org.apache.wicket.markup.parser.filter.HtmlHeaderSectionHandler.HEAD, org.apache.wicket.markup.parser.XmlTag.TagType.OPEN);\n        openTag.setId(org.apache.wicket.markup.parser.filter.HtmlHeaderSectionHandler.HEADER_ID);\n        openTag.setAutoComponentTag(true);\n        openTag.setModified(true);\n        openTag.setAutoComponentFactory(org.apache.wicket.markup.parser.filter.HtmlHeaderSectionHandler.HTML_HEADER_FACTORY);\n        final org.apache.wicket.markup.ComponentTag closeTag = new org.apache.wicket.markup.ComponentTag(org.apache.wicket.markup.parser.filter.HtmlHeaderSectionHandler.HEAD, org.apache.wicket.markup.parser.XmlTag.TagType.CLOSE);\n        closeTag.setOpenTag(openTag);\n        closeTag.setModified(true);\n        markup.addMarkupElement(openTag);\n        markup.addMarkupElement(closeTag);\n    }\n}",
            "src_parent_type": "Class",
            "src_type": "Field"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Package",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "true",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Class",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "private static final org.apache.wicket.markup.ComponentTag.IAutoComponentFactory HTML_HEADER_ITEMS_FACTORY = new org.apache.wicket.markup.ComponentTag.IAutoComponentFactory() {\n    @java.lang.Override\n    public org.apache.wicket.Component newComponent(org.apache.wicket.MarkupContainer container, org.apache.wicket.markup.ComponentTag tag) {\n        return new org.apache.wicket.markup.html.internal.HtmlHeaderItemsContainer(tag.getId());\n    }\n};",
            "src_parent": "public final class HtmlHeaderSectionHandler extends org.apache.wicket.markup.parser.AbstractMarkupFilter {\n    public static final java.lang.String BODY = \"body\";\n\n    public static final java.lang.String HEAD = \"head\";\n\n    public static final java.lang.String HEADER_ID = \"_header_\";\n\n    public static final java.lang.String HEADER_ID_ITEM = \"_header_item_\";\n\n    private boolean foundHead = false;\n\n    private boolean foundClosingHead = false;\n\n    private boolean foundHeaderItemsTag = false;\n\n    private boolean ignoreTheRest = false;\n\n    private final org.apache.wicket.markup.Markup markup;\n\n    private static final org.apache.wicket.markup.ComponentTag.IAutoComponentFactory HTML_HEADER_FACTORY = new org.apache.wicket.markup.ComponentTag.IAutoComponentFactory() {\n        @java.lang.Override\n        public org.apache.wicket.Component newComponent(org.apache.wicket.MarkupContainer container, org.apache.wicket.markup.ComponentTag tag) {\n            return new org.apache.wicket.markup.html.internal.HtmlHeaderContainer(tag.getId());\n        }\n    };\n\n    private static final org.apache.wicket.markup.ComponentTag.IAutoComponentFactory HTML_HEADER_ITEMS_FACTORY = new org.apache.wicket.markup.ComponentTag.IAutoComponentFactory() {\n        @java.lang.Override\n        public org.apache.wicket.Component newComponent(org.apache.wicket.MarkupContainer container, org.apache.wicket.markup.ComponentTag tag) {\n            return new org.apache.wicket.markup.html.internal.HtmlHeaderItemsContainer(tag.getId());\n        }\n    };\n\n    public HtmlHeaderSectionHandler(final org.apache.wicket.markup.Markup markup) {\n        super(markup.getMarkupResourceStream());\n        this.markup = markup;\n    }\n\n    @java.lang.Override\n    protected final org.apache.wicket.markup.MarkupElement onComponentTag(org.apache.wicket.markup.ComponentTag tag) throws java.text.ParseException {\n        if (ignoreTheRest == true) {\n            return tag;\n        }\n        if (org.apache.wicket.markup.parser.filter.HtmlHeaderSectionHandler.HEAD.equalsIgnoreCase(tag.getName())) {\n            if (tag.getNamespace() == null) {\n                handleHeadTag(tag);\n            } else {\n                foundHead = true;\n                foundClosingHead = true;\n            }\n        } else if (HtmlHeaderResolver.HEADER_ITEMS.equalsIgnoreCase(tag.getName()) && tag.getNamespace().equalsIgnoreCase(getWicketNamespace())) {\n            handleHeaderItemsTag(tag);\n        } else if (org.apache.wicket.markup.parser.filter.HtmlHeaderSectionHandler.BODY.equalsIgnoreCase(tag.getName()) && (tag.getNamespace() == null)) {\n            handleBodyTag();\n        }\n        return tag;\n    }\n\n    private void handleBodyTag() {\n        if (foundHead && (!foundClosingHead)) {\n            throw new org.apache.wicket.markup.MarkupException(new org.apache.wicket.markup.MarkupStream(markup), \"Invalid page markup. Tag <BODY> found inside <HEAD>\");\n        }\n        if (foundHead == false) {\n            insertHeadTag();\n        }\n        ignoreTheRest = true;\n    }\n\n    private void handleHeaderItemsTag(org.apache.wicket.markup.ComponentTag tag) {\n        if (foundHeaderItemsTag) {\n            throw new org.apache.wicket.markup.MarkupException(new org.apache.wicket.markup.MarkupStream(markup), \"More than one <wicket:header-items/> detected in the <head> element. Only one is allowed.\");\n        } else if (foundClosingHead) {\n            throw new org.apache.wicket.markup.MarkupException(new org.apache.wicket.markup.MarkupStream(markup), \"Detected <wicket:header-items/> after the closing </head> element.\");\n        }\n        foundHeaderItemsTag = true;\n        tag.setId(org.apache.wicket.markup.parser.filter.HtmlHeaderSectionHandler.HEADER_ID);\n        tag.setAutoComponentTag(true);\n        tag.setModified(true);\n        tag.setAutoComponentFactory(org.apache.wicket.markup.parser.filter.HtmlHeaderSectionHandler.HTML_HEADER_ITEMS_FACTORY);\n    }\n\n    private void handleHeadTag(org.apache.wicket.markup.ComponentTag tag) {\n        if (tag.isOpen()) {\n            if (foundHead) {\n                throw new org.apache.wicket.markup.MarkupException(new org.apache.wicket.markup.MarkupStream(markup), \"Tag <head> is not allowed at this position (do you have multiple <head> tags in your markup?).\");\n            }\n            foundHead = true;\n            if (tag.getId() == null) {\n                tag.setId(org.apache.wicket.markup.parser.filter.HtmlHeaderSectionHandler.HEADER_ID);\n                tag.setAutoComponentTag(true);\n                tag.setModified(true);\n                tag.setAutoComponentFactory(org.apache.wicket.markup.parser.filter.HtmlHeaderSectionHandler.HTML_HEADER_FACTORY);\n            }\n        } else if (tag.isClose()) {\n            if (foundHeaderItemsTag) {\n                org.apache.wicket.markup.ComponentTag headOpenTag = tag.getOpenTag();\n                headOpenTag.setId(org.apache.wicket.markup.parser.filter.HtmlHeaderSectionHandler.HEADER_ID + \"-Ignored\");\n                headOpenTag.setAutoComponentTag(false);\n                headOpenTag.setModified(false);\n                headOpenTag.setFlag(ComponentTag.RENDER_RAW, true);\n                headOpenTag.setAutoComponentFactory(null);\n            }\n            foundClosingHead = true;\n        }\n    }\n\n    private void insertHeadTag() {\n        final org.apache.wicket.markup.ComponentTag openTag = new org.apache.wicket.markup.ComponentTag(org.apache.wicket.markup.parser.filter.HtmlHeaderSectionHandler.HEAD, org.apache.wicket.markup.parser.XmlTag.TagType.OPEN);\n        openTag.setId(org.apache.wicket.markup.parser.filter.HtmlHeaderSectionHandler.HEADER_ID);\n        openTag.setAutoComponentTag(true);\n        openTag.setModified(true);\n        openTag.setAutoComponentFactory(org.apache.wicket.markup.parser.filter.HtmlHeaderSectionHandler.HTML_HEADER_FACTORY);\n        final org.apache.wicket.markup.ComponentTag closeTag = new org.apache.wicket.markup.ComponentTag(org.apache.wicket.markup.parser.filter.HtmlHeaderSectionHandler.HEAD, org.apache.wicket.markup.parser.XmlTag.TagType.CLOSE);\n        closeTag.setOpenTag(openTag);\n        closeTag.setModified(true);\n        markup.addMarkupElement(openTag);\n        markup.addMarkupElement(closeTag);\n    }\n}",
            "src_parent_type": "Class",
            "src_type": "Field"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "true",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Method",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "tag.setAutoComponentFactory(org.apache.wicket.markup.parser.filter.HtmlHeaderSectionHandler.HTML_HEADER_ITEMS_FACTORY)",
            "src_parent": "{\n    if (foundHeaderItemsTag) {\n        throw new org.apache.wicket.markup.MarkupException(new org.apache.wicket.markup.MarkupStream(markup), \"More than one <wicket:header-items/> detected in the <head> element. Only one is allowed.\");\n    } else if (foundClosingHead) {\n        throw new org.apache.wicket.markup.MarkupException(new org.apache.wicket.markup.MarkupStream(markup), \"Detected <wicket:header-items/> after the closing </head> element.\");\n    }\n    foundHeaderItemsTag = true;\n    tag.setId(org.apache.wicket.markup.parser.filter.HtmlHeaderSectionHandler.HEADER_ID);\n    tag.setAutoComponentTag(true);\n    tag.setModified(true);\n    tag.setAutoComponentFactory(org.apache.wicket.markup.parser.filter.HtmlHeaderSectionHandler.HTML_HEADER_ITEMS_FACTORY);\n}",
            "src_parent_type": "Block",
            "src_type": "Invocation"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "true",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Method",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "openTag.setAutoComponentFactory(org.apache.wicket.markup.parser.filter.HtmlHeaderSectionHandler.HTML_HEADER_FACTORY)",
            "src_parent": "{\n    final org.apache.wicket.markup.ComponentTag openTag = new org.apache.wicket.markup.ComponentTag(org.apache.wicket.markup.parser.filter.HtmlHeaderSectionHandler.HEAD, org.apache.wicket.markup.parser.XmlTag.TagType.OPEN);\n    openTag.setId(org.apache.wicket.markup.parser.filter.HtmlHeaderSectionHandler.HEADER_ID);\n    openTag.setAutoComponentTag(true);\n    openTag.setModified(true);\n    openTag.setAutoComponentFactory(org.apache.wicket.markup.parser.filter.HtmlHeaderSectionHandler.HTML_HEADER_FACTORY);\n    final org.apache.wicket.markup.ComponentTag closeTag = new org.apache.wicket.markup.ComponentTag(org.apache.wicket.markup.parser.filter.HtmlHeaderSectionHandler.HEAD, org.apache.wicket.markup.parser.XmlTag.TagType.CLOSE);\n    closeTag.setOpenTag(openTag);\n    closeTag.setModified(true);\n    markup.addMarkupElement(openTag);\n    markup.addMarkupElement(closeTag);\n}",
            "src_parent_type": "Block",
            "src_type": "Invocation"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "Assignment",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "tag.setAutoComponentFactory(org.apache.wicket.markup.parser.filter.HtmlHeaderSectionHandler.HTML_HEADER_FACTORY)",
            "src_parent": "{\n    tag.setId(org.apache.wicket.markup.parser.filter.HtmlHeaderSectionHandler.HEADER_ID);\n    tag.setAutoComponentTag(true);\n    tag.setModified(true);\n    tag.setAutoComponentFactory(org.apache.wicket.markup.parser.filter.HtmlHeaderSectionHandler.HTML_HEADER_FACTORY);\n}",
            "src_parent_type": "Block",
            "src_type": "Invocation"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Assignment",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "headOpenTag.setAutoComponentFactory(null)",
            "src_parent": "{\n    org.apache.wicket.markup.ComponentTag headOpenTag = tag.getOpenTag();\n    headOpenTag.setId(org.apache.wicket.markup.parser.filter.HtmlHeaderSectionHandler.HEADER_ID + \"-Ignored\");\n    headOpenTag.setAutoComponentTag(false);\n    headOpenTag.setModified(false);\n    headOpenTag.setFlag(ComponentTag.RENDER_RAW, true);\n    headOpenTag.setAutoComponentFactory(null);\n}",
            "src_parent_type": "Block",
            "src_type": "Invocation"
          }
        }
      ],
      "file_name": "HtmlHeaderSectionHandler"
    }
  ],
  "id": "wicket_31c88569"
}