{
  "files": [
    {
      "features": [
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "true",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Method",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "org.apache.camel.processor.aggregate.AggregationStrategy strategy = getAggregationStrategy(subExchange)",
            "src_parent": "{\n    if ((pairs != null) && (pairs instanceof java.io.Closeable)) {\n        org.apache.camel.util.IOHelper.close(((java.io.Closeable) (pairs)), \"pairs\", org.apache.camel.processor.MulticastProcessor.LOG);\n    }\n    org.apache.camel.processor.aggregate.AggregationStrategy strategy = getAggregationStrategy(subExchange);\n    if (strategy instanceof org.apache.camel.processor.aggregate.CompletionAwareAggregationStrategy) {\n        ((org.apache.camel.processor.aggregate.CompletionAwareAggregationStrategy) (strategy)).onCompletion(subExchange);\n    }\n    removeAggregationStrategyFromExchange(original);\n    boolean stoppedOnException = false;\n    boolean exception = false;\n    boolean exhaust = forceExhaust || ((subExchange != null) && ((subExchange.getException() != null) || org.apache.camel.util.ExchangeHelper.isRedeliveryExhausted(subExchange)));\n    if ((original.getException() != null) || ((subExchange != null) && (subExchange.getException() != null))) {\n        stoppedOnException = isStopOnException();\n        exception = true;\n    }\n    if (subExchange != null) {\n        if (stoppedOnException) {\n            original.setException(subExchange.getException());\n        } else {\n            org.apache.camel.util.ExchangeHelper.copyResults(original, subExchange);\n        }\n    }\n    if (exception) {\n        original.setProperty(Exchange.REDELIVERY_EXHAUSTED, exhaust);\n    }\n    callback.done(doneSync);\n}",
            "src_parent_type": "Block",
            "src_type": "LocalVariable"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "true",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Method",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "if (strategy instanceof org.apache.camel.processor.aggregate.CompletionAwareAggregationStrategy) {\n    ((org.apache.camel.processor.aggregate.CompletionAwareAggregationStrategy) (strategy)).onCompletion(subExchange);\n}",
            "src_parent": "{\n    if ((pairs != null) && (pairs instanceof java.io.Closeable)) {\n        org.apache.camel.util.IOHelper.close(((java.io.Closeable) (pairs)), \"pairs\", org.apache.camel.processor.MulticastProcessor.LOG);\n    }\n    org.apache.camel.processor.aggregate.AggregationStrategy strategy = getAggregationStrategy(subExchange);\n    if (strategy instanceof org.apache.camel.processor.aggregate.CompletionAwareAggregationStrategy) {\n        ((org.apache.camel.processor.aggregate.CompletionAwareAggregationStrategy) (strategy)).onCompletion(subExchange);\n    }\n    removeAggregationStrategyFromExchange(original);\n    boolean stoppedOnException = false;\n    boolean exception = false;\n    boolean exhaust = forceExhaust || ((subExchange != null) && ((subExchange.getException() != null) || org.apache.camel.util.ExchangeHelper.isRedeliveryExhausted(subExchange)));\n    if ((original.getException() != null) || ((subExchange != null) && (subExchange.getException() != null))) {\n        stoppedOnException = isStopOnException();\n        exception = true;\n    }\n    if (subExchange != null) {\n        if (stoppedOnException) {\n            original.setException(subExchange.getException());\n        } else {\n            org.apache.camel.util.ExchangeHelper.copyResults(original, subExchange);\n        }\n    }\n    if (exception) {\n        original.setProperty(Exchange.REDELIVERY_EXHAUSTED, exhaust);\n    }\n    callback.done(doneSync);\n}",
            "src_parent_type": "Block",
            "src_type": "If"
          }
        }
      ],
      "file_name": "MulticastProcessor"
    }
  ],
  "id": "camel_1e33fcbc"
}