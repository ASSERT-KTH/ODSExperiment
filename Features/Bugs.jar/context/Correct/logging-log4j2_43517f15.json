{
  "files": [
    {
      "features": [
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Try",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Assignment",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "new org.apache.logging.log4j.core.appender.ConsoleAppender.SystemOutStream()",
            "dst_parent": "new java.io.PrintStream(new org.apache.logging.log4j.core.appender.ConsoleAppender.SystemOutStream(), true, enc)",
            "dst_parent_type": "ConstructorCall",
            "dst_type": "ConstructorCall",
            "operator": "UPD",
            "src": "new org.apache.logging.log4j.core.appender.ConsoleAppender.CloseShieldOutputStream(java.lang.System.out)",
            "src_parent": "new java.io.PrintStream(new org.apache.logging.log4j.core.appender.ConsoleAppender.CloseShieldOutputStream(java.lang.System.out), true, enc)",
            "src_parent_type": "ConstructorCall",
            "src_type": "ConstructorCall"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Try",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Assignment",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "new org.apache.logging.log4j.core.appender.ConsoleAppender.SystemErrStream()",
            "dst_parent": "new java.io.PrintStream(new org.apache.logging.log4j.core.appender.ConsoleAppender.SystemErrStream(), true, enc)",
            "dst_parent_type": "ConstructorCall",
            "dst_type": "ConstructorCall",
            "operator": "UPD",
            "src": "new org.apache.logging.log4j.core.appender.ConsoleAppender.CloseShieldOutputStream(java.lang.System.err)",
            "src_parent": "new java.io.PrintStream(new org.apache.logging.log4j.core.appender.ConsoleAppender.CloseShieldOutputStream(java.lang.System.err), true, enc)",
            "src_parent_type": "ConstructorCall",
            "src_type": "ConstructorCall"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Try",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Return",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "new org.apache.logging.log4j.core.appender.ConsoleAppender.CloseShieldOutputStream(((java.io.OutputStream) (constructor.newInstance(printStream))))",
            "src_parent": "return new org.apache.logging.log4j.core.appender.ConsoleAppender.CloseShieldOutputStream(((java.io.OutputStream) (constructor.newInstance(printStream))))",
            "src_parent_type": "Return",
            "src_type": "ConstructorCall"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Package",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "true",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Class",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "private static class SystemErrStream extends java.io.OutputStream {\n    public SystemErrStream() {\n    }\n\n    @java.lang.Override\n    public void close() {\n    }\n\n    @java.lang.Override\n    public void flush() {\n        java.lang.System.err.flush();\n    }\n\n    @java.lang.Override\n    public void write(final byte[] b) throws java.io.IOException {\n        java.lang.System.err.write(b);\n    }\n\n    @java.lang.Override\n    public void write(final byte[] b, final int off, final int len) throws java.io.IOException {\n        java.lang.System.err.write(b, off, len);\n    }\n\n    @java.lang.Override\n    public void write(final int b) {\n        java.lang.System.err.write(b);\n    }\n}",
            "src_parent": "@org.apache.logging.log4j.core.config.plugins.Plugin(name = \"Console\", category = \"Core\", elementType = \"appender\", printObject = true)\npublic final class ConsoleAppender extends org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender<org.apache.logging.log4j.core.appender.OutputStreamManager> {\n    private static final long serialVersionUID = 1L;\n\n    private static final java.lang.String JANSI_CLASS = \"org.fusesource.jansi.WindowsAnsiOutputStream\";\n\n    private static org.apache.logging.log4j.core.appender.ConsoleAppender.ConsoleManagerFactory factory = new org.apache.logging.log4j.core.appender.ConsoleAppender.ConsoleManagerFactory();\n\n    public enum Target {\n\n        SYSTEM_OUT,\n        SYSTEM_ERR;}\n\n    private ConsoleAppender(final java.lang.String name, final org.apache.logging.log4j.core.Layout<? extends java.io.Serializable> layout, final org.apache.logging.log4j.core.Filter filter, final org.apache.logging.log4j.core.appender.OutputStreamManager manager, final boolean ignoreExceptions) {\n        super(name, layout, filter, ignoreExceptions, true, manager);\n    }\n\n    @org.apache.logging.log4j.core.config.plugins.PluginFactory\n    public static org.apache.logging.log4j.core.appender.ConsoleAppender createAppender(@org.apache.logging.log4j.core.config.plugins.PluginElement(\"Layout\")\n    org.apache.logging.log4j.core.Layout<? extends java.io.Serializable> layout, @org.apache.logging.log4j.core.config.plugins.PluginElement(\"Filter\")\n    final org.apache.logging.log4j.core.Filter filter, @org.apache.logging.log4j.core.config.plugins.PluginAttribute(value = \"target\", defaultString = \"SYSTEM_OUT\")\n    final java.lang.String targetStr, @org.apache.logging.log4j.core.config.plugins.PluginAttribute(\"name\")\n    final java.lang.String name, @org.apache.logging.log4j.core.config.plugins.PluginAttribute(value = \"follow\", defaultBoolean = false)\n    final java.lang.String follow, @org.apache.logging.log4j.core.config.plugins.PluginAttribute(value = \"ignoreExceptions\", defaultBoolean = true)\n    final java.lang.String ignore) {\n        if (name == null) {\n            org.apache.logging.log4j.core.AbstractLifeCycle.LOGGER.error(\"No name provided for ConsoleAppender\");\n            return null;\n        }\n        if (layout == null) {\n            layout = org.apache.logging.log4j.core.layout.PatternLayout.createDefaultLayout();\n        }\n        final boolean isFollow = java.lang.Boolean.parseBoolean(follow);\n        final boolean ignoreExceptions = org.apache.logging.log4j.core.util.Booleans.parseBoolean(ignore, true);\n        final org.apache.logging.log4j.core.appender.ConsoleAppender.Target target = (targetStr == null) ? org.apache.logging.log4j.core.appender.ConsoleAppender.Target.SYSTEM_OUT : org.apache.logging.log4j.core.appender.ConsoleAppender.Target.valueOf(targetStr);\n        return new org.apache.logging.log4j.core.appender.ConsoleAppender(name, layout, filter, org.apache.logging.log4j.core.appender.ConsoleAppender.getManager(isFollow, target, layout), ignoreExceptions);\n    }\n\n    public static org.apache.logging.log4j.core.appender.ConsoleAppender createDefaultAppenderForLayout(final org.apache.logging.log4j.core.Layout<? extends java.io.Serializable> layout) {\n        return new org.apache.logging.log4j.core.appender.ConsoleAppender(\"Console\", layout, null, org.apache.logging.log4j.core.appender.ConsoleAppender.getManager(false, org.apache.logging.log4j.core.appender.ConsoleAppender.Target.SYSTEM_OUT, layout), true);\n    }\n\n    @org.apache.logging.log4j.core.config.plugins.PluginBuilderFactory\n    public static org.apache.logging.log4j.core.appender.ConsoleAppender.Builder newBuilder() {\n        return new org.apache.logging.log4j.core.appender.ConsoleAppender.Builder();\n    }\n\n    public static class Builder implements org.apache.logging.log4j.core.util.Builder<org.apache.logging.log4j.core.appender.ConsoleAppender> {\n        @org.apache.logging.log4j.core.config.plugins.PluginElement(\"Layout\")\n        @org.apache.logging.log4j.core.config.plugins.validation.constraints.Required\n        private org.apache.logging.log4j.core.Layout<? extends java.io.Serializable> layout = org.apache.logging.log4j.core.layout.PatternLayout.createDefaultLayout();\n\n        @org.apache.logging.log4j.core.config.plugins.PluginElement(\"Filter\")\n        private org.apache.logging.log4j.core.Filter filter;\n\n        @org.apache.logging.log4j.core.config.plugins.PluginBuilderAttribute\n        @org.apache.logging.log4j.core.config.plugins.validation.constraints.Required\n        private org.apache.logging.log4j.core.appender.ConsoleAppender.Target target = org.apache.logging.log4j.core.appender.ConsoleAppender.Target.SYSTEM_OUT;\n\n        @org.apache.logging.log4j.core.config.plugins.PluginBuilderAttribute\n        @org.apache.logging.log4j.core.config.plugins.validation.constraints.Required\n        private java.lang.String name;\n\n        @org.apache.logging.log4j.core.config.plugins.PluginBuilderAttribute\n        private boolean follow = false;\n\n        @org.apache.logging.log4j.core.config.plugins.PluginBuilderAttribute\n        private boolean ignoreExceptions = true;\n\n        public org.apache.logging.log4j.core.appender.ConsoleAppender.Builder setLayout(final org.apache.logging.log4j.core.Layout<? extends java.io.Serializable> layout) {\n            this.layout = layout;\n            return this;\n        }\n\n        public org.apache.logging.log4j.core.appender.ConsoleAppender.Builder setFilter(final org.apache.logging.log4j.core.Filter filter) {\n            this.filter = filter;\n            return this;\n        }\n\n        public org.apache.logging.log4j.core.appender.ConsoleAppender.Builder setTarget(final org.apache.logging.log4j.core.appender.ConsoleAppender.Target target) {\n            this.target = target;\n            return this;\n        }\n\n        public org.apache.logging.log4j.core.appender.ConsoleAppender.Builder setName(final java.lang.String name) {\n            this.name = name;\n            return this;\n        }\n\n        public org.apache.logging.log4j.core.appender.ConsoleAppender.Builder setFollow(final boolean follow) {\n            this.follow = follow;\n            return this;\n        }\n\n        public org.apache.logging.log4j.core.appender.ConsoleAppender.Builder setIgnoreExceptions(final boolean ignoreExceptions) {\n            this.ignoreExceptions = ignoreExceptions;\n            return this;\n        }\n\n        @java.lang.Override\n        public org.apache.logging.log4j.core.appender.ConsoleAppender build() {\n            return new org.apache.logging.log4j.core.appender.ConsoleAppender(name, layout, filter, org.apache.logging.log4j.core.appender.ConsoleAppender.getManager(follow, target, layout), ignoreExceptions);\n        }\n    }\n\n    private static org.apache.logging.log4j.core.appender.OutputStreamManager getManager(final boolean follow, final org.apache.logging.log4j.core.appender.ConsoleAppender.Target target, final org.apache.logging.log4j.core.Layout<? extends java.io.Serializable> layout) {\n        final java.lang.String type = target.name();\n        final java.io.OutputStream os = org.apache.logging.log4j.core.appender.ConsoleAppender.getOutputStream(follow, target);\n        return org.apache.logging.log4j.core.appender.OutputStreamManager.getManager((target.name() + '.') + follow, new org.apache.logging.log4j.core.appender.ConsoleAppender.FactoryData(os, type, layout), org.apache.logging.log4j.core.appender.ConsoleAppender.factory);\n    }\n\n    private static java.io.OutputStream getOutputStream(final boolean follow, final org.apache.logging.log4j.core.appender.ConsoleAppender.Target target) {\n        final java.lang.String enc = java.nio.charset.Charset.defaultCharset().name();\n        java.io.PrintStream printStream = null;\n        try {\n            printStream = (target == org.apache.logging.log4j.core.appender.ConsoleAppender.Target.SYSTEM_OUT) ? follow ? new java.io.PrintStream(new org.apache.logging.log4j.core.appender.ConsoleAppender.SystemOutStream(), true, enc) : java.lang.System.out : follow ? new java.io.PrintStream(new org.apache.logging.log4j.core.appender.ConsoleAppender.SystemErrStream(), true, enc) : java.lang.System.err;\n        } catch (final java.io.UnsupportedEncodingException ex) {\n            throw new java.lang.IllegalStateException(\"Unsupported default encoding \" + enc, ex);\n        }\n        final org.apache.logging.log4j.util.PropertiesUtil propsUtil = org.apache.logging.log4j.util.PropertiesUtil.getProperties();\n        if ((!propsUtil.getStringProperty(\"os.name\").startsWith(\"Windows\")) || propsUtil.getBooleanProperty(\"log4j.skipJansi\")) {\n            return printStream;\n        }\n        try {\n            final java.lang.Class<?> clazz = org.apache.logging.log4j.core.util.Loader.loadClass(org.apache.logging.log4j.core.appender.ConsoleAppender.JANSI_CLASS);\n            final java.lang.reflect.Constructor<?> constructor = clazz.getConstructor(java.io.OutputStream.class);\n            java.io.OutputStream newInstance = ((java.io.OutputStream) (constructor.newInstance(printStream)));\n            return follow ? new org.apache.logging.log4j.core.appender.ConsoleAppender.CloseShieldOutputStream(newInstance) : newInstance;\n        } catch (final java.lang.ClassNotFoundException cnfe) {\n            org.apache.logging.log4j.core.AbstractLifeCycle.LOGGER.debug(\"Jansi is not installed, cannot find {}\", org.apache.logging.log4j.core.appender.ConsoleAppender.JANSI_CLASS);\n        } catch (final java.lang.NoSuchMethodException nsme) {\n            org.apache.logging.log4j.core.AbstractLifeCycle.LOGGER.warn(\"{} is missing the proper constructor\", org.apache.logging.log4j.core.appender.ConsoleAppender.JANSI_CLASS);\n        } catch (final java.lang.Exception ex) {\n            org.apache.logging.log4j.core.AbstractLifeCycle.LOGGER.warn(\"Unable to instantiate {}\", org.apache.logging.log4j.core.appender.ConsoleAppender.JANSI_CLASS);\n        }\n        return printStream;\n    }\n\n    private static class SystemErrStream extends java.io.OutputStream {\n        public SystemErrStream() {\n        }\n\n        @java.lang.Override\n        public void close() {\n        }\n\n        @java.lang.Override\n        public void flush() {\n            java.lang.System.err.flush();\n        }\n\n        @java.lang.Override\n        public void write(final byte[] b) throws java.io.IOException {\n            java.lang.System.err.write(b);\n        }\n\n        @java.lang.Override\n        public void write(final byte[] b, final int off, final int len) throws java.io.IOException {\n            java.lang.System.err.write(b, off, len);\n        }\n\n        @java.lang.Override\n        public void write(final int b) {\n            java.lang.System.err.write(b);\n        }\n    }\n\n    private static class SystemOutStream extends java.io.OutputStream {\n        public SystemOutStream() {\n        }\n\n        @java.lang.Override\n        public void close() {\n        }\n\n        @java.lang.Override\n        public void flush() {\n            java.lang.System.out.flush();\n        }\n\n        @java.lang.Override\n        public void write(final byte[] b) throws java.io.IOException {\n            java.lang.System.out.write(b);\n        }\n\n        @java.lang.Override\n        public void write(final byte[] b, final int off, final int len) throws java.io.IOException {\n            java.lang.System.out.write(b, off, len);\n        }\n\n        @java.lang.Override\n        public void write(final int b) throws java.io.IOException {\n            java.lang.System.out.write(b);\n        }\n    }\n\n    private static class CloseShieldOutputStream extends java.io.OutputStream {\n        private final java.io.OutputStream delegate;\n\n        public CloseShieldOutputStream(final java.io.OutputStream delegate) {\n            this.delegate = delegate;\n        }\n\n        @java.lang.Override\n        public void close() {\n        }\n\n        @java.lang.Override\n        public void flush() throws java.io.IOException {\n            delegate.flush();\n        }\n\n        @java.lang.Override\n        public void write(final byte[] b) throws java.io.IOException {\n            delegate.write(b);\n        }\n\n        @java.lang.Override\n        public void write(final byte[] b, final int off, final int len) throws java.io.IOException {\n            delegate.write(b, off, len);\n        }\n\n        @java.lang.Override\n        public void write(final int b) throws java.io.IOException {\n            delegate.write(b);\n        }\n    }\n\n    private static class FactoryData {\n        private final java.io.OutputStream os;\n\n        private final java.lang.String type;\n\n        private final org.apache.logging.log4j.core.Layout<? extends java.io.Serializable> layout;\n\n        public FactoryData(final java.io.OutputStream os, final java.lang.String type, final org.apache.logging.log4j.core.Layout<? extends java.io.Serializable> layout) {\n            this.os = os;\n            this.type = type;\n            this.layout = layout;\n        }\n    }\n\n    private static class ConsoleManagerFactory implements org.apache.logging.log4j.core.appender.ManagerFactory<org.apache.logging.log4j.core.appender.OutputStreamManager, org.apache.logging.log4j.core.appender.ConsoleAppender.FactoryData> {\n        @java.lang.Override\n        public org.apache.logging.log4j.core.appender.OutputStreamManager createManager(final java.lang.String name, final org.apache.logging.log4j.core.appender.ConsoleAppender.FactoryData data) {\n            return new org.apache.logging.log4j.core.appender.OutputStreamManager(data.os, data.type, data.layout);\n        }\n    }\n}",
            "src_parent_type": "Class",
            "src_type": "Class"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Package",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "true",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Class",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "private static class SystemOutStream extends java.io.OutputStream {\n    public SystemOutStream() {\n    }\n\n    @java.lang.Override\n    public void close() {\n    }\n\n    @java.lang.Override\n    public void flush() {\n        java.lang.System.out.flush();\n    }\n\n    @java.lang.Override\n    public void write(final byte[] b) throws java.io.IOException {\n        java.lang.System.out.write(b);\n    }\n\n    @java.lang.Override\n    public void write(final byte[] b, final int off, final int len) throws java.io.IOException {\n        java.lang.System.out.write(b, off, len);\n    }\n\n    @java.lang.Override\n    public void write(final int b) throws java.io.IOException {\n        java.lang.System.out.write(b);\n    }\n}",
            "src_parent": "@org.apache.logging.log4j.core.config.plugins.Plugin(name = \"Console\", category = \"Core\", elementType = \"appender\", printObject = true)\npublic final class ConsoleAppender extends org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender<org.apache.logging.log4j.core.appender.OutputStreamManager> {\n    private static final long serialVersionUID = 1L;\n\n    private static final java.lang.String JANSI_CLASS = \"org.fusesource.jansi.WindowsAnsiOutputStream\";\n\n    private static org.apache.logging.log4j.core.appender.ConsoleAppender.ConsoleManagerFactory factory = new org.apache.logging.log4j.core.appender.ConsoleAppender.ConsoleManagerFactory();\n\n    public enum Target {\n\n        SYSTEM_OUT,\n        SYSTEM_ERR;}\n\n    private ConsoleAppender(final java.lang.String name, final org.apache.logging.log4j.core.Layout<? extends java.io.Serializable> layout, final org.apache.logging.log4j.core.Filter filter, final org.apache.logging.log4j.core.appender.OutputStreamManager manager, final boolean ignoreExceptions) {\n        super(name, layout, filter, ignoreExceptions, true, manager);\n    }\n\n    @org.apache.logging.log4j.core.config.plugins.PluginFactory\n    public static org.apache.logging.log4j.core.appender.ConsoleAppender createAppender(@org.apache.logging.log4j.core.config.plugins.PluginElement(\"Layout\")\n    org.apache.logging.log4j.core.Layout<? extends java.io.Serializable> layout, @org.apache.logging.log4j.core.config.plugins.PluginElement(\"Filter\")\n    final org.apache.logging.log4j.core.Filter filter, @org.apache.logging.log4j.core.config.plugins.PluginAttribute(value = \"target\", defaultString = \"SYSTEM_OUT\")\n    final java.lang.String targetStr, @org.apache.logging.log4j.core.config.plugins.PluginAttribute(\"name\")\n    final java.lang.String name, @org.apache.logging.log4j.core.config.plugins.PluginAttribute(value = \"follow\", defaultBoolean = false)\n    final java.lang.String follow, @org.apache.logging.log4j.core.config.plugins.PluginAttribute(value = \"ignoreExceptions\", defaultBoolean = true)\n    final java.lang.String ignore) {\n        if (name == null) {\n            org.apache.logging.log4j.core.AbstractLifeCycle.LOGGER.error(\"No name provided for ConsoleAppender\");\n            return null;\n        }\n        if (layout == null) {\n            layout = org.apache.logging.log4j.core.layout.PatternLayout.createDefaultLayout();\n        }\n        final boolean isFollow = java.lang.Boolean.parseBoolean(follow);\n        final boolean ignoreExceptions = org.apache.logging.log4j.core.util.Booleans.parseBoolean(ignore, true);\n        final org.apache.logging.log4j.core.appender.ConsoleAppender.Target target = (targetStr == null) ? org.apache.logging.log4j.core.appender.ConsoleAppender.Target.SYSTEM_OUT : org.apache.logging.log4j.core.appender.ConsoleAppender.Target.valueOf(targetStr);\n        return new org.apache.logging.log4j.core.appender.ConsoleAppender(name, layout, filter, org.apache.logging.log4j.core.appender.ConsoleAppender.getManager(isFollow, target, layout), ignoreExceptions);\n    }\n\n    public static org.apache.logging.log4j.core.appender.ConsoleAppender createDefaultAppenderForLayout(final org.apache.logging.log4j.core.Layout<? extends java.io.Serializable> layout) {\n        return new org.apache.logging.log4j.core.appender.ConsoleAppender(\"Console\", layout, null, org.apache.logging.log4j.core.appender.ConsoleAppender.getManager(false, org.apache.logging.log4j.core.appender.ConsoleAppender.Target.SYSTEM_OUT, layout), true);\n    }\n\n    @org.apache.logging.log4j.core.config.plugins.PluginBuilderFactory\n    public static org.apache.logging.log4j.core.appender.ConsoleAppender.Builder newBuilder() {\n        return new org.apache.logging.log4j.core.appender.ConsoleAppender.Builder();\n    }\n\n    public static class Builder implements org.apache.logging.log4j.core.util.Builder<org.apache.logging.log4j.core.appender.ConsoleAppender> {\n        @org.apache.logging.log4j.core.config.plugins.PluginElement(\"Layout\")\n        @org.apache.logging.log4j.core.config.plugins.validation.constraints.Required\n        private org.apache.logging.log4j.core.Layout<? extends java.io.Serializable> layout = org.apache.logging.log4j.core.layout.PatternLayout.createDefaultLayout();\n\n        @org.apache.logging.log4j.core.config.plugins.PluginElement(\"Filter\")\n        private org.apache.logging.log4j.core.Filter filter;\n\n        @org.apache.logging.log4j.core.config.plugins.PluginBuilderAttribute\n        @org.apache.logging.log4j.core.config.plugins.validation.constraints.Required\n        private org.apache.logging.log4j.core.appender.ConsoleAppender.Target target = org.apache.logging.log4j.core.appender.ConsoleAppender.Target.SYSTEM_OUT;\n\n        @org.apache.logging.log4j.core.config.plugins.PluginBuilderAttribute\n        @org.apache.logging.log4j.core.config.plugins.validation.constraints.Required\n        private java.lang.String name;\n\n        @org.apache.logging.log4j.core.config.plugins.PluginBuilderAttribute\n        private boolean follow = false;\n\n        @org.apache.logging.log4j.core.config.plugins.PluginBuilderAttribute\n        private boolean ignoreExceptions = true;\n\n        public org.apache.logging.log4j.core.appender.ConsoleAppender.Builder setLayout(final org.apache.logging.log4j.core.Layout<? extends java.io.Serializable> layout) {\n            this.layout = layout;\n            return this;\n        }\n\n        public org.apache.logging.log4j.core.appender.ConsoleAppender.Builder setFilter(final org.apache.logging.log4j.core.Filter filter) {\n            this.filter = filter;\n            return this;\n        }\n\n        public org.apache.logging.log4j.core.appender.ConsoleAppender.Builder setTarget(final org.apache.logging.log4j.core.appender.ConsoleAppender.Target target) {\n            this.target = target;\n            return this;\n        }\n\n        public org.apache.logging.log4j.core.appender.ConsoleAppender.Builder setName(final java.lang.String name) {\n            this.name = name;\n            return this;\n        }\n\n        public org.apache.logging.log4j.core.appender.ConsoleAppender.Builder setFollow(final boolean follow) {\n            this.follow = follow;\n            return this;\n        }\n\n        public org.apache.logging.log4j.core.appender.ConsoleAppender.Builder setIgnoreExceptions(final boolean ignoreExceptions) {\n            this.ignoreExceptions = ignoreExceptions;\n            return this;\n        }\n\n        @java.lang.Override\n        public org.apache.logging.log4j.core.appender.ConsoleAppender build() {\n            return new org.apache.logging.log4j.core.appender.ConsoleAppender(name, layout, filter, org.apache.logging.log4j.core.appender.ConsoleAppender.getManager(follow, target, layout), ignoreExceptions);\n        }\n    }\n\n    private static org.apache.logging.log4j.core.appender.OutputStreamManager getManager(final boolean follow, final org.apache.logging.log4j.core.appender.ConsoleAppender.Target target, final org.apache.logging.log4j.core.Layout<? extends java.io.Serializable> layout) {\n        final java.lang.String type = target.name();\n        final java.io.OutputStream os = org.apache.logging.log4j.core.appender.ConsoleAppender.getOutputStream(follow, target);\n        return org.apache.logging.log4j.core.appender.OutputStreamManager.getManager((target.name() + '.') + follow, new org.apache.logging.log4j.core.appender.ConsoleAppender.FactoryData(os, type, layout), org.apache.logging.log4j.core.appender.ConsoleAppender.factory);\n    }\n\n    private static java.io.OutputStream getOutputStream(final boolean follow, final org.apache.logging.log4j.core.appender.ConsoleAppender.Target target) {\n        final java.lang.String enc = java.nio.charset.Charset.defaultCharset().name();\n        java.io.PrintStream printStream = null;\n        try {\n            printStream = (target == org.apache.logging.log4j.core.appender.ConsoleAppender.Target.SYSTEM_OUT) ? follow ? new java.io.PrintStream(new org.apache.logging.log4j.core.appender.ConsoleAppender.SystemOutStream(), true, enc) : java.lang.System.out : follow ? new java.io.PrintStream(new org.apache.logging.log4j.core.appender.ConsoleAppender.SystemErrStream(), true, enc) : java.lang.System.err;\n        } catch (final java.io.UnsupportedEncodingException ex) {\n            throw new java.lang.IllegalStateException(\"Unsupported default encoding \" + enc, ex);\n        }\n        final org.apache.logging.log4j.util.PropertiesUtil propsUtil = org.apache.logging.log4j.util.PropertiesUtil.getProperties();\n        if ((!propsUtil.getStringProperty(\"os.name\").startsWith(\"Windows\")) || propsUtil.getBooleanProperty(\"log4j.skipJansi\")) {\n            return printStream;\n        }\n        try {\n            final java.lang.Class<?> clazz = org.apache.logging.log4j.core.util.Loader.loadClass(org.apache.logging.log4j.core.appender.ConsoleAppender.JANSI_CLASS);\n            final java.lang.reflect.Constructor<?> constructor = clazz.getConstructor(java.io.OutputStream.class);\n            java.io.OutputStream newInstance = ((java.io.OutputStream) (constructor.newInstance(printStream)));\n            return follow ? new org.apache.logging.log4j.core.appender.ConsoleAppender.CloseShieldOutputStream(newInstance) : newInstance;\n        } catch (final java.lang.ClassNotFoundException cnfe) {\n            org.apache.logging.log4j.core.AbstractLifeCycle.LOGGER.debug(\"Jansi is not installed, cannot find {}\", org.apache.logging.log4j.core.appender.ConsoleAppender.JANSI_CLASS);\n        } catch (final java.lang.NoSuchMethodException nsme) {\n            org.apache.logging.log4j.core.AbstractLifeCycle.LOGGER.warn(\"{} is missing the proper constructor\", org.apache.logging.log4j.core.appender.ConsoleAppender.JANSI_CLASS);\n        } catch (final java.lang.Exception ex) {\n            org.apache.logging.log4j.core.AbstractLifeCycle.LOGGER.warn(\"Unable to instantiate {}\", org.apache.logging.log4j.core.appender.ConsoleAppender.JANSI_CLASS);\n        }\n        return printStream;\n    }\n\n    private static class SystemErrStream extends java.io.OutputStream {\n        public SystemErrStream() {\n        }\n\n        @java.lang.Override\n        public void close() {\n        }\n\n        @java.lang.Override\n        public void flush() {\n            java.lang.System.err.flush();\n        }\n\n        @java.lang.Override\n        public void write(final byte[] b) throws java.io.IOException {\n            java.lang.System.err.write(b);\n        }\n\n        @java.lang.Override\n        public void write(final byte[] b, final int off, final int len) throws java.io.IOException {\n            java.lang.System.err.write(b, off, len);\n        }\n\n        @java.lang.Override\n        public void write(final int b) {\n            java.lang.System.err.write(b);\n        }\n    }\n\n    private static class SystemOutStream extends java.io.OutputStream {\n        public SystemOutStream() {\n        }\n\n        @java.lang.Override\n        public void close() {\n        }\n\n        @java.lang.Override\n        public void flush() {\n            java.lang.System.out.flush();\n        }\n\n        @java.lang.Override\n        public void write(final byte[] b) throws java.io.IOException {\n            java.lang.System.out.write(b);\n        }\n\n        @java.lang.Override\n        public void write(final byte[] b, final int off, final int len) throws java.io.IOException {\n            java.lang.System.out.write(b, off, len);\n        }\n\n        @java.lang.Override\n        public void write(final int b) throws java.io.IOException {\n            java.lang.System.out.write(b);\n        }\n    }\n\n    private static class CloseShieldOutputStream extends java.io.OutputStream {\n        private final java.io.OutputStream delegate;\n\n        public CloseShieldOutputStream(final java.io.OutputStream delegate) {\n            this.delegate = delegate;\n        }\n\n        @java.lang.Override\n        public void close() {\n        }\n\n        @java.lang.Override\n        public void flush() throws java.io.IOException {\n            delegate.flush();\n        }\n\n        @java.lang.Override\n        public void write(final byte[] b) throws java.io.IOException {\n            delegate.write(b);\n        }\n\n        @java.lang.Override\n        public void write(final byte[] b, final int off, final int len) throws java.io.IOException {\n            delegate.write(b, off, len);\n        }\n\n        @java.lang.Override\n        public void write(final int b) throws java.io.IOException {\n            delegate.write(b);\n        }\n    }\n\n    private static class FactoryData {\n        private final java.io.OutputStream os;\n\n        private final java.lang.String type;\n\n        private final org.apache.logging.log4j.core.Layout<? extends java.io.Serializable> layout;\n\n        public FactoryData(final java.io.OutputStream os, final java.lang.String type, final org.apache.logging.log4j.core.Layout<? extends java.io.Serializable> layout) {\n            this.os = os;\n            this.type = type;\n            this.layout = layout;\n        }\n    }\n\n    private static class ConsoleManagerFactory implements org.apache.logging.log4j.core.appender.ManagerFactory<org.apache.logging.log4j.core.appender.OutputStreamManager, org.apache.logging.log4j.core.appender.ConsoleAppender.FactoryData> {\n        @java.lang.Override\n        public org.apache.logging.log4j.core.appender.OutputStreamManager createManager(final java.lang.String name, final org.apache.logging.log4j.core.appender.ConsoleAppender.FactoryData data) {\n            return new org.apache.logging.log4j.core.appender.OutputStreamManager(data.os, data.type, data.layout);\n        }\n    }\n}",
            "src_parent_type": "Class",
            "src_type": "Class"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Return",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "Try",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "true",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Try",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "java.io.OutputStream newInstance = ((java.io.OutputStream) (constructor.newInstance(printStream)))",
            "src_parent": "{\n    final java.lang.Class<?> clazz = org.apache.logging.log4j.core.util.Loader.loadClass(org.apache.logging.log4j.core.appender.ConsoleAppender.JANSI_CLASS);\n    final java.lang.reflect.Constructor<?> constructor = clazz.getConstructor(java.io.OutputStream.class);\n    java.io.OutputStream newInstance = ((java.io.OutputStream) (constructor.newInstance(printStream)));\n    return follow ? new org.apache.logging.log4j.core.appender.ConsoleAppender.CloseShieldOutputStream(newInstance) : newInstance;\n}",
            "src_parent_type": "Block",
            "src_type": "LocalVariable"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Return",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "Try",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "true",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Try",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "follow ? new org.apache.logging.log4j.core.appender.ConsoleAppender.CloseShieldOutputStream(newInstance) : newInstance",
            "src_parent": "return follow ? new org.apache.logging.log4j.core.appender.ConsoleAppender.CloseShieldOutputStream(newInstance) : newInstance",
            "src_parent_type": "Return",
            "src_type": "Conditional"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Try",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Return",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "((java.io.OutputStream) (constructor.newInstance(printStream)))",
            "dst_parent": "java.io.OutputStream newInstance = ((java.io.OutputStream) (constructor.newInstance(printStream)))",
            "dst_parent_type": "LocalVariable",
            "dst_type": "Invocation",
            "operator": "MOV",
            "src": "((java.io.OutputStream) (constructor.newInstance(printStream)))",
            "src_parent": "new org.apache.logging.log4j.core.appender.ConsoleAppender.CloseShieldOutputStream(((java.io.OutputStream) (constructor.newInstance(printStream))))",
            "src_parent_type": "ConstructorCall",
            "src_type": "Invocation"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Try",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Assignment",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "java.lang.System.err",
            "dst_parent": "java.lang.System.err.flush()",
            "dst_parent_type": "Invocation",
            "dst_type": "FieldRead",
            "operator": "MOV",
            "src": "java.lang.System.err",
            "src_parent": "new org.apache.logging.log4j.core.appender.ConsoleAppender.CloseShieldOutputStream(java.lang.System.err)",
            "src_parent_type": "ConstructorCall",
            "src_type": "FieldRead"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Try",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Assignment",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "java.lang.System.out",
            "dst_parent": "java.lang.System.out.flush()",
            "dst_parent_type": "Invocation",
            "dst_type": "FieldRead",
            "operator": "MOV",
            "src": "java.lang.System.out",
            "src_parent": "new org.apache.logging.log4j.core.appender.ConsoleAppender.CloseShieldOutputStream(java.lang.System.out)",
            "src_parent_type": "ConstructorCall",
            "src_type": "FieldRead"
          }
        }
      ],
      "file_name": "ConsoleAppender"
    }
  ],
  "id": "logging-log4j2_43517f15"
}