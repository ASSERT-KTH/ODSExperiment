{
  "files": [
    {
      "features": [
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Field",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "public static final java.util.concurrent.atomic.AtomicInteger uniqueDirectoryGenerator = new java.util.concurrent.atomic.AtomicInteger(0);",
            "src_parent": "public class AccumuloVFSClassLoader {\n    public static class AccumuloVFSClassLoaderShutdownThread implements java.lang.Runnable {\n        @java.lang.Override\n        public void run() {\n            try {\n                org.apache.accumulo.start.classloader.vfs.AccumuloVFSClassLoader.close();\n            } catch (java.lang.Exception e) {\n            }\n        }\n    }\n\n    private static java.util.List<java.lang.ref.WeakReference<org.apache.commons.vfs2.impl.DefaultFileSystemManager>> vfsInstances = java.util.Collections.synchronizedList(new java.util.ArrayList<java.lang.ref.WeakReference<org.apache.commons.vfs2.impl.DefaultFileSystemManager>>());\n\n    public static final java.lang.String DYNAMIC_CLASSPATH_PROPERTY_NAME = \"general.dynamic.classpaths\";\n\n    public static final java.lang.String DEFAULT_DYNAMIC_CLASSPATH_VALUE = \"$ACCUMULO_HOME/lib/ext/[^.].*.jar\";\n\n    public static final java.lang.String VFS_CLASSLOADER_SYSTEM_CLASSPATH_PROPERTY = \"general.vfs.classpaths\";\n\n    public static final java.lang.String VFS_CONTEXT_CLASSPATH_PROPERTY = \"general.vfs.context.classpath.\";\n\n    public static final java.lang.String VFS_CACHE_DIR = \"general.vfs.cache.dir\";\n\n    public static final java.util.concurrent.atomic.AtomicInteger uniqueDirectoryGenerator = new java.util.concurrent.atomic.AtomicInteger(0);\n\n    private static java.lang.ClassLoader parent = null;\n\n    private static volatile org.apache.accumulo.start.classloader.vfs.ReloadingClassLoader loader = null;\n\n    private static final java.lang.Object lock = new java.lang.Object();\n\n    private static org.apache.accumulo.start.classloader.vfs.ContextManager contextManager;\n\n    private static org.apache.log4j.Logger log = org.apache.log4j.Logger.getLogger(org.apache.accumulo.start.classloader.vfs.AccumuloVFSClassLoader.class);\n\n    static {\n        java.lang.Runtime.getRuntime().addShutdownHook(new java.lang.Thread(new org.apache.accumulo.start.classloader.vfs.AccumuloVFSClassLoader.AccumuloVFSClassLoaderShutdownThread()));\n    }\n\n    public static synchronized <U> java.lang.Class<? extends U> loadClass(java.lang.String classname, java.lang.Class<U> extension) throws java.lang.ClassNotFoundException {\n        try {\n            return org.apache.accumulo.start.classloader.vfs.AccumuloVFSClassLoader.getClassLoader().loadClass(classname).asSubclass(extension);\n        } catch (java.io.IOException e) {\n            throw new java.lang.ClassNotFoundException(\"IO Error loading class \" + classname, e);\n        }\n    }\n\n    public static java.lang.Class<?> loadClass(java.lang.String classname) throws java.lang.ClassNotFoundException {\n        return org.apache.accumulo.start.classloader.vfs.AccumuloVFSClassLoader.loadClass(classname, java.lang.Object.class).asSubclass(java.lang.Object.class);\n    }\n\n    static org.apache.commons.vfs2.FileObject[] resolve(org.apache.commons.vfs2.FileSystemManager vfs, java.lang.String uris) throws org.apache.commons.vfs2.FileSystemException {\n        return org.apache.accumulo.start.classloader.vfs.AccumuloVFSClassLoader.resolve(vfs, uris, new java.util.ArrayList<org.apache.commons.vfs2.FileObject>());\n    }\n\n    static org.apache.commons.vfs2.FileObject[] resolve(org.apache.commons.vfs2.FileSystemManager vfs, java.lang.String uris, java.util.ArrayList<org.apache.commons.vfs2.FileObject> pathsToMonitor) throws org.apache.commons.vfs2.FileSystemException {\n        if (uris == null) {\n            return new org.apache.commons.vfs2.FileObject[0];\n        }\n        java.util.ArrayList<org.apache.commons.vfs2.FileObject> classpath = new java.util.ArrayList<org.apache.commons.vfs2.FileObject>();\n        pathsToMonitor.clear();\n        for (java.lang.String path : uris.split(\",\")) {\n            path = path.trim();\n            if (path.equals(\"\")) {\n                continue;\n            }\n            path = org.apache.accumulo.start.classloader.AccumuloClassLoader.replaceEnvVars(path, java.lang.System.getenv());\n            org.apache.commons.vfs2.FileObject fo = vfs.resolveFile(path);\n            switch (fo.getType()) {\n                case FILE :\n                case FOLDER :\n                    classpath.add(fo);\n                    pathsToMonitor.add(fo);\n                    break;\n                case IMAGINARY :\n                    java.lang.String pattern = fo.getName().getBaseName();\n                    if ((fo.getParent() != null) && (fo.getParent().getType() == org.apache.commons.vfs2.FileType.FOLDER)) {\n                        pathsToMonitor.add(fo.getParent());\n                        org.apache.commons.vfs2.FileObject[] children = fo.getParent().getChildren();\n                        for (org.apache.commons.vfs2.FileObject child : children) {\n                            if ((child.getType() == org.apache.commons.vfs2.FileType.FILE) && child.getName().getBaseName().matches(pattern)) {\n                                classpath.add(child);\n                            }\n                        }\n                    } else {\n                        org.apache.accumulo.start.classloader.vfs.AccumuloVFSClassLoader.log.warn(\"ignoring classpath entry \" + fo);\n                    }\n                    break;\n                default :\n                    org.apache.accumulo.start.classloader.vfs.AccumuloVFSClassLoader.log.warn(\"ignoring classpath entry \" + fo);\n                    break;\n            }\n        }\n        return classpath.toArray(new org.apache.commons.vfs2.FileObject[classpath.size()]);\n    }\n\n    private static org.apache.accumulo.start.classloader.vfs.ReloadingClassLoader createDynamicClassloader(final java.lang.ClassLoader parent) throws java.io.IOException, org.apache.commons.vfs2.FileSystemException {\n        java.lang.String dynamicCPath = org.apache.accumulo.start.classloader.AccumuloClassLoader.getAccumuloString(org.apache.accumulo.start.classloader.vfs.AccumuloVFSClassLoader.DYNAMIC_CLASSPATH_PROPERTY_NAME, org.apache.accumulo.start.classloader.vfs.AccumuloVFSClassLoader.DEFAULT_DYNAMIC_CLASSPATH_VALUE);\n        java.lang.String envJars = java.lang.System.getenv(\"ACCUMULO_XTRAJARS\");\n        if ((null != envJars) && (!envJars.equals(\"\"))) {\n            if ((dynamicCPath != null) && (!dynamicCPath.equals(\"\"))) {\n                dynamicCPath = (dynamicCPath + \",\") + envJars;\n            } else {\n                dynamicCPath = envJars;\n            }\n        }\n        org.apache.accumulo.start.classloader.vfs.ReloadingClassLoader wrapper = new org.apache.accumulo.start.classloader.vfs.ReloadingClassLoader() {\n            @java.lang.Override\n            public java.lang.ClassLoader getClassLoader() {\n                return parent;\n            }\n        };\n        if ((dynamicCPath == null) || dynamicCPath.equals(\"\")) {\n            return wrapper;\n        }\n        return new org.apache.accumulo.start.classloader.vfs.AccumuloReloadingVFSClassLoader(dynamicCPath, org.apache.accumulo.start.classloader.vfs.AccumuloVFSClassLoader.generateVfs(), wrapper, 1000, true);\n    }\n\n    public static java.lang.ClassLoader getClassLoader() throws java.io.IOException {\n        org.apache.accumulo.start.classloader.vfs.ReloadingClassLoader localLoader = org.apache.accumulo.start.classloader.vfs.AccumuloVFSClassLoader.loader;\n        while (null == localLoader) {\n            synchronized(org.apache.accumulo.start.classloader.vfs.AccumuloVFSClassLoader.lock) {\n                if (null == org.apache.accumulo.start.classloader.vfs.AccumuloVFSClassLoader.loader) {\n                    org.apache.commons.vfs2.FileSystemManager vfs = org.apache.accumulo.start.classloader.vfs.AccumuloVFSClassLoader.generateVfs();\n                    if (null == org.apache.accumulo.start.classloader.vfs.AccumuloVFSClassLoader.parent) {\n                        org.apache.accumulo.start.classloader.vfs.AccumuloVFSClassLoader.parent = org.apache.accumulo.start.classloader.AccumuloClassLoader.getClassLoader();\n                    }\n                    org.apache.commons.vfs2.FileObject[] vfsCP = org.apache.accumulo.start.classloader.vfs.AccumuloVFSClassLoader.resolve(vfs, org.apache.accumulo.start.classloader.AccumuloClassLoader.getAccumuloString(org.apache.accumulo.start.classloader.vfs.AccumuloVFSClassLoader.VFS_CLASSLOADER_SYSTEM_CLASSPATH_PROPERTY, \"\"));\n                    if (vfsCP.length == 0) {\n                        localLoader = org.apache.accumulo.start.classloader.vfs.AccumuloVFSClassLoader.createDynamicClassloader(org.apache.accumulo.start.classloader.vfs.AccumuloVFSClassLoader.parent);\n                        org.apache.accumulo.start.classloader.vfs.AccumuloVFSClassLoader.loader = localLoader;\n                        return localLoader.getClassLoader();\n                    }\n                    localLoader = org.apache.accumulo.start.classloader.vfs.AccumuloVFSClassLoader.createDynamicClassloader(new org.apache.commons.vfs2.impl.VFSClassLoader(vfsCP, vfs, org.apache.accumulo.start.classloader.vfs.AccumuloVFSClassLoader.parent));\n                    org.apache.accumulo.start.classloader.vfs.AccumuloVFSClassLoader.loader = localLoader;\n                    for (org.apache.commons.vfs2.FileObject fo : vfsCP) {\n                        if (fo instanceof org.apache.accumulo.start.classloader.vfs.providers.HdfsFileObject) {\n                            java.lang.String uri = fo.getName().getRootURI();\n                            org.apache.hadoop.conf.Configuration c = new org.apache.hadoop.conf.Configuration(true);\n                            c.set(FileSystem.FS_DEFAULT_NAME_KEY, uri);\n                            org.apache.hadoop.fs.FileSystem fs = org.apache.hadoop.fs.FileSystem.get(c);\n                            fs.getConf().setClassLoader(org.apache.accumulo.start.classloader.vfs.AccumuloVFSClassLoader.loader.getClassLoader());\n                        }\n                    }\n                }\n            }\n        } \n        return localLoader.getClassLoader();\n    }\n\n    public static org.apache.commons.vfs2.FileSystemManager generateVfs() throws org.apache.commons.vfs2.FileSystemException {\n        org.apache.commons.vfs2.impl.DefaultFileSystemManager vfs = new org.apache.commons.vfs2.impl.DefaultFileSystemManager();\n        vfs.addProvider(\"res\", new org.apache.commons.vfs2.provider.res.ResourceFileProvider());\n        vfs.addProvider(\"zip\", new org.apache.commons.vfs2.provider.zip.ZipFileProvider());\n        vfs.addProvider(\"gz\", new org.apache.commons.vfs2.provider.gzip.GzipFileProvider());\n        vfs.addProvider(\"ram\", new org.apache.commons.vfs2.provider.ram.RamFileProvider());\n        vfs.addProvider(\"file\", new org.apache.commons.vfs2.provider.local.DefaultLocalFileProvider());\n        vfs.addProvider(\"jar\", new org.apache.commons.vfs2.provider.jar.JarFileProvider());\n        vfs.addProvider(\"http\", new org.apache.commons.vfs2.provider.http.HttpFileProvider());\n        vfs.addProvider(\"https\", new org.apache.commons.vfs2.provider.https.HttpsFileProvider());\n        vfs.addProvider(\"ftp\", new org.apache.commons.vfs2.provider.ftp.FtpFileProvider());\n        vfs.addProvider(\"ftps\", new org.apache.commons.vfs2.provider.ftps.FtpsFileProvider());\n        vfs.addProvider(\"war\", new org.apache.commons.vfs2.provider.jar.JarFileProvider());\n        vfs.addProvider(\"par\", new org.apache.commons.vfs2.provider.jar.JarFileProvider());\n        vfs.addProvider(\"ear\", new org.apache.commons.vfs2.provider.jar.JarFileProvider());\n        vfs.addProvider(\"sar\", new org.apache.commons.vfs2.provider.jar.JarFileProvider());\n        vfs.addProvider(\"ejb3\", new org.apache.commons.vfs2.provider.jar.JarFileProvider());\n        vfs.addProvider(\"tmp\", new org.apache.commons.vfs2.provider.temp.TemporaryFileProvider());\n        vfs.addProvider(\"tar\", new org.apache.commons.vfs2.provider.tar.TarFileProvider());\n        vfs.addProvider(\"tbz2\", new org.apache.commons.vfs2.provider.tar.TarFileProvider());\n        vfs.addProvider(\"tgz\", new org.apache.commons.vfs2.provider.tar.TarFileProvider());\n        vfs.addProvider(\"bz2\", new org.apache.commons.vfs2.provider.bzip2.Bzip2FileProvider());\n        vfs.addProvider(\"hdfs\", new org.apache.accumulo.start.classloader.vfs.providers.HdfsFileProvider());\n        vfs.addExtensionMap(\"jar\", \"jar\");\n        vfs.addExtensionMap(\"zip\", \"zip\");\n        vfs.addExtensionMap(\"gz\", \"gz\");\n        vfs.addExtensionMap(\"tar\", \"tar\");\n        vfs.addExtensionMap(\"tbz2\", \"tar\");\n        vfs.addExtensionMap(\"tgz\", \"tar\");\n        vfs.addExtensionMap(\"bz2\", \"bz2\");\n        vfs.addMimeTypeMap(\"application/x-tar\", \"tar\");\n        vfs.addMimeTypeMap(\"application/x-gzip\", \"gz\");\n        vfs.addMimeTypeMap(\"application/zip\", \"zip\");\n        vfs.setFileContentInfoFactory(new org.apache.commons.vfs2.impl.FileContentInfoFilenameFactory());\n        vfs.setFilesCache(new org.apache.commons.vfs2.cache.SoftRefFilesCache());\n        java.lang.String cacheDirPath = org.apache.accumulo.start.classloader.AccumuloClassLoader.getAccumuloString(org.apache.accumulo.start.classloader.vfs.AccumuloVFSClassLoader.VFS_CACHE_DIR, \"\");\n        java.io.File cacheDir = org.apache.accumulo.start.classloader.vfs.AccumuloVFSClassLoader.computeTopCacheDir();\n        if (!cacheDirPath.isEmpty()) {\n            cacheDir = new java.io.File(cacheDirPath, \"\" + org.apache.accumulo.start.classloader.vfs.AccumuloVFSClassLoader.uniqueDirectoryGenerator.getAndIncrement());\n        }\n        vfs.setReplicator(new org.apache.accumulo.start.classloader.vfs.UniqueFileReplicator(cacheDir));\n        vfs.setCacheStrategy(CacheStrategy.ON_RESOLVE);\n        vfs.init();\n        org.apache.accumulo.start.classloader.vfs.AccumuloVFSClassLoader.vfsInstances.add(new java.lang.ref.WeakReference<org.apache.commons.vfs2.impl.DefaultFileSystemManager>(vfs));\n        return vfs;\n    }\n\n    private static java.io.File computeTopCacheDir() {\n        java.lang.String procName = java.lang.management.ManagementFactory.getRuntimeMXBean().getName();\n        return new java.io.File(java.lang.System.getProperty(\"java.io.tmpdir\"), ((\"accumulo-vfs-cache-\" + procName) + \"-\") + java.lang.System.getProperty(\"user.name\", \"nouser\"));\n    }\n\n    public interface Printer {\n        public abstract void print(java.lang.String s);\n    }\n\n    public static void printClassPath() {\n        org.apache.accumulo.start.classloader.vfs.AccumuloVFSClassLoader.printClassPath(new org.apache.accumulo.start.classloader.vfs.AccumuloVFSClassLoader.Printer() {\n            @java.lang.Override\n            public void print(java.lang.String s) {\n                java.lang.System.out.println(s);\n            }\n        });\n    }\n\n    public static void printClassPath(org.apache.accumulo.start.classloader.vfs.AccumuloVFSClassLoader.Printer out) {\n        try {\n            java.lang.ClassLoader cl = org.apache.accumulo.start.classloader.vfs.AccumuloVFSClassLoader.getClassLoader();\n            java.util.ArrayList<java.lang.ClassLoader> classloaders = new java.util.ArrayList<java.lang.ClassLoader>();\n            while (cl != null) {\n                classloaders.add(cl);\n                cl = cl.getParent();\n            } \n            java.util.Collections.reverse(classloaders);\n            int level = 0;\n            for (java.lang.ClassLoader classLoader : classloaders) {\n                if (level > 0) {\n                    out.print(\"\");\n                }\n                level++;\n                java.lang.String classLoaderDescription;\n                switch (level) {\n                    case 1 :\n                        classLoaderDescription = level + \": Java System Classloader (loads Java system resources)\";\n                        break;\n                    case 2 :\n                        classLoaderDescription = level + \": Java Classloader (loads everything defined by java classpath)\";\n                        break;\n                    case 3 :\n                        classLoaderDescription = level + \": Accumulo Classloader (loads everything defined by general.classpaths)\";\n                        break;\n                    case 4 :\n                        classLoaderDescription = level + \": Accumulo Dynamic Classloader (loads everything defined by general.dynamic.classpaths)\";\n                        break;\n                    default :\n                        classLoaderDescription = ((level + \": Mystery Classloader (someone probably added a classloader and didn't update the switch statement in \") + org.apache.accumulo.start.classloader.vfs.AccumuloVFSClassLoader.class.getName()) + \")\";\n                        break;\n                }\n                if (classLoader instanceof java.net.URLClassLoader) {\n                    out.print((\"Level \" + classLoaderDescription) + \" URL classpath items are:\");\n                    for (java.net.URL u : ((java.net.URLClassLoader) (classLoader)).getURLs()) {\n                        out.print(\"\\t\" + u.toExternalForm());\n                    }\n                } else if (classLoader instanceof org.apache.commons.vfs2.impl.VFSClassLoader) {\n                    out.print((\"Level \" + classLoaderDescription) + \" VFS classpaths items are:\");\n                    org.apache.commons.vfs2.impl.VFSClassLoader vcl = ((org.apache.commons.vfs2.impl.VFSClassLoader) (classLoader));\n                    for (org.apache.commons.vfs2.FileObject f : vcl.getFileObjects()) {\n                        out.print(\"\\t\" + f.getURL().toExternalForm());\n                    }\n                } else {\n                    out.print(\"Unknown classloader configuration \" + classLoader.getClass());\n                }\n            }\n        } catch (java.lang.Throwable t) {\n            throw new java.lang.RuntimeException(t);\n        }\n    }\n\n    public static synchronized org.apache.accumulo.start.classloader.vfs.ContextManager getContextManager() throws java.io.IOException {\n        if (org.apache.accumulo.start.classloader.vfs.AccumuloVFSClassLoader.contextManager == null) {\n            org.apache.accumulo.start.classloader.vfs.AccumuloVFSClassLoader.getClassLoader();\n            org.apache.accumulo.start.classloader.vfs.AccumuloVFSClassLoader.contextManager = new org.apache.accumulo.start.classloader.vfs.ContextManager(org.apache.accumulo.start.classloader.vfs.AccumuloVFSClassLoader.generateVfs(), new org.apache.accumulo.start.classloader.vfs.ReloadingClassLoader() {\n                @java.lang.Override\n                public java.lang.ClassLoader getClassLoader() {\n                    try {\n                        return org.apache.accumulo.start.classloader.vfs.AccumuloVFSClassLoader.getClassLoader();\n                    } catch (java.io.IOException e) {\n                        throw new java.lang.RuntimeException(e);\n                    }\n                }\n            });\n        }\n        return org.apache.accumulo.start.classloader.vfs.AccumuloVFSClassLoader.contextManager;\n    }\n\n    public static void close() {\n        for (java.lang.ref.WeakReference<org.apache.commons.vfs2.impl.DefaultFileSystemManager> vfsInstance : org.apache.accumulo.start.classloader.vfs.AccumuloVFSClassLoader.vfsInstances) {\n            org.apache.commons.vfs2.impl.DefaultFileSystemManager ref = vfsInstance.get();\n            if (ref != null) {\n                org.apache.commons.vfs2.provider.FileReplicator replicator;\n                try {\n                    replicator = ref.getReplicator();\n                    if (replicator instanceof org.apache.accumulo.start.classloader.vfs.UniqueFileReplicator) {\n                        ((org.apache.accumulo.start.classloader.vfs.UniqueFileReplicator) (replicator)).close();\n                    }\n                } catch (org.apache.commons.vfs2.FileSystemException e) {\n                    org.apache.accumulo.start.classloader.vfs.AccumuloVFSClassLoader.log.error(e, e);\n                }\n                ref.close();\n            }\n        }\n        try {\n            org.apache.commons.io.FileUtils.deleteDirectory(org.apache.accumulo.start.classloader.vfs.AccumuloVFSClassLoader.computeTopCacheDir());\n        } catch (java.io.IOException e) {\n            org.apache.accumulo.start.classloader.vfs.AccumuloVFSClassLoader.log.error(e, e);\n        }\n    }\n}",
            "src_parent_type": "Class",
            "src_type": "Field"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "Invocation",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "LocalVariable",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "java.lang.String cacheDirPath = org.apache.accumulo.start.classloader.AccumuloClassLoader.getAccumuloString(org.apache.accumulo.start.classloader.vfs.AccumuloVFSClassLoader.VFS_CACHE_DIR, \"\")",
            "src_parent": "{\n    org.apache.commons.vfs2.impl.DefaultFileSystemManager vfs = new org.apache.commons.vfs2.impl.DefaultFileSystemManager();\n    vfs.addProvider(\"res\", new org.apache.commons.vfs2.provider.res.ResourceFileProvider());\n    vfs.addProvider(\"zip\", new org.apache.commons.vfs2.provider.zip.ZipFileProvider());\n    vfs.addProvider(\"gz\", new org.apache.commons.vfs2.provider.gzip.GzipFileProvider());\n    vfs.addProvider(\"ram\", new org.apache.commons.vfs2.provider.ram.RamFileProvider());\n    vfs.addProvider(\"file\", new org.apache.commons.vfs2.provider.local.DefaultLocalFileProvider());\n    vfs.addProvider(\"jar\", new org.apache.commons.vfs2.provider.jar.JarFileProvider());\n    vfs.addProvider(\"http\", new org.apache.commons.vfs2.provider.http.HttpFileProvider());\n    vfs.addProvider(\"https\", new org.apache.commons.vfs2.provider.https.HttpsFileProvider());\n    vfs.addProvider(\"ftp\", new org.apache.commons.vfs2.provider.ftp.FtpFileProvider());\n    vfs.addProvider(\"ftps\", new org.apache.commons.vfs2.provider.ftps.FtpsFileProvider());\n    vfs.addProvider(\"war\", new org.apache.commons.vfs2.provider.jar.JarFileProvider());\n    vfs.addProvider(\"par\", new org.apache.commons.vfs2.provider.jar.JarFileProvider());\n    vfs.addProvider(\"ear\", new org.apache.commons.vfs2.provider.jar.JarFileProvider());\n    vfs.addProvider(\"sar\", new org.apache.commons.vfs2.provider.jar.JarFileProvider());\n    vfs.addProvider(\"ejb3\", new org.apache.commons.vfs2.provider.jar.JarFileProvider());\n    vfs.addProvider(\"tmp\", new org.apache.commons.vfs2.provider.temp.TemporaryFileProvider());\n    vfs.addProvider(\"tar\", new org.apache.commons.vfs2.provider.tar.TarFileProvider());\n    vfs.addProvider(\"tbz2\", new org.apache.commons.vfs2.provider.tar.TarFileProvider());\n    vfs.addProvider(\"tgz\", new org.apache.commons.vfs2.provider.tar.TarFileProvider());\n    vfs.addProvider(\"bz2\", new org.apache.commons.vfs2.provider.bzip2.Bzip2FileProvider());\n    vfs.addProvider(\"hdfs\", new org.apache.accumulo.start.classloader.vfs.providers.HdfsFileProvider());\n    vfs.addExtensionMap(\"jar\", \"jar\");\n    vfs.addExtensionMap(\"zip\", \"zip\");\n    vfs.addExtensionMap(\"gz\", \"gz\");\n    vfs.addExtensionMap(\"tar\", \"tar\");\n    vfs.addExtensionMap(\"tbz2\", \"tar\");\n    vfs.addExtensionMap(\"tgz\", \"tar\");\n    vfs.addExtensionMap(\"bz2\", \"bz2\");\n    vfs.addMimeTypeMap(\"application/x-tar\", \"tar\");\n    vfs.addMimeTypeMap(\"application/x-gzip\", \"gz\");\n    vfs.addMimeTypeMap(\"application/zip\", \"zip\");\n    vfs.setFileContentInfoFactory(new org.apache.commons.vfs2.impl.FileContentInfoFilenameFactory());\n    vfs.setFilesCache(new org.apache.commons.vfs2.cache.SoftRefFilesCache());\n    java.lang.String cacheDirPath = org.apache.accumulo.start.classloader.AccumuloClassLoader.getAccumuloString(org.apache.accumulo.start.classloader.vfs.AccumuloVFSClassLoader.VFS_CACHE_DIR, \"\");\n    java.io.File cacheDir = org.apache.accumulo.start.classloader.vfs.AccumuloVFSClassLoader.computeTopCacheDir();\n    if (!cacheDirPath.isEmpty()) {\n        cacheDir = new java.io.File(cacheDirPath, \"\" + org.apache.accumulo.start.classloader.vfs.AccumuloVFSClassLoader.uniqueDirectoryGenerator.getAndIncrement());\n    }\n    vfs.setReplicator(new org.apache.accumulo.start.classloader.vfs.UniqueFileReplicator(cacheDir));\n    vfs.setCacheStrategy(CacheStrategy.ON_RESOLVE);\n    vfs.init();\n    org.apache.accumulo.start.classloader.vfs.AccumuloVFSClassLoader.vfsInstances.add(new java.lang.ref.WeakReference<org.apache.commons.vfs2.impl.DefaultFileSystemManager>(vfs));\n    return vfs;\n}",
            "src_parent_type": "Block",
            "src_type": "LocalVariable"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "Invocation",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "if (!cacheDirPath.isEmpty()) {\n    cacheDir = new java.io.File(cacheDirPath, \"\" + org.apache.accumulo.start.classloader.vfs.AccumuloVFSClassLoader.uniqueDirectoryGenerator.getAndIncrement());\n}",
            "src_parent": "{\n    org.apache.commons.vfs2.impl.DefaultFileSystemManager vfs = new org.apache.commons.vfs2.impl.DefaultFileSystemManager();\n    vfs.addProvider(\"res\", new org.apache.commons.vfs2.provider.res.ResourceFileProvider());\n    vfs.addProvider(\"zip\", new org.apache.commons.vfs2.provider.zip.ZipFileProvider());\n    vfs.addProvider(\"gz\", new org.apache.commons.vfs2.provider.gzip.GzipFileProvider());\n    vfs.addProvider(\"ram\", new org.apache.commons.vfs2.provider.ram.RamFileProvider());\n    vfs.addProvider(\"file\", new org.apache.commons.vfs2.provider.local.DefaultLocalFileProvider());\n    vfs.addProvider(\"jar\", new org.apache.commons.vfs2.provider.jar.JarFileProvider());\n    vfs.addProvider(\"http\", new org.apache.commons.vfs2.provider.http.HttpFileProvider());\n    vfs.addProvider(\"https\", new org.apache.commons.vfs2.provider.https.HttpsFileProvider());\n    vfs.addProvider(\"ftp\", new org.apache.commons.vfs2.provider.ftp.FtpFileProvider());\n    vfs.addProvider(\"ftps\", new org.apache.commons.vfs2.provider.ftps.FtpsFileProvider());\n    vfs.addProvider(\"war\", new org.apache.commons.vfs2.provider.jar.JarFileProvider());\n    vfs.addProvider(\"par\", new org.apache.commons.vfs2.provider.jar.JarFileProvider());\n    vfs.addProvider(\"ear\", new org.apache.commons.vfs2.provider.jar.JarFileProvider());\n    vfs.addProvider(\"sar\", new org.apache.commons.vfs2.provider.jar.JarFileProvider());\n    vfs.addProvider(\"ejb3\", new org.apache.commons.vfs2.provider.jar.JarFileProvider());\n    vfs.addProvider(\"tmp\", new org.apache.commons.vfs2.provider.temp.TemporaryFileProvider());\n    vfs.addProvider(\"tar\", new org.apache.commons.vfs2.provider.tar.TarFileProvider());\n    vfs.addProvider(\"tbz2\", new org.apache.commons.vfs2.provider.tar.TarFileProvider());\n    vfs.addProvider(\"tgz\", new org.apache.commons.vfs2.provider.tar.TarFileProvider());\n    vfs.addProvider(\"bz2\", new org.apache.commons.vfs2.provider.bzip2.Bzip2FileProvider());\n    vfs.addProvider(\"hdfs\", new org.apache.accumulo.start.classloader.vfs.providers.HdfsFileProvider());\n    vfs.addExtensionMap(\"jar\", \"jar\");\n    vfs.addExtensionMap(\"zip\", \"zip\");\n    vfs.addExtensionMap(\"gz\", \"gz\");\n    vfs.addExtensionMap(\"tar\", \"tar\");\n    vfs.addExtensionMap(\"tbz2\", \"tar\");\n    vfs.addExtensionMap(\"tgz\", \"tar\");\n    vfs.addExtensionMap(\"bz2\", \"bz2\");\n    vfs.addMimeTypeMap(\"application/x-tar\", \"tar\");\n    vfs.addMimeTypeMap(\"application/x-gzip\", \"gz\");\n    vfs.addMimeTypeMap(\"application/zip\", \"zip\");\n    vfs.setFileContentInfoFactory(new org.apache.commons.vfs2.impl.FileContentInfoFilenameFactory());\n    vfs.setFilesCache(new org.apache.commons.vfs2.cache.SoftRefFilesCache());\n    java.lang.String cacheDirPath = org.apache.accumulo.start.classloader.AccumuloClassLoader.getAccumuloString(org.apache.accumulo.start.classloader.vfs.AccumuloVFSClassLoader.VFS_CACHE_DIR, \"\");\n    java.io.File cacheDir = org.apache.accumulo.start.classloader.vfs.AccumuloVFSClassLoader.computeTopCacheDir();\n    if (!cacheDirPath.isEmpty()) {\n        cacheDir = new java.io.File(cacheDirPath, \"\" + org.apache.accumulo.start.classloader.vfs.AccumuloVFSClassLoader.uniqueDirectoryGenerator.getAndIncrement());\n    }\n    vfs.setReplicator(new org.apache.accumulo.start.classloader.vfs.UniqueFileReplicator(cacheDir));\n    vfs.setCacheStrategy(CacheStrategy.ON_RESOLVE);\n    vfs.init();\n    org.apache.accumulo.start.classloader.vfs.AccumuloVFSClassLoader.vfsInstances.add(new java.lang.ref.WeakReference<org.apache.commons.vfs2.impl.DefaultFileSystemManager>(vfs));\n    return vfs;\n}",
            "src_parent_type": "Block",
            "src_type": "If"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "true",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Method",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "java.lang.String cacheDirPath = org.apache.accumulo.start.classloader.AccumuloClassLoader.getAccumuloString(org.apache.accumulo.start.classloader.vfs.AccumuloVFSClassLoader.VFS_CACHE_DIR, java.lang.System.getProperty(\"java.io.tmpdir\"))",
            "src_parent": "{\n    java.lang.String cacheDirPath = org.apache.accumulo.start.classloader.AccumuloClassLoader.getAccumuloString(org.apache.accumulo.start.classloader.vfs.AccumuloVFSClassLoader.VFS_CACHE_DIR, java.lang.System.getProperty(\"java.io.tmpdir\"));\n    java.lang.String procName = java.lang.management.ManagementFactory.getRuntimeMXBean().getName();\n    return new java.io.File(cacheDirPath, ((\"accumulo-vfs-cache-\" + procName) + \"-\") + java.lang.System.getProperty(\"user.name\", \"nouser\"));\n}",
            "src_parent_type": "Block",
            "src_type": "LocalVariable"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "true",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Return",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "cacheDirPath",
            "src_parent": "new java.io.File(cacheDirPath, ((\"accumulo-vfs-cache-\" + procName) + \"-\") + java.lang.System.getProperty(\"user.name\", \"nouser\"))",
            "src_parent_type": "ConstructorCall",
            "src_type": "VariableRead"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "true",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Return",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "java.lang.System.getProperty(\"java.io.tmpdir\")",
            "dst_parent": "org.apache.accumulo.start.classloader.AccumuloClassLoader.getAccumuloString(org.apache.accumulo.start.classloader.vfs.AccumuloVFSClassLoader.VFS_CACHE_DIR, java.lang.System.getProperty(\"java.io.tmpdir\"))",
            "dst_parent_type": "Invocation",
            "dst_type": "Invocation",
            "operator": "MOV",
            "src": "java.lang.System.getProperty(\"java.io.tmpdir\")",
            "src_parent": "new java.io.File(java.lang.System.getProperty(\"java.io.tmpdir\"), ((\"accumulo-vfs-cache-\" + procName) + \"-\") + java.lang.System.getProperty(\"user.name\", \"nouser\"))",
            "src_parent_type": "ConstructorCall",
            "src_type": "Invocation"
          }
        }
      ],
      "file_name": "AccumuloVFSClassLoader"
    }
  ],
  "id": "accumulo_97f16db4"
}