{
  "files": [
    {
      "features": [
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "javax.jcr.Property property = getProperty(jcrName)",
            "dst_parent": "{\n    javax.jcr.Property property = getProperty(jcrName);\n    property.remove();\n    return property;\n}",
            "dst_parent_type": "Block",
            "dst_type": "LocalVariable",
            "operator": "UPD",
            "src": "javax.jcr.Property p = getProperty(jcrName)",
            "src_parent": "{\n    javax.jcr.Property p = getProperty(jcrName);\n    p.remove();\n    return p;\n}",
            "src_parent_type": "Block",
            "src_type": "LocalVariable"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Return",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Invocation",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "property",
            "dst_parent": "property.remove()",
            "dst_parent_type": "Invocation",
            "dst_type": "VariableRead",
            "operator": "UPD",
            "src": "p",
            "src_parent": "p.remove()",
            "src_parent_type": "Invocation",
            "src_type": "VariableRead"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Return",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "property",
            "dst_parent": "return property",
            "dst_parent_type": "Return",
            "dst_type": "VariableRead",
            "operator": "UPD",
            "src": "p",
            "src_parent": "return p",
            "src_parent_type": "Return",
            "src_type": "VariableRead"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Return",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "{\n    if (hasProperty(jcrName)) {\n        javax.jcr.Property property = getProperty(jcrName);\n        property.remove();\n        return property;\n    } else {\n        return new org.apache.jackrabbit.oak.jcr.PropertyImpl(new org.apache.jackrabbit.oak.jcr.PropertyDelegate(sessionDelegate, dlg.getLocation().getChild(oakName)));\n    }\n}",
            "src_parent": "if (value == null) {\n    if (hasProperty(jcrName)) {\n        javax.jcr.Property property = getProperty(jcrName);\n        property.remove();\n        return property;\n    } else {\n        return new org.apache.jackrabbit.oak.jcr.PropertyImpl(new org.apache.jackrabbit.oak.jcr.PropertyDelegate(sessionDelegate, dlg.getLocation().getChild(oakName)));\n    }\n} else {\n    javax.jcr.nodetype.PropertyDefinition definition;\n    if (hasProperty(jcrName)) {\n        definition = getProperty(jcrName).getDefinition();\n    } else {\n        definition = dlg.sessionDelegate.getDefinitionProvider().getDefinition(this, oakName, false, type, exactTypeMatch);\n    }\n    checkProtected(definition);\n    if (definition.isMultiple()) {\n        throw new javax.jcr.ValueFormatException(\"Cannot set single value to multivalued property\");\n    }\n    int targetType = org.apache.jackrabbit.oak.jcr.NodeImpl.getTargetType(value, definition);\n    javax.jcr.Value targetValue = org.apache.jackrabbit.value.ValueHelper.convert(value, targetType, getValueFactory());\n    return new org.apache.jackrabbit.oak.jcr.PropertyImpl(dlg.setProperty(oakName, targetValue));\n}",
            "src_parent_type": "If",
            "src_type": "Block"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Return",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "{\n    if (hasProperty(jcrName)) {\n        javax.jcr.Property property = getProperty(jcrName);\n        property.remove();\n        return property;\n    } else {\n        return new org.apache.jackrabbit.oak.jcr.PropertyImpl(new org.apache.jackrabbit.oak.jcr.PropertyDelegate(sessionDelegate, dlg.getLocation().getChild(oakName)));\n    }\n}",
            "src_parent": "if (values == null) {\n    if (hasProperty(jcrName)) {\n        javax.jcr.Property property = getProperty(jcrName);\n        property.remove();\n        return property;\n    } else {\n        return new org.apache.jackrabbit.oak.jcr.PropertyImpl(new org.apache.jackrabbit.oak.jcr.PropertyDelegate(sessionDelegate, dlg.getLocation().getChild(oakName)));\n    }\n} else {\n    javax.jcr.nodetype.PropertyDefinition definition;\n    if (hasProperty(jcrName)) {\n        definition = getProperty(jcrName).getDefinition();\n    } else {\n        definition = dlg.sessionDelegate.getDefinitionProvider().getDefinition(this, oakName, true, type, exactTypeMatch);\n    }\n    checkProtected(definition);\n    if (!definition.isMultiple()) {\n        throw new javax.jcr.ValueFormatException(\"Cannot set value array to single value property\");\n    }\n    int targetType = org.apache.jackrabbit.oak.jcr.NodeImpl.getTargetType(values, definition);\n    javax.jcr.Value[] targetValues = org.apache.jackrabbit.value.ValueHelper.convert(values, targetType, getValueFactory());\n    java.lang.Iterable<javax.jcr.Value> nonNullValues = com.google.common.collect.Iterables.filter(java.util.Arrays.asList(targetValues), com.google.common.base.Predicates.notNull());\n    return new org.apache.jackrabbit.oak.jcr.PropertyImpl(dlg.setProperty(oakName, nonNullValues));\n}",
            "src_parent_type": "If",
            "src_type": "Block"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "java.lang.String oakName = sessionDelegate.getOakPathOrThrow(jcrName)",
            "dst_parent": "{\n    java.lang.String oakName = sessionDelegate.getOakPathOrThrow(jcrName);\n    if (value == null) {\n        if (hasProperty(jcrName)) {\n            javax.jcr.Property property = getProperty(jcrName);\n            property.remove();\n            return property;\n        } else {\n            return new org.apache.jackrabbit.oak.jcr.PropertyImpl(new org.apache.jackrabbit.oak.jcr.PropertyDelegate(sessionDelegate, dlg.getLocation().getChild(oakName)));\n        }\n    } else {\n        javax.jcr.nodetype.PropertyDefinition definition;\n        if (hasProperty(jcrName)) {\n            definition = getProperty(jcrName).getDefinition();\n        } else {\n            definition = dlg.sessionDelegate.getDefinitionProvider().getDefinition(this, oakName, false, type, exactTypeMatch);\n        }\n        checkProtected(definition);\n        if (definition.isMultiple()) {\n            throw new javax.jcr.ValueFormatException(\"Cannot set single value to multivalued property\");\n        }\n        int targetType = org.apache.jackrabbit.oak.jcr.NodeImpl.getTargetType(value, definition);\n        javax.jcr.Value targetValue = org.apache.jackrabbit.value.ValueHelper.convert(value, targetType, getValueFactory());\n        return new org.apache.jackrabbit.oak.jcr.PropertyImpl(dlg.setProperty(oakName, targetValue));\n    }\n}",
            "dst_parent_type": "Block",
            "dst_type": "LocalVariable",
            "operator": "MOV",
            "src": "java.lang.String oakName = sessionDelegate.getOakPathOrThrow(jcrName)",
            "src_parent": "{\n    java.lang.String oakName = sessionDelegate.getOakPathOrThrow(jcrName);\n    javax.jcr.nodetype.PropertyDefinition definition;\n    if (hasProperty(jcrName)) {\n        definition = getProperty(jcrName).getDefinition();\n    } else {\n        definition = dlg.sessionDelegate.getDefinitionProvider().getDefinition(this, oakName, false, type, exactTypeMatch);\n    }\n    checkProtected(definition);\n    if (definition.isMultiple()) {\n        throw new javax.jcr.ValueFormatException(\"Cannot set single value to multivalued property\");\n    }\n    int targetType = org.apache.jackrabbit.oak.jcr.NodeImpl.getTargetType(value, definition);\n    javax.jcr.Value targetValue = org.apache.jackrabbit.value.ValueHelper.convert(value, targetType, getValueFactory());\n    return new org.apache.jackrabbit.oak.jcr.PropertyImpl(dlg.setProperty(oakName, targetValue));\n}",
            "src_parent_type": "Block",
            "src_type": "LocalVariable"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "java.lang.String oakName = sessionDelegate.getOakPathOrThrow(jcrName)",
            "dst_parent": "{\n    java.lang.String oakName = sessionDelegate.getOakPathOrThrow(jcrName);\n    if (values == null) {\n        if (hasProperty(jcrName)) {\n            javax.jcr.Property property = getProperty(jcrName);\n            property.remove();\n            return property;\n        } else {\n            return new org.apache.jackrabbit.oak.jcr.PropertyImpl(new org.apache.jackrabbit.oak.jcr.PropertyDelegate(sessionDelegate, dlg.getLocation().getChild(oakName)));\n        }\n    } else {\n        javax.jcr.nodetype.PropertyDefinition definition;\n        if (hasProperty(jcrName)) {\n            definition = getProperty(jcrName).getDefinition();\n        } else {\n            definition = dlg.sessionDelegate.getDefinitionProvider().getDefinition(this, oakName, true, type, exactTypeMatch);\n        }\n        checkProtected(definition);\n        if (!definition.isMultiple()) {\n            throw new javax.jcr.ValueFormatException(\"Cannot set value array to single value property\");\n        }\n        int targetType = org.apache.jackrabbit.oak.jcr.NodeImpl.getTargetType(values, definition);\n        javax.jcr.Value[] targetValues = org.apache.jackrabbit.value.ValueHelper.convert(values, targetType, getValueFactory());\n        java.lang.Iterable<javax.jcr.Value> nonNullValues = com.google.common.collect.Iterables.filter(java.util.Arrays.asList(targetValues), com.google.common.base.Predicates.notNull());\n        return new org.apache.jackrabbit.oak.jcr.PropertyImpl(dlg.setProperty(oakName, nonNullValues));\n    }\n}",
            "dst_parent_type": "Block",
            "dst_type": "LocalVariable",
            "operator": "MOV",
            "src": "java.lang.String oakName = sessionDelegate.getOakPathOrThrow(jcrName)",
            "src_parent": "{\n    java.lang.String oakName = sessionDelegate.getOakPathOrThrow(jcrName);\n    javax.jcr.nodetype.PropertyDefinition definition;\n    if (hasProperty(jcrName)) {\n        definition = getProperty(jcrName).getDefinition();\n    } else {\n        definition = dlg.sessionDelegate.getDefinitionProvider().getDefinition(this, oakName, true, type, exactTypeMatch);\n    }\n    checkProtected(definition);\n    if (!definition.isMultiple()) {\n        throw new javax.jcr.ValueFormatException(\"Cannot set value array to single value property\");\n    }\n    int targetType = org.apache.jackrabbit.oak.jcr.NodeImpl.getTargetType(values, definition);\n    javax.jcr.Value[] targetValues = org.apache.jackrabbit.value.ValueHelper.convert(values, targetType, getValueFactory());\n    java.lang.Iterable<javax.jcr.Value> nonNullValues = com.google.common.collect.Iterables.filter(java.util.Arrays.asList(targetValues), com.google.common.base.Predicates.notNull());\n    return new org.apache.jackrabbit.oak.jcr.PropertyImpl(dlg.setProperty(oakName, nonNullValues));\n}",
            "src_parent_type": "Block",
            "src_type": "LocalVariable"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "{\n    javax.jcr.Property property = getProperty(jcrName);\n    property.remove();\n    return property;\n}",
            "dst_parent": "if (hasProperty(jcrName)) {\n    javax.jcr.Property property = getProperty(jcrName);\n    property.remove();\n    return property;\n} else {\n    return new org.apache.jackrabbit.oak.jcr.PropertyImpl(new org.apache.jackrabbit.oak.jcr.PropertyDelegate(sessionDelegate, dlg.getLocation().getChild(oakName)));\n}",
            "dst_parent_type": "If",
            "dst_type": "Block",
            "operator": "MOV",
            "src": "{\n    javax.jcr.Property property = getProperty(jcrName);\n    property.remove();\n    return property;\n}",
            "src_parent": "if (value == null) {\n    javax.jcr.Property property = getProperty(jcrName);\n    property.remove();\n    return property;\n} else {\n    java.lang.String oakName = sessionDelegate.getOakPathOrThrow(jcrName);\n    javax.jcr.nodetype.PropertyDefinition definition;\n    if (hasProperty(jcrName)) {\n        definition = getProperty(jcrName).getDefinition();\n    } else {\n        definition = dlg.sessionDelegate.getDefinitionProvider().getDefinition(this, oakName, false, type, exactTypeMatch);\n    }\n    checkProtected(definition);\n    if (definition.isMultiple()) {\n        throw new javax.jcr.ValueFormatException(\"Cannot set single value to multivalued property\");\n    }\n    int targetType = org.apache.jackrabbit.oak.jcr.NodeImpl.getTargetType(value, definition);\n    javax.jcr.Value targetValue = org.apache.jackrabbit.value.ValueHelper.convert(value, targetType, getValueFactory());\n    return new org.apache.jackrabbit.oak.jcr.PropertyImpl(dlg.setProperty(oakName, targetValue));\n}",
            "src_parent_type": "If",
            "src_type": "Block"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "{\n    javax.jcr.Property property = getProperty(jcrName);\n    property.remove();\n    return property;\n}",
            "dst_parent": "if (hasProperty(jcrName)) {\n    javax.jcr.Property property = getProperty(jcrName);\n    property.remove();\n    return property;\n} else {\n    return new org.apache.jackrabbit.oak.jcr.PropertyImpl(new org.apache.jackrabbit.oak.jcr.PropertyDelegate(sessionDelegate, dlg.getLocation().getChild(oakName)));\n}",
            "dst_parent_type": "If",
            "dst_type": "Block",
            "operator": "MOV",
            "src": "{\n    javax.jcr.Property p = getProperty(jcrName);\n    p.remove();\n    return p;\n}",
            "src_parent": "if (values == null) {\n    javax.jcr.Property p = getProperty(jcrName);\n    p.remove();\n    return p;\n} else {\n    java.lang.String oakName = sessionDelegate.getOakPathOrThrow(jcrName);\n    javax.jcr.nodetype.PropertyDefinition definition;\n    if (hasProperty(jcrName)) {\n        definition = getProperty(jcrName).getDefinition();\n    } else {\n        definition = dlg.sessionDelegate.getDefinitionProvider().getDefinition(this, oakName, true, type, exactTypeMatch);\n    }\n    checkProtected(definition);\n    if (!definition.isMultiple()) {\n        throw new javax.jcr.ValueFormatException(\"Cannot set value array to single value property\");\n    }\n    int targetType = org.apache.jackrabbit.oak.jcr.NodeImpl.getTargetType(values, definition);\n    javax.jcr.Value[] targetValues = org.apache.jackrabbit.value.ValueHelper.convert(values, targetType, getValueFactory());\n    java.lang.Iterable<javax.jcr.Value> nonNullValues = com.google.common.collect.Iterables.filter(java.util.Arrays.asList(targetValues), com.google.common.base.Predicates.notNull());\n    return new org.apache.jackrabbit.oak.jcr.PropertyImpl(dlg.setProperty(oakName, nonNullValues));\n}",
            "src_parent_type": "If",
            "src_type": "Block"
          }
        }
      ],
      "file_name": "NodeImpl"
    }
  ],
  "id": "jackrabbit-oak_e6c31270"
}