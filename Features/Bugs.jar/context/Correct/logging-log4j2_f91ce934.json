{
  "files": [
    {
      "features": [
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Package",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "true",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Class",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "private byte[] header = null;",
            "src_parent": "public class OutputStreamManager extends org.apache.logging.log4j.core.appender.AbstractManager {\n    private java.io.OutputStream os;\n\n    private byte[] footer = null;\n\n    private byte[] header = null;\n\n    protected OutputStreamManager(final java.io.OutputStream os, final java.lang.String streamName) {\n        super(streamName);\n        this.os = os;\n    }\n\n    public static <T> org.apache.logging.log4j.core.appender.OutputStreamManager getManager(final java.lang.String name, final T data, final org.apache.logging.log4j.core.appender.ManagerFactory<? extends org.apache.logging.log4j.core.appender.OutputStreamManager, T> factory) {\n        return org.apache.logging.log4j.core.appender.AbstractManager.getManager(name, factory, data);\n    }\n\n    public synchronized void setHeader(final byte[] header) {\n        if (header != null) {\n            this.header = header;\n            try {\n                this.os.write(header, 0, header.length);\n            } catch (final java.io.IOException ioe) {\n                org.apache.logging.log4j.core.appender.AbstractManager.LOGGER.error(\"Unable to write header\", ioe);\n            }\n        }\n    }\n\n    public synchronized void setFooter(final byte[] footer) {\n        if (footer != null) {\n            this.footer = footer;\n        }\n    }\n\n    @java.lang.Override\n    public void releaseSub() {\n        if (footer != null) {\n            write(footer);\n        }\n        close();\n    }\n\n    public boolean isOpen() {\n        return getCount() > 0;\n    }\n\n    protected java.io.OutputStream getOutputStream() {\n        return os;\n    }\n\n    protected void setOutputStream(final java.io.OutputStream os) {\n        this.os = os;\n        if (header != null) {\n            try {\n                this.os.write(header, 0, header.length);\n            } catch (final java.io.IOException ioe) {\n                org.apache.logging.log4j.core.appender.AbstractManager.LOGGER.error(\"Unable to write header\", ioe);\n            }\n        }\n    }\n\n    protected synchronized void write(final byte[] bytes, final int offset, final int length) {\n        try {\n            os.write(bytes, offset, length);\n        } catch (final java.io.IOException ex) {\n            final java.lang.String msg = \"Error writing to stream \" + getName();\n            throw new org.apache.logging.log4j.core.appender.AppenderRuntimeException(msg, ex);\n        }\n    }\n\n    protected void write(final byte[] bytes) {\n        write(bytes, 0, bytes.length);\n    }\n\n    protected void close() {\n        if ((os == java.lang.System.out) || (os == java.lang.System.err)) {\n            return;\n        }\n        try {\n            os.close();\n        } catch (final java.io.IOException ex) {\n            org.apache.logging.log4j.core.appender.AbstractManager.LOGGER.error(((\"Unable to close stream \" + getName()) + \". \") + ex);\n        }\n    }\n\n    public void flush() {\n        try {\n            os.flush();\n        } catch (final java.io.IOException ex) {\n            final java.lang.String msg = \"Error flushing stream \" + getName();\n            throw new org.apache.logging.log4j.core.appender.AppenderRuntimeException(msg, ex);\n        }\n    }\n}",
            "src_parent_type": "Class",
            "src_type": "Field"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Method",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "if (header != null) {\n    try {\n        this.os.write(header, 0, header.length);\n    } catch (final java.io.IOException ioe) {\n        org.apache.logging.log4j.core.appender.AbstractManager.LOGGER.error(\"Unable to write header\", ioe);\n    }\n}",
            "src_parent": "{\n    this.os = os;\n    if (header != null) {\n        try {\n            this.os.write(header, 0, header.length);\n        } catch (final java.io.IOException ioe) {\n            org.apache.logging.log4j.core.appender.AbstractManager.LOGGER.error(\"Unable to write header\", ioe);\n        }\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "If"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "true",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "this.header = header",
            "src_parent": "{\n    this.header = header;\n    try {\n        this.os.write(header, 0, header.length);\n    } catch (final java.io.IOException ioe) {\n        org.apache.logging.log4j.core.appender.AbstractManager.LOGGER.error(\"Unable to write header\", ioe);\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "Assignment"
          }
        }
      ],
      "file_name": "OutputStreamManager"
    }
  ],
  "id": "logging-log4j2_f91ce934"
}