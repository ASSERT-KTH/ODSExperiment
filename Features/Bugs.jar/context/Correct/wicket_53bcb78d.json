{
  "files": [
    {
      "features": [
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Method",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "java.util.Iterator<org.apache.wicket.request.Url.QueryParameter> itor = data.originalUrl.getQueryParameters().iterator()",
            "src_parent": "{\n    org.apache.wicket.Session session = org.apache.wicket.Session.get();\n    session.bind();\n    org.apache.wicket.RestartResponseAtInterceptPageException.InterceptData data = new org.apache.wicket.RestartResponseAtInterceptPageException.InterceptData();\n    org.apache.wicket.request.Request request = org.apache.wicket.request.cycle.RequestCycle.get().getRequest();\n    data.originalUrl = request.getOriginalUrl();\n    java.util.Iterator<org.apache.wicket.request.Url.QueryParameter> itor = data.originalUrl.getQueryParameters().iterator();\n    while (itor.hasNext()) {\n        org.apache.wicket.request.Url.QueryParameter parameter = itor.next();\n        java.lang.String parameterName = parameter.getName();\n        if ((WebRequest.PARAM_AJAX.equals(parameterName) || WebRequest.PARAM_AJAX_BASE_URL.equals(parameterName)) || WebRequest.PARAM_AJAX_REQUEST_ANTI_CACHE.equals(parameterName)) {\n            itor.remove();\n        }\n    } \n    data.postParameters = new java.util.HashMap<java.lang.String, java.util.List<org.apache.wicket.util.string.StringValue>>();\n    for (java.lang.String s : request.getPostParameters().getParameterNames()) {\n        if ((WebRequest.PARAM_AJAX.equals(s) || WebRequest.PARAM_AJAX_BASE_URL.equals(s)) || WebRequest.PARAM_AJAX_REQUEST_ANTI_CACHE.equals(s)) {\n            continue;\n        }\n        data.postParameters.put(s, new java.util.ArrayList<org.apache.wicket.util.string.StringValue>(request.getPostParameters().getParameterValues(s)));\n    }\n    data.continueOk = false;\n    session.setMetaData(org.apache.wicket.RestartResponseAtInterceptPageException.InterceptData.key, data);\n}",
            "src_parent_type": "Block",
            "src_type": "LocalVariable"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Method",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "while (itor.hasNext()) {\n    org.apache.wicket.request.Url.QueryParameter parameter = itor.next();\n    java.lang.String parameterName = parameter.getName();\n    if ((WebRequest.PARAM_AJAX.equals(parameterName) || WebRequest.PARAM_AJAX_BASE_URL.equals(parameterName)) || WebRequest.PARAM_AJAX_REQUEST_ANTI_CACHE.equals(parameterName)) {\n        itor.remove();\n    }\n} ",
            "src_parent": "{\n    org.apache.wicket.Session session = org.apache.wicket.Session.get();\n    session.bind();\n    org.apache.wicket.RestartResponseAtInterceptPageException.InterceptData data = new org.apache.wicket.RestartResponseAtInterceptPageException.InterceptData();\n    org.apache.wicket.request.Request request = org.apache.wicket.request.cycle.RequestCycle.get().getRequest();\n    data.originalUrl = request.getOriginalUrl();\n    java.util.Iterator<org.apache.wicket.request.Url.QueryParameter> itor = data.originalUrl.getQueryParameters().iterator();\n    while (itor.hasNext()) {\n        org.apache.wicket.request.Url.QueryParameter parameter = itor.next();\n        java.lang.String parameterName = parameter.getName();\n        if ((WebRequest.PARAM_AJAX.equals(parameterName) || WebRequest.PARAM_AJAX_BASE_URL.equals(parameterName)) || WebRequest.PARAM_AJAX_REQUEST_ANTI_CACHE.equals(parameterName)) {\n            itor.remove();\n        }\n    } \n    data.postParameters = new java.util.HashMap<java.lang.String, java.util.List<org.apache.wicket.util.string.StringValue>>();\n    for (java.lang.String s : request.getPostParameters().getParameterNames()) {\n        if ((WebRequest.PARAM_AJAX.equals(s) || WebRequest.PARAM_AJAX_BASE_URL.equals(s)) || WebRequest.PARAM_AJAX_REQUEST_ANTI_CACHE.equals(s)) {\n            continue;\n        }\n        data.postParameters.put(s, new java.util.ArrayList<org.apache.wicket.util.string.StringValue>(request.getPostParameters().getParameterValues(s)));\n    }\n    data.continueOk = false;\n    session.setMetaData(org.apache.wicket.RestartResponseAtInterceptPageException.InterceptData.key, data);\n}",
            "src_parent_type": "Block",
            "src_type": "While"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Assignment",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "Assignment",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "Assignment",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "LocalVariable",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "ForEach",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "if ((WebRequest.PARAM_AJAX.equals(s) || WebRequest.PARAM_AJAX_BASE_URL.equals(s)) || WebRequest.PARAM_AJAX_REQUEST_ANTI_CACHE.equals(s)) {\n    continue;\n}",
            "src_parent": "{\n    if ((WebRequest.PARAM_AJAX.equals(s) || WebRequest.PARAM_AJAX_BASE_URL.equals(s)) || WebRequest.PARAM_AJAX_REQUEST_ANTI_CACHE.equals(s)) {\n        continue;\n    }\n    data.postParameters.put(s, new java.util.ArrayList<org.apache.wicket.util.string.StringValue>(request.getPostParameters().getParameterValues(s)));\n}",
            "src_parent_type": "Block",
            "src_type": "If"
          }
        }
      ],
      "file_name": "RestartResponseAtInterceptPageException"
    }
  ],
  "id": "wicket_53bcb78d"
}