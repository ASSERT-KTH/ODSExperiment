{
  "files": [
    {
      "features": [
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "Return",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "if (repartitionAllowed) {\n    org.apache.flink.compiler.dataproperties.RequestedGlobalProperties partitioned1 = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties();\n    if (customPartitioner == null) {\n        partitioned1.setAnyPartitioning(this.keys1);\n    } else {\n        partitioned1.setCustomPartitioned(this.keys1, this.customPartitioner);\n    }\n    org.apache.flink.compiler.dataproperties.RequestedGlobalProperties partitioned2 = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties();\n    if (customPartitioner == null) {\n        partitioned2.setAnyPartitioning(this.keys2);\n    } else {\n        partitioned2.setCustomPartitioned(this.keys2, this.customPartitioner);\n    }\n    pairs.add(new org.apache.flink.compiler.operators.GlobalPropertiesPair(partitioned1, partitioned2));\n}",
            "src_parent": "{\n    java.util.ArrayList<org.apache.flink.compiler.operators.GlobalPropertiesPair> pairs = new java.util.ArrayList<org.apache.flink.compiler.operators.GlobalPropertiesPair>();\n    if (repartitionAllowed) {\n        org.apache.flink.compiler.dataproperties.RequestedGlobalProperties partitioned1 = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties();\n        if (customPartitioner == null) {\n            partitioned1.setAnyPartitioning(this.keys1);\n        } else {\n            partitioned1.setCustomPartitioned(this.keys1, this.customPartitioner);\n        }\n        org.apache.flink.compiler.dataproperties.RequestedGlobalProperties partitioned2 = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties();\n        if (customPartitioner == null) {\n            partitioned2.setAnyPartitioning(this.keys2);\n        } else {\n            partitioned2.setCustomPartitioned(this.keys2, this.customPartitioner);\n        }\n        pairs.add(new org.apache.flink.compiler.operators.GlobalPropertiesPair(partitioned1, partitioned2));\n    }\n    if (broadcastSecondAllowed) {\n        org.apache.flink.compiler.dataproperties.RequestedGlobalProperties any1 = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties();\n        org.apache.flink.compiler.dataproperties.RequestedGlobalProperties replicated2 = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties();\n        replicated2.setFullyReplicated();\n        pairs.add(new org.apache.flink.compiler.operators.GlobalPropertiesPair(any1, replicated2));\n    }\n    if (broadcastFirstAllowed) {\n        org.apache.flink.compiler.dataproperties.RequestedGlobalProperties replicated1 = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties();\n        replicated1.setFullyReplicated();\n        org.apache.flink.compiler.dataproperties.RequestedGlobalProperties any2 = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties();\n        pairs.add(new org.apache.flink.compiler.operators.GlobalPropertiesPair(replicated1, any2));\n    }\n    return pairs;\n}",
            "src_parent_type": "Block",
            "src_type": "If"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Method",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "if (repartitionAllowed) {\n    if (this.customPartitioner == null) {\n        org.apache.flink.compiler.dataproperties.RequestedGlobalProperties partitioned_left_any = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties();\n        org.apache.flink.compiler.dataproperties.RequestedGlobalProperties partitioned_right_any = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties();\n        partitioned_left_any.setAnyPartitioning(this.keys1);\n        partitioned_right_any.setAnyPartitioning(this.keys2);\n        pairs.add(new org.apache.flink.compiler.operators.GlobalPropertiesPair(partitioned_left_any, partitioned_right_any));\n        org.apache.flink.compiler.dataproperties.RequestedGlobalProperties partitioned_left_hash = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties();\n        org.apache.flink.compiler.dataproperties.RequestedGlobalProperties partitioned_right_hash = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties();\n        partitioned_left_hash.setHashPartitioned(this.keys1);\n        partitioned_right_hash.setHashPartitioned(this.keys2);\n        pairs.add(new org.apache.flink.compiler.operators.GlobalPropertiesPair(partitioned_left_hash, partitioned_right_hash));\n    } else {\n        org.apache.flink.compiler.dataproperties.RequestedGlobalProperties partitioned_left = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties();\n        partitioned_left.setCustomPartitioned(this.keys1, this.customPartitioner);\n        org.apache.flink.compiler.dataproperties.RequestedGlobalProperties partitioned_right = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties();\n        partitioned_right.setCustomPartitioned(this.keys2, this.customPartitioner);\n        return java.util.Collections.singletonList(new org.apache.flink.compiler.operators.GlobalPropertiesPair(partitioned_left, partitioned_right));\n    }\n    org.apache.flink.compiler.dataproperties.RequestedGlobalProperties partitioned1 = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties();\n    if (customPartitioner == null) {\n        partitioned1.setAnyPartitioning(this.keys1);\n    } else {\n        partitioned1.setCustomPartitioned(this.keys1, this.customPartitioner);\n    }\n    org.apache.flink.compiler.dataproperties.RequestedGlobalProperties partitioned2 = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties();\n    if (customPartitioner == null) {\n        partitioned2.setAnyPartitioning(this.keys2);\n    } else {\n        partitioned2.setCustomPartitioned(this.keys2, this.customPartitioner);\n    }\n    pairs.add(new org.apache.flink.compiler.operators.GlobalPropertiesPair(partitioned1, partitioned2));\n}",
            "src_parent": "{\n    java.util.ArrayList<org.apache.flink.compiler.operators.GlobalPropertiesPair> pairs = new java.util.ArrayList<org.apache.flink.compiler.operators.GlobalPropertiesPair>();\n    if (repartitionAllowed) {\n        if (this.customPartitioner == null) {\n            org.apache.flink.compiler.dataproperties.RequestedGlobalProperties partitioned_left_any = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties();\n            org.apache.flink.compiler.dataproperties.RequestedGlobalProperties partitioned_right_any = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties();\n            partitioned_left_any.setAnyPartitioning(this.keys1);\n            partitioned_right_any.setAnyPartitioning(this.keys2);\n            pairs.add(new org.apache.flink.compiler.operators.GlobalPropertiesPair(partitioned_left_any, partitioned_right_any));\n            org.apache.flink.compiler.dataproperties.RequestedGlobalProperties partitioned_left_hash = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties();\n            org.apache.flink.compiler.dataproperties.RequestedGlobalProperties partitioned_right_hash = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties();\n            partitioned_left_hash.setHashPartitioned(this.keys1);\n            partitioned_right_hash.setHashPartitioned(this.keys2);\n            pairs.add(new org.apache.flink.compiler.operators.GlobalPropertiesPair(partitioned_left_hash, partitioned_right_hash));\n        } else {\n            org.apache.flink.compiler.dataproperties.RequestedGlobalProperties partitioned_left = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties();\n            partitioned_left.setCustomPartitioned(this.keys1, this.customPartitioner);\n            org.apache.flink.compiler.dataproperties.RequestedGlobalProperties partitioned_right = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties();\n            partitioned_right.setCustomPartitioned(this.keys2, this.customPartitioner);\n            return java.util.Collections.singletonList(new org.apache.flink.compiler.operators.GlobalPropertiesPair(partitioned_left, partitioned_right));\n        }\n        org.apache.flink.compiler.dataproperties.RequestedGlobalProperties partitioned1 = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties();\n        if (customPartitioner == null) {\n            partitioned1.setAnyPartitioning(this.keys1);\n        } else {\n            partitioned1.setCustomPartitioned(this.keys1, this.customPartitioner);\n        }\n        org.apache.flink.compiler.dataproperties.RequestedGlobalProperties partitioned2 = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties();\n        if (customPartitioner == null) {\n            partitioned2.setAnyPartitioning(this.keys2);\n        } else {\n            partitioned2.setCustomPartitioned(this.keys2, this.customPartitioner);\n        }\n        pairs.add(new org.apache.flink.compiler.operators.GlobalPropertiesPair(partitioned1, partitioned2));\n    }\n    if (broadcastSecondAllowed) {\n        org.apache.flink.compiler.dataproperties.RequestedGlobalProperties any1 = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties();\n        org.apache.flink.compiler.dataproperties.RequestedGlobalProperties replicated2 = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties();\n        replicated2.setFullyReplicated();\n        pairs.add(new org.apache.flink.compiler.operators.GlobalPropertiesPair(any1, replicated2));\n    }\n    if (broadcastFirstAllowed) {\n        org.apache.flink.compiler.dataproperties.RequestedGlobalProperties replicated1 = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties();\n        replicated1.setFullyReplicated();\n        org.apache.flink.compiler.dataproperties.RequestedGlobalProperties any2 = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties();\n        pairs.add(new org.apache.flink.compiler.operators.GlobalPropertiesPair(replicated1, any2));\n    }\n    return pairs;\n}",
            "src_parent_type": "Block",
            "src_type": "If"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "Return",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "org.apache.flink.compiler.dataproperties.RequestedGlobalProperties partitioned_left_any = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties()",
            "src_parent": "{\n    org.apache.flink.compiler.dataproperties.RequestedGlobalProperties partitioned_left_any = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties();\n    org.apache.flink.compiler.dataproperties.RequestedGlobalProperties partitioned_right_any = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties();\n    partitioned_left_any.setAnyPartitioning(this.keys1);\n    partitioned_right_any.setAnyPartitioning(this.keys2);\n    pairs.add(new org.apache.flink.compiler.operators.GlobalPropertiesPair(partitioned_left_any, partitioned_right_any));\n    org.apache.flink.compiler.dataproperties.RequestedGlobalProperties partitioned_left_hash = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties();\n    org.apache.flink.compiler.dataproperties.RequestedGlobalProperties partitioned_right_hash = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties();\n    partitioned_left_hash.setHashPartitioned(this.keys1);\n    partitioned_right_hash.setHashPartitioned(this.keys2);\n    pairs.add(new org.apache.flink.compiler.operators.GlobalPropertiesPair(partitioned_left_hash, partitioned_right_hash));\n}",
            "src_parent_type": "Block",
            "src_type": "LocalVariable"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "Return",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "org.apache.flink.compiler.dataproperties.RequestedGlobalProperties partitioned_right_any = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties()",
            "src_parent": "{\n    org.apache.flink.compiler.dataproperties.RequestedGlobalProperties partitioned_left_any = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties();\n    org.apache.flink.compiler.dataproperties.RequestedGlobalProperties partitioned_right_any = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties();\n    partitioned_left_any.setAnyPartitioning(this.keys1);\n    partitioned_right_any.setAnyPartitioning(this.keys2);\n    pairs.add(new org.apache.flink.compiler.operators.GlobalPropertiesPair(partitioned_left_any, partitioned_right_any));\n    org.apache.flink.compiler.dataproperties.RequestedGlobalProperties partitioned_left_hash = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties();\n    org.apache.flink.compiler.dataproperties.RequestedGlobalProperties partitioned_right_hash = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties();\n    partitioned_left_hash.setHashPartitioned(this.keys1);\n    partitioned_right_hash.setHashPartitioned(this.keys2);\n    pairs.add(new org.apache.flink.compiler.operators.GlobalPropertiesPair(partitioned_left_hash, partitioned_right_hash));\n}",
            "src_parent_type": "Block",
            "src_type": "LocalVariable"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "Return",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "partitioned_left_any.setAnyPartitioning(this.keys1)",
            "src_parent": "{\n    org.apache.flink.compiler.dataproperties.RequestedGlobalProperties partitioned_left_any = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties();\n    org.apache.flink.compiler.dataproperties.RequestedGlobalProperties partitioned_right_any = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties();\n    partitioned_left_any.setAnyPartitioning(this.keys1);\n    partitioned_right_any.setAnyPartitioning(this.keys2);\n    pairs.add(new org.apache.flink.compiler.operators.GlobalPropertiesPair(partitioned_left_any, partitioned_right_any));\n    org.apache.flink.compiler.dataproperties.RequestedGlobalProperties partitioned_left_hash = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties();\n    org.apache.flink.compiler.dataproperties.RequestedGlobalProperties partitioned_right_hash = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties();\n    partitioned_left_hash.setHashPartitioned(this.keys1);\n    partitioned_right_hash.setHashPartitioned(this.keys2);\n    pairs.add(new org.apache.flink.compiler.operators.GlobalPropertiesPair(partitioned_left_hash, partitioned_right_hash));\n}",
            "src_parent_type": "Block",
            "src_type": "Invocation"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "Return",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "partitioned_right_any.setAnyPartitioning(this.keys2)",
            "src_parent": "{\n    org.apache.flink.compiler.dataproperties.RequestedGlobalProperties partitioned_left_any = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties();\n    org.apache.flink.compiler.dataproperties.RequestedGlobalProperties partitioned_right_any = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties();\n    partitioned_left_any.setAnyPartitioning(this.keys1);\n    partitioned_right_any.setAnyPartitioning(this.keys2);\n    pairs.add(new org.apache.flink.compiler.operators.GlobalPropertiesPair(partitioned_left_any, partitioned_right_any));\n    org.apache.flink.compiler.dataproperties.RequestedGlobalProperties partitioned_left_hash = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties();\n    org.apache.flink.compiler.dataproperties.RequestedGlobalProperties partitioned_right_hash = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties();\n    partitioned_left_hash.setHashPartitioned(this.keys1);\n    partitioned_right_hash.setHashPartitioned(this.keys2);\n    pairs.add(new org.apache.flink.compiler.operators.GlobalPropertiesPair(partitioned_left_hash, partitioned_right_hash));\n}",
            "src_parent_type": "Block",
            "src_type": "Invocation"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "Return",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "pairs.add(new org.apache.flink.compiler.operators.GlobalPropertiesPair(partitioned_left_any, partitioned_right_any))",
            "src_parent": "{\n    org.apache.flink.compiler.dataproperties.RequestedGlobalProperties partitioned_left_any = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties();\n    org.apache.flink.compiler.dataproperties.RequestedGlobalProperties partitioned_right_any = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties();\n    partitioned_left_any.setAnyPartitioning(this.keys1);\n    partitioned_right_any.setAnyPartitioning(this.keys2);\n    pairs.add(new org.apache.flink.compiler.operators.GlobalPropertiesPair(partitioned_left_any, partitioned_right_any));\n    org.apache.flink.compiler.dataproperties.RequestedGlobalProperties partitioned_left_hash = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties();\n    org.apache.flink.compiler.dataproperties.RequestedGlobalProperties partitioned_right_hash = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties();\n    partitioned_left_hash.setHashPartitioned(this.keys1);\n    partitioned_right_hash.setHashPartitioned(this.keys2);\n    pairs.add(new org.apache.flink.compiler.operators.GlobalPropertiesPair(partitioned_left_hash, partitioned_right_hash));\n}",
            "src_parent_type": "Block",
            "src_type": "Invocation"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "Return",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "org.apache.flink.compiler.dataproperties.RequestedGlobalProperties partitioned_left_hash = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties()",
            "src_parent": "{\n    org.apache.flink.compiler.dataproperties.RequestedGlobalProperties partitioned_left_any = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties();\n    org.apache.flink.compiler.dataproperties.RequestedGlobalProperties partitioned_right_any = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties();\n    partitioned_left_any.setAnyPartitioning(this.keys1);\n    partitioned_right_any.setAnyPartitioning(this.keys2);\n    pairs.add(new org.apache.flink.compiler.operators.GlobalPropertiesPair(partitioned_left_any, partitioned_right_any));\n    org.apache.flink.compiler.dataproperties.RequestedGlobalProperties partitioned_left_hash = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties();\n    org.apache.flink.compiler.dataproperties.RequestedGlobalProperties partitioned_right_hash = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties();\n    partitioned_left_hash.setHashPartitioned(this.keys1);\n    partitioned_right_hash.setHashPartitioned(this.keys2);\n    pairs.add(new org.apache.flink.compiler.operators.GlobalPropertiesPair(partitioned_left_hash, partitioned_right_hash));\n}",
            "src_parent_type": "Block",
            "src_type": "LocalVariable"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "Return",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "org.apache.flink.compiler.dataproperties.RequestedGlobalProperties partitioned_right_hash = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties()",
            "src_parent": "{\n    org.apache.flink.compiler.dataproperties.RequestedGlobalProperties partitioned_left_any = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties();\n    org.apache.flink.compiler.dataproperties.RequestedGlobalProperties partitioned_right_any = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties();\n    partitioned_left_any.setAnyPartitioning(this.keys1);\n    partitioned_right_any.setAnyPartitioning(this.keys2);\n    pairs.add(new org.apache.flink.compiler.operators.GlobalPropertiesPair(partitioned_left_any, partitioned_right_any));\n    org.apache.flink.compiler.dataproperties.RequestedGlobalProperties partitioned_left_hash = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties();\n    org.apache.flink.compiler.dataproperties.RequestedGlobalProperties partitioned_right_hash = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties();\n    partitioned_left_hash.setHashPartitioned(this.keys1);\n    partitioned_right_hash.setHashPartitioned(this.keys2);\n    pairs.add(new org.apache.flink.compiler.operators.GlobalPropertiesPair(partitioned_left_hash, partitioned_right_hash));\n}",
            "src_parent_type": "Block",
            "src_type": "LocalVariable"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "Return",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "partitioned_left_hash.setHashPartitioned(this.keys1)",
            "src_parent": "{\n    org.apache.flink.compiler.dataproperties.RequestedGlobalProperties partitioned_left_any = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties();\n    org.apache.flink.compiler.dataproperties.RequestedGlobalProperties partitioned_right_any = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties();\n    partitioned_left_any.setAnyPartitioning(this.keys1);\n    partitioned_right_any.setAnyPartitioning(this.keys2);\n    pairs.add(new org.apache.flink.compiler.operators.GlobalPropertiesPair(partitioned_left_any, partitioned_right_any));\n    org.apache.flink.compiler.dataproperties.RequestedGlobalProperties partitioned_left_hash = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties();\n    org.apache.flink.compiler.dataproperties.RequestedGlobalProperties partitioned_right_hash = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties();\n    partitioned_left_hash.setHashPartitioned(this.keys1);\n    partitioned_right_hash.setHashPartitioned(this.keys2);\n    pairs.add(new org.apache.flink.compiler.operators.GlobalPropertiesPair(partitioned_left_hash, partitioned_right_hash));\n}",
            "src_parent_type": "Block",
            "src_type": "Invocation"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "Return",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "partitioned_right_hash.setHashPartitioned(this.keys2)",
            "src_parent": "{\n    org.apache.flink.compiler.dataproperties.RequestedGlobalProperties partitioned_left_any = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties();\n    org.apache.flink.compiler.dataproperties.RequestedGlobalProperties partitioned_right_any = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties();\n    partitioned_left_any.setAnyPartitioning(this.keys1);\n    partitioned_right_any.setAnyPartitioning(this.keys2);\n    pairs.add(new org.apache.flink.compiler.operators.GlobalPropertiesPair(partitioned_left_any, partitioned_right_any));\n    org.apache.flink.compiler.dataproperties.RequestedGlobalProperties partitioned_left_hash = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties();\n    org.apache.flink.compiler.dataproperties.RequestedGlobalProperties partitioned_right_hash = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties();\n    partitioned_left_hash.setHashPartitioned(this.keys1);\n    partitioned_right_hash.setHashPartitioned(this.keys2);\n    pairs.add(new org.apache.flink.compiler.operators.GlobalPropertiesPair(partitioned_left_hash, partitioned_right_hash));\n}",
            "src_parent_type": "Block",
            "src_type": "Invocation"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "Return",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "pairs.add(new org.apache.flink.compiler.operators.GlobalPropertiesPair(partitioned_left_hash, partitioned_right_hash))",
            "src_parent": "{\n    org.apache.flink.compiler.dataproperties.RequestedGlobalProperties partitioned_left_any = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties();\n    org.apache.flink.compiler.dataproperties.RequestedGlobalProperties partitioned_right_any = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties();\n    partitioned_left_any.setAnyPartitioning(this.keys1);\n    partitioned_right_any.setAnyPartitioning(this.keys2);\n    pairs.add(new org.apache.flink.compiler.operators.GlobalPropertiesPair(partitioned_left_any, partitioned_right_any));\n    org.apache.flink.compiler.dataproperties.RequestedGlobalProperties partitioned_left_hash = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties();\n    org.apache.flink.compiler.dataproperties.RequestedGlobalProperties partitioned_right_hash = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties();\n    partitioned_left_hash.setHashPartitioned(this.keys1);\n    partitioned_right_hash.setHashPartitioned(this.keys2);\n    pairs.add(new org.apache.flink.compiler.operators.GlobalPropertiesPair(partitioned_left_hash, partitioned_right_hash));\n}",
            "src_parent_type": "Block",
            "src_type": "Invocation"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "Return",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "repartitionAllowed",
            "dst_parent": "if (repartitionAllowed) {\n    if (this.customPartitioner == null) {\n        org.apache.flink.compiler.dataproperties.RequestedGlobalProperties partitioned_left_any = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties();\n        org.apache.flink.compiler.dataproperties.RequestedGlobalProperties partitioned_right_any = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties();\n        partitioned_left_any.setAnyPartitioning(this.keys1);\n        partitioned_right_any.setAnyPartitioning(this.keys2);\n        pairs.add(new org.apache.flink.compiler.operators.GlobalPropertiesPair(partitioned_left_any, partitioned_right_any));\n        org.apache.flink.compiler.dataproperties.RequestedGlobalProperties partitioned_left_hash = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties();\n        org.apache.flink.compiler.dataproperties.RequestedGlobalProperties partitioned_right_hash = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties();\n        partitioned_left_hash.setHashPartitioned(this.keys1);\n        partitioned_right_hash.setHashPartitioned(this.keys2);\n        pairs.add(new org.apache.flink.compiler.operators.GlobalPropertiesPair(partitioned_left_hash, partitioned_right_hash));\n    } else {\n        org.apache.flink.compiler.dataproperties.RequestedGlobalProperties partitioned_left = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties();\n        partitioned_left.setCustomPartitioned(this.keys1, this.customPartitioner);\n        org.apache.flink.compiler.dataproperties.RequestedGlobalProperties partitioned_right = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties();\n        partitioned_right.setCustomPartitioned(this.keys2, this.customPartitioner);\n        return java.util.Collections.singletonList(new org.apache.flink.compiler.operators.GlobalPropertiesPair(partitioned_left, partitioned_right));\n    }\n    org.apache.flink.compiler.dataproperties.RequestedGlobalProperties partitioned1 = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties();\n    if (customPartitioner == null) {\n        partitioned1.setAnyPartitioning(this.keys1);\n    } else {\n        partitioned1.setCustomPartitioned(this.keys1, this.customPartitioner);\n    }\n    org.apache.flink.compiler.dataproperties.RequestedGlobalProperties partitioned2 = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties();\n    if (customPartitioner == null) {\n        partitioned2.setAnyPartitioning(this.keys2);\n    } else {\n        partitioned2.setCustomPartitioned(this.keys2, this.customPartitioner);\n    }\n    pairs.add(new org.apache.flink.compiler.operators.GlobalPropertiesPair(partitioned1, partitioned2));\n}",
            "dst_parent_type": "If",
            "dst_type": "FieldRead",
            "operator": "MOV",
            "src": "repartitionAllowed",
            "src_parent": "if (repartitionAllowed) {\n    org.apache.flink.compiler.dataproperties.RequestedGlobalProperties partitioned1 = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties();\n    if (customPartitioner == null) {\n        partitioned1.setAnyPartitioning(this.keys1);\n    } else {\n        partitioned1.setCustomPartitioned(this.keys1, this.customPartitioner);\n    }\n    org.apache.flink.compiler.dataproperties.RequestedGlobalProperties partitioned2 = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties();\n    if (customPartitioner == null) {\n        partitioned2.setAnyPartitioning(this.keys2);\n    } else {\n        partitioned2.setCustomPartitioned(this.keys2, this.customPartitioner);\n    }\n    pairs.add(new org.apache.flink.compiler.operators.GlobalPropertiesPair(partitioned1, partitioned2));\n}",
            "src_parent_type": "If",
            "src_type": "FieldRead"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "Return",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "org.apache.flink.compiler.dataproperties.RequestedGlobalProperties partitioned1 = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties()",
            "dst_parent": "{\n    if (this.customPartitioner == null) {\n        org.apache.flink.compiler.dataproperties.RequestedGlobalProperties partitioned_left_any = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties();\n        org.apache.flink.compiler.dataproperties.RequestedGlobalProperties partitioned_right_any = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties();\n        partitioned_left_any.setAnyPartitioning(this.keys1);\n        partitioned_right_any.setAnyPartitioning(this.keys2);\n        pairs.add(new org.apache.flink.compiler.operators.GlobalPropertiesPair(partitioned_left_any, partitioned_right_any));\n        org.apache.flink.compiler.dataproperties.RequestedGlobalProperties partitioned_left_hash = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties();\n        org.apache.flink.compiler.dataproperties.RequestedGlobalProperties partitioned_right_hash = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties();\n        partitioned_left_hash.setHashPartitioned(this.keys1);\n        partitioned_right_hash.setHashPartitioned(this.keys2);\n        pairs.add(new org.apache.flink.compiler.operators.GlobalPropertiesPair(partitioned_left_hash, partitioned_right_hash));\n    } else {\n        org.apache.flink.compiler.dataproperties.RequestedGlobalProperties partitioned_left = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties();\n        partitioned_left.setCustomPartitioned(this.keys1, this.customPartitioner);\n        org.apache.flink.compiler.dataproperties.RequestedGlobalProperties partitioned_right = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties();\n        partitioned_right.setCustomPartitioned(this.keys2, this.customPartitioner);\n        return java.util.Collections.singletonList(new org.apache.flink.compiler.operators.GlobalPropertiesPair(partitioned_left, partitioned_right));\n    }\n    org.apache.flink.compiler.dataproperties.RequestedGlobalProperties partitioned1 = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties();\n    if (customPartitioner == null) {\n        partitioned1.setAnyPartitioning(this.keys1);\n    } else {\n        partitioned1.setCustomPartitioned(this.keys1, this.customPartitioner);\n    }\n    org.apache.flink.compiler.dataproperties.RequestedGlobalProperties partitioned2 = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties();\n    if (customPartitioner == null) {\n        partitioned2.setAnyPartitioning(this.keys2);\n    } else {\n        partitioned2.setCustomPartitioned(this.keys2, this.customPartitioner);\n    }\n    pairs.add(new org.apache.flink.compiler.operators.GlobalPropertiesPair(partitioned1, partitioned2));\n}",
            "dst_parent_type": "Block",
            "dst_type": "LocalVariable",
            "operator": "MOV",
            "src": "org.apache.flink.compiler.dataproperties.RequestedGlobalProperties partitioned1 = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties()",
            "src_parent": "{\n    org.apache.flink.compiler.dataproperties.RequestedGlobalProperties partitioned1 = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties();\n    if (customPartitioner == null) {\n        partitioned1.setAnyPartitioning(this.keys1);\n    } else {\n        partitioned1.setCustomPartitioned(this.keys1, this.customPartitioner);\n    }\n    org.apache.flink.compiler.dataproperties.RequestedGlobalProperties partitioned2 = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties();\n    if (customPartitioner == null) {\n        partitioned2.setAnyPartitioning(this.keys2);\n    } else {\n        partitioned2.setCustomPartitioned(this.keys2, this.customPartitioner);\n    }\n    pairs.add(new org.apache.flink.compiler.operators.GlobalPropertiesPair(partitioned1, partitioned2));\n}",
            "src_parent_type": "Block",
            "src_type": "LocalVariable"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "Return",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "if (customPartitioner == null) {\n    partitioned1.setAnyPartitioning(this.keys1);\n} else {\n    partitioned1.setCustomPartitioned(this.keys1, this.customPartitioner);\n}",
            "dst_parent": "{\n    if (this.customPartitioner == null) {\n        org.apache.flink.compiler.dataproperties.RequestedGlobalProperties partitioned_left_any = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties();\n        org.apache.flink.compiler.dataproperties.RequestedGlobalProperties partitioned_right_any = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties();\n        partitioned_left_any.setAnyPartitioning(this.keys1);\n        partitioned_right_any.setAnyPartitioning(this.keys2);\n        pairs.add(new org.apache.flink.compiler.operators.GlobalPropertiesPair(partitioned_left_any, partitioned_right_any));\n        org.apache.flink.compiler.dataproperties.RequestedGlobalProperties partitioned_left_hash = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties();\n        org.apache.flink.compiler.dataproperties.RequestedGlobalProperties partitioned_right_hash = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties();\n        partitioned_left_hash.setHashPartitioned(this.keys1);\n        partitioned_right_hash.setHashPartitioned(this.keys2);\n        pairs.add(new org.apache.flink.compiler.operators.GlobalPropertiesPair(partitioned_left_hash, partitioned_right_hash));\n    } else {\n        org.apache.flink.compiler.dataproperties.RequestedGlobalProperties partitioned_left = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties();\n        partitioned_left.setCustomPartitioned(this.keys1, this.customPartitioner);\n        org.apache.flink.compiler.dataproperties.RequestedGlobalProperties partitioned_right = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties();\n        partitioned_right.setCustomPartitioned(this.keys2, this.customPartitioner);\n        return java.util.Collections.singletonList(new org.apache.flink.compiler.operators.GlobalPropertiesPair(partitioned_left, partitioned_right));\n    }\n    org.apache.flink.compiler.dataproperties.RequestedGlobalProperties partitioned1 = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties();\n    if (customPartitioner == null) {\n        partitioned1.setAnyPartitioning(this.keys1);\n    } else {\n        partitioned1.setCustomPartitioned(this.keys1, this.customPartitioner);\n    }\n    org.apache.flink.compiler.dataproperties.RequestedGlobalProperties partitioned2 = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties();\n    if (customPartitioner == null) {\n        partitioned2.setAnyPartitioning(this.keys2);\n    } else {\n        partitioned2.setCustomPartitioned(this.keys2, this.customPartitioner);\n    }\n    pairs.add(new org.apache.flink.compiler.operators.GlobalPropertiesPair(partitioned1, partitioned2));\n}",
            "dst_parent_type": "Block",
            "dst_type": "If",
            "operator": "MOV",
            "src": "if (customPartitioner == null) {\n    partitioned1.setAnyPartitioning(this.keys1);\n} else {\n    partitioned1.setCustomPartitioned(this.keys1, this.customPartitioner);\n}",
            "src_parent": "{\n    org.apache.flink.compiler.dataproperties.RequestedGlobalProperties partitioned1 = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties();\n    if (customPartitioner == null) {\n        partitioned1.setAnyPartitioning(this.keys1);\n    } else {\n        partitioned1.setCustomPartitioned(this.keys1, this.customPartitioner);\n    }\n    org.apache.flink.compiler.dataproperties.RequestedGlobalProperties partitioned2 = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties();\n    if (customPartitioner == null) {\n        partitioned2.setAnyPartitioning(this.keys2);\n    } else {\n        partitioned2.setCustomPartitioned(this.keys2, this.customPartitioner);\n    }\n    pairs.add(new org.apache.flink.compiler.operators.GlobalPropertiesPair(partitioned1, partitioned2));\n}",
            "src_parent_type": "Block",
            "src_type": "If"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "Return",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "org.apache.flink.compiler.dataproperties.RequestedGlobalProperties partitioned2 = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties()",
            "dst_parent": "{\n    if (this.customPartitioner == null) {\n        org.apache.flink.compiler.dataproperties.RequestedGlobalProperties partitioned_left_any = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties();\n        org.apache.flink.compiler.dataproperties.RequestedGlobalProperties partitioned_right_any = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties();\n        partitioned_left_any.setAnyPartitioning(this.keys1);\n        partitioned_right_any.setAnyPartitioning(this.keys2);\n        pairs.add(new org.apache.flink.compiler.operators.GlobalPropertiesPair(partitioned_left_any, partitioned_right_any));\n        org.apache.flink.compiler.dataproperties.RequestedGlobalProperties partitioned_left_hash = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties();\n        org.apache.flink.compiler.dataproperties.RequestedGlobalProperties partitioned_right_hash = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties();\n        partitioned_left_hash.setHashPartitioned(this.keys1);\n        partitioned_right_hash.setHashPartitioned(this.keys2);\n        pairs.add(new org.apache.flink.compiler.operators.GlobalPropertiesPair(partitioned_left_hash, partitioned_right_hash));\n    } else {\n        org.apache.flink.compiler.dataproperties.RequestedGlobalProperties partitioned_left = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties();\n        partitioned_left.setCustomPartitioned(this.keys1, this.customPartitioner);\n        org.apache.flink.compiler.dataproperties.RequestedGlobalProperties partitioned_right = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties();\n        partitioned_right.setCustomPartitioned(this.keys2, this.customPartitioner);\n        return java.util.Collections.singletonList(new org.apache.flink.compiler.operators.GlobalPropertiesPair(partitioned_left, partitioned_right));\n    }\n    org.apache.flink.compiler.dataproperties.RequestedGlobalProperties partitioned1 = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties();\n    if (customPartitioner == null) {\n        partitioned1.setAnyPartitioning(this.keys1);\n    } else {\n        partitioned1.setCustomPartitioned(this.keys1, this.customPartitioner);\n    }\n    org.apache.flink.compiler.dataproperties.RequestedGlobalProperties partitioned2 = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties();\n    if (customPartitioner == null) {\n        partitioned2.setAnyPartitioning(this.keys2);\n    } else {\n        partitioned2.setCustomPartitioned(this.keys2, this.customPartitioner);\n    }\n    pairs.add(new org.apache.flink.compiler.operators.GlobalPropertiesPair(partitioned1, partitioned2));\n}",
            "dst_parent_type": "Block",
            "dst_type": "LocalVariable",
            "operator": "MOV",
            "src": "org.apache.flink.compiler.dataproperties.RequestedGlobalProperties partitioned2 = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties()",
            "src_parent": "{\n    org.apache.flink.compiler.dataproperties.RequestedGlobalProperties partitioned1 = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties();\n    if (customPartitioner == null) {\n        partitioned1.setAnyPartitioning(this.keys1);\n    } else {\n        partitioned1.setCustomPartitioned(this.keys1, this.customPartitioner);\n    }\n    org.apache.flink.compiler.dataproperties.RequestedGlobalProperties partitioned2 = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties();\n    if (customPartitioner == null) {\n        partitioned2.setAnyPartitioning(this.keys2);\n    } else {\n        partitioned2.setCustomPartitioned(this.keys2, this.customPartitioner);\n    }\n    pairs.add(new org.apache.flink.compiler.operators.GlobalPropertiesPair(partitioned1, partitioned2));\n}",
            "src_parent_type": "Block",
            "src_type": "LocalVariable"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "Return",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "if (customPartitioner == null) {\n    partitioned2.setAnyPartitioning(this.keys2);\n} else {\n    partitioned2.setCustomPartitioned(this.keys2, this.customPartitioner);\n}",
            "dst_parent": "{\n    if (this.customPartitioner == null) {\n        org.apache.flink.compiler.dataproperties.RequestedGlobalProperties partitioned_left_any = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties();\n        org.apache.flink.compiler.dataproperties.RequestedGlobalProperties partitioned_right_any = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties();\n        partitioned_left_any.setAnyPartitioning(this.keys1);\n        partitioned_right_any.setAnyPartitioning(this.keys2);\n        pairs.add(new org.apache.flink.compiler.operators.GlobalPropertiesPair(partitioned_left_any, partitioned_right_any));\n        org.apache.flink.compiler.dataproperties.RequestedGlobalProperties partitioned_left_hash = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties();\n        org.apache.flink.compiler.dataproperties.RequestedGlobalProperties partitioned_right_hash = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties();\n        partitioned_left_hash.setHashPartitioned(this.keys1);\n        partitioned_right_hash.setHashPartitioned(this.keys2);\n        pairs.add(new org.apache.flink.compiler.operators.GlobalPropertiesPair(partitioned_left_hash, partitioned_right_hash));\n    } else {\n        org.apache.flink.compiler.dataproperties.RequestedGlobalProperties partitioned_left = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties();\n        partitioned_left.setCustomPartitioned(this.keys1, this.customPartitioner);\n        org.apache.flink.compiler.dataproperties.RequestedGlobalProperties partitioned_right = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties();\n        partitioned_right.setCustomPartitioned(this.keys2, this.customPartitioner);\n        return java.util.Collections.singletonList(new org.apache.flink.compiler.operators.GlobalPropertiesPair(partitioned_left, partitioned_right));\n    }\n    org.apache.flink.compiler.dataproperties.RequestedGlobalProperties partitioned1 = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties();\n    if (customPartitioner == null) {\n        partitioned1.setAnyPartitioning(this.keys1);\n    } else {\n        partitioned1.setCustomPartitioned(this.keys1, this.customPartitioner);\n    }\n    org.apache.flink.compiler.dataproperties.RequestedGlobalProperties partitioned2 = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties();\n    if (customPartitioner == null) {\n        partitioned2.setAnyPartitioning(this.keys2);\n    } else {\n        partitioned2.setCustomPartitioned(this.keys2, this.customPartitioner);\n    }\n    pairs.add(new org.apache.flink.compiler.operators.GlobalPropertiesPair(partitioned1, partitioned2));\n}",
            "dst_parent_type": "Block",
            "dst_type": "If",
            "operator": "MOV",
            "src": "if (customPartitioner == null) {\n    partitioned2.setAnyPartitioning(this.keys2);\n} else {\n    partitioned2.setCustomPartitioned(this.keys2, this.customPartitioner);\n}",
            "src_parent": "{\n    org.apache.flink.compiler.dataproperties.RequestedGlobalProperties partitioned1 = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties();\n    if (customPartitioner == null) {\n        partitioned1.setAnyPartitioning(this.keys1);\n    } else {\n        partitioned1.setCustomPartitioned(this.keys1, this.customPartitioner);\n    }\n    org.apache.flink.compiler.dataproperties.RequestedGlobalProperties partitioned2 = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties();\n    if (customPartitioner == null) {\n        partitioned2.setAnyPartitioning(this.keys2);\n    } else {\n        partitioned2.setCustomPartitioned(this.keys2, this.customPartitioner);\n    }\n    pairs.add(new org.apache.flink.compiler.operators.GlobalPropertiesPair(partitioned1, partitioned2));\n}",
            "src_parent_type": "Block",
            "src_type": "If"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "Return",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "pairs.add(new org.apache.flink.compiler.operators.GlobalPropertiesPair(partitioned1, partitioned2))",
            "dst_parent": "{\n    if (this.customPartitioner == null) {\n        org.apache.flink.compiler.dataproperties.RequestedGlobalProperties partitioned_left_any = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties();\n        org.apache.flink.compiler.dataproperties.RequestedGlobalProperties partitioned_right_any = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties();\n        partitioned_left_any.setAnyPartitioning(this.keys1);\n        partitioned_right_any.setAnyPartitioning(this.keys2);\n        pairs.add(new org.apache.flink.compiler.operators.GlobalPropertiesPair(partitioned_left_any, partitioned_right_any));\n        org.apache.flink.compiler.dataproperties.RequestedGlobalProperties partitioned_left_hash = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties();\n        org.apache.flink.compiler.dataproperties.RequestedGlobalProperties partitioned_right_hash = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties();\n        partitioned_left_hash.setHashPartitioned(this.keys1);\n        partitioned_right_hash.setHashPartitioned(this.keys2);\n        pairs.add(new org.apache.flink.compiler.operators.GlobalPropertiesPair(partitioned_left_hash, partitioned_right_hash));\n    } else {\n        org.apache.flink.compiler.dataproperties.RequestedGlobalProperties partitioned_left = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties();\n        partitioned_left.setCustomPartitioned(this.keys1, this.customPartitioner);\n        org.apache.flink.compiler.dataproperties.RequestedGlobalProperties partitioned_right = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties();\n        partitioned_right.setCustomPartitioned(this.keys2, this.customPartitioner);\n        return java.util.Collections.singletonList(new org.apache.flink.compiler.operators.GlobalPropertiesPair(partitioned_left, partitioned_right));\n    }\n    org.apache.flink.compiler.dataproperties.RequestedGlobalProperties partitioned1 = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties();\n    if (customPartitioner == null) {\n        partitioned1.setAnyPartitioning(this.keys1);\n    } else {\n        partitioned1.setCustomPartitioned(this.keys1, this.customPartitioner);\n    }\n    org.apache.flink.compiler.dataproperties.RequestedGlobalProperties partitioned2 = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties();\n    if (customPartitioner == null) {\n        partitioned2.setAnyPartitioning(this.keys2);\n    } else {\n        partitioned2.setCustomPartitioned(this.keys2, this.customPartitioner);\n    }\n    pairs.add(new org.apache.flink.compiler.operators.GlobalPropertiesPair(partitioned1, partitioned2));\n}",
            "dst_parent_type": "Block",
            "dst_type": "Invocation",
            "operator": "MOV",
            "src": "pairs.add(new org.apache.flink.compiler.operators.GlobalPropertiesPair(partitioned1, partitioned2))",
            "src_parent": "{\n    org.apache.flink.compiler.dataproperties.RequestedGlobalProperties partitioned1 = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties();\n    if (customPartitioner == null) {\n        partitioned1.setAnyPartitioning(this.keys1);\n    } else {\n        partitioned1.setCustomPartitioned(this.keys1, this.customPartitioner);\n    }\n    org.apache.flink.compiler.dataproperties.RequestedGlobalProperties partitioned2 = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties();\n    if (customPartitioner == null) {\n        partitioned2.setAnyPartitioning(this.keys2);\n    } else {\n        partitioned2.setCustomPartitioned(this.keys2, this.customPartitioner);\n    }\n    pairs.add(new org.apache.flink.compiler.operators.GlobalPropertiesPair(partitioned1, partitioned2));\n}",
            "src_parent_type": "Block",
            "src_type": "Invocation"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "Return",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "{\n    org.apache.flink.compiler.dataproperties.RequestedGlobalProperties partitioned_left_any = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties();\n    org.apache.flink.compiler.dataproperties.RequestedGlobalProperties partitioned_right_any = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties();\n    partitioned_left_any.setAnyPartitioning(this.keys1);\n    partitioned_right_any.setAnyPartitioning(this.keys2);\n    pairs.add(new org.apache.flink.compiler.operators.GlobalPropertiesPair(partitioned_left_any, partitioned_right_any));\n    org.apache.flink.compiler.dataproperties.RequestedGlobalProperties partitioned_left_hash = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties();\n    org.apache.flink.compiler.dataproperties.RequestedGlobalProperties partitioned_right_hash = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties();\n    partitioned_left_hash.setHashPartitioned(this.keys1);\n    partitioned_right_hash.setHashPartitioned(this.keys2);\n    pairs.add(new org.apache.flink.compiler.operators.GlobalPropertiesPair(partitioned_left_hash, partitioned_right_hash));\n}",
            "dst_parent": "if (this.customPartitioner == null) {\n    org.apache.flink.compiler.dataproperties.RequestedGlobalProperties partitioned_left_any = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties();\n    org.apache.flink.compiler.dataproperties.RequestedGlobalProperties partitioned_right_any = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties();\n    partitioned_left_any.setAnyPartitioning(this.keys1);\n    partitioned_right_any.setAnyPartitioning(this.keys2);\n    pairs.add(new org.apache.flink.compiler.operators.GlobalPropertiesPair(partitioned_left_any, partitioned_right_any));\n    org.apache.flink.compiler.dataproperties.RequestedGlobalProperties partitioned_left_hash = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties();\n    org.apache.flink.compiler.dataproperties.RequestedGlobalProperties partitioned_right_hash = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties();\n    partitioned_left_hash.setHashPartitioned(this.keys1);\n    partitioned_right_hash.setHashPartitioned(this.keys2);\n    pairs.add(new org.apache.flink.compiler.operators.GlobalPropertiesPair(partitioned_left_hash, partitioned_right_hash));\n} else {\n    org.apache.flink.compiler.dataproperties.RequestedGlobalProperties partitioned_left = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties();\n    partitioned_left.setCustomPartitioned(this.keys1, this.customPartitioner);\n    org.apache.flink.compiler.dataproperties.RequestedGlobalProperties partitioned_right = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties();\n    partitioned_right.setCustomPartitioned(this.keys2, this.customPartitioner);\n    return java.util.Collections.singletonList(new org.apache.flink.compiler.operators.GlobalPropertiesPair(partitioned_left, partitioned_right));\n}",
            "dst_parent_type": "If",
            "dst_type": "Block",
            "operator": "MOV",
            "src": "{\n    org.apache.flink.compiler.dataproperties.RequestedGlobalProperties partitioned1 = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties();\n    if (customPartitioner == null) {\n        partitioned1.setAnyPartitioning(this.keys1);\n    } else {\n        partitioned1.setCustomPartitioned(this.keys1, this.customPartitioner);\n    }\n    org.apache.flink.compiler.dataproperties.RequestedGlobalProperties partitioned2 = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties();\n    if (customPartitioner == null) {\n        partitioned2.setAnyPartitioning(this.keys2);\n    } else {\n        partitioned2.setCustomPartitioned(this.keys2, this.customPartitioner);\n    }\n    pairs.add(new org.apache.flink.compiler.operators.GlobalPropertiesPair(partitioned1, partitioned2));\n}",
            "src_parent": "if (repartitionAllowed) {\n    org.apache.flink.compiler.dataproperties.RequestedGlobalProperties partitioned1 = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties();\n    if (customPartitioner == null) {\n        partitioned1.setAnyPartitioning(this.keys1);\n    } else {\n        partitioned1.setCustomPartitioned(this.keys1, this.customPartitioner);\n    }\n    org.apache.flink.compiler.dataproperties.RequestedGlobalProperties partitioned2 = new org.apache.flink.compiler.dataproperties.RequestedGlobalProperties();\n    if (customPartitioner == null) {\n        partitioned2.setAnyPartitioning(this.keys2);\n    } else {\n        partitioned2.setCustomPartitioned(this.keys2, this.customPartitioner);\n    }\n    pairs.add(new org.apache.flink.compiler.operators.GlobalPropertiesPair(partitioned1, partitioned2));\n}",
            "src_parent_type": "If",
            "src_type": "Block"
          }
        }
      ],
      "file_name": "AbstractJoinDescriptor"
    }
  ],
  "id": "flink_45fb6d82"
}