{
  "files": [
    {
      "features": [
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Return",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "LocalVariable",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "1",
            "src_parent": "(this.partitionBuffers != null) ? this.partitionBuffers.length : 1",
            "src_parent_type": "Conditional",
            "src_type": "Literal"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "true",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Class",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "int getNumOccupiedMemorySegments() {\n    return this.targetList.size() + 1;\n}",
            "src_parent": "protected static final class BuildSideBuffer extends org.apache.flink.runtime.memory.AbstractPagedOutputView {\n    private final java.util.ArrayList<org.apache.flink.core.memory.MemorySegment> targetList;\n\n    private final org.apache.flink.core.memory.MemorySegmentSource memSource;\n\n    private org.apache.flink.runtime.io.disk.iomanager.BlockChannelWriter<org.apache.flink.core.memory.MemorySegment> writer;\n\n    private int currentBlockNumber;\n\n    private final int sizeBits;\n\n    private BuildSideBuffer(org.apache.flink.core.memory.MemorySegment initialSegment, org.apache.flink.core.memory.MemorySegmentSource memSource) {\n        super(initialSegment, initialSegment.size(), 0);\n        this.targetList = new java.util.ArrayList<org.apache.flink.core.memory.MemorySegment>();\n        this.memSource = memSource;\n        this.sizeBits = org.apache.flink.runtime.util.MathUtils.log2strict(initialSegment.size());\n    }\n\n    @java.lang.Override\n    protected org.apache.flink.core.memory.MemorySegment nextSegment(org.apache.flink.core.memory.MemorySegment current, int bytesUsed) throws java.io.IOException {\n        finalizeSegment(current, bytesUsed);\n        final org.apache.flink.core.memory.MemorySegment next;\n        if (this.writer == null) {\n            this.targetList.add(current);\n            next = this.memSource.nextSegment();\n        } else {\n            this.writer.writeBlock(current);\n            try {\n                next = this.writer.getReturnQueue().take();\n            } catch (java.lang.InterruptedException iex) {\n                throw new java.io.IOException(\"Hash Join Partition was interrupted while grabbing a new write-behind buffer.\");\n            }\n        }\n        this.currentBlockNumber++;\n        return next;\n    }\n\n    long getCurrentPointer() {\n        return (((long) (this.currentBlockNumber)) << this.sizeBits) + getCurrentPositionInSegment();\n    }\n\n    int getBlockCount() {\n        return this.currentBlockNumber + 1;\n    }\n\n    int getNumOccupiedMemorySegments() {\n        return this.targetList.size() + 1;\n    }\n\n    int spill(org.apache.flink.runtime.io.disk.iomanager.BlockChannelWriter<org.apache.flink.core.memory.MemorySegment> writer) throws java.io.IOException {\n        this.writer = writer;\n        final int numSegments = this.targetList.size();\n        for (int i = 0; i < numSegments; i++) {\n            this.writer.writeBlock(this.targetList.get(i));\n        }\n        this.targetList.clear();\n        return numSegments;\n    }\n\n    org.apache.flink.core.memory.MemorySegment[] close() throws java.io.IOException {\n        final org.apache.flink.core.memory.MemorySegment current = getCurrentSegment();\n        if (current == null) {\n            throw new java.lang.IllegalStateException(\"Illegal State in HashPartition: No current buffer when finilizing build side.\");\n        }\n        finalizeSegment(current, getCurrentPositionInSegment());\n        clear();\n        if (this.writer == null) {\n            this.targetList.add(current);\n            org.apache.flink.core.memory.MemorySegment[] buffers = this.targetList.toArray(new org.apache.flink.core.memory.MemorySegment[this.targetList.size()]);\n            this.targetList.clear();\n            return buffers;\n        } else {\n            writer.writeBlock(current);\n            return null;\n        }\n    }\n\n    private void finalizeSegment(org.apache.flink.core.memory.MemorySegment seg, int bytesUsed) {\n    }\n}",
            "src_parent_type": "Class",
            "src_type": "Method"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Return",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "LocalVariable",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "this.buildSideWriteBuffer.getNumOccupiedMemorySegments()",
            "src_parent": "(this.partitionBuffers != null) ? this.partitionBuffers.length : this.buildSideWriteBuffer.getNumOccupiedMemorySegments()",
            "src_parent_type": "Conditional",
            "src_type": "Invocation"
          }
        }
      ],
      "file_name": "HashPartition"
    }
  ],
  "id": "flink_76bebd42"
}