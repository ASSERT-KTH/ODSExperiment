{
  "files": [
    {
      "features": [
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "If",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Return",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "true",
            "src_parent": "return true",
            "src_parent_type": "Return",
            "src_type": "Literal"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "true",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Method",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "depth++",
            "src_parent": "{\n    if (\"/\".equals(jcrPath)) {\n        return \"/\";\n    }\n    int length = jcrPath.length();\n    if ((length > 0) && (jcrPath.charAt(0) == '[')) {\n        if (jcrPath.charAt(length - 1) != ']') {\n            org.apache.jackrabbit.oak.namepath.NamePathMapperImpl.log.debug((\"Could not parse path \" + jcrPath) + \": unterminated identifier\");\n            return null;\n        }\n        if (this.idManager == null) {\n            org.apache.jackrabbit.oak.namepath.NamePathMapperImpl.log.debug((\"Could not parse path \" + jcrPath) + \": could not resolve identifier\");\n            return null;\n        }\n        return this.idManager.getPath(jcrPath.substring(1, length - 1));\n    }\n    boolean hasClarkBrackets = false;\n    boolean hasIndexBrackets = false;\n    boolean hasColon = false;\n    boolean hasNameStartingWithDot = false;\n    boolean hasTrailingSlash = false;\n    char prev = 0;\n    for (int i = 0; i < length; i++) {\n        char c = jcrPath.charAt(i);\n        if ((c == '{') || (c == '}')) {\n            hasClarkBrackets = true;\n        } else if ((c == '[') || (c == ']')) {\n            hasIndexBrackets = true;\n        } else if (c == ':') {\n            hasColon = true;\n        } else if ((c == '.') && ((prev == 0) || (prev == '/'))) {\n            hasNameStartingWithDot = true;\n        } else if ((c == '/') && (i == (length - 1))) {\n            hasTrailingSlash = true;\n        }\n        prev = c;\n    }\n    if (((!hasNameStartingWithDot) && (!hasClarkBrackets)) && (!hasIndexBrackets)) {\n        if ((!hasColon) || (!hasSessionLocalMappings())) {\n            if (org.apache.jackrabbit.oak.namepath.JcrPathParser.validate(jcrPath)) {\n                if (hasTrailingSlash) {\n                    return jcrPath.substring(0, length - 1);\n                }\n                return jcrPath;\n            } else {\n                org.apache.jackrabbit.oak.namepath.NamePathMapperImpl.log.debug(\"Invalid path: {}\", jcrPath);\n                return null;\n            }\n        }\n    }\n    final java.util.List<java.lang.String> elements = new java.util.ArrayList<java.lang.String>();\n    final java.lang.StringBuilder parseErrors = new java.lang.StringBuilder();\n    org.apache.jackrabbit.oak.namepath.JcrPathParser.Listener listener = new org.apache.jackrabbit.oak.namepath.JcrPathParser.Listener() {\n        @java.lang.Override\n        public boolean root() {\n            if (!elements.isEmpty()) {\n                parseErrors.append(\"/ on non-empty path\");\n                return false;\n            }\n            elements.add(\"\");\n            return true;\n        }\n\n        @java.lang.Override\n        public boolean current() {\n            return true;\n        }\n\n        @java.lang.Override\n        public boolean parent() {\n            if (elements.isEmpty() || \"..\".equals(elements.get(elements.size() - 1))) {\n                elements.add(\"..\");\n                return true;\n            }\n            elements.remove(elements.size() - 1);\n            return true;\n        }\n\n        @java.lang.Override\n        public void error(java.lang.String message) {\n            parseErrors.append(message);\n        }\n\n        @java.lang.Override\n        public boolean name(java.lang.String name, int index) {\n            if ((!keepIndex) && (index > 1)) {\n                parseErrors.append(\"index > 1\");\n                return false;\n            }\n            java.lang.String p = nameMapper.getOakName(name);\n            if (p == null) {\n                parseErrors.append(\"Invalid name: \").append(name);\n                return false;\n            }\n            int depth;\n            if (keepIndex && (index > 0)) {\n                p += (\"[\" + index) + ']';\n            }\n            elements.add(p);\n            depth--;\n            return (!hasRoot) || (depth >= 0);\n        }\n    };\n    org.apache.jackrabbit.oak.namepath.JcrPathParser.parse(jcrPath, listener);\n    if (parseErrors.length() != 0) {\n        org.apache.jackrabbit.oak.namepath.NamePathMapperImpl.log.debug(((\"Could not parse path \" + jcrPath) + \": \") + parseErrors.toString());\n        return null;\n    }\n    depth++;\n    if (elements.isEmpty()) {\n        return \"\";\n    }\n    java.lang.StringBuilder oakPath = new java.lang.StringBuilder();\n    for (java.lang.String element : elements) {\n        if (element.isEmpty()) {\n            oakPath.append('/');\n        } else {\n            oakPath.append(element);\n            oakPath.append('/');\n        }\n    }\n    oakPath.deleteCharAt(oakPath.length() - 1);\n    return oakPath.toString();\n}",
            "src_parent_type": "Block",
            "src_type": "UnaryOperator"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "If",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "LocalVariable",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "int depth",
            "src_parent": "{\n    if ((!keepIndex) && (index > 1)) {\n        parseErrors.append(\"index > 1\");\n        return false;\n    }\n    java.lang.String p = nameMapper.getOakName(name);\n    if (p == null) {\n        parseErrors.append(\"Invalid name: \").append(name);\n        return false;\n    }\n    int depth;\n    if (keepIndex && (index > 0)) {\n        p += (\"[\" + index) + ']';\n    }\n    elements.add(p);\n    depth--;\n    return (!hasRoot) || (depth >= 0);\n}",
            "src_parent_type": "Block",
            "src_type": "LocalVariable"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "If",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "LocalVariable",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "depth--",
            "src_parent": "{\n    if ((!keepIndex) && (index > 1)) {\n        parseErrors.append(\"index > 1\");\n        return false;\n    }\n    java.lang.String p = nameMapper.getOakName(name);\n    if (p == null) {\n        parseErrors.append(\"Invalid name: \").append(name);\n        return false;\n    }\n    int depth;\n    if (keepIndex && (index > 0)) {\n        p += (\"[\" + index) + ']';\n    }\n    elements.add(p);\n    depth--;\n    return (!hasRoot) || (depth >= 0);\n}",
            "src_parent_type": "Block",
            "src_type": "UnaryOperator"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "If",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "LocalVariable",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "(!hasRoot) || (depth >= 0)",
            "src_parent": "return (!hasRoot) || (depth >= 0)",
            "src_parent_type": "Return",
            "src_type": "BinaryOperator"
          }
        }
      ],
      "file_name": "NamePathMapperImpl"
    }
  ],
  "id": "jackrabbit-oak_f2a2edec"
}