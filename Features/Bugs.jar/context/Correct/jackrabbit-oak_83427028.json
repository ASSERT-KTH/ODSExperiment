{
  "files": [
    {
      "features": [
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "ForEach",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "return def",
            "src_parent": "{\n    return def;\n}",
            "src_parent_type": "Block",
            "src_type": "Return"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "Assignment",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "If",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "ForEach",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "for (org.apache.jackrabbit.oak.api.Tree def : definitions.getChildren()) {\n    if (propertyType.isArray() == org.apache.jackrabbit.oak.util.TreeUtil.getBoolean(def, org.apache.jackrabbit.JcrConstants.JCR_MULTIPLE)) {\n        return def;\n    }\n}",
            "src_parent": "{\n    for (org.apache.jackrabbit.oak.api.Tree def : definitions.getChildren()) {\n        if (propertyType.isArray() == org.apache.jackrabbit.oak.util.TreeUtil.getBoolean(def, org.apache.jackrabbit.JcrConstants.JCR_MULTIPLE)) {\n            return def;\n        }\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "ForEach"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "ForEach",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "return def",
            "src_parent": "{\n    return def;\n}",
            "src_parent_type": "Block",
            "src_type": "Return"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Method",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "org.apache.jackrabbit.oak.api.Tree fuzzyMatch = null",
            "src_parent": "{\n    java.lang.String escapedName;\n    if (org.apache.jackrabbit.JcrConstants.JCR_PRIMARYTYPE.equals(propertyName)) {\n        escapedName = \"oak:primaryType\";\n    } else if (org.apache.jackrabbit.JcrConstants.JCR_MIXINTYPES.equals(propertyName)) {\n        escapedName = \"oak:mixinTypes\";\n    } else if (org.apache.jackrabbit.JcrConstants.JCR_UUID.equals(propertyName)) {\n        escapedName = \"oak:uuid\";\n    } else {\n        escapedName = propertyName;\n    }\n    java.lang.String definedType = propertyType.toString();\n    java.lang.String undefinedType = org.apache.jackrabbit.oak.api.Type.UNDEFINED.toString();\n    if (propertyType.isArray()) {\n        undefinedType = org.apache.jackrabbit.oak.api.Type.UNDEFINEDS.toString();\n    }\n    org.apache.jackrabbit.oak.api.Tree fuzzyMatch = null;\n    for (org.apache.jackrabbit.oak.api.Tree type : types) {\n        org.apache.jackrabbit.oak.api.Tree definitions = type.getChild(org.apache.jackrabbit.oak.jcr.delegate.OAK_NAMED_PROPERTY_DEFINITIONS).getChild(escapedName);\n        org.apache.jackrabbit.oak.api.Tree definition = definitions.getChild(definedType);\n        if (definition.exists()) {\n            return definition;\n        }\n        definition = definitions.getChild(undefinedType);\n        if (definition.exists()) {\n            return definition;\n        }\n        for (org.apache.jackrabbit.oak.api.Tree def : definitions.getChildren()) {\n            if (propertyType.isArray() == org.apache.jackrabbit.oak.util.TreeUtil.getBoolean(def, org.apache.jackrabbit.JcrConstants.JCR_MULTIPLE)) {\n                if (getBoolean(def, org.apache.jackrabbit.JcrConstants.JCR_PROTECTED)) {\n                    return null;\n                } else if ((!exactTypeMatch) && (fuzzyMatch == null)) {\n                    fuzzyMatch = def;\n                }\n            }\n        }\n    }\n    for (org.apache.jackrabbit.oak.api.Tree type : types) {\n        org.apache.jackrabbit.oak.api.Tree definitions = type.getChild(org.apache.jackrabbit.oak.jcr.delegate.OAK_RESIDUAL_PROPERTY_DEFINITIONS);\n        org.apache.jackrabbit.oak.api.Tree definition = definitions.getChild(definedType);\n        if (definition.exists()) {\n            return definition;\n        }\n        definition = definitions.getChild(undefinedType);\n        if (definition.exists()) {\n            return definition;\n        }\n        if ((!exactTypeMatch) && (fuzzyMatch == null)) {\n            for (org.apache.jackrabbit.oak.api.Tree def : definitions.getChildren()) {\n                if (propertyType.isArray() == org.apache.jackrabbit.oak.util.TreeUtil.getBoolean(def, org.apache.jackrabbit.JcrConstants.JCR_MULTIPLE)) {\n                    fuzzyMatch = def;\n                    break;\n                }\n            }\n        }\n    }\n    return fuzzyMatch;\n}",
            "src_parent_type": "Block",
            "src_type": "LocalVariable"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Method",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "return fuzzyMatch",
            "src_parent": "{\n    java.lang.String escapedName;\n    if (org.apache.jackrabbit.JcrConstants.JCR_PRIMARYTYPE.equals(propertyName)) {\n        escapedName = \"oak:primaryType\";\n    } else if (org.apache.jackrabbit.JcrConstants.JCR_MIXINTYPES.equals(propertyName)) {\n        escapedName = \"oak:mixinTypes\";\n    } else if (org.apache.jackrabbit.JcrConstants.JCR_UUID.equals(propertyName)) {\n        escapedName = \"oak:uuid\";\n    } else {\n        escapedName = propertyName;\n    }\n    java.lang.String definedType = propertyType.toString();\n    java.lang.String undefinedType = org.apache.jackrabbit.oak.api.Type.UNDEFINED.toString();\n    if (propertyType.isArray()) {\n        undefinedType = org.apache.jackrabbit.oak.api.Type.UNDEFINEDS.toString();\n    }\n    org.apache.jackrabbit.oak.api.Tree fuzzyMatch = null;\n    for (org.apache.jackrabbit.oak.api.Tree type : types) {\n        org.apache.jackrabbit.oak.api.Tree definitions = type.getChild(org.apache.jackrabbit.oak.jcr.delegate.OAK_NAMED_PROPERTY_DEFINITIONS).getChild(escapedName);\n        org.apache.jackrabbit.oak.api.Tree definition = definitions.getChild(definedType);\n        if (definition.exists()) {\n            return definition;\n        }\n        definition = definitions.getChild(undefinedType);\n        if (definition.exists()) {\n            return definition;\n        }\n        for (org.apache.jackrabbit.oak.api.Tree def : definitions.getChildren()) {\n            if (propertyType.isArray() == org.apache.jackrabbit.oak.util.TreeUtil.getBoolean(def, org.apache.jackrabbit.JcrConstants.JCR_MULTIPLE)) {\n                if (getBoolean(def, org.apache.jackrabbit.JcrConstants.JCR_PROTECTED)) {\n                    return null;\n                } else if ((!exactTypeMatch) && (fuzzyMatch == null)) {\n                    fuzzyMatch = def;\n                }\n            }\n        }\n    }\n    for (org.apache.jackrabbit.oak.api.Tree type : types) {\n        org.apache.jackrabbit.oak.api.Tree definitions = type.getChild(org.apache.jackrabbit.oak.jcr.delegate.OAK_RESIDUAL_PROPERTY_DEFINITIONS);\n        org.apache.jackrabbit.oak.api.Tree definition = definitions.getChild(definedType);\n        if (definition.exists()) {\n            return definition;\n        }\n        definition = definitions.getChild(undefinedType);\n        if (definition.exists()) {\n            return definition;\n        }\n        if ((!exactTypeMatch) && (fuzzyMatch == null)) {\n            for (org.apache.jackrabbit.oak.api.Tree def : definitions.getChildren()) {\n                if (propertyType.isArray() == org.apache.jackrabbit.oak.util.TreeUtil.getBoolean(def, org.apache.jackrabbit.JcrConstants.JCR_MULTIPLE)) {\n                    fuzzyMatch = def;\n                    break;\n                }\n            }\n        }\n    }\n    return fuzzyMatch;\n}",
            "src_parent_type": "Block",
            "src_type": "Return"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "ForEach",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "Return",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "LocalVariable",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "ForEach",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "for (org.apache.jackrabbit.oak.api.Tree def : definitions.getChildren()) {\n    if (propertyType.isArray() == org.apache.jackrabbit.oak.util.TreeUtil.getBoolean(def, org.apache.jackrabbit.JcrConstants.JCR_MULTIPLE)) {\n        if (getBoolean(def, org.apache.jackrabbit.JcrConstants.JCR_PROTECTED)) {\n            return null;\n        } else if ((!exactTypeMatch) && (fuzzyMatch == null)) {\n            fuzzyMatch = def;\n        }\n    }\n}",
            "src_parent": "{\n    org.apache.jackrabbit.oak.api.Tree definitions = type.getChild(org.apache.jackrabbit.oak.jcr.delegate.OAK_NAMED_PROPERTY_DEFINITIONS).getChild(escapedName);\n    org.apache.jackrabbit.oak.api.Tree definition = definitions.getChild(definedType);\n    if (definition.exists()) {\n        return definition;\n    }\n    definition = definitions.getChild(undefinedType);\n    if (definition.exists()) {\n        return definition;\n    }\n    for (org.apache.jackrabbit.oak.api.Tree def : definitions.getChildren()) {\n        if (propertyType.isArray() == org.apache.jackrabbit.oak.util.TreeUtil.getBoolean(def, org.apache.jackrabbit.JcrConstants.JCR_MULTIPLE)) {\n            if (getBoolean(def, org.apache.jackrabbit.JcrConstants.JCR_PROTECTED)) {\n                return null;\n            } else if ((!exactTypeMatch) && (fuzzyMatch == null)) {\n                fuzzyMatch = def;\n            }\n        }\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "ForEach"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Return",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "ForEach",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "LocalVariable",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "ForEach",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "(!exactTypeMatch) && (fuzzyMatch == null)",
            "src_parent": "if ((!exactTypeMatch) && (fuzzyMatch == null)) {\n    for (org.apache.jackrabbit.oak.api.Tree def : definitions.getChildren()) {\n        if (propertyType.isArray() == org.apache.jackrabbit.oak.util.TreeUtil.getBoolean(def, org.apache.jackrabbit.JcrConstants.JCR_MULTIPLE)) {\n            fuzzyMatch = def;\n            break;\n        }\n    }\n}",
            "src_parent_type": "If",
            "src_type": "BinaryOperator"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "Assignment",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "If",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "ForEach",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "if (getBoolean(def, org.apache.jackrabbit.JcrConstants.JCR_PROTECTED)) {\n    return null;\n} else if ((!exactTypeMatch) && (fuzzyMatch == null)) {\n    fuzzyMatch = def;\n}",
            "src_parent": "{\n    if (getBoolean(def, org.apache.jackrabbit.JcrConstants.JCR_PROTECTED)) {\n        return null;\n    } else if ((!exactTypeMatch) && (fuzzyMatch == null)) {\n        fuzzyMatch = def;\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "If"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "ForEach",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "fuzzyMatch = def",
            "src_parent": "{\n    fuzzyMatch = def;\n    break;\n}",
            "src_parent_type": "Block",
            "src_type": "Assignment"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "ForEach",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "break",
            "src_parent": "{\n    fuzzyMatch = def;\n    break;\n}",
            "src_parent_type": "Block",
            "src_type": "Break"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "ForEach",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "fuzzyMatch = def",
            "src_parent": "{\n    fuzzyMatch = def;\n}",
            "src_parent_type": "Block",
            "src_type": "Assignment"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "ForEach",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "org.apache.jackrabbit.oak.api.Tree def",
            "dst_parent": "for (org.apache.jackrabbit.oak.api.Tree def : definitions.getChildren()) {\n    if (propertyType.isArray() == org.apache.jackrabbit.oak.util.TreeUtil.getBoolean(def, org.apache.jackrabbit.JcrConstants.JCR_MULTIPLE)) {\n        if (getBoolean(def, org.apache.jackrabbit.JcrConstants.JCR_PROTECTED)) {\n            return null;\n        } else if ((!exactTypeMatch) && (fuzzyMatch == null)) {\n            fuzzyMatch = def;\n        }\n    }\n}",
            "dst_parent_type": "ForEach",
            "dst_type": "LocalVariable",
            "operator": "MOV",
            "src": "org.apache.jackrabbit.oak.api.Tree def",
            "src_parent": "for (org.apache.jackrabbit.oak.api.Tree def : definitions.getChildren()) {\n    if (propertyType.isArray() == org.apache.jackrabbit.oak.util.TreeUtil.getBoolean(def, org.apache.jackrabbit.JcrConstants.JCR_MULTIPLE)) {\n        return def;\n    }\n}",
            "src_parent_type": "ForEach",
            "src_type": "LocalVariable"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "ForEach",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "definitions.getChildren()",
            "dst_parent": "for (org.apache.jackrabbit.oak.api.Tree def : definitions.getChildren()) {\n    if (propertyType.isArray() == org.apache.jackrabbit.oak.util.TreeUtil.getBoolean(def, org.apache.jackrabbit.JcrConstants.JCR_MULTIPLE)) {\n        if (getBoolean(def, org.apache.jackrabbit.JcrConstants.JCR_PROTECTED)) {\n            return null;\n        } else if ((!exactTypeMatch) && (fuzzyMatch == null)) {\n            fuzzyMatch = def;\n        }\n    }\n}",
            "dst_parent_type": "ForEach",
            "dst_type": "Invocation",
            "operator": "MOV",
            "src": "definitions.getChildren()",
            "src_parent": "for (org.apache.jackrabbit.oak.api.Tree def : definitions.getChildren()) {\n    if (propertyType.isArray() == org.apache.jackrabbit.oak.util.TreeUtil.getBoolean(def, org.apache.jackrabbit.JcrConstants.JCR_MULTIPLE)) {\n        return def;\n    }\n}",
            "src_parent_type": "ForEach",
            "src_type": "Invocation"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "ForEach",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "Return",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "LocalVariable",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "ForEach",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "if (propertyType.isArray() == org.apache.jackrabbit.oak.util.TreeUtil.getBoolean(def, org.apache.jackrabbit.JcrConstants.JCR_MULTIPLE)) {\n    if (getBoolean(def, org.apache.jackrabbit.JcrConstants.JCR_PROTECTED)) {\n        return null;\n    } else if ((!exactTypeMatch) && (fuzzyMatch == null)) {\n        fuzzyMatch = def;\n    }\n}",
            "dst_parent": "{\n    if (propertyType.isArray() == org.apache.jackrabbit.oak.util.TreeUtil.getBoolean(def, org.apache.jackrabbit.JcrConstants.JCR_MULTIPLE)) {\n        if (getBoolean(def, org.apache.jackrabbit.JcrConstants.JCR_PROTECTED)) {\n            return null;\n        } else if ((!exactTypeMatch) && (fuzzyMatch == null)) {\n            fuzzyMatch = def;\n        }\n    }\n}",
            "dst_parent_type": "Block",
            "dst_type": "If",
            "operator": "MOV",
            "src": "if (!exactTypeMatch) {\n    for (org.apache.jackrabbit.oak.api.Tree def : definitions.getChildren()) {\n        if (propertyType.isArray() == org.apache.jackrabbit.oak.util.TreeUtil.getBoolean(def, org.apache.jackrabbit.JcrConstants.JCR_MULTIPLE)) {\n            return def;\n        }\n    }\n}",
            "src_parent": "{\n    org.apache.jackrabbit.oak.api.Tree definitions = type.getChild(org.apache.jackrabbit.oak.jcr.delegate.OAK_NAMED_PROPERTY_DEFINITIONS).getChild(escapedName);\n    org.apache.jackrabbit.oak.api.Tree definition = definitions.getChild(definedType);\n    if (definition.exists()) {\n        return definition;\n    }\n    definition = definitions.getChild(undefinedType);\n    if (definition.exists()) {\n        return definition;\n    }\n    if (!exactTypeMatch) {\n        for (org.apache.jackrabbit.oak.api.Tree def : definitions.getChildren()) {\n            if (propertyType.isArray() == org.apache.jackrabbit.oak.util.TreeUtil.getBoolean(def, org.apache.jackrabbit.JcrConstants.JCR_MULTIPLE)) {\n                return def;\n            }\n        }\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "If"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "Assignment",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "If",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "ForEach",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "(!exactTypeMatch)",
            "dst_parent": "(!exactTypeMatch) && (fuzzyMatch == null)",
            "dst_parent_type": "BinaryOperator",
            "dst_type": "UnaryOperator",
            "operator": "MOV",
            "src": "!exactTypeMatch",
            "src_parent": "if (!exactTypeMatch) {\n    for (org.apache.jackrabbit.oak.api.Tree def : definitions.getChildren()) {\n        if (propertyType.isArray() == org.apache.jackrabbit.oak.util.TreeUtil.getBoolean(def, org.apache.jackrabbit.JcrConstants.JCR_MULTIPLE)) {\n            return def;\n        }\n    }\n}",
            "src_parent_type": "If",
            "src_type": "UnaryOperator"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "ForEach",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "ForEach",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "If",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Return",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "return null",
            "dst_parent": "{\n    return null;\n}",
            "dst_parent_type": "Block",
            "dst_type": "Return",
            "operator": "MOV",
            "src": "return null",
            "src_parent": "{\n    java.lang.String escapedName;\n    if (org.apache.jackrabbit.JcrConstants.JCR_PRIMARYTYPE.equals(propertyName)) {\n        escapedName = \"oak:primaryType\";\n    } else if (org.apache.jackrabbit.JcrConstants.JCR_MIXINTYPES.equals(propertyName)) {\n        escapedName = \"oak:mixinTypes\";\n    } else if (org.apache.jackrabbit.JcrConstants.JCR_UUID.equals(propertyName)) {\n        escapedName = \"oak:uuid\";\n    } else {\n        escapedName = propertyName;\n    }\n    java.lang.String definedType = propertyType.toString();\n    java.lang.String undefinedType = org.apache.jackrabbit.oak.api.Type.UNDEFINED.toString();\n    if (propertyType.isArray()) {\n        undefinedType = org.apache.jackrabbit.oak.api.Type.UNDEFINEDS.toString();\n    }\n    for (org.apache.jackrabbit.oak.api.Tree type : types) {\n        org.apache.jackrabbit.oak.api.Tree definitions = type.getChild(org.apache.jackrabbit.oak.jcr.delegate.OAK_NAMED_PROPERTY_DEFINITIONS).getChild(escapedName);\n        org.apache.jackrabbit.oak.api.Tree definition = definitions.getChild(definedType);\n        if (definition.exists()) {\n            return definition;\n        }\n        definition = definitions.getChild(undefinedType);\n        if (definition.exists()) {\n            return definition;\n        }\n        if (!exactTypeMatch) {\n            for (org.apache.jackrabbit.oak.api.Tree def : definitions.getChildren()) {\n                if (propertyType.isArray() == org.apache.jackrabbit.oak.util.TreeUtil.getBoolean(def, org.apache.jackrabbit.JcrConstants.JCR_MULTIPLE)) {\n                    return def;\n                }\n            }\n        }\n    }\n    for (org.apache.jackrabbit.oak.api.Tree type : types) {\n        org.apache.jackrabbit.oak.api.Tree definitions = type.getChild(org.apache.jackrabbit.oak.jcr.delegate.OAK_RESIDUAL_PROPERTY_DEFINITIONS);\n        org.apache.jackrabbit.oak.api.Tree definition = definitions.getChild(definedType);\n        if (definition.exists()) {\n            return definition;\n        }\n        definition = definitions.getChild(undefinedType);\n        if (definition.exists()) {\n            return definition;\n        }\n        if (!exactTypeMatch) {\n            for (org.apache.jackrabbit.oak.api.Tree def : definitions.getChildren()) {\n                if (propertyType.isArray() == org.apache.jackrabbit.oak.util.TreeUtil.getBoolean(def, org.apache.jackrabbit.JcrConstants.JCR_MULTIPLE)) {\n                    return def;\n                }\n            }\n        }\n    }\n    return null;\n}",
            "src_parent_type": "Block",
            "src_type": "Return"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "ForEach",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "{\n    fuzzyMatch = def;\n}",
            "dst_parent": "if ((!exactTypeMatch) && (fuzzyMatch == null)) {\n    fuzzyMatch = def;\n}",
            "dst_parent_type": "If",
            "dst_type": "Block",
            "operator": "MOV",
            "src": "{\n    return def;\n}",
            "src_parent": "if (propertyType.isArray() == org.apache.jackrabbit.oak.util.TreeUtil.getBoolean(def, org.apache.jackrabbit.JcrConstants.JCR_MULTIPLE)) {\n    return def;\n}",
            "src_parent_type": "If",
            "src_type": "Block"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "Assignment",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "If",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "ForEach",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "(!exactTypeMatch)",
            "dst_parent": "(!exactTypeMatch) && (fuzzyMatch == null)",
            "dst_parent_type": "BinaryOperator",
            "dst_type": "UnaryOperator",
            "operator": "MOV",
            "src": "!exactTypeMatch",
            "src_parent": "if (!exactTypeMatch) {\n    for (org.apache.jackrabbit.oak.api.Tree def : definitions.getChildren()) {\n        if (propertyType.isArray() == org.apache.jackrabbit.oak.util.TreeUtil.getBoolean(def, org.apache.jackrabbit.JcrConstants.JCR_MULTIPLE)) {\n            return def;\n        }\n    }\n}",
            "src_parent_type": "If",
            "src_type": "UnaryOperator"
          }
        }
      ],
      "file_name": "NodeDelegate"
    }
  ],
  "id": "jackrabbit-oak_83427028"
}