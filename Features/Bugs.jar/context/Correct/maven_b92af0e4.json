{
  "files": [
    {
      "features": [
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "true",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Method",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "java.lang.String version = metadata.getVersion()",
            "src_parent": "{\n    org.apache.maven.artifact.repository.metadata.io.xpp3.MetadataXpp3Reader mappingReader = new org.apache.maven.artifact.repository.metadata.io.xpp3.MetadataXpp3Reader();\n    org.apache.maven.artifact.repository.metadata.Metadata metadata = null;\n    java.io.File metadataFile = new java.io.File(localRepository.getBasedir(), localRepository.pathOfLocalRepositoryMetadata(this, remoteRepository));\n    if (metadataFile.exists()) {\n        java.io.Reader reader = null;\n        try {\n            reader = new java.io.FileReader(metadataFile);\n            metadata = mappingReader.read(reader, false);\n        } finally {\n            org.codehaus.plexus.util.IOUtil.close(reader);\n        }\n    }\n    boolean changed;\n    if (metadata == null) {\n        metadata = this.metadata;\n        changed = true;\n    } else {\n        changed = metadata.merge(this.metadata);\n    }\n    java.lang.String version = metadata.getVersion();\n    if ((version != null) && (Artifact.LATEST_VERSION.equals(version) || Artifact.RELEASE_VERSION.equals(version))) {\n        changed = false;\n    }\n    if (changed) {\n        java.io.Writer writer = null;\n        try {\n            metadataFile.getParentFile().mkdirs();\n            writer = new java.io.FileWriter(metadataFile);\n            org.apache.maven.artifact.repository.metadata.io.xpp3.MetadataXpp3Writer mappingWriter = new org.apache.maven.artifact.repository.metadata.io.xpp3.MetadataXpp3Writer();\n            mappingWriter.write(writer, metadata);\n        } finally {\n            org.codehaus.plexus.util.IOUtil.close(writer);\n        }\n    } else {\n        metadataFile.setLastModified(java.lang.System.currentTimeMillis());\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "LocalVariable"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "true",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Method",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "if ((version != null) && (Artifact.LATEST_VERSION.equals(version) || Artifact.RELEASE_VERSION.equals(version))) {\n    changed = false;\n}",
            "src_parent": "{\n    org.apache.maven.artifact.repository.metadata.io.xpp3.MetadataXpp3Reader mappingReader = new org.apache.maven.artifact.repository.metadata.io.xpp3.MetadataXpp3Reader();\n    org.apache.maven.artifact.repository.metadata.Metadata metadata = null;\n    java.io.File metadataFile = new java.io.File(localRepository.getBasedir(), localRepository.pathOfLocalRepositoryMetadata(this, remoteRepository));\n    if (metadataFile.exists()) {\n        java.io.Reader reader = null;\n        try {\n            reader = new java.io.FileReader(metadataFile);\n            metadata = mappingReader.read(reader, false);\n        } finally {\n            org.codehaus.plexus.util.IOUtil.close(reader);\n        }\n    }\n    boolean changed;\n    if (metadata == null) {\n        metadata = this.metadata;\n        changed = true;\n    } else {\n        changed = metadata.merge(this.metadata);\n    }\n    java.lang.String version = metadata.getVersion();\n    if ((version != null) && (Artifact.LATEST_VERSION.equals(version) || Artifact.RELEASE_VERSION.equals(version))) {\n        changed = false;\n    }\n    if (changed) {\n        java.io.Writer writer = null;\n        try {\n            metadataFile.getParentFile().mkdirs();\n            writer = new java.io.FileWriter(metadataFile);\n            org.apache.maven.artifact.repository.metadata.io.xpp3.MetadataXpp3Writer mappingWriter = new org.apache.maven.artifact.repository.metadata.io.xpp3.MetadataXpp3Writer();\n            mappingWriter.write(writer, metadata);\n        } finally {\n            org.codehaus.plexus.util.IOUtil.close(writer);\n        }\n    } else {\n        metadataFile.setLastModified(java.lang.System.currentTimeMillis());\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "If"
          }
        }
      ],
      "file_name": "AbstractRepositoryMetadata"
    }
  ],
  "id": "maven_b92af0e4"
}