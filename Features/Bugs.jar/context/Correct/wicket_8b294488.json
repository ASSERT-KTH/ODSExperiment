{
  "files": [
    {
      "features": [
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "Return",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "LocalVariable",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "VE: Modifiers_LocalVariable",
            "src_parent": "@java.lang.SuppressWarnings(\"unchecked\")\nfinal org.apache.wicket.util.convert.IConverter<C> converter",
            "src_parent_type": "LocalVariable",
            "src_type": "VirtualEle"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "{\n    converter = ((org.apache.wicket.util.convert.IConverter<C>) (classToConverter.get(c.getName())));\n}",
            "src_parent": "if (java.util.Calendar.class.equals(c)) {\n    converter = ((org.apache.wicket.util.convert.IConverter<C>) (new org.apache.wicket.util.convert.converter.CalendarConverter()));\n} else {\n    converter = ((org.apache.wicket.util.convert.IConverter<C>) (classToConverter.get(c.getName())));\n}",
            "src_parent_type": "If",
            "src_type": "Block"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Method",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "if (converter == null) {\n    if (java.util.Date.class.equals(c)) {\n        converter = ((org.apache.wicket.util.convert.IConverter<C>) (new org.apache.wicket.util.convert.converter.DateConverter()));\n    } else if (java.sql.Date.class.equals(c)) {\n        converter = ((org.apache.wicket.util.convert.IConverter<C>) (new org.apache.wicket.util.convert.converter.SqlDateConverter()));\n    } else if (java.sql.Time.class.equals(c)) {\n        converter = ((org.apache.wicket.util.convert.IConverter<C>) (new org.apache.wicket.util.convert.converter.SqlTimeConverter()));\n    } else if (java.sql.Timestamp.class.equals(c)) {\n        converter = ((org.apache.wicket.util.convert.IConverter<C>) (new org.apache.wicket.util.convert.converter.SqlTimestampConverter()));\n    } else if (java.util.Calendar.class.equals(c)) {\n        converter = ((org.apache.wicket.util.convert.IConverter<C>) (new org.apache.wicket.util.convert.converter.CalendarConverter()));\n    }\n}",
            "src_parent": "{\n    @java.lang.SuppressWarnings(\"unchecked\")\n    org.apache.wicket.util.convert.IConverter<C> converter = ((org.apache.wicket.util.convert.IConverter<C>) (classToConverter.get(c.getName())));\n    if (converter == null) {\n        if (java.util.Date.class.equals(c)) {\n            converter = ((org.apache.wicket.util.convert.IConverter<C>) (new org.apache.wicket.util.convert.converter.DateConverter()));\n        } else if (java.sql.Date.class.equals(c)) {\n            converter = ((org.apache.wicket.util.convert.IConverter<C>) (new org.apache.wicket.util.convert.converter.SqlDateConverter()));\n        } else if (java.sql.Time.class.equals(c)) {\n            converter = ((org.apache.wicket.util.convert.IConverter<C>) (new org.apache.wicket.util.convert.converter.SqlTimeConverter()));\n        } else if (java.sql.Timestamp.class.equals(c)) {\n            converter = ((org.apache.wicket.util.convert.IConverter<C>) (new org.apache.wicket.util.convert.converter.SqlTimestampConverter()));\n        } else if (java.util.Calendar.class.equals(c)) {\n            converter = ((org.apache.wicket.util.convert.IConverter<C>) (new org.apache.wicket.util.convert.converter.CalendarConverter()));\n        }\n    }\n    return converter;\n}",
            "src_parent_type": "Block",
            "src_type": "If"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Assignment",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "((org.apache.wicket.util.convert.IConverter<C>) (classToConverter.get(c.getName())))",
            "dst_parent": "@java.lang.SuppressWarnings(\"unchecked\")\norg.apache.wicket.util.convert.IConverter<C> converter = ((org.apache.wicket.util.convert.IConverter<C>) (classToConverter.get(c.getName())))",
            "dst_parent_type": "LocalVariable",
            "dst_type": "Invocation",
            "operator": "MOV",
            "src": "((org.apache.wicket.util.convert.IConverter<C>) (classToConverter.get(c.getName())))",
            "src_parent": "converter = ((org.apache.wicket.util.convert.IConverter<C>) (classToConverter.get(c.getName())))",
            "src_parent_type": "Assignment",
            "src_type": "Invocation"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Return",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "if (java.util.Date.class.equals(c)) {\n    converter = ((org.apache.wicket.util.convert.IConverter<C>) (new org.apache.wicket.util.convert.converter.DateConverter()));\n} else if (java.sql.Date.class.equals(c)) {\n    converter = ((org.apache.wicket.util.convert.IConverter<C>) (new org.apache.wicket.util.convert.converter.SqlDateConverter()));\n} else if (java.sql.Time.class.equals(c)) {\n    converter = ((org.apache.wicket.util.convert.IConverter<C>) (new org.apache.wicket.util.convert.converter.SqlTimeConverter()));\n} else if (java.sql.Timestamp.class.equals(c)) {\n    converter = ((org.apache.wicket.util.convert.IConverter<C>) (new org.apache.wicket.util.convert.converter.SqlTimestampConverter()));\n} else if (java.util.Calendar.class.equals(c)) {\n    converter = ((org.apache.wicket.util.convert.IConverter<C>) (new org.apache.wicket.util.convert.converter.CalendarConverter()));\n}",
            "dst_parent": "{\n    if (java.util.Date.class.equals(c)) {\n        converter = ((org.apache.wicket.util.convert.IConverter<C>) (new org.apache.wicket.util.convert.converter.DateConverter()));\n    } else if (java.sql.Date.class.equals(c)) {\n        converter = ((org.apache.wicket.util.convert.IConverter<C>) (new org.apache.wicket.util.convert.converter.SqlDateConverter()));\n    } else if (java.sql.Time.class.equals(c)) {\n        converter = ((org.apache.wicket.util.convert.IConverter<C>) (new org.apache.wicket.util.convert.converter.SqlTimeConverter()));\n    } else if (java.sql.Timestamp.class.equals(c)) {\n        converter = ((org.apache.wicket.util.convert.IConverter<C>) (new org.apache.wicket.util.convert.converter.SqlTimestampConverter()));\n    } else if (java.util.Calendar.class.equals(c)) {\n        converter = ((org.apache.wicket.util.convert.IConverter<C>) (new org.apache.wicket.util.convert.converter.CalendarConverter()));\n    }\n}",
            "dst_parent_type": "Block",
            "dst_type": "If",
            "operator": "MOV",
            "src": "if (java.util.Date.class.equals(c)) {\n    converter = ((org.apache.wicket.util.convert.IConverter<C>) (new org.apache.wicket.util.convert.converter.DateConverter()));\n} else if (java.sql.Date.class.equals(c)) {\n    converter = ((org.apache.wicket.util.convert.IConverter<C>) (new org.apache.wicket.util.convert.converter.SqlDateConverter()));\n} else if (java.sql.Time.class.equals(c)) {\n    converter = ((org.apache.wicket.util.convert.IConverter<C>) (new org.apache.wicket.util.convert.converter.SqlTimeConverter()));\n} else if (java.sql.Timestamp.class.equals(c)) {\n    converter = ((org.apache.wicket.util.convert.IConverter<C>) (new org.apache.wicket.util.convert.converter.SqlTimestampConverter()));\n} else if (java.util.Calendar.class.equals(c)) {\n    converter = ((org.apache.wicket.util.convert.IConverter<C>) (new org.apache.wicket.util.convert.converter.CalendarConverter()));\n} else {\n    converter = ((org.apache.wicket.util.convert.IConverter<C>) (classToConverter.get(c.getName())));\n}",
            "src_parent": "{\n    @java.lang.SuppressWarnings(\"unchecked\")\n    final org.apache.wicket.util.convert.IConverter<C> converter;\n    if (java.util.Date.class.equals(c)) {\n        converter = ((org.apache.wicket.util.convert.IConverter<C>) (new org.apache.wicket.util.convert.converter.DateConverter()));\n    } else if (java.sql.Date.class.equals(c)) {\n        converter = ((org.apache.wicket.util.convert.IConverter<C>) (new org.apache.wicket.util.convert.converter.SqlDateConverter()));\n    } else if (java.sql.Time.class.equals(c)) {\n        converter = ((org.apache.wicket.util.convert.IConverter<C>) (new org.apache.wicket.util.convert.converter.SqlTimeConverter()));\n    } else if (java.sql.Timestamp.class.equals(c)) {\n        converter = ((org.apache.wicket.util.convert.IConverter<C>) (new org.apache.wicket.util.convert.converter.SqlTimestampConverter()));\n    } else if (java.util.Calendar.class.equals(c)) {\n        converter = ((org.apache.wicket.util.convert.IConverter<C>) (new org.apache.wicket.util.convert.converter.CalendarConverter()));\n    } else {\n        converter = ((org.apache.wicket.util.convert.IConverter<C>) (classToConverter.get(c.getName())));\n    }\n    return converter;\n}",
            "src_parent_type": "Block",
            "src_type": "If"
          }
        }
      ],
      "file_name": "ConverterLocator"
    }
  ],
  "id": "wicket_8b294488"
}