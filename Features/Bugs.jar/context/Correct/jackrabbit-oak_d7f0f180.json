{
  "files": [
    {
      "features": [
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Package",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Class",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "private static org.apache.jackrabbit.oak.api.PropertyValue mvpToString(org.apache.jackrabbit.oak.api.PropertyValue pv) {\n    java.lang.String v = com.google.common.base.Joiner.on(' ').appendTo(new java.lang.StringBuilder(), pv.getValue(Type.STRINGS)).toString();\n    return org.apache.jackrabbit.oak.spi.query.PropertyValues.newString(v);\n}",
            "src_parent": "public class RowImpl implements javax.jcr.query.Row {\n    private final org.apache.jackrabbit.oak.jcr.query.QueryResultImpl result;\n\n    private final org.apache.jackrabbit.oak.api.ResultRow row;\n\n    private final java.lang.String pathSelector;\n\n    public RowImpl(org.apache.jackrabbit.oak.jcr.query.QueryResultImpl result, org.apache.jackrabbit.oak.api.ResultRow row, java.lang.String pathSelector) {\n        this.result = result;\n        this.row = row;\n        this.pathSelector = pathSelector;\n    }\n\n    @java.lang.Override\n    public javax.jcr.Node getNode() throws javax.jcr.RepositoryException {\n        return result.getNode(getPath());\n    }\n\n    @java.lang.Override\n    public javax.jcr.Node getNode(java.lang.String selectorName) throws javax.jcr.RepositoryException {\n        return result.getNode(getPath(selectorName));\n    }\n\n    @java.lang.Override\n    public java.lang.String getPath() throws javax.jcr.RepositoryException {\n        try {\n            return result.getLocalPath(row.getPath(pathSelector));\n        } catch (java.lang.IllegalArgumentException e) {\n            throw new javax.jcr.RepositoryException(e);\n        }\n    }\n\n    @java.lang.Override\n    public java.lang.String getPath(java.lang.String selectorName) throws javax.jcr.RepositoryException {\n        try {\n            return result.getLocalPath(row.getPath(selectorName));\n        } catch (java.lang.IllegalArgumentException e) {\n            throw new javax.jcr.RepositoryException(e);\n        }\n    }\n\n    @java.lang.Override\n    public double getScore() throws javax.jcr.RepositoryException {\n        return 0;\n    }\n\n    @java.lang.Override\n    public double getScore(java.lang.String selectorName) throws javax.jcr.RepositoryException {\n        return 0;\n    }\n\n    @java.lang.Override\n    public javax.jcr.Value getValue(java.lang.String columnName) throws javax.jcr.RepositoryException {\n        try {\n            return result.createValue(row.getValue(columnName));\n        } catch (java.lang.IllegalArgumentException e) {\n            throw new javax.jcr.RepositoryException(e);\n        }\n    }\n\n    @java.lang.Override\n    public javax.jcr.Value[] getValues() throws javax.jcr.RepositoryException {\n        org.apache.jackrabbit.oak.api.PropertyValue[] values = row.getValues();\n        int len = values.length;\n        javax.jcr.Value[] v2 = new javax.jcr.Value[values.length];\n        for (int i = 0; i < len; i++) {\n            if (values[i].isArray()) {\n                v2[i] = result.createValue(org.apache.jackrabbit.oak.jcr.query.RowImpl.mvpToString(values[i]));\n            } else {\n                v2[i] = result.createValue(values[i]);\n            }\n        }\n        return v2;\n    }\n\n    private static org.apache.jackrabbit.oak.api.PropertyValue mvpToString(org.apache.jackrabbit.oak.api.PropertyValue pv) {\n        java.lang.String v = com.google.common.base.Joiner.on(' ').appendTo(new java.lang.StringBuilder(), pv.getValue(Type.STRINGS)).toString();\n        return org.apache.jackrabbit.oak.spi.query.PropertyValues.newString(v);\n    }\n}",
            "src_parent_type": "Class",
            "src_type": "Method"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Return",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "LocalVariable",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "For",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "if (values[i].isArray()) {\n    v2[i] = result.createValue(org.apache.jackrabbit.oak.jcr.query.RowImpl.mvpToString(values[i]));\n} else {\n    v2[i] = result.createValue(values[i]);\n}",
            "src_parent": "{\n    if (values[i].isArray()) {\n        v2[i] = result.createValue(org.apache.jackrabbit.oak.jcr.query.RowImpl.mvpToString(values[i]));\n    } else {\n        v2[i] = result.createValue(values[i]);\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "If"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Return",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "LocalVariable",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "For",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "v2[i] = result.createValue(values[i])",
            "dst_parent": "{\n    v2[i] = result.createValue(values[i]);\n}",
            "dst_parent_type": "Block",
            "dst_type": "Assignment",
            "operator": "MOV",
            "src": "v2[i] = result.createValue(values[i])",
            "src_parent": "{\n    v2[i] = result.createValue(values[i]);\n}",
            "src_parent_type": "Block",
            "src_type": "Assignment"
          }
        }
      ],
      "file_name": "RowImpl"
    }
  ],
  "id": "jackrabbit-oak_d7f0f180"
}