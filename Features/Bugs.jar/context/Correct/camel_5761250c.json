{
  "files": [
    {
      "features": [
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Return",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "boolean sync = true",
            "src_parent": "{\n    final org.apache.camel.util.StopWatch watch = new org.apache.camel.util.StopWatch();\n    final org.apache.camel.Exchange target = configureExchange(exchange, pattern);\n    org.apache.camel.util.EventHelper.notifyExchangeSending(exchange.getContext(), target, destination);\n    org.apache.camel.processor.SendProcessor.LOG.debug(\">>>> {} {}\", destination, exchange);\n    boolean sync = true;\n    try {\n        sync = producer.process(exchange, new org.apache.camel.AsyncCallback() {\n            @java.lang.Override\n            public void done(boolean doneSync) {\n                try {\n                    target.setPattern(existingPattern);\n                    long timeTaken = watch.stop();\n                    org.apache.camel.util.EventHelper.notifyExchangeSent(target.getContext(), target, destination, timeTaken);\n                } finally {\n                    callback.done(doneSync);\n                }\n            }\n        });\n    } catch (java.lang.Throwable throwable) {\n        if (exchange != null) {\n            exchange.setException(throwable);\n        }\n    }\n    return sync;\n}",
            "src_parent_type": "Block",
            "src_type": "LocalVariable"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Return",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "try {\n    sync = producer.process(exchange, new org.apache.camel.AsyncCallback() {\n        @java.lang.Override\n        public void done(boolean doneSync) {\n            try {\n                target.setPattern(existingPattern);\n                long timeTaken = watch.stop();\n                org.apache.camel.util.EventHelper.notifyExchangeSent(target.getContext(), target, destination, timeTaken);\n            } finally {\n                callback.done(doneSync);\n            }\n        }\n    });\n} catch (java.lang.Throwable throwable) {\n    if (exchange != null) {\n        exchange.setException(throwable);\n    }\n}",
            "src_parent": "{\n    final org.apache.camel.util.StopWatch watch = new org.apache.camel.util.StopWatch();\n    final org.apache.camel.Exchange target = configureExchange(exchange, pattern);\n    org.apache.camel.util.EventHelper.notifyExchangeSending(exchange.getContext(), target, destination);\n    org.apache.camel.processor.SendProcessor.LOG.debug(\">>>> {} {}\", destination, exchange);\n    boolean sync = true;\n    try {\n        sync = producer.process(exchange, new org.apache.camel.AsyncCallback() {\n            @java.lang.Override\n            public void done(boolean doneSync) {\n                try {\n                    target.setPattern(existingPattern);\n                    long timeTaken = watch.stop();\n                    org.apache.camel.util.EventHelper.notifyExchangeSent(target.getContext(), target, destination, timeTaken);\n                } finally {\n                    callback.done(doneSync);\n                }\n            }\n        });\n    } catch (java.lang.Throwable throwable) {\n        if (exchange != null) {\n            exchange.setException(throwable);\n        }\n    }\n    return sync;\n}",
            "src_parent_type": "Block",
            "src_type": "Try"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Return",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "sync",
            "src_parent": "return sync",
            "src_parent_type": "Return",
            "src_type": "VariableRead"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "LocalVariable",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "true",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Return",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "producer.process(exchange, new org.apache.camel.AsyncCallback() {\n    @java.lang.Override\n    public void done(boolean doneSync) {\n        try {\n            target.setPattern(existingPattern);\n            long timeTaken = watch.stop();\n            org.apache.camel.util.EventHelper.notifyExchangeSent(target.getContext(), target, destination, timeTaken);\n        } finally {\n            callback.done(doneSync);\n        }\n    }\n})",
            "dst_parent": "sync = producer.process(exchange, new org.apache.camel.AsyncCallback() {\n    @java.lang.Override\n    public void done(boolean doneSync) {\n        try {\n            target.setPattern(existingPattern);\n            long timeTaken = watch.stop();\n            org.apache.camel.util.EventHelper.notifyExchangeSent(target.getContext(), target, destination, timeTaken);\n        } finally {\n            callback.done(doneSync);\n        }\n    }\n})",
            "dst_parent_type": "Assignment",
            "dst_type": "Invocation",
            "operator": "MOV",
            "src": "producer.process(exchange, new org.apache.camel.AsyncCallback() {\n    @java.lang.Override\n    public void done(boolean doneSync) {\n        try {\n            target.setPattern(existingPattern);\n            long timeTaken = watch.stop();\n            org.apache.camel.util.EventHelper.notifyExchangeSent(target.getContext(), target, destination, timeTaken);\n        } finally {\n            callback.done(doneSync);\n        }\n    }\n})",
            "src_parent": "return producer.process(exchange, new org.apache.camel.AsyncCallback() {\n    @java.lang.Override\n    public void done(boolean doneSync) {\n        try {\n            target.setPattern(existingPattern);\n            long timeTaken = watch.stop();\n            org.apache.camel.util.EventHelper.notifyExchangeSent(target.getContext(), target, destination, timeTaken);\n        } finally {\n            callback.done(doneSync);\n        }\n    }\n})",
            "src_parent_type": "Return",
            "src_type": "Invocation"
          }
        }
      ],
      "file_name": "SendProcessor"
    }
  ],
  "id": "camel_5761250c"
}