{
  "files": [
    {
      "features": [
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "LocalVariable",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "LocalVariable",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "final org.apache.logging.log4j.core.net.Protocol p = org.apache.logging.log4j.util.EnglishEnums.valueOf(org.apache.logging.log4j.core.net.Protocol.class, protocol != null ? protocol : org.apache.logging.log4j.core.net.Protocol.TCP.name())",
            "dst_parent": "{\n    boolean isFlush = (immediateFlush == null) ? true : java.lang.Boolean.valueOf(immediateFlush);\n    boolean isAdvertise = (advertise == null) ? false : java.lang.Boolean.valueOf(advertise);\n    final boolean handleExceptions = (suppress == null) ? true : java.lang.Boolean.valueOf(suppress);\n    final boolean fail = (immediateFail == null) ? true : java.lang.Boolean.valueOf(immediateFail);\n    final int reconnectDelay = (delay == null) ? 0 : java.lang.Integer.parseInt(delay);\n    final int port = (portNum == null) ? 0 : java.lang.Integer.parseInt(portNum);\n    if (layout == null) {\n        @java.lang.SuppressWarnings({ \"unchecked\", \"UnnecessaryLocalVariable\" })\n        org.apache.logging.log4j.core.Layout<S> l = ((org.apache.logging.log4j.core.Layout<S>) (org.apache.logging.log4j.core.layout.SerializedLayout.createLayout()));\n        layout = l;\n    }\n    if (name == null) {\n        org.apache.logging.log4j.core.AbstractLifeCycle.LOGGER.error(\"No name provided for SocketAppender\");\n        return null;\n    }\n    final org.apache.logging.log4j.core.net.Protocol p = org.apache.logging.log4j.util.EnglishEnums.valueOf(org.apache.logging.log4j.core.net.Protocol.class, protocol != null ? protocol : org.apache.logging.log4j.core.net.Protocol.TCP.name());\n    if (p.equals(org.apache.logging.log4j.core.net.Protocol.UDP)) {\n        isFlush = true;\n    }\n    final org.apache.logging.log4j.core.net.AbstractSocketManager manager = org.apache.logging.log4j.core.appender.SocketAppender.createSocketManager(p, host, port, reconnectDelay, fail, layout);\n    if (manager == null) {\n        return null;\n    }\n    return new org.apache.logging.log4j.core.appender.SocketAppender<S>(name, layout, filter, manager, handleExceptions, isFlush, isAdvertise ? config.getAdvertiser() : null);\n}",
            "dst_parent_type": "Block",
            "dst_type": "LocalVariable",
            "operator": "UPD",
            "src": "final java.lang.String prot = (protocol != null) ? protocol : org.apache.logging.log4j.core.net.Protocol.TCP.name()",
            "src_parent": "{\n    boolean isFlush = (immediateFlush == null) ? true : java.lang.Boolean.valueOf(immediateFlush);\n    boolean isAdvertise = (advertise == null) ? false : java.lang.Boolean.valueOf(advertise);\n    final boolean handleExceptions = (suppress == null) ? true : java.lang.Boolean.valueOf(suppress);\n    final boolean fail = (immediateFail == null) ? true : java.lang.Boolean.valueOf(immediateFail);\n    final int reconnectDelay = (delay == null) ? 0 : java.lang.Integer.parseInt(delay);\n    final int port = (portNum == null) ? 0 : java.lang.Integer.parseInt(portNum);\n    if (layout == null) {\n        @java.lang.SuppressWarnings({ \"unchecked\", \"UnnecessaryLocalVariable\" })\n        org.apache.logging.log4j.core.Layout<S> l = ((org.apache.logging.log4j.core.Layout<S>) (org.apache.logging.log4j.core.layout.SerializedLayout.createLayout()));\n        layout = l;\n    }\n    if (name == null) {\n        org.apache.logging.log4j.core.AbstractLifeCycle.LOGGER.error(\"No name provided for SocketAppender\");\n        return null;\n    }\n    final java.lang.String prot = (protocol != null) ? protocol : org.apache.logging.log4j.core.net.Protocol.TCP.name();\n    final org.apache.logging.log4j.core.net.Protocol p = org.apache.logging.log4j.util.EnglishEnums.valueOf(org.apache.logging.log4j.core.net.Protocol.class, protocol);\n    if (p.equals(org.apache.logging.log4j.core.net.Protocol.UDP)) {\n        isFlush = true;\n    }\n    final org.apache.logging.log4j.core.net.AbstractSocketManager manager = org.apache.logging.log4j.core.appender.SocketAppender.createSocketManager(p, host, port, reconnectDelay, fail, layout);\n    if (manager == null) {\n        return null;\n    }\n    return new org.apache.logging.log4j.core.appender.SocketAppender<S>(name, layout, filter, manager, handleExceptions, isFlush, isAdvertise ? config.getAdvertiser() : null);\n}",
            "src_parent_type": "Block",
            "src_type": "LocalVariable"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "LocalVariable",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "LocalVariable",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "org.apache.logging.log4j.core.net.Protocol",
            "dst_parent": "final org.apache.logging.log4j.core.net.Protocol p = org.apache.logging.log4j.util.EnglishEnums.valueOf(org.apache.logging.log4j.core.net.Protocol.class, protocol != null ? protocol : org.apache.logging.log4j.core.net.Protocol.TCP.name())",
            "dst_parent_type": "LocalVariable",
            "dst_type": "TypeReference",
            "operator": "UPD",
            "src": "java.lang.String",
            "src_parent": "final java.lang.String prot = (protocol != null) ? protocol : org.apache.logging.log4j.core.net.Protocol.TCP.name()",
            "src_parent_type": "LocalVariable",
            "src_type": "TypeReference"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "If",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "LocalVariable",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "final org.apache.logging.log4j.core.net.Protocol p = org.apache.logging.log4j.util.EnglishEnums.valueOf(org.apache.logging.log4j.core.net.Protocol.class, protocol)",
            "src_parent": "{\n    boolean isFlush = (immediateFlush == null) ? true : java.lang.Boolean.valueOf(immediateFlush);\n    boolean isAdvertise = (advertise == null) ? false : java.lang.Boolean.valueOf(advertise);\n    final boolean handleExceptions = (suppress == null) ? true : java.lang.Boolean.valueOf(suppress);\n    final boolean fail = (immediateFail == null) ? true : java.lang.Boolean.valueOf(immediateFail);\n    final int reconnectDelay = (delay == null) ? 0 : java.lang.Integer.parseInt(delay);\n    final int port = (portNum == null) ? 0 : java.lang.Integer.parseInt(portNum);\n    if (layout == null) {\n        @java.lang.SuppressWarnings({ \"unchecked\", \"UnnecessaryLocalVariable\" })\n        org.apache.logging.log4j.core.Layout<S> l = ((org.apache.logging.log4j.core.Layout<S>) (org.apache.logging.log4j.core.layout.SerializedLayout.createLayout()));\n        layout = l;\n    }\n    if (name == null) {\n        org.apache.logging.log4j.core.AbstractLifeCycle.LOGGER.error(\"No name provided for SocketAppender\");\n        return null;\n    }\n    final java.lang.String prot = (protocol != null) ? protocol : org.apache.logging.log4j.core.net.Protocol.TCP.name();\n    final org.apache.logging.log4j.core.net.Protocol p = org.apache.logging.log4j.util.EnglishEnums.valueOf(org.apache.logging.log4j.core.net.Protocol.class, protocol);\n    if (p.equals(org.apache.logging.log4j.core.net.Protocol.UDP)) {\n        isFlush = true;\n    }\n    final org.apache.logging.log4j.core.net.AbstractSocketManager manager = org.apache.logging.log4j.core.appender.SocketAppender.createSocketManager(p, host, port, reconnectDelay, fail, layout);\n    if (manager == null) {\n        return null;\n    }\n    return new org.apache.logging.log4j.core.appender.SocketAppender<S>(name, layout, filter, manager, handleExceptions, isFlush, isAdvertise ? config.getAdvertiser() : null);\n}",
            "src_parent_type": "Block",
            "src_type": "LocalVariable"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "If",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "LocalVariable",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "org.apache.logging.log4j.core.net.Protocol.class",
            "dst_parent": "org.apache.logging.log4j.util.EnglishEnums.valueOf(org.apache.logging.log4j.core.net.Protocol.class, protocol != null ? protocol : org.apache.logging.log4j.core.net.Protocol.TCP.name())",
            "dst_parent_type": "Invocation",
            "dst_type": "FieldRead",
            "operator": "MOV",
            "src": "org.apache.logging.log4j.core.net.Protocol.class",
            "src_parent": "org.apache.logging.log4j.util.EnglishEnums.valueOf(org.apache.logging.log4j.core.net.Protocol.class, protocol)",
            "src_parent_type": "Invocation",
            "src_type": "FieldRead"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "LocalVariable",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "LocalVariable",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "protocol != null ? protocol : org.apache.logging.log4j.core.net.Protocol.TCP.name()",
            "dst_parent": "org.apache.logging.log4j.util.EnglishEnums.valueOf(org.apache.logging.log4j.core.net.Protocol.class, protocol != null ? protocol : org.apache.logging.log4j.core.net.Protocol.TCP.name())",
            "dst_parent_type": "Invocation",
            "dst_type": "Conditional",
            "operator": "MOV",
            "src": "(protocol != null) ? protocol : org.apache.logging.log4j.core.net.Protocol.TCP.name()",
            "src_parent": "final java.lang.String prot = (protocol != null) ? protocol : org.apache.logging.log4j.core.net.Protocol.TCP.name()",
            "src_parent_type": "LocalVariable",
            "src_type": "Conditional"
          }
        }
      ],
      "file_name": "SocketAppender"
    }
  ],
  "id": "logging-log4j2_50e19247"
}