{
  "files": [
    {
      "features": [
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Assignment",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "Assignment",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "if (httpResponse.isRedirect()) {\n    lastRenderedPage = generateLastRenderedPage(cycle);\n    org.apache.wicket.protocol.http.MockHttpServletRequest newHttpRequest = new org.apache.wicket.protocol.http.MockHttpServletRequest(application, servletSession, application.getServletContext());\n    newHttpRequest.setRequestToRedirectString(httpResponse.getRedirectLocation());\n    wicketRequest = application.newWebRequest(newHttpRequest);\n    cycle = createRequestCycle();\n    cycle.request();\n}",
            "src_parent": "{\n    final org.apache.wicket.protocol.http.MockHttpServletResponse httpResponse = ((org.apache.wicket.protocol.http.MockHttpServletResponse) (cycle.getWebResponse().getHttpServletResponse()));\n    if (httpResponse.isRedirect()) {\n        lastRenderedPage = generateLastRenderedPage(cycle);\n        org.apache.wicket.protocol.http.MockHttpServletRequest newHttpRequest = new org.apache.wicket.protocol.http.MockHttpServletRequest(application, servletSession, application.getServletContext());\n        newHttpRequest.setRequestToRedirectString(httpResponse.getRedirectLocation());\n        wicketRequest = application.newWebRequest(newHttpRequest);\n        cycle = createRequestCycle();\n        cycle.request();\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "If"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Assignment",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "Assignment",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "if (httpResponse.isRedirect()) {\n    lastRenderedPage = generateLastRenderedPage(cycle);\n    org.apache.wicket.protocol.http.MockHttpServletRequest newHttpRequest = new org.apache.wicket.protocol.http.MockHttpServletRequest(application, servletSession, application.getServletContext());\n    newHttpRequest.setRequestToRedirectString(httpResponse.getRedirectLocation());\n    wicketRequest = application.newWebRequest(newHttpRequest);\n    cycle = createRequestCycle();\n    cycle.request();\n} else {\n    java.lang.String url = httpResponse.getHeader(\"Ajax-Location\");\n    if (url != null) {\n        org.apache.wicket.protocol.http.MockHttpServletRequest newHttpRequest = new org.apache.wicket.protocol.http.MockHttpServletRequest(application, servletSession, application.getServletContext());\n        newHttpRequest.setRequestToRedirectString(url);\n        wicketRequest = application.newWebRequest(newHttpRequest);\n        cycle = createRequestCycle();\n        cycle.request();\n    }\n}",
            "src_parent": "{\n    final org.apache.wicket.protocol.http.MockHttpServletResponse httpResponse = ((org.apache.wicket.protocol.http.MockHttpServletResponse) (cycle.getWebResponse().getHttpServletResponse()));\n    if (httpResponse.isRedirect()) {\n        lastRenderedPage = generateLastRenderedPage(cycle);\n        org.apache.wicket.protocol.http.MockHttpServletRequest newHttpRequest = new org.apache.wicket.protocol.http.MockHttpServletRequest(application, servletSession, application.getServletContext());\n        newHttpRequest.setRequestToRedirectString(httpResponse.getRedirectLocation());\n        wicketRequest = application.newWebRequest(newHttpRequest);\n        cycle = createRequestCycle();\n        cycle.request();\n    } else {\n        java.lang.String url = httpResponse.getHeader(\"Ajax-Location\");\n        if (url != null) {\n            org.apache.wicket.protocol.http.MockHttpServletRequest newHttpRequest = new org.apache.wicket.protocol.http.MockHttpServletRequest(application, servletSession, application.getServletContext());\n            newHttpRequest.setRequestToRedirectString(url);\n            wicketRequest = application.newWebRequest(newHttpRequest);\n            cycle = createRequestCycle();\n            cycle.request();\n        }\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "If"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "httpResponse.isRedirect()",
            "dst_parent": "if (httpResponse.isRedirect()) {\n    lastRenderedPage = generateLastRenderedPage(cycle);\n    org.apache.wicket.protocol.http.MockHttpServletRequest newHttpRequest = new org.apache.wicket.protocol.http.MockHttpServletRequest(application, servletSession, application.getServletContext());\n    newHttpRequest.setRequestToRedirectString(httpResponse.getRedirectLocation());\n    wicketRequest = application.newWebRequest(newHttpRequest);\n    cycle = createRequestCycle();\n    cycle.request();\n} else {\n    java.lang.String url = httpResponse.getHeader(\"Ajax-Location\");\n    if (url != null) {\n        org.apache.wicket.protocol.http.MockHttpServletRequest newHttpRequest = new org.apache.wicket.protocol.http.MockHttpServletRequest(application, servletSession, application.getServletContext());\n        newHttpRequest.setRequestToRedirectString(url);\n        wicketRequest = application.newWebRequest(newHttpRequest);\n        cycle = createRequestCycle();\n        cycle.request();\n    }\n}",
            "dst_parent_type": "If",
            "dst_type": "Invocation",
            "operator": "MOV",
            "src": "httpResponse.isRedirect()",
            "src_parent": "if (httpResponse.isRedirect()) {\n    lastRenderedPage = generateLastRenderedPage(cycle);\n    org.apache.wicket.protocol.http.MockHttpServletRequest newHttpRequest = new org.apache.wicket.protocol.http.MockHttpServletRequest(application, servletSession, application.getServletContext());\n    newHttpRequest.setRequestToRedirectString(httpResponse.getRedirectLocation());\n    wicketRequest = application.newWebRequest(newHttpRequest);\n    cycle = createRequestCycle();\n    cycle.request();\n}",
            "src_parent_type": "If",
            "src_type": "Invocation"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "{\n    lastRenderedPage = generateLastRenderedPage(cycle);\n    org.apache.wicket.protocol.http.MockHttpServletRequest newHttpRequest = new org.apache.wicket.protocol.http.MockHttpServletRequest(application, servletSession, application.getServletContext());\n    newHttpRequest.setRequestToRedirectString(httpResponse.getRedirectLocation());\n    wicketRequest = application.newWebRequest(newHttpRequest);\n    cycle = createRequestCycle();\n    cycle.request();\n}",
            "dst_parent": "if (httpResponse.isRedirect()) {\n    lastRenderedPage = generateLastRenderedPage(cycle);\n    org.apache.wicket.protocol.http.MockHttpServletRequest newHttpRequest = new org.apache.wicket.protocol.http.MockHttpServletRequest(application, servletSession, application.getServletContext());\n    newHttpRequest.setRequestToRedirectString(httpResponse.getRedirectLocation());\n    wicketRequest = application.newWebRequest(newHttpRequest);\n    cycle = createRequestCycle();\n    cycle.request();\n} else {\n    java.lang.String url = httpResponse.getHeader(\"Ajax-Location\");\n    if (url != null) {\n        org.apache.wicket.protocol.http.MockHttpServletRequest newHttpRequest = new org.apache.wicket.protocol.http.MockHttpServletRequest(application, servletSession, application.getServletContext());\n        newHttpRequest.setRequestToRedirectString(url);\n        wicketRequest = application.newWebRequest(newHttpRequest);\n        cycle = createRequestCycle();\n        cycle.request();\n    }\n}",
            "dst_parent_type": "If",
            "dst_type": "Block",
            "operator": "MOV",
            "src": "{\n    lastRenderedPage = generateLastRenderedPage(cycle);\n    org.apache.wicket.protocol.http.MockHttpServletRequest newHttpRequest = new org.apache.wicket.protocol.http.MockHttpServletRequest(application, servletSession, application.getServletContext());\n    newHttpRequest.setRequestToRedirectString(httpResponse.getRedirectLocation());\n    wicketRequest = application.newWebRequest(newHttpRequest);\n    cycle = createRequestCycle();\n    cycle.request();\n}",
            "src_parent": "if (httpResponse.isRedirect()) {\n    lastRenderedPage = generateLastRenderedPage(cycle);\n    org.apache.wicket.protocol.http.MockHttpServletRequest newHttpRequest = new org.apache.wicket.protocol.http.MockHttpServletRequest(application, servletSession, application.getServletContext());\n    newHttpRequest.setRequestToRedirectString(httpResponse.getRedirectLocation());\n    wicketRequest = application.newWebRequest(newHttpRequest);\n    cycle = createRequestCycle();\n    cycle.request();\n}",
            "src_parent_type": "If",
            "src_type": "Block"
          }
        }
      ],
      "file_name": "MockWebApplication"
    }
  ],
  "id": "wicket_089303f4"
}