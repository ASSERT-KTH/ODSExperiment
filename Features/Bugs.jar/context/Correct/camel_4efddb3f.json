{
  "files": [
    {
      "features": [
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "ForEach",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "LocalVariable",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "java.lang.Object",
            "dst_parent": "java.lang.Object value = options.get(key)",
            "dst_parent_type": "LocalVariable",
            "dst_type": "TypeReference",
            "operator": "UPD",
            "src": "java.lang.String",
            "src_parent": "java.lang.String value = ((java.lang.String) (options.get(key)))",
            "src_parent_type": "LocalVariable",
            "src_type": "TypeReference"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "ForEach",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "if (p >= 0) {\n    java.lang.String name = java.net.URLDecoder.decode(parameter.substring(0, p), org.apache.camel.util.URISupport.CHARSET);\n    java.lang.String value = java.net.URLDecoder.decode(parameter.substring(p + 1), org.apache.camel.util.URISupport.CHARSET);\n    rc.put(name, value);\n} else {\n    rc.put(parameter, null);\n}",
            "src_parent": "{\n    int p = parameter.indexOf(\"=\");\n    if (p >= 0) {\n        java.lang.String name = java.net.URLDecoder.decode(parameter.substring(0, p), org.apache.camel.util.URISupport.CHARSET);\n        java.lang.String value = java.net.URLDecoder.decode(parameter.substring(p + 1), org.apache.camel.util.URISupport.CHARSET);\n        rc.put(name, value);\n    } else {\n        rc.put(parameter, null);\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "If"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Package",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "true",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Class",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "private static void appendQueryStringParameter(java.lang.String key, java.lang.String value, java.lang.StringBuilder rc) throws java.io.UnsupportedEncodingException {\n    rc.append(java.net.URLEncoder.encode(key, org.apache.camel.util.URISupport.CHARSET));\n    if (value != null) {\n        rc.append(\"=\");\n        rc.append(java.net.URLEncoder.encode(value, org.apache.camel.util.URISupport.CHARSET));\n    }\n}",
            "src_parent": "public final class URISupport {\n    private static final java.util.regex.Pattern SECRETS = java.util.regex.Pattern.compile(\"([?&][^=]*(?:passphrase|password|secretKey)[^=]*)=([^&]*)\", java.util.regex.Pattern.CASE_INSENSITIVE);\n\n    private static final java.lang.String CHARSET = \"UTF-8\";\n\n    private URISupport() {\n    }\n\n    public static java.lang.String sanitizeUri(java.lang.String uri) {\n        return uri == null ? null : org.apache.camel.util.URISupport.SECRETS.matcher(uri).replaceAll(\"$1=******\");\n    }\n\n    public static java.util.Map<java.lang.String, java.lang.Object> parseQuery(java.lang.String uri) throws java.net.URISyntaxException {\n        if ((uri != null) && uri.endsWith(\"&\")) {\n            throw new java.net.URISyntaxException(uri, \"Invalid uri syntax: Trailing & marker found. \" + \"Check the uri and remove the trailing & marker.\");\n        }\n        try {\n            java.util.Map<java.lang.String, java.lang.Object> rc = new java.util.LinkedHashMap<java.lang.String, java.lang.Object>();\n            if (uri != null) {\n                java.lang.String[] parameters = uri.split(\"&\");\n                for (java.lang.String parameter : parameters) {\n                    int p = parameter.indexOf(\"=\");\n                    if (p >= 0) {\n                        java.lang.String name = java.net.URLDecoder.decode(parameter.substring(0, p), org.apache.camel.util.URISupport.CHARSET);\n                        java.lang.String value = java.net.URLDecoder.decode(parameter.substring(p + 1), org.apache.camel.util.URISupport.CHARSET);\n                        if (rc.containsKey(name)) {\n                            java.lang.Object existing = rc.get(name);\n                            java.util.List<java.lang.String> list;\n                            if (existing instanceof java.util.List) {\n                                list = org.apache.camel.util.CastUtils.cast(((java.util.List<?>) (existing)));\n                            } else {\n                                list = new java.util.ArrayList<java.lang.String>();\n                                java.lang.String s = (existing != null) ? existing.toString() : null;\n                                if (s != null) {\n                                    list.add(s);\n                                }\n                            }\n                            list.add(value);\n                            rc.put(name, list);\n                        } else {\n                            rc.put(name, value);\n                        }\n                    } else {\n                        rc.put(parameter, null);\n                    }\n                }\n            }\n            return rc;\n        } catch (java.io.UnsupportedEncodingException e) {\n            java.net.URISyntaxException se = new java.net.URISyntaxException(e.toString(), \"Invalid encoding\");\n            se.initCause(e);\n            throw se;\n        }\n    }\n\n    public static java.util.Map<java.lang.String, java.lang.Object> parseParameters(java.net.URI uri) throws java.net.URISyntaxException {\n        java.lang.String query = uri.getQuery();\n        if (query == null) {\n            java.lang.String schemeSpecificPart = uri.getSchemeSpecificPart();\n            int idx = schemeSpecificPart.indexOf('?');\n            if (idx < 0) {\n                return new java.util.LinkedHashMap<java.lang.String, java.lang.Object>(0);\n            } else {\n                query = schemeSpecificPart.substring(idx + 1);\n            }\n        } else {\n            query = org.apache.camel.util.URISupport.stripPrefix(query, \"?\");\n        }\n        return org.apache.camel.util.URISupport.parseQuery(query);\n    }\n\n    public static java.net.URI createURIWithQuery(java.net.URI uri, java.lang.String query) throws java.net.URISyntaxException {\n        org.apache.camel.util.ObjectHelper.notNull(uri, \"uri\");\n        java.lang.String s = uri.toString();\n        java.lang.String before = org.apache.camel.util.ObjectHelper.before(s, \"?\");\n        if (before != null) {\n            s = before;\n        }\n        if (query != null) {\n            s = (s + \"?\") + query;\n        }\n        if (uri.getFragment() != null) {\n            s = (s + \"#\") + uri.getFragment();\n        }\n        return new java.net.URI(s);\n    }\n\n    public static java.lang.String stripPrefix(java.lang.String value, java.lang.String prefix) {\n        if (value.startsWith(prefix)) {\n            return value.substring(prefix.length());\n        }\n        return value;\n    }\n\n    @java.lang.SuppressWarnings(\"unchecked\")\n    public static java.lang.String createQueryString(java.util.Map<java.lang.Object, java.lang.Object> options) throws java.net.URISyntaxException {\n        try {\n            if (options.size() > 0) {\n                java.lang.StringBuilder rc = new java.lang.StringBuilder();\n                boolean first = true;\n                for (java.lang.Object o : options.keySet()) {\n                    if (first) {\n                        first = false;\n                    } else {\n                        rc.append(\"&\");\n                    }\n                    java.lang.String key = ((java.lang.String) (o));\n                    java.lang.Object value = options.get(key);\n                    if (value instanceof java.util.List) {\n                        java.util.List<java.lang.String> list = ((java.util.List<java.lang.String>) (value));\n                        for (java.util.Iterator<java.lang.String> it = list.iterator(); it.hasNext();) {\n                            java.lang.String s = it.next();\n                            org.apache.camel.util.URISupport.appendQueryStringParameter(key, s, rc);\n                            if (it.hasNext()) {\n                                rc.append(\"&\");\n                            }\n                        }\n                    } else {\n                        java.lang.String s = (value != null) ? value.toString() : null;\n                        org.apache.camel.util.URISupport.appendQueryStringParameter(key, s, rc);\n                    }\n                }\n                return rc.toString();\n            } else {\n                return \"\";\n            }\n        } catch (java.io.UnsupportedEncodingException e) {\n            java.net.URISyntaxException se = new java.net.URISyntaxException(e.toString(), \"Invalid encoding\");\n            se.initCause(e);\n            throw se;\n        }\n    }\n\n    private static void appendQueryStringParameter(java.lang.String key, java.lang.String value, java.lang.StringBuilder rc) throws java.io.UnsupportedEncodingException {\n        rc.append(java.net.URLEncoder.encode(key, org.apache.camel.util.URISupport.CHARSET));\n        if (value != null) {\n            rc.append(\"=\");\n            rc.append(java.net.URLEncoder.encode(value, org.apache.camel.util.URISupport.CHARSET));\n        }\n    }\n\n    public static java.net.URI createRemainingURI(java.net.URI originalURI, java.util.Map<java.lang.Object, java.lang.Object> params) throws java.net.URISyntaxException {\n        java.lang.String s = org.apache.camel.util.URISupport.createQueryString(params);\n        if (s.length() == 0) {\n            s = null;\n        }\n        return org.apache.camel.util.URISupport.createURIWithQuery(originalURI, s);\n    }\n\n    @java.lang.SuppressWarnings(\"unchecked\")\n    public static java.lang.String normalizeUri(java.lang.String uri) throws java.net.URISyntaxException {\n        java.net.URI u = new java.net.URI(org.apache.camel.util.UnsafeUriCharactersEncoder.encode(uri));\n        java.lang.String path = u.getSchemeSpecificPart();\n        java.lang.String scheme = u.getScheme();\n        if ((scheme == null) || (path == null)) {\n            return uri;\n        }\n        if (path.startsWith(\"//\")) {\n            path = path.substring(2);\n        }\n        int idx = path.indexOf('?');\n        if (idx > 0) {\n            path = path.substring(0, idx);\n        }\n        java.util.Map parameters = org.apache.camel.util.URISupport.parseParameters(u);\n        if (parameters.isEmpty()) {\n            return org.apache.camel.util.URISupport.buildUri(scheme, path, null);\n        } else {\n            java.util.List<java.lang.String> keys = new java.util.ArrayList<java.lang.String>(parameters.keySet());\n            java.util.Collections.sort(keys);\n            java.util.Map<java.lang.Object, java.lang.Object> sorted = new java.util.LinkedHashMap<java.lang.Object, java.lang.Object>(parameters.size());\n            for (java.lang.String key : keys) {\n                sorted.put(key, parameters.get(key));\n            }\n            java.lang.String query = org.apache.camel.util.URISupport.createQueryString(sorted);\n            return org.apache.camel.util.URISupport.buildUri(scheme, path, query);\n        }\n    }\n\n    private static java.lang.String buildUri(java.lang.String scheme, java.lang.String path, java.lang.String query) {\n        return ((scheme + \"://\") + path) + (query != null ? \"?\" + query : \"\");\n    }\n}",
            "src_parent_type": "Class",
            "src_type": "Method"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Method",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "@java.lang.SuppressWarnings(\"unchecked\")",
            "src_parent": "@java.lang.SuppressWarnings(\"unchecked\")\npublic static java.lang.String createQueryString(java.util.Map<java.lang.Object, java.lang.Object> options) throws java.net.URISyntaxException {\n    try {\n        if (options.size() > 0) {\n            java.lang.StringBuilder rc = new java.lang.StringBuilder();\n            boolean first = true;\n            for (java.lang.Object o : options.keySet()) {\n                if (first) {\n                    first = false;\n                } else {\n                    rc.append(\"&\");\n                }\n                java.lang.String key = ((java.lang.String) (o));\n                java.lang.Object value = options.get(key);\n                if (value instanceof java.util.List) {\n                    java.util.List<java.lang.String> list = ((java.util.List<java.lang.String>) (value));\n                    for (java.util.Iterator<java.lang.String> it = list.iterator(); it.hasNext();) {\n                        java.lang.String s = it.next();\n                        org.apache.camel.util.URISupport.appendQueryStringParameter(key, s, rc);\n                        if (it.hasNext()) {\n                            rc.append(\"&\");\n                        }\n                    }\n                } else {\n                    java.lang.String s = (value != null) ? value.toString() : null;\n                    org.apache.camel.util.URISupport.appendQueryStringParameter(key, s, rc);\n                }\n            }\n            return rc.toString();\n        } else {\n            return \"\";\n        }\n    } catch (java.io.UnsupportedEncodingException e) {\n        java.net.URISyntaxException se = new java.net.URISyntaxException(e.toString(), \"Invalid encoding\");\n        se.initCause(e);\n        throw se;\n    }\n}",
            "src_parent_type": "Method",
            "src_type": "Annotation"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Return",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Try",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "if (p >= 0) {\n    java.lang.String name = java.net.URLDecoder.decode(parameter.substring(0, p), org.apache.camel.util.URISupport.CHARSET);\n    java.lang.String value = java.net.URLDecoder.decode(parameter.substring(p + 1), org.apache.camel.util.URISupport.CHARSET);\n    if (rc.containsKey(name)) {\n        java.lang.Object existing = rc.get(name);\n        java.util.List<java.lang.String> list;\n        if (existing instanceof java.util.List) {\n            list = org.apache.camel.util.CastUtils.cast(((java.util.List<?>) (existing)));\n        } else {\n            list = new java.util.ArrayList<java.lang.String>();\n            java.lang.String s = (existing != null) ? existing.toString() : null;\n            if (s != null) {\n                list.add(s);\n            }\n        }\n        list.add(value);\n        rc.put(name, list);\n    } else {\n        rc.put(name, value);\n    }\n} else {\n    rc.put(parameter, null);\n}",
            "src_parent": "{\n    int p = parameter.indexOf(\"=\");\n    if (p >= 0) {\n        java.lang.String name = java.net.URLDecoder.decode(parameter.substring(0, p), org.apache.camel.util.URISupport.CHARSET);\n        java.lang.String value = java.net.URLDecoder.decode(parameter.substring(p + 1), org.apache.camel.util.URISupport.CHARSET);\n        if (rc.containsKey(name)) {\n            java.lang.Object existing = rc.get(name);\n            java.util.List<java.lang.String> list;\n            if (existing instanceof java.util.List) {\n                list = org.apache.camel.util.CastUtils.cast(((java.util.List<?>) (existing)));\n            } else {\n                list = new java.util.ArrayList<java.lang.String>();\n                java.lang.String s = (existing != null) ? existing.toString() : null;\n                if (s != null) {\n                    list.add(s);\n                }\n            }\n            list.add(value);\n            rc.put(name, list);\n        } else {\n            rc.put(name, value);\n        }\n    } else {\n        rc.put(parameter, null);\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "If"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Try",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "if (value instanceof java.util.List) {\n    java.util.List<java.lang.String> list = ((java.util.List<java.lang.String>) (value));\n    for (java.util.Iterator<java.lang.String> it = list.iterator(); it.hasNext();) {\n        java.lang.String s = it.next();\n        org.apache.camel.util.URISupport.appendQueryStringParameter(key, s, rc);\n        if (it.hasNext()) {\n            rc.append(\"&\");\n        }\n    }\n} else {\n    java.lang.String s = (value != null) ? value.toString() : null;\n    org.apache.camel.util.URISupport.appendQueryStringParameter(key, s, rc);\n}",
            "src_parent": "{\n    if (first) {\n        first = false;\n    } else {\n        rc.append(\"&\");\n    }\n    java.lang.String key = ((java.lang.String) (o));\n    java.lang.Object value = options.get(key);\n    if (value instanceof java.util.List) {\n        java.util.List<java.lang.String> list = ((java.util.List<java.lang.String>) (value));\n        for (java.util.Iterator<java.lang.String> it = list.iterator(); it.hasNext();) {\n            java.lang.String s = it.next();\n            org.apache.camel.util.URISupport.appendQueryStringParameter(key, s, rc);\n            if (it.hasNext()) {\n                rc.append(\"&\");\n            }\n        }\n    } else {\n        java.lang.String s = (value != null) ? value.toString() : null;\n        org.apache.camel.util.URISupport.appendQueryStringParameter(key, s, rc);\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "If"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "ForEach",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "list.add(s)",
            "src_parent": "{\n    list.add(s);\n}",
            "src_parent_type": "Block",
            "src_type": "Invocation"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Return",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "ForEach",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "rc.append(java.net.URLEncoder.encode(key, org.apache.camel.util.URISupport.CHARSET))",
            "dst_parent": "{\n    rc.append(java.net.URLEncoder.encode(key, org.apache.camel.util.URISupport.CHARSET));\n    if (value != null) {\n        rc.append(\"=\");\n        rc.append(java.net.URLEncoder.encode(value, org.apache.camel.util.URISupport.CHARSET));\n    }\n}",
            "dst_parent_type": "Block",
            "dst_type": "Invocation",
            "operator": "MOV",
            "src": "rc.append(java.net.URLEncoder.encode(key, org.apache.camel.util.URISupport.CHARSET))",
            "src_parent": "{\n    if (first) {\n        first = false;\n    } else {\n        rc.append(\"&\");\n    }\n    java.lang.String key = ((java.lang.String) (o));\n    java.lang.String value = ((java.lang.String) (options.get(key)));\n    rc.append(java.net.URLEncoder.encode(key, org.apache.camel.util.URISupport.CHARSET));\n    if (value != null) {\n        rc.append(\"=\");\n        rc.append(java.net.URLEncoder.encode(value, org.apache.camel.util.URISupport.CHARSET));\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "Invocation"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Return",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "ForEach",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "if (value != null) {\n    rc.append(\"=\");\n    rc.append(java.net.URLEncoder.encode(value, org.apache.camel.util.URISupport.CHARSET));\n}",
            "dst_parent": "{\n    rc.append(java.net.URLEncoder.encode(key, org.apache.camel.util.URISupport.CHARSET));\n    if (value != null) {\n        rc.append(\"=\");\n        rc.append(java.net.URLEncoder.encode(value, org.apache.camel.util.URISupport.CHARSET));\n    }\n}",
            "dst_parent_type": "Block",
            "dst_type": "If",
            "operator": "MOV",
            "src": "if (value != null) {\n    rc.append(\"=\");\n    rc.append(java.net.URLEncoder.encode(value, org.apache.camel.util.URISupport.CHARSET));\n}",
            "src_parent": "{\n    if (first) {\n        first = false;\n    } else {\n        rc.append(\"&\");\n    }\n    java.lang.String key = ((java.lang.String) (o));\n    java.lang.String value = ((java.lang.String) (options.get(key)));\n    rc.append(java.net.URLEncoder.encode(key, org.apache.camel.util.URISupport.CHARSET));\n    if (value != null) {\n        rc.append(\"=\");\n        rc.append(java.net.URLEncoder.encode(value, org.apache.camel.util.URISupport.CHARSET));\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "If"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "ForEach",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "p >= 0",
            "dst_parent": "if (p >= 0) {\n    java.lang.String name = java.net.URLDecoder.decode(parameter.substring(0, p), org.apache.camel.util.URISupport.CHARSET);\n    java.lang.String value = java.net.URLDecoder.decode(parameter.substring(p + 1), org.apache.camel.util.URISupport.CHARSET);\n    if (rc.containsKey(name)) {\n        java.lang.Object existing = rc.get(name);\n        java.util.List<java.lang.String> list;\n        if (existing instanceof java.util.List) {\n            list = org.apache.camel.util.CastUtils.cast(((java.util.List<?>) (existing)));\n        } else {\n            list = new java.util.ArrayList<java.lang.String>();\n            java.lang.String s = (existing != null) ? existing.toString() : null;\n            if (s != null) {\n                list.add(s);\n            }\n        }\n        list.add(value);\n        rc.put(name, list);\n    } else {\n        rc.put(name, value);\n    }\n} else {\n    rc.put(parameter, null);\n}",
            "dst_parent_type": "If",
            "dst_type": "BinaryOperator",
            "operator": "MOV",
            "src": "p >= 0",
            "src_parent": "if (p >= 0) {\n    java.lang.String name = java.net.URLDecoder.decode(parameter.substring(0, p), org.apache.camel.util.URISupport.CHARSET);\n    java.lang.String value = java.net.URLDecoder.decode(parameter.substring(p + 1), org.apache.camel.util.URISupport.CHARSET);\n    rc.put(name, value);\n} else {\n    rc.put(parameter, null);\n}",
            "src_parent_type": "If",
            "src_type": "BinaryOperator"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "ForEach",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "{\n    rc.put(parameter, null);\n}",
            "dst_parent": "if (p >= 0) {\n    java.lang.String name = java.net.URLDecoder.decode(parameter.substring(0, p), org.apache.camel.util.URISupport.CHARSET);\n    java.lang.String value = java.net.URLDecoder.decode(parameter.substring(p + 1), org.apache.camel.util.URISupport.CHARSET);\n    if (rc.containsKey(name)) {\n        java.lang.Object existing = rc.get(name);\n        java.util.List<java.lang.String> list;\n        if (existing instanceof java.util.List) {\n            list = org.apache.camel.util.CastUtils.cast(((java.util.List<?>) (existing)));\n        } else {\n            list = new java.util.ArrayList<java.lang.String>();\n            java.lang.String s = (existing != null) ? existing.toString() : null;\n            if (s != null) {\n                list.add(s);\n            }\n        }\n        list.add(value);\n        rc.put(name, list);\n    } else {\n        rc.put(name, value);\n    }\n} else {\n    rc.put(parameter, null);\n}",
            "dst_parent_type": "If",
            "dst_type": "Block",
            "operator": "MOV",
            "src": "{\n    rc.put(parameter, null);\n}",
            "src_parent": "if (p >= 0) {\n    java.lang.String name = java.net.URLDecoder.decode(parameter.substring(0, p), org.apache.camel.util.URISupport.CHARSET);\n    java.lang.String value = java.net.URLDecoder.decode(parameter.substring(p + 1), org.apache.camel.util.URISupport.CHARSET);\n    rc.put(name, value);\n} else {\n    rc.put(parameter, null);\n}",
            "src_parent_type": "If",
            "src_type": "Block"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "ForEach",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "java.lang.String name = java.net.URLDecoder.decode(parameter.substring(0, p), org.apache.camel.util.URISupport.CHARSET)",
            "dst_parent": "{\n    java.lang.String name = java.net.URLDecoder.decode(parameter.substring(0, p), org.apache.camel.util.URISupport.CHARSET);\n    java.lang.String value = java.net.URLDecoder.decode(parameter.substring(p + 1), org.apache.camel.util.URISupport.CHARSET);\n    if (rc.containsKey(name)) {\n        java.lang.Object existing = rc.get(name);\n        java.util.List<java.lang.String> list;\n        if (existing instanceof java.util.List) {\n            list = org.apache.camel.util.CastUtils.cast(((java.util.List<?>) (existing)));\n        } else {\n            list = new java.util.ArrayList<java.lang.String>();\n            java.lang.String s = (existing != null) ? existing.toString() : null;\n            if (s != null) {\n                list.add(s);\n            }\n        }\n        list.add(value);\n        rc.put(name, list);\n    } else {\n        rc.put(name, value);\n    }\n}",
            "dst_parent_type": "Block",
            "dst_type": "LocalVariable",
            "operator": "MOV",
            "src": "java.lang.String name = java.net.URLDecoder.decode(parameter.substring(0, p), org.apache.camel.util.URISupport.CHARSET)",
            "src_parent": "{\n    java.lang.String name = java.net.URLDecoder.decode(parameter.substring(0, p), org.apache.camel.util.URISupport.CHARSET);\n    java.lang.String value = java.net.URLDecoder.decode(parameter.substring(p + 1), org.apache.camel.util.URISupport.CHARSET);\n    rc.put(name, value);\n}",
            "src_parent_type": "Block",
            "src_type": "LocalVariable"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "ForEach",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "java.lang.String value = java.net.URLDecoder.decode(parameter.substring(p + 1), org.apache.camel.util.URISupport.CHARSET)",
            "dst_parent": "{\n    java.lang.String name = java.net.URLDecoder.decode(parameter.substring(0, p), org.apache.camel.util.URISupport.CHARSET);\n    java.lang.String value = java.net.URLDecoder.decode(parameter.substring(p + 1), org.apache.camel.util.URISupport.CHARSET);\n    if (rc.containsKey(name)) {\n        java.lang.Object existing = rc.get(name);\n        java.util.List<java.lang.String> list;\n        if (existing instanceof java.util.List) {\n            list = org.apache.camel.util.CastUtils.cast(((java.util.List<?>) (existing)));\n        } else {\n            list = new java.util.ArrayList<java.lang.String>();\n            java.lang.String s = (existing != null) ? existing.toString() : null;\n            if (s != null) {\n                list.add(s);\n            }\n        }\n        list.add(value);\n        rc.put(name, list);\n    } else {\n        rc.put(name, value);\n    }\n}",
            "dst_parent_type": "Block",
            "dst_type": "LocalVariable",
            "operator": "MOV",
            "src": "java.lang.String value = java.net.URLDecoder.decode(parameter.substring(p + 1), org.apache.camel.util.URISupport.CHARSET)",
            "src_parent": "{\n    java.lang.String name = java.net.URLDecoder.decode(parameter.substring(0, p), org.apache.camel.util.URISupport.CHARSET);\n    java.lang.String value = java.net.URLDecoder.decode(parameter.substring(p + 1), org.apache.camel.util.URISupport.CHARSET);\n    rc.put(name, value);\n}",
            "src_parent_type": "Block",
            "src_type": "LocalVariable"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "ForEach",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "rc.put(name, value)",
            "dst_parent": "{\n    rc.put(name, value);\n}",
            "dst_parent_type": "Block",
            "dst_type": "Invocation",
            "operator": "MOV",
            "src": "rc.put(name, value)",
            "src_parent": "{\n    java.lang.String name = java.net.URLDecoder.decode(parameter.substring(0, p), org.apache.camel.util.URISupport.CHARSET);\n    java.lang.String value = java.net.URLDecoder.decode(parameter.substring(p + 1), org.apache.camel.util.URISupport.CHARSET);\n    rc.put(name, value);\n}",
            "src_parent_type": "Block",
            "src_type": "Invocation"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "ForEach",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "{\n    list.add(s);\n}",
            "dst_parent": "if (s != null) {\n    list.add(s);\n}",
            "dst_parent_type": "If",
            "dst_type": "Block",
            "operator": "MOV",
            "src": "{\n    java.lang.String name = java.net.URLDecoder.decode(parameter.substring(0, p), org.apache.camel.util.URISupport.CHARSET);\n    java.lang.String value = java.net.URLDecoder.decode(parameter.substring(p + 1), org.apache.camel.util.URISupport.CHARSET);\n    rc.put(name, value);\n}",
            "src_parent": "if (p >= 0) {\n    java.lang.String name = java.net.URLDecoder.decode(parameter.substring(0, p), org.apache.camel.util.URISupport.CHARSET);\n    java.lang.String value = java.net.URLDecoder.decode(parameter.substring(p + 1), org.apache.camel.util.URISupport.CHARSET);\n    rc.put(name, value);\n} else {\n    rc.put(parameter, null);\n}",
            "src_parent_type": "If",
            "src_type": "Block"
          }
        }
      ],
      "file_name": "URISupport"
    }
  ],
  "id": "camel_4efddb3f"
}