{
  "files": [
    {
      "features": [
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "org.apache.logging.log4j.core.async.AsyncLogger.disruptor",
            "src_parent": "org.apache.logging.log4j.core.async.AsyncLogger.disruptor.getRingBuffer()",
            "src_parent_type": "Invocation",
            "src_type": "FieldRead"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "true",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Method",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "com.lmax.disruptor.dsl.Disruptor<org.apache.logging.log4j.core.async.RingBufferLogEvent> temp = org.apache.logging.log4j.core.async.AsyncLogger.disruptor",
            "src_parent": "{\n    org.apache.logging.log4j.core.async.AsyncLogger.Info info = org.apache.logging.log4j.core.async.AsyncLogger.threadlocalInfo.get();\n    if (info == null) {\n        info = new org.apache.logging.log4j.core.async.AsyncLogger.Info(new org.apache.logging.log4j.core.async.RingBufferLogEventTranslator(), java.lang.Thread.currentThread().getName(), false);\n        org.apache.logging.log4j.core.async.AsyncLogger.threadlocalInfo.set(info);\n    }\n    com.lmax.disruptor.dsl.Disruptor<org.apache.logging.log4j.core.async.RingBufferLogEvent> temp = org.apache.logging.log4j.core.async.AsyncLogger.disruptor;\n    if (temp == null) {\n        org.apache.logging.log4j.core.async.AsyncLogger.LOGGER.fatal(\"Ignoring log event after log4j was shut down\");\n        return;\n    }\n    if (info.isAppenderThread && (temp.getRingBuffer().remainingCapacity() == 0)) {\n        config.loggerConfig.log(getName(), fqcn, marker, level, message, thrown);\n        return;\n    }\n    final boolean includeLocation = config.loggerConfig.isIncludeLocation();\n    info.translator.setValues(this, getName(), marker, fqcn, level, message, thrown, org.apache.logging.log4j.ThreadContext.getImmutableContext(), org.apache.logging.log4j.ThreadContext.getImmutableStack(), org.apache.logging.log4j.core.async.AsyncLogger.THREAD_NAME_STRATEGY.getThreadName(info), includeLocation ? org.apache.logging.log4j.core.async.AsyncLogger.location(fqcn) : null, org.apache.logging.log4j.core.async.AsyncLogger.clock.currentTimeMillis());\n    try {\n        org.apache.logging.log4j.core.async.AsyncLogger.disruptor.publishEvent(info.translator);\n    } catch (java.lang.NullPointerException npe) {\n        org.apache.logging.log4j.core.async.AsyncLogger.LOGGER.fatal(\"Ignoring log event after log4j was shut down.\");\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "LocalVariable"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "true",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Method",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "if (temp == null) {\n    org.apache.logging.log4j.core.async.AsyncLogger.LOGGER.fatal(\"Ignoring log event after log4j was shut down\");\n    return;\n}",
            "src_parent": "{\n    org.apache.logging.log4j.core.async.AsyncLogger.Info info = org.apache.logging.log4j.core.async.AsyncLogger.threadlocalInfo.get();\n    if (info == null) {\n        info = new org.apache.logging.log4j.core.async.AsyncLogger.Info(new org.apache.logging.log4j.core.async.RingBufferLogEventTranslator(), java.lang.Thread.currentThread().getName(), false);\n        org.apache.logging.log4j.core.async.AsyncLogger.threadlocalInfo.set(info);\n    }\n    com.lmax.disruptor.dsl.Disruptor<org.apache.logging.log4j.core.async.RingBufferLogEvent> temp = org.apache.logging.log4j.core.async.AsyncLogger.disruptor;\n    if (temp == null) {\n        org.apache.logging.log4j.core.async.AsyncLogger.LOGGER.fatal(\"Ignoring log event after log4j was shut down\");\n        return;\n    }\n    if (info.isAppenderThread && (temp.getRingBuffer().remainingCapacity() == 0)) {\n        config.loggerConfig.log(getName(), fqcn, marker, level, message, thrown);\n        return;\n    }\n    final boolean includeLocation = config.loggerConfig.isIncludeLocation();\n    info.translator.setValues(this, getName(), marker, fqcn, level, message, thrown, org.apache.logging.log4j.ThreadContext.getImmutableContext(), org.apache.logging.log4j.ThreadContext.getImmutableStack(), org.apache.logging.log4j.core.async.AsyncLogger.THREAD_NAME_STRATEGY.getThreadName(info), includeLocation ? org.apache.logging.log4j.core.async.AsyncLogger.location(fqcn) : null, org.apache.logging.log4j.core.async.AsyncLogger.clock.currentTimeMillis());\n    try {\n        org.apache.logging.log4j.core.async.AsyncLogger.disruptor.publishEvent(info.translator);\n    } catch (java.lang.NullPointerException npe) {\n        org.apache.logging.log4j.core.async.AsyncLogger.LOGGER.fatal(\"Ignoring log event after log4j was shut down.\");\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "If"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "true",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Method",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "try {\n    org.apache.logging.log4j.core.async.AsyncLogger.disruptor.publishEvent(info.translator);\n} catch (java.lang.NullPointerException npe) {\n    org.apache.logging.log4j.core.async.AsyncLogger.LOGGER.fatal(\"Ignoring log event after log4j was shut down.\");\n}",
            "src_parent": "{\n    org.apache.logging.log4j.core.async.AsyncLogger.Info info = org.apache.logging.log4j.core.async.AsyncLogger.threadlocalInfo.get();\n    if (info == null) {\n        info = new org.apache.logging.log4j.core.async.AsyncLogger.Info(new org.apache.logging.log4j.core.async.RingBufferLogEventTranslator(), java.lang.Thread.currentThread().getName(), false);\n        org.apache.logging.log4j.core.async.AsyncLogger.threadlocalInfo.set(info);\n    }\n    com.lmax.disruptor.dsl.Disruptor<org.apache.logging.log4j.core.async.RingBufferLogEvent> temp = org.apache.logging.log4j.core.async.AsyncLogger.disruptor;\n    if (temp == null) {\n        org.apache.logging.log4j.core.async.AsyncLogger.LOGGER.fatal(\"Ignoring log event after log4j was shut down\");\n        return;\n    }\n    if (info.isAppenderThread && (temp.getRingBuffer().remainingCapacity() == 0)) {\n        config.loggerConfig.log(getName(), fqcn, marker, level, message, thrown);\n        return;\n    }\n    final boolean includeLocation = config.loggerConfig.isIncludeLocation();\n    info.translator.setValues(this, getName(), marker, fqcn, level, message, thrown, org.apache.logging.log4j.ThreadContext.getImmutableContext(), org.apache.logging.log4j.ThreadContext.getImmutableStack(), org.apache.logging.log4j.core.async.AsyncLogger.THREAD_NAME_STRATEGY.getThreadName(info), includeLocation ? org.apache.logging.log4j.core.async.AsyncLogger.location(fqcn) : null, org.apache.logging.log4j.core.async.AsyncLogger.clock.currentTimeMillis());\n    try {\n        org.apache.logging.log4j.core.async.AsyncLogger.disruptor.publishEvent(info.translator);\n    } catch (java.lang.NullPointerException npe) {\n        org.apache.logging.log4j.core.async.AsyncLogger.LOGGER.fatal(\"Ignoring log event after log4j was shut down.\");\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "Try"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "temp",
            "src_parent": "temp.getRingBuffer()",
            "src_parent_type": "Invocation",
            "src_type": "VariableRead"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "If",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Invocation",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "org.apache.logging.log4j.core.async.AsyncLogger.disruptor.publishEvent(info.translator)",
            "dst_parent": "{\n    org.apache.logging.log4j.core.async.AsyncLogger.disruptor.publishEvent(info.translator);\n}",
            "dst_parent_type": "Block",
            "dst_type": "Invocation",
            "operator": "MOV",
            "src": "org.apache.logging.log4j.core.async.AsyncLogger.disruptor.publishEvent(info.translator)",
            "src_parent": "{\n    org.apache.logging.log4j.core.async.AsyncLogger.Info info = org.apache.logging.log4j.core.async.AsyncLogger.threadlocalInfo.get();\n    if (info == null) {\n        info = new org.apache.logging.log4j.core.async.AsyncLogger.Info(new org.apache.logging.log4j.core.async.RingBufferLogEventTranslator(), java.lang.Thread.currentThread().getName(), false);\n        org.apache.logging.log4j.core.async.AsyncLogger.threadlocalInfo.set(info);\n    }\n    if (info.isAppenderThread && (org.apache.logging.log4j.core.async.AsyncLogger.disruptor.getRingBuffer().remainingCapacity() == 0)) {\n        config.loggerConfig.log(getName(), fqcn, marker, level, message, thrown);\n        return;\n    }\n    final boolean includeLocation = config.loggerConfig.isIncludeLocation();\n    info.translator.setValues(this, getName(), marker, fqcn, level, message, thrown, org.apache.logging.log4j.ThreadContext.getImmutableContext(), org.apache.logging.log4j.ThreadContext.getImmutableStack(), org.apache.logging.log4j.core.async.AsyncLogger.THREAD_NAME_STRATEGY.getThreadName(info), includeLocation ? org.apache.logging.log4j.core.async.AsyncLogger.location(fqcn) : null, org.apache.logging.log4j.core.async.AsyncLogger.clock.currentTimeMillis());\n    org.apache.logging.log4j.core.async.AsyncLogger.disruptor.publishEvent(info.translator);\n}",
            "src_parent_type": "Block",
            "src_type": "Invocation"
          }
        }
      ],
      "file_name": "AsyncLogger"
    }
  ],
  "id": "logging-log4j2_a5a1f1a2"
}