{
  "files": [
    {
      "features": [
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "true",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Method",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "if (in.readBoolean()) {\n    int numIterators = in.readInt();\n    iterators = new java.util.ArrayList<org.apache.accumulo.core.client.IteratorSetting>(numIterators);\n    for (int i = 0; i < numIterators; i++) {\n        iterators.add(new org.apache.accumulo.core.client.IteratorSetting(in));\n    }\n}",
            "src_parent": "{\n    range.readFields(in);\n    int numLocs = in.readInt();\n    locations = new java.lang.String[numLocs];\n    for (int i = 0; i < numLocs; ++i) {\n        locations[i] = in.readUTF();\n    }\n    if (in.readBoolean()) {\n        isolatedScan = in.readBoolean();\n    }\n    if (in.readBoolean()) {\n        offline = in.readBoolean();\n    }\n    if (in.readBoolean()) {\n        localIterators = in.readBoolean();\n    }\n    if (in.readBoolean()) {\n        mockInstance = in.readBoolean();\n    }\n    if (in.readBoolean()) {\n        int numColumns = in.readInt();\n        java.util.List<java.lang.String> columns = new java.util.ArrayList<java.lang.String>(numColumns);\n        for (int i = 0; i < numColumns; i++) {\n            columns.add(in.readUTF());\n        }\n        fetchedColumns = org.apache.accumulo.core.client.mapreduce.lib.util.InputConfigurator.deserializeFetchedColumns(columns);\n    }\n    if (in.readBoolean()) {\n        java.lang.String strAuths = in.readUTF();\n        auths = new org.apache.accumulo.core.security.Authorizations(strAuths.getBytes(java.nio.charset.Charset.forName(\"UTF-8\")));\n    }\n    if (in.readBoolean()) {\n        principal = in.readUTF();\n    }\n    if (in.readBoolean()) {\n        java.lang.String tokenClass = in.readUTF();\n        byte[] base64TokenBytes = in.readUTF().getBytes(java.nio.charset.Charset.forName(\"UTF-8\"));\n        byte[] tokenBytes = org.apache.commons.codec.binary.Base64.decodeBase64(base64TokenBytes);\n        try {\n            token = org.apache.accumulo.core.security.CredentialHelper.extractToken(tokenClass, tokenBytes);\n        } catch (org.apache.accumulo.core.client.AccumuloSecurityException e) {\n            throw new java.io.IOException(e);\n        }\n    }\n    if (in.readBoolean()) {\n        instanceName = in.readUTF();\n    }\n    if (in.readBoolean()) {\n        zooKeepers = in.readUTF();\n    }\n    if (in.readBoolean()) {\n        int numIterators = in.readInt();\n        iterators = new java.util.ArrayList<org.apache.accumulo.core.client.IteratorSetting>(numIterators);\n        for (int i = 0; i < numIterators; i++) {\n            iterators.add(new org.apache.accumulo.core.client.IteratorSetting(in));\n        }\n    }\n    if (in.readBoolean()) {\n        level = org.apache.log4j.Level.toLevel(in.readInt());\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "If"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "true",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Method",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "out.writeBoolean(null != iterators)",
            "src_parent": "{\n    range.write(out);\n    out.writeInt(locations.length);\n    for (int i = 0; i < locations.length; ++i) {\n        out.writeUTF(locations[i]);\n    }\n    out.writeBoolean(null != isolatedScan);\n    if (null != isolatedScan) {\n        out.writeBoolean(isolatedScan);\n    }\n    out.writeBoolean(null != offline);\n    if (null != offline) {\n        out.writeBoolean(offline);\n    }\n    out.writeBoolean(null != localIterators);\n    if (null != localIterators) {\n        out.writeBoolean(localIterators);\n    }\n    out.writeBoolean(null != mockInstance);\n    if (null != mockInstance) {\n        out.writeBoolean(mockInstance);\n    }\n    out.writeBoolean(null != fetchedColumns);\n    if (null != fetchedColumns) {\n        java.lang.String[] cols = org.apache.accumulo.core.client.mapreduce.lib.util.InputConfigurator.serializeColumns(fetchedColumns);\n        out.writeInt(cols.length);\n        for (java.lang.String col : cols) {\n            out.writeUTF(col);\n        }\n    }\n    out.writeBoolean(null != auths);\n    if (null != auths) {\n        out.writeUTF(auths.serialize());\n    }\n    out.writeBoolean(null != principal);\n    if (null != principal) {\n        out.writeUTF(principal);\n    }\n    out.writeBoolean(null != token);\n    if (null != token) {\n        out.writeUTF(token.getClass().getCanonicalName());\n        try {\n            out.writeUTF(org.apache.accumulo.core.security.CredentialHelper.tokenAsBase64(token));\n        } catch (org.apache.accumulo.core.client.AccumuloSecurityException e) {\n            throw new java.io.IOException(e);\n        }\n    }\n    out.writeBoolean(null != instanceName);\n    if (null != instanceName) {\n        out.writeUTF(instanceName);\n    }\n    out.writeBoolean(null != zooKeepers);\n    if (null != zooKeepers) {\n        out.writeUTF(zooKeepers);\n    }\n    out.writeBoolean(null != iterators);\n    if (null != iterators) {\n        out.writeInt(iterators.size());\n        for (org.apache.accumulo.core.client.IteratorSetting iterator : iterators) {\n            iterator.write(out);\n        }\n    }\n    out.writeBoolean(null != level);\n    if (null != level) {\n        out.writeInt(level.toInt());\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "Invocation"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "true",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Method",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "if (null != iterators) {\n    out.writeInt(iterators.size());\n    for (org.apache.accumulo.core.client.IteratorSetting iterator : iterators) {\n        iterator.write(out);\n    }\n}",
            "src_parent": "{\n    range.write(out);\n    out.writeInt(locations.length);\n    for (int i = 0; i < locations.length; ++i) {\n        out.writeUTF(locations[i]);\n    }\n    out.writeBoolean(null != isolatedScan);\n    if (null != isolatedScan) {\n        out.writeBoolean(isolatedScan);\n    }\n    out.writeBoolean(null != offline);\n    if (null != offline) {\n        out.writeBoolean(offline);\n    }\n    out.writeBoolean(null != localIterators);\n    if (null != localIterators) {\n        out.writeBoolean(localIterators);\n    }\n    out.writeBoolean(null != mockInstance);\n    if (null != mockInstance) {\n        out.writeBoolean(mockInstance);\n    }\n    out.writeBoolean(null != fetchedColumns);\n    if (null != fetchedColumns) {\n        java.lang.String[] cols = org.apache.accumulo.core.client.mapreduce.lib.util.InputConfigurator.serializeColumns(fetchedColumns);\n        out.writeInt(cols.length);\n        for (java.lang.String col : cols) {\n            out.writeUTF(col);\n        }\n    }\n    out.writeBoolean(null != auths);\n    if (null != auths) {\n        out.writeUTF(auths.serialize());\n    }\n    out.writeBoolean(null != principal);\n    if (null != principal) {\n        out.writeUTF(principal);\n    }\n    out.writeBoolean(null != token);\n    if (null != token) {\n        out.writeUTF(token.getClass().getCanonicalName());\n        try {\n            out.writeUTF(org.apache.accumulo.core.security.CredentialHelper.tokenAsBase64(token));\n        } catch (org.apache.accumulo.core.client.AccumuloSecurityException e) {\n            throw new java.io.IOException(e);\n        }\n    }\n    out.writeBoolean(null != instanceName);\n    if (null != instanceName) {\n        out.writeUTF(instanceName);\n    }\n    out.writeBoolean(null != zooKeepers);\n    if (null != zooKeepers) {\n        out.writeUTF(zooKeepers);\n    }\n    out.writeBoolean(null != iterators);\n    if (null != iterators) {\n        out.writeInt(iterators.size());\n        for (org.apache.accumulo.core.client.IteratorSetting iterator : iterators) {\n            iterator.write(out);\n        }\n    }\n    out.writeBoolean(null != level);\n    if (null != level) {\n        out.writeInt(level.toInt());\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "If"
          }
        }
      ],
      "file_name": "RangeInputSplit"
    }
  ],
  "id": "accumulo_2fd7633f"
}