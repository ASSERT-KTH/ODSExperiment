{
  "files": [
    {
      "features": [
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "While",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "if (current == CANCELING) {\n    cancelingComplete();\n    return false;\n}",
            "src_parent": "{\n    org.apache.flink.runtime.execution.ExecutionState current = this.state;\n    if (current == FAILED) {\n        return false;\n    }\n    if ((current == CANCELED) || (current == FINISHED)) {\n        if (org.apache.flink.runtime.executiongraph.Execution.LOG.isDebugEnabled()) {\n            org.apache.flink.runtime.executiongraph.Execution.LOG.debug(\"Ignoring transition of vertex {} to {} while being {}.\", getVertexWithAttempt(), org.apache.flink.runtime.executiongraph.FAILED, current);\n        }\n        return false;\n    }\n    if (current == CANCELING) {\n        cancelingComplete();\n        return false;\n    }\n    if (transitionState(current, org.apache.flink.runtime.executiongraph.FAILED, t)) {\n        this.failureCause = t;\n        try {\n            if (assignedResource != null) {\n                assignedResource.releaseSlot();\n            }\n            vertex.getExecutionGraph().deregisterExecution(this);\n        } finally {\n            vertex.executionFailed(t);\n        }\n        if ((!isCallback) && ((current == RUNNING) || (current == DEPLOYING))) {\n            if (org.apache.flink.runtime.executiongraph.Execution.LOG.isDebugEnabled()) {\n                org.apache.flink.runtime.executiongraph.Execution.LOG.debug(\"Sending out cancel request, to remove task execution from TaskManager.\");\n            }\n            try {\n                if (assignedResource != null) {\n                    sendCancelRpcCall();\n                }\n            } catch (java.lang.Throwable tt) {\n                org.apache.flink.runtime.executiongraph.Execution.LOG.error(\"Error triggering cancel call while marking task as failed.\", tt);\n            }\n        }\n        return true;\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "If"
          }
        }
      ],
      "file_name": "Execution"
    }
  ],
  "id": "flink_734ba01d"
}