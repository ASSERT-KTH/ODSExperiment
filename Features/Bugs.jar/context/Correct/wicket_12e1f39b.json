{
  "files": [
    {
      "features": [
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Method",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "private boolean isChecksumCorrect(java.lang.String creditCardNumber) {\n    java.lang.String input = creditCardNumber;\n    java.lang.String numberToCheck = input.replaceAll(\"[ -]\", \"\");\n    int nulOffset = '0';\n    int sum = 0;\n    for (int i = 1; i <= numberToCheck.length(); i++) {\n        int currentDigit = numberToCheck.charAt(numberToCheck.length() - i) - nulOffset;\n        if ((i % 2) == 0) {\n            currentDigit *= 2;\n            currentDigit = (currentDigit > 9) ? currentDigit - 9 : currentDigit;\n            sum += currentDigit;\n        } else {\n            sum += currentDigit;\n        }\n    }\n    return (sum % 10) == 0;\n}",
            "dst_parent": "public class CreditCardValidator extends org.apache.wicket.validation.validator.AbstractValidator<java.lang.String> {\n    private static final long serialVersionUID = 1L;\n\n    private java.lang.String creditCardNumber = null;\n\n    private int cardId = -1;\n\n    public static final int INVALID = -1;\n\n    public static final int AMERICAN_EXPRESS = 0;\n\n    public static final int CHINA_UNIONPAY = 1;\n\n    public static final int DINERS_CLUB_CARTE_BLANCHE = 2;\n\n    public static final int DINERS_CLUB_INTERNATIONAL = 3;\n\n    public static final int DINERS_CLUB_US_AND_CANADA = 4;\n\n    public static final int DISCOVER_CARD = 5;\n\n    public static final int JCB = 6;\n\n    public static final int LASER = 7;\n\n    public static final int MAESTRO = 8;\n\n    public static final int MASTERCARD = 9;\n\n    public static final int SOLO = 10;\n\n    public static final int SWITCH = 11;\n\n    public static final int VISA = 12;\n\n    public static final int VISA_ELECTRON = 13;\n\n    private static final java.lang.String[] creditCardNames = new java.lang.String[]{ \"American Express\", \"China UnionPay\", \"Diners Club Carte Blanche\", \"Diners Club International\", \"Diners Club US & Canada\", \"Discover Card\", \"JCB\", \"Laser\", \"Maestro\", \"MasterCard\", \"Solo\", \"Switch\", \"Visa\", \"Visa Electron\" };\n\n    @java.lang.Override\n    protected void onValidate(org.apache.wicket.validation.IValidatable<java.lang.String> validatable) {\n        creditCardNumber = validatable.getValue();\n        if (!isLengthAndPrefixCorrect(creditCardNumber)) {\n            error(validatable);\n        }\n    }\n\n    private boolean isLengthAndPrefixCorrect(java.lang.String creditCardNumber) {\n        if (creditCardNumber != null) {\n            creditCardNumber = creditCardNumber.replaceAll(\"[ -]\", \"\");\n        }\n        if (((creditCardNumber != null) && (creditCardNumber.length() >= 12)) && (creditCardNumber.length() <= 19)) {\n            if (isAmericanExpress(creditCardNumber)) {\n                return true;\n            } else if (isChinaUnionPay(creditCardNumber)) {\n                return true;\n            } else if (isDinersClubCarteBlanche(creditCardNumber)) {\n                return true;\n            } else if (isDinersClubInternational(creditCardNumber)) {\n                return true;\n            } else if (isDinersClubUsAndCanada(creditCardNumber)) {\n                return true;\n            } else if (isDiscoverCard(creditCardNumber)) {\n                return true;\n            } else if (isJCB(creditCardNumber)) {\n                return true;\n            } else if (isLaser(creditCardNumber)) {\n                return true;\n            } else if (isMaestro(creditCardNumber)) {\n                return true;\n            } else if (isMastercard(creditCardNumber)) {\n                return true;\n            } else if (isSolo(creditCardNumber)) {\n                return true;\n            } else if (isSwitch(creditCardNumber)) {\n                return true;\n            } else if (isVisa(creditCardNumber)) {\n                return true;\n            } else if (isVisaElectron(creditCardNumber)) {\n                return true;\n            } else if (isUnknown(creditCardNumber)) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    protected boolean isUnknown(java.lang.String creditCardNumber) {\n        return false;\n    }\n\n    private boolean isAmericanExpress(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 15) && (creditCardNumber.startsWith(\"34\") || creditCardNumber.startsWith(\"37\"))) {\n            if (isChecksumCorrect(creditCardNumber)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.AMERICAN_EXPRESS;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isChinaUnionPay(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() >= 16) && (creditCardNumber.length() <= 19)) && creditCardNumber.startsWith(\"622\")) {\n            int firstDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 5));\n            if ((firstDigits >= 622126) && (firstDigits <= 622925)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.CHINA_UNIONPAY;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isDinersClubCarteBlanche(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 14) && creditCardNumber.startsWith(\"30\")) {\n            int firstDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 3));\n            if (((firstDigits >= 300) && (firstDigits <= 305)) && isChecksumCorrect(creditCardNumber)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.DINERS_CLUB_CARTE_BLANCHE;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isDinersClubInternational(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() == 14) && creditCardNumber.startsWith(\"36\")) && isChecksumCorrect(creditCardNumber)) {\n            cardId = org.apache.wicket.validation.validator.CreditCardValidator.DINERS_CLUB_INTERNATIONAL;\n            returnValue = true;\n        }\n        return returnValue;\n    }\n\n    private boolean isDinersClubUsAndCanada(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() == 16) && (creditCardNumber.startsWith(\"54\") || creditCardNumber.startsWith(\"55\"))) && isChecksumCorrect(creditCardNumber)) {\n            cardId = org.apache.wicket.validation.validator.CreditCardValidator.DINERS_CLUB_US_AND_CANADA;\n            returnValue = true;\n        }\n        return returnValue;\n    }\n\n    private boolean isDiscoverCard(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() == 16) && creditCardNumber.startsWith(\"6\")) && isChecksumCorrect(creditCardNumber)) {\n            int firstThreeDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 3));\n            int firstSixDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 6));\n            if (((creditCardNumber.startsWith(\"6011\") || creditCardNumber.startsWith(\"65\")) || ((firstThreeDigits >= 644) && (firstThreeDigits <= 649))) || ((firstSixDigits >= 622126) && (firstSixDigits <= 622925))) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.DISCOVER_CARD;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isJCB(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 16) && isChecksumCorrect(creditCardNumber)) {\n            int firstFourDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 4));\n            if ((firstFourDigits >= 3528) && (firstFourDigits <= 3589)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.JCB;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isLaser(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() >= 16) && (creditCardNumber.length() <= 19)) && isChecksumCorrect(creditCardNumber)) {\n            if (((creditCardNumber.startsWith(\"6304\") || creditCardNumber.startsWith(\"6706\")) || creditCardNumber.startsWith(\"6771\")) || creditCardNumber.startsWith(\"6709\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.LASER;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isMaestro(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() >= 12) && (creditCardNumber.length() <= 19)) && isChecksumCorrect(creditCardNumber)) {\n            if ((((((creditCardNumber.startsWith(\"5018\") || creditCardNumber.startsWith(\"5020\")) || creditCardNumber.startsWith(\"5038\")) || creditCardNumber.startsWith(\"6304\")) || creditCardNumber.startsWith(\"6759\")) || creditCardNumber.startsWith(\"6761\")) || creditCardNumber.startsWith(\"6763\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.MAESTRO;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isSolo(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((((creditCardNumber.length() == 16) || (creditCardNumber.length() == 18)) || (creditCardNumber.length() == 19)) && isChecksumCorrect(creditCardNumber)) {\n            if (creditCardNumber.startsWith(\"6334\") || creditCardNumber.startsWith(\"6767\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.SOLO;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isSwitch(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((((creditCardNumber.length() == 16) || (creditCardNumber.length() == 18)) || (creditCardNumber.length() == 19)) && isChecksumCorrect(creditCardNumber)) {\n            if (((((((creditCardNumber.startsWith(\"4903\") || creditCardNumber.startsWith(\"4905\")) || creditCardNumber.startsWith(\"4911\")) || creditCardNumber.startsWith(\"4936\")) || creditCardNumber.startsWith(\"564182\")) || creditCardNumber.startsWith(\"633110\")) || creditCardNumber.startsWith(\"6333\")) || creditCardNumber.startsWith(\"6759\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.SWITCH;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isVisa(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 13) || (creditCardNumber.length() == 16)) {\n            if (creditCardNumber.startsWith(\"4\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.SWITCH;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isVisaElectron(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 16) && ((((creditCardNumber.startsWith(\"417500\") || creditCardNumber.startsWith(\"4917\")) || creditCardNumber.startsWith(\"4913\")) || creditCardNumber.startsWith(\"4508\")) || creditCardNumber.startsWith(\"4844\"))) {\n            cardId = org.apache.wicket.validation.validator.CreditCardValidator.VISA_ELECTRON;\n            returnValue = true;\n        }\n        return returnValue;\n    }\n\n    private boolean isMastercard(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 16) && isChecksumCorrect(creditCardNumber)) {\n            int firstTwoDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 2));\n            if ((firstTwoDigits >= 51) && (firstTwoDigits <= 55)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.MASTERCARD;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private java.lang.String getCardName() {\n        return (cardId > (-1)) && (cardId < org.apache.wicket.validation.validator.CreditCardValidator.creditCardNames.length) ? org.apache.wicket.validation.validator.CreditCardValidator.creditCardNames[cardId] : \"\";\n    }\n\n    private boolean isChecksumCorrect(java.lang.String creditCardNumber) {\n        java.lang.String input = creditCardNumber;\n        java.lang.String numberToCheck = input.replaceAll(\"[ -]\", \"\");\n        int nulOffset = '0';\n        int sum = 0;\n        for (int i = 1; i <= numberToCheck.length(); i++) {\n            int currentDigit = numberToCheck.charAt(numberToCheck.length() - i) - nulOffset;\n            if ((i % 2) == 0) {\n                currentDigit *= 2;\n                currentDigit = (currentDigit > 9) ? currentDigit - 9 : currentDigit;\n                sum += currentDigit;\n            } else {\n                sum += currentDigit;\n            }\n        }\n        return (sum % 10) == 0;\n    }\n}",
            "dst_parent_type": "Class",
            "dst_type": "Method",
            "operator": "UPD",
            "src": "@java.lang.Override\nprotected void onValidate(org.apache.wicket.validation.IValidatable<java.lang.String> validatable) {\n    java.lang.String input = validatable.getValue();\n    java.lang.String numberToCheck = input.replaceAll(\"[ -]\", \"\");\n    int nulOffset = '0';\n    int sum = 0;\n    for (int i = 1; i <= numberToCheck.length(); i++) {\n        int currentDigit = numberToCheck.charAt(numberToCheck.length() - i) - nulOffset;\n        if ((i % 2) == 0) {\n            currentDigit *= 2;\n            currentDigit = (currentDigit > 9) ? currentDigit - 9 : currentDigit;\n            sum += currentDigit;\n        } else {\n            sum += currentDigit;\n        }\n    }\n    if (!((sum % 10) == 0)) {\n        error(validatable);\n    }\n}",
            "src_parent": "public class CreditCardValidator extends org.apache.wicket.validation.validator.AbstractValidator<java.lang.String> {\n    private static final long serialVersionUID = 1L;\n\n    @java.lang.Override\n    protected void onValidate(org.apache.wicket.validation.IValidatable<java.lang.String> validatable) {\n        java.lang.String input = validatable.getValue();\n        java.lang.String numberToCheck = input.replaceAll(\"[ -]\", \"\");\n        int nulOffset = '0';\n        int sum = 0;\n        for (int i = 1; i <= numberToCheck.length(); i++) {\n            int currentDigit = numberToCheck.charAt(numberToCheck.length() - i) - nulOffset;\n            if ((i % 2) == 0) {\n                currentDigit *= 2;\n                currentDigit = (currentDigit > 9) ? currentDigit - 9 : currentDigit;\n                sum += currentDigit;\n            } else {\n                sum += currentDigit;\n            }\n        }\n        if (!((sum % 10) == 0)) {\n            error(validatable);\n        }\n    }\n}",
            "src_parent_type": "Class",
            "src_type": "Method"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "TypeReference",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "boolean",
            "dst_parent": "private boolean isChecksumCorrect(java.lang.String creditCardNumber) {\n    java.lang.String input = creditCardNumber;\n    java.lang.String numberToCheck = input.replaceAll(\"[ -]\", \"\");\n    int nulOffset = '0';\n    int sum = 0;\n    for (int i = 1; i <= numberToCheck.length(); i++) {\n        int currentDigit = numberToCheck.charAt(numberToCheck.length() - i) - nulOffset;\n        if ((i % 2) == 0) {\n            currentDigit *= 2;\n            currentDigit = (currentDigit > 9) ? currentDigit - 9 : currentDigit;\n            sum += currentDigit;\n        } else {\n            sum += currentDigit;\n        }\n    }\n    return (sum % 10) == 0;\n}",
            "dst_parent_type": "Method",
            "dst_type": "TypeReference",
            "operator": "UPD",
            "src": "void",
            "src_parent": "@java.lang.Override\nprotected void onValidate(org.apache.wicket.validation.IValidatable<java.lang.String> validatable) {\n    java.lang.String input = validatable.getValue();\n    java.lang.String numberToCheck = input.replaceAll(\"[ -]\", \"\");\n    int nulOffset = '0';\n    int sum = 0;\n    for (int i = 1; i <= numberToCheck.length(); i++) {\n        int currentDigit = numberToCheck.charAt(numberToCheck.length() - i) - nulOffset;\n        if ((i % 2) == 0) {\n            currentDigit *= 2;\n            currentDigit = (currentDigit > 9) ? currentDigit - 9 : currentDigit;\n            sum += currentDigit;\n        } else {\n            sum += currentDigit;\n        }\n    }\n    if (!((sum % 10) == 0)) {\n        error(validatable);\n    }\n}",
            "src_parent_type": "Method",
            "src_type": "TypeReference"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Package",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Class",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "private java.lang.String creditCardNumber = null;",
            "src_parent": "public class CreditCardValidator extends org.apache.wicket.validation.validator.AbstractValidator<java.lang.String> {\n    private static final long serialVersionUID = 1L;\n\n    private java.lang.String creditCardNumber = null;\n\n    private int cardId = -1;\n\n    public static final int INVALID = -1;\n\n    public static final int AMERICAN_EXPRESS = 0;\n\n    public static final int CHINA_UNIONPAY = 1;\n\n    public static final int DINERS_CLUB_CARTE_BLANCHE = 2;\n\n    public static final int DINERS_CLUB_INTERNATIONAL = 3;\n\n    public static final int DINERS_CLUB_US_AND_CANADA = 4;\n\n    public static final int DISCOVER_CARD = 5;\n\n    public static final int JCB = 6;\n\n    public static final int LASER = 7;\n\n    public static final int MAESTRO = 8;\n\n    public static final int MASTERCARD = 9;\n\n    public static final int SOLO = 10;\n\n    public static final int SWITCH = 11;\n\n    public static final int VISA = 12;\n\n    public static final int VISA_ELECTRON = 13;\n\n    private static final java.lang.String[] creditCardNames = new java.lang.String[]{ \"American Express\", \"China UnionPay\", \"Diners Club Carte Blanche\", \"Diners Club International\", \"Diners Club US & Canada\", \"Discover Card\", \"JCB\", \"Laser\", \"Maestro\", \"MasterCard\", \"Solo\", \"Switch\", \"Visa\", \"Visa Electron\" };\n\n    @java.lang.Override\n    protected void onValidate(org.apache.wicket.validation.IValidatable<java.lang.String> validatable) {\n        creditCardNumber = validatable.getValue();\n        if (!isLengthAndPrefixCorrect(creditCardNumber)) {\n            error(validatable);\n        }\n    }\n\n    private boolean isLengthAndPrefixCorrect(java.lang.String creditCardNumber) {\n        if (creditCardNumber != null) {\n            creditCardNumber = creditCardNumber.replaceAll(\"[ -]\", \"\");\n        }\n        if (((creditCardNumber != null) && (creditCardNumber.length() >= 12)) && (creditCardNumber.length() <= 19)) {\n            if (isAmericanExpress(creditCardNumber)) {\n                return true;\n            } else if (isChinaUnionPay(creditCardNumber)) {\n                return true;\n            } else if (isDinersClubCarteBlanche(creditCardNumber)) {\n                return true;\n            } else if (isDinersClubInternational(creditCardNumber)) {\n                return true;\n            } else if (isDinersClubUsAndCanada(creditCardNumber)) {\n                return true;\n            } else if (isDiscoverCard(creditCardNumber)) {\n                return true;\n            } else if (isJCB(creditCardNumber)) {\n                return true;\n            } else if (isLaser(creditCardNumber)) {\n                return true;\n            } else if (isMaestro(creditCardNumber)) {\n                return true;\n            } else if (isMastercard(creditCardNumber)) {\n                return true;\n            } else if (isSolo(creditCardNumber)) {\n                return true;\n            } else if (isSwitch(creditCardNumber)) {\n                return true;\n            } else if (isVisa(creditCardNumber)) {\n                return true;\n            } else if (isVisaElectron(creditCardNumber)) {\n                return true;\n            } else if (isUnknown(creditCardNumber)) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    protected boolean isUnknown(java.lang.String creditCardNumber) {\n        return false;\n    }\n\n    private boolean isAmericanExpress(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 15) && (creditCardNumber.startsWith(\"34\") || creditCardNumber.startsWith(\"37\"))) {\n            if (isChecksumCorrect(creditCardNumber)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.AMERICAN_EXPRESS;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isChinaUnionPay(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() >= 16) && (creditCardNumber.length() <= 19)) && creditCardNumber.startsWith(\"622\")) {\n            int firstDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 5));\n            if ((firstDigits >= 622126) && (firstDigits <= 622925)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.CHINA_UNIONPAY;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isDinersClubCarteBlanche(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 14) && creditCardNumber.startsWith(\"30\")) {\n            int firstDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 3));\n            if (((firstDigits >= 300) && (firstDigits <= 305)) && isChecksumCorrect(creditCardNumber)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.DINERS_CLUB_CARTE_BLANCHE;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isDinersClubInternational(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() == 14) && creditCardNumber.startsWith(\"36\")) && isChecksumCorrect(creditCardNumber)) {\n            cardId = org.apache.wicket.validation.validator.CreditCardValidator.DINERS_CLUB_INTERNATIONAL;\n            returnValue = true;\n        }\n        return returnValue;\n    }\n\n    private boolean isDinersClubUsAndCanada(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() == 16) && (creditCardNumber.startsWith(\"54\") || creditCardNumber.startsWith(\"55\"))) && isChecksumCorrect(creditCardNumber)) {\n            cardId = org.apache.wicket.validation.validator.CreditCardValidator.DINERS_CLUB_US_AND_CANADA;\n            returnValue = true;\n        }\n        return returnValue;\n    }\n\n    private boolean isDiscoverCard(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() == 16) && creditCardNumber.startsWith(\"6\")) && isChecksumCorrect(creditCardNumber)) {\n            int firstThreeDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 3));\n            int firstSixDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 6));\n            if (((creditCardNumber.startsWith(\"6011\") || creditCardNumber.startsWith(\"65\")) || ((firstThreeDigits >= 644) && (firstThreeDigits <= 649))) || ((firstSixDigits >= 622126) && (firstSixDigits <= 622925))) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.DISCOVER_CARD;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isJCB(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 16) && isChecksumCorrect(creditCardNumber)) {\n            int firstFourDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 4));\n            if ((firstFourDigits >= 3528) && (firstFourDigits <= 3589)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.JCB;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isLaser(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() >= 16) && (creditCardNumber.length() <= 19)) && isChecksumCorrect(creditCardNumber)) {\n            if (((creditCardNumber.startsWith(\"6304\") || creditCardNumber.startsWith(\"6706\")) || creditCardNumber.startsWith(\"6771\")) || creditCardNumber.startsWith(\"6709\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.LASER;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isMaestro(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() >= 12) && (creditCardNumber.length() <= 19)) && isChecksumCorrect(creditCardNumber)) {\n            if ((((((creditCardNumber.startsWith(\"5018\") || creditCardNumber.startsWith(\"5020\")) || creditCardNumber.startsWith(\"5038\")) || creditCardNumber.startsWith(\"6304\")) || creditCardNumber.startsWith(\"6759\")) || creditCardNumber.startsWith(\"6761\")) || creditCardNumber.startsWith(\"6763\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.MAESTRO;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isSolo(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((((creditCardNumber.length() == 16) || (creditCardNumber.length() == 18)) || (creditCardNumber.length() == 19)) && isChecksumCorrect(creditCardNumber)) {\n            if (creditCardNumber.startsWith(\"6334\") || creditCardNumber.startsWith(\"6767\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.SOLO;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isSwitch(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((((creditCardNumber.length() == 16) || (creditCardNumber.length() == 18)) || (creditCardNumber.length() == 19)) && isChecksumCorrect(creditCardNumber)) {\n            if (((((((creditCardNumber.startsWith(\"4903\") || creditCardNumber.startsWith(\"4905\")) || creditCardNumber.startsWith(\"4911\")) || creditCardNumber.startsWith(\"4936\")) || creditCardNumber.startsWith(\"564182\")) || creditCardNumber.startsWith(\"633110\")) || creditCardNumber.startsWith(\"6333\")) || creditCardNumber.startsWith(\"6759\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.SWITCH;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isVisa(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 13) || (creditCardNumber.length() == 16)) {\n            if (creditCardNumber.startsWith(\"4\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.SWITCH;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isVisaElectron(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 16) && ((((creditCardNumber.startsWith(\"417500\") || creditCardNumber.startsWith(\"4917\")) || creditCardNumber.startsWith(\"4913\")) || creditCardNumber.startsWith(\"4508\")) || creditCardNumber.startsWith(\"4844\"))) {\n            cardId = org.apache.wicket.validation.validator.CreditCardValidator.VISA_ELECTRON;\n            returnValue = true;\n        }\n        return returnValue;\n    }\n\n    private boolean isMastercard(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 16) && isChecksumCorrect(creditCardNumber)) {\n            int firstTwoDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 2));\n            if ((firstTwoDigits >= 51) && (firstTwoDigits <= 55)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.MASTERCARD;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private java.lang.String getCardName() {\n        return (cardId > (-1)) && (cardId < org.apache.wicket.validation.validator.CreditCardValidator.creditCardNames.length) ? org.apache.wicket.validation.validator.CreditCardValidator.creditCardNames[cardId] : \"\";\n    }\n\n    private boolean isChecksumCorrect(java.lang.String creditCardNumber) {\n        java.lang.String input = creditCardNumber;\n        java.lang.String numberToCheck = input.replaceAll(\"[ -]\", \"\");\n        int nulOffset = '0';\n        int sum = 0;\n        for (int i = 1; i <= numberToCheck.length(); i++) {\n            int currentDigit = numberToCheck.charAt(numberToCheck.length() - i) - nulOffset;\n            if ((i % 2) == 0) {\n                currentDigit *= 2;\n                currentDigit = (currentDigit > 9) ? currentDigit - 9 : currentDigit;\n                sum += currentDigit;\n            } else {\n                sum += currentDigit;\n            }\n        }\n        return (sum % 10) == 0;\n    }\n}",
            "src_parent_type": "Class",
            "src_type": "Field"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Package",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Class",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "private int cardId = -1;",
            "src_parent": "public class CreditCardValidator extends org.apache.wicket.validation.validator.AbstractValidator<java.lang.String> {\n    private static final long serialVersionUID = 1L;\n\n    private java.lang.String creditCardNumber = null;\n\n    private int cardId = -1;\n\n    public static final int INVALID = -1;\n\n    public static final int AMERICAN_EXPRESS = 0;\n\n    public static final int CHINA_UNIONPAY = 1;\n\n    public static final int DINERS_CLUB_CARTE_BLANCHE = 2;\n\n    public static final int DINERS_CLUB_INTERNATIONAL = 3;\n\n    public static final int DINERS_CLUB_US_AND_CANADA = 4;\n\n    public static final int DISCOVER_CARD = 5;\n\n    public static final int JCB = 6;\n\n    public static final int LASER = 7;\n\n    public static final int MAESTRO = 8;\n\n    public static final int MASTERCARD = 9;\n\n    public static final int SOLO = 10;\n\n    public static final int SWITCH = 11;\n\n    public static final int VISA = 12;\n\n    public static final int VISA_ELECTRON = 13;\n\n    private static final java.lang.String[] creditCardNames = new java.lang.String[]{ \"American Express\", \"China UnionPay\", \"Diners Club Carte Blanche\", \"Diners Club International\", \"Diners Club US & Canada\", \"Discover Card\", \"JCB\", \"Laser\", \"Maestro\", \"MasterCard\", \"Solo\", \"Switch\", \"Visa\", \"Visa Electron\" };\n\n    @java.lang.Override\n    protected void onValidate(org.apache.wicket.validation.IValidatable<java.lang.String> validatable) {\n        creditCardNumber = validatable.getValue();\n        if (!isLengthAndPrefixCorrect(creditCardNumber)) {\n            error(validatable);\n        }\n    }\n\n    private boolean isLengthAndPrefixCorrect(java.lang.String creditCardNumber) {\n        if (creditCardNumber != null) {\n            creditCardNumber = creditCardNumber.replaceAll(\"[ -]\", \"\");\n        }\n        if (((creditCardNumber != null) && (creditCardNumber.length() >= 12)) && (creditCardNumber.length() <= 19)) {\n            if (isAmericanExpress(creditCardNumber)) {\n                return true;\n            } else if (isChinaUnionPay(creditCardNumber)) {\n                return true;\n            } else if (isDinersClubCarteBlanche(creditCardNumber)) {\n                return true;\n            } else if (isDinersClubInternational(creditCardNumber)) {\n                return true;\n            } else if (isDinersClubUsAndCanada(creditCardNumber)) {\n                return true;\n            } else if (isDiscoverCard(creditCardNumber)) {\n                return true;\n            } else if (isJCB(creditCardNumber)) {\n                return true;\n            } else if (isLaser(creditCardNumber)) {\n                return true;\n            } else if (isMaestro(creditCardNumber)) {\n                return true;\n            } else if (isMastercard(creditCardNumber)) {\n                return true;\n            } else if (isSolo(creditCardNumber)) {\n                return true;\n            } else if (isSwitch(creditCardNumber)) {\n                return true;\n            } else if (isVisa(creditCardNumber)) {\n                return true;\n            } else if (isVisaElectron(creditCardNumber)) {\n                return true;\n            } else if (isUnknown(creditCardNumber)) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    protected boolean isUnknown(java.lang.String creditCardNumber) {\n        return false;\n    }\n\n    private boolean isAmericanExpress(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 15) && (creditCardNumber.startsWith(\"34\") || creditCardNumber.startsWith(\"37\"))) {\n            if (isChecksumCorrect(creditCardNumber)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.AMERICAN_EXPRESS;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isChinaUnionPay(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() >= 16) && (creditCardNumber.length() <= 19)) && creditCardNumber.startsWith(\"622\")) {\n            int firstDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 5));\n            if ((firstDigits >= 622126) && (firstDigits <= 622925)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.CHINA_UNIONPAY;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isDinersClubCarteBlanche(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 14) && creditCardNumber.startsWith(\"30\")) {\n            int firstDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 3));\n            if (((firstDigits >= 300) && (firstDigits <= 305)) && isChecksumCorrect(creditCardNumber)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.DINERS_CLUB_CARTE_BLANCHE;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isDinersClubInternational(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() == 14) && creditCardNumber.startsWith(\"36\")) && isChecksumCorrect(creditCardNumber)) {\n            cardId = org.apache.wicket.validation.validator.CreditCardValidator.DINERS_CLUB_INTERNATIONAL;\n            returnValue = true;\n        }\n        return returnValue;\n    }\n\n    private boolean isDinersClubUsAndCanada(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() == 16) && (creditCardNumber.startsWith(\"54\") || creditCardNumber.startsWith(\"55\"))) && isChecksumCorrect(creditCardNumber)) {\n            cardId = org.apache.wicket.validation.validator.CreditCardValidator.DINERS_CLUB_US_AND_CANADA;\n            returnValue = true;\n        }\n        return returnValue;\n    }\n\n    private boolean isDiscoverCard(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() == 16) && creditCardNumber.startsWith(\"6\")) && isChecksumCorrect(creditCardNumber)) {\n            int firstThreeDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 3));\n            int firstSixDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 6));\n            if (((creditCardNumber.startsWith(\"6011\") || creditCardNumber.startsWith(\"65\")) || ((firstThreeDigits >= 644) && (firstThreeDigits <= 649))) || ((firstSixDigits >= 622126) && (firstSixDigits <= 622925))) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.DISCOVER_CARD;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isJCB(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 16) && isChecksumCorrect(creditCardNumber)) {\n            int firstFourDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 4));\n            if ((firstFourDigits >= 3528) && (firstFourDigits <= 3589)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.JCB;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isLaser(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() >= 16) && (creditCardNumber.length() <= 19)) && isChecksumCorrect(creditCardNumber)) {\n            if (((creditCardNumber.startsWith(\"6304\") || creditCardNumber.startsWith(\"6706\")) || creditCardNumber.startsWith(\"6771\")) || creditCardNumber.startsWith(\"6709\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.LASER;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isMaestro(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() >= 12) && (creditCardNumber.length() <= 19)) && isChecksumCorrect(creditCardNumber)) {\n            if ((((((creditCardNumber.startsWith(\"5018\") || creditCardNumber.startsWith(\"5020\")) || creditCardNumber.startsWith(\"5038\")) || creditCardNumber.startsWith(\"6304\")) || creditCardNumber.startsWith(\"6759\")) || creditCardNumber.startsWith(\"6761\")) || creditCardNumber.startsWith(\"6763\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.MAESTRO;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isSolo(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((((creditCardNumber.length() == 16) || (creditCardNumber.length() == 18)) || (creditCardNumber.length() == 19)) && isChecksumCorrect(creditCardNumber)) {\n            if (creditCardNumber.startsWith(\"6334\") || creditCardNumber.startsWith(\"6767\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.SOLO;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isSwitch(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((((creditCardNumber.length() == 16) || (creditCardNumber.length() == 18)) || (creditCardNumber.length() == 19)) && isChecksumCorrect(creditCardNumber)) {\n            if (((((((creditCardNumber.startsWith(\"4903\") || creditCardNumber.startsWith(\"4905\")) || creditCardNumber.startsWith(\"4911\")) || creditCardNumber.startsWith(\"4936\")) || creditCardNumber.startsWith(\"564182\")) || creditCardNumber.startsWith(\"633110\")) || creditCardNumber.startsWith(\"6333\")) || creditCardNumber.startsWith(\"6759\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.SWITCH;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isVisa(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 13) || (creditCardNumber.length() == 16)) {\n            if (creditCardNumber.startsWith(\"4\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.SWITCH;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isVisaElectron(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 16) && ((((creditCardNumber.startsWith(\"417500\") || creditCardNumber.startsWith(\"4917\")) || creditCardNumber.startsWith(\"4913\")) || creditCardNumber.startsWith(\"4508\")) || creditCardNumber.startsWith(\"4844\"))) {\n            cardId = org.apache.wicket.validation.validator.CreditCardValidator.VISA_ELECTRON;\n            returnValue = true;\n        }\n        return returnValue;\n    }\n\n    private boolean isMastercard(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 16) && isChecksumCorrect(creditCardNumber)) {\n            int firstTwoDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 2));\n            if ((firstTwoDigits >= 51) && (firstTwoDigits <= 55)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.MASTERCARD;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private java.lang.String getCardName() {\n        return (cardId > (-1)) && (cardId < org.apache.wicket.validation.validator.CreditCardValidator.creditCardNames.length) ? org.apache.wicket.validation.validator.CreditCardValidator.creditCardNames[cardId] : \"\";\n    }\n\n    private boolean isChecksumCorrect(java.lang.String creditCardNumber) {\n        java.lang.String input = creditCardNumber;\n        java.lang.String numberToCheck = input.replaceAll(\"[ -]\", \"\");\n        int nulOffset = '0';\n        int sum = 0;\n        for (int i = 1; i <= numberToCheck.length(); i++) {\n            int currentDigit = numberToCheck.charAt(numberToCheck.length() - i) - nulOffset;\n            if ((i % 2) == 0) {\n                currentDigit *= 2;\n                currentDigit = (currentDigit > 9) ? currentDigit - 9 : currentDigit;\n                sum += currentDigit;\n            } else {\n                sum += currentDigit;\n            }\n        }\n        return (sum % 10) == 0;\n    }\n}",
            "src_parent_type": "Class",
            "src_type": "Field"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Package",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Class",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "public static final int INVALID = -1;",
            "src_parent": "public class CreditCardValidator extends org.apache.wicket.validation.validator.AbstractValidator<java.lang.String> {\n    private static final long serialVersionUID = 1L;\n\n    private java.lang.String creditCardNumber = null;\n\n    private int cardId = -1;\n\n    public static final int INVALID = -1;\n\n    public static final int AMERICAN_EXPRESS = 0;\n\n    public static final int CHINA_UNIONPAY = 1;\n\n    public static final int DINERS_CLUB_CARTE_BLANCHE = 2;\n\n    public static final int DINERS_CLUB_INTERNATIONAL = 3;\n\n    public static final int DINERS_CLUB_US_AND_CANADA = 4;\n\n    public static final int DISCOVER_CARD = 5;\n\n    public static final int JCB = 6;\n\n    public static final int LASER = 7;\n\n    public static final int MAESTRO = 8;\n\n    public static final int MASTERCARD = 9;\n\n    public static final int SOLO = 10;\n\n    public static final int SWITCH = 11;\n\n    public static final int VISA = 12;\n\n    public static final int VISA_ELECTRON = 13;\n\n    private static final java.lang.String[] creditCardNames = new java.lang.String[]{ \"American Express\", \"China UnionPay\", \"Diners Club Carte Blanche\", \"Diners Club International\", \"Diners Club US & Canada\", \"Discover Card\", \"JCB\", \"Laser\", \"Maestro\", \"MasterCard\", \"Solo\", \"Switch\", \"Visa\", \"Visa Electron\" };\n\n    @java.lang.Override\n    protected void onValidate(org.apache.wicket.validation.IValidatable<java.lang.String> validatable) {\n        creditCardNumber = validatable.getValue();\n        if (!isLengthAndPrefixCorrect(creditCardNumber)) {\n            error(validatable);\n        }\n    }\n\n    private boolean isLengthAndPrefixCorrect(java.lang.String creditCardNumber) {\n        if (creditCardNumber != null) {\n            creditCardNumber = creditCardNumber.replaceAll(\"[ -]\", \"\");\n        }\n        if (((creditCardNumber != null) && (creditCardNumber.length() >= 12)) && (creditCardNumber.length() <= 19)) {\n            if (isAmericanExpress(creditCardNumber)) {\n                return true;\n            } else if (isChinaUnionPay(creditCardNumber)) {\n                return true;\n            } else if (isDinersClubCarteBlanche(creditCardNumber)) {\n                return true;\n            } else if (isDinersClubInternational(creditCardNumber)) {\n                return true;\n            } else if (isDinersClubUsAndCanada(creditCardNumber)) {\n                return true;\n            } else if (isDiscoverCard(creditCardNumber)) {\n                return true;\n            } else if (isJCB(creditCardNumber)) {\n                return true;\n            } else if (isLaser(creditCardNumber)) {\n                return true;\n            } else if (isMaestro(creditCardNumber)) {\n                return true;\n            } else if (isMastercard(creditCardNumber)) {\n                return true;\n            } else if (isSolo(creditCardNumber)) {\n                return true;\n            } else if (isSwitch(creditCardNumber)) {\n                return true;\n            } else if (isVisa(creditCardNumber)) {\n                return true;\n            } else if (isVisaElectron(creditCardNumber)) {\n                return true;\n            } else if (isUnknown(creditCardNumber)) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    protected boolean isUnknown(java.lang.String creditCardNumber) {\n        return false;\n    }\n\n    private boolean isAmericanExpress(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 15) && (creditCardNumber.startsWith(\"34\") || creditCardNumber.startsWith(\"37\"))) {\n            if (isChecksumCorrect(creditCardNumber)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.AMERICAN_EXPRESS;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isChinaUnionPay(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() >= 16) && (creditCardNumber.length() <= 19)) && creditCardNumber.startsWith(\"622\")) {\n            int firstDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 5));\n            if ((firstDigits >= 622126) && (firstDigits <= 622925)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.CHINA_UNIONPAY;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isDinersClubCarteBlanche(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 14) && creditCardNumber.startsWith(\"30\")) {\n            int firstDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 3));\n            if (((firstDigits >= 300) && (firstDigits <= 305)) && isChecksumCorrect(creditCardNumber)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.DINERS_CLUB_CARTE_BLANCHE;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isDinersClubInternational(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() == 14) && creditCardNumber.startsWith(\"36\")) && isChecksumCorrect(creditCardNumber)) {\n            cardId = org.apache.wicket.validation.validator.CreditCardValidator.DINERS_CLUB_INTERNATIONAL;\n            returnValue = true;\n        }\n        return returnValue;\n    }\n\n    private boolean isDinersClubUsAndCanada(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() == 16) && (creditCardNumber.startsWith(\"54\") || creditCardNumber.startsWith(\"55\"))) && isChecksumCorrect(creditCardNumber)) {\n            cardId = org.apache.wicket.validation.validator.CreditCardValidator.DINERS_CLUB_US_AND_CANADA;\n            returnValue = true;\n        }\n        return returnValue;\n    }\n\n    private boolean isDiscoverCard(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() == 16) && creditCardNumber.startsWith(\"6\")) && isChecksumCorrect(creditCardNumber)) {\n            int firstThreeDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 3));\n            int firstSixDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 6));\n            if (((creditCardNumber.startsWith(\"6011\") || creditCardNumber.startsWith(\"65\")) || ((firstThreeDigits >= 644) && (firstThreeDigits <= 649))) || ((firstSixDigits >= 622126) && (firstSixDigits <= 622925))) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.DISCOVER_CARD;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isJCB(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 16) && isChecksumCorrect(creditCardNumber)) {\n            int firstFourDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 4));\n            if ((firstFourDigits >= 3528) && (firstFourDigits <= 3589)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.JCB;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isLaser(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() >= 16) && (creditCardNumber.length() <= 19)) && isChecksumCorrect(creditCardNumber)) {\n            if (((creditCardNumber.startsWith(\"6304\") || creditCardNumber.startsWith(\"6706\")) || creditCardNumber.startsWith(\"6771\")) || creditCardNumber.startsWith(\"6709\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.LASER;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isMaestro(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() >= 12) && (creditCardNumber.length() <= 19)) && isChecksumCorrect(creditCardNumber)) {\n            if ((((((creditCardNumber.startsWith(\"5018\") || creditCardNumber.startsWith(\"5020\")) || creditCardNumber.startsWith(\"5038\")) || creditCardNumber.startsWith(\"6304\")) || creditCardNumber.startsWith(\"6759\")) || creditCardNumber.startsWith(\"6761\")) || creditCardNumber.startsWith(\"6763\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.MAESTRO;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isSolo(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((((creditCardNumber.length() == 16) || (creditCardNumber.length() == 18)) || (creditCardNumber.length() == 19)) && isChecksumCorrect(creditCardNumber)) {\n            if (creditCardNumber.startsWith(\"6334\") || creditCardNumber.startsWith(\"6767\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.SOLO;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isSwitch(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((((creditCardNumber.length() == 16) || (creditCardNumber.length() == 18)) || (creditCardNumber.length() == 19)) && isChecksumCorrect(creditCardNumber)) {\n            if (((((((creditCardNumber.startsWith(\"4903\") || creditCardNumber.startsWith(\"4905\")) || creditCardNumber.startsWith(\"4911\")) || creditCardNumber.startsWith(\"4936\")) || creditCardNumber.startsWith(\"564182\")) || creditCardNumber.startsWith(\"633110\")) || creditCardNumber.startsWith(\"6333\")) || creditCardNumber.startsWith(\"6759\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.SWITCH;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isVisa(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 13) || (creditCardNumber.length() == 16)) {\n            if (creditCardNumber.startsWith(\"4\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.SWITCH;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isVisaElectron(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 16) && ((((creditCardNumber.startsWith(\"417500\") || creditCardNumber.startsWith(\"4917\")) || creditCardNumber.startsWith(\"4913\")) || creditCardNumber.startsWith(\"4508\")) || creditCardNumber.startsWith(\"4844\"))) {\n            cardId = org.apache.wicket.validation.validator.CreditCardValidator.VISA_ELECTRON;\n            returnValue = true;\n        }\n        return returnValue;\n    }\n\n    private boolean isMastercard(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 16) && isChecksumCorrect(creditCardNumber)) {\n            int firstTwoDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 2));\n            if ((firstTwoDigits >= 51) && (firstTwoDigits <= 55)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.MASTERCARD;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private java.lang.String getCardName() {\n        return (cardId > (-1)) && (cardId < org.apache.wicket.validation.validator.CreditCardValidator.creditCardNames.length) ? org.apache.wicket.validation.validator.CreditCardValidator.creditCardNames[cardId] : \"\";\n    }\n\n    private boolean isChecksumCorrect(java.lang.String creditCardNumber) {\n        java.lang.String input = creditCardNumber;\n        java.lang.String numberToCheck = input.replaceAll(\"[ -]\", \"\");\n        int nulOffset = '0';\n        int sum = 0;\n        for (int i = 1; i <= numberToCheck.length(); i++) {\n            int currentDigit = numberToCheck.charAt(numberToCheck.length() - i) - nulOffset;\n            if ((i % 2) == 0) {\n                currentDigit *= 2;\n                currentDigit = (currentDigit > 9) ? currentDigit - 9 : currentDigit;\n                sum += currentDigit;\n            } else {\n                sum += currentDigit;\n            }\n        }\n        return (sum % 10) == 0;\n    }\n}",
            "src_parent_type": "Class",
            "src_type": "Field"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Package",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Class",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "public static final int AMERICAN_EXPRESS = 0;",
            "src_parent": "public class CreditCardValidator extends org.apache.wicket.validation.validator.AbstractValidator<java.lang.String> {\n    private static final long serialVersionUID = 1L;\n\n    private java.lang.String creditCardNumber = null;\n\n    private int cardId = -1;\n\n    public static final int INVALID = -1;\n\n    public static final int AMERICAN_EXPRESS = 0;\n\n    public static final int CHINA_UNIONPAY = 1;\n\n    public static final int DINERS_CLUB_CARTE_BLANCHE = 2;\n\n    public static final int DINERS_CLUB_INTERNATIONAL = 3;\n\n    public static final int DINERS_CLUB_US_AND_CANADA = 4;\n\n    public static final int DISCOVER_CARD = 5;\n\n    public static final int JCB = 6;\n\n    public static final int LASER = 7;\n\n    public static final int MAESTRO = 8;\n\n    public static final int MASTERCARD = 9;\n\n    public static final int SOLO = 10;\n\n    public static final int SWITCH = 11;\n\n    public static final int VISA = 12;\n\n    public static final int VISA_ELECTRON = 13;\n\n    private static final java.lang.String[] creditCardNames = new java.lang.String[]{ \"American Express\", \"China UnionPay\", \"Diners Club Carte Blanche\", \"Diners Club International\", \"Diners Club US & Canada\", \"Discover Card\", \"JCB\", \"Laser\", \"Maestro\", \"MasterCard\", \"Solo\", \"Switch\", \"Visa\", \"Visa Electron\" };\n\n    @java.lang.Override\n    protected void onValidate(org.apache.wicket.validation.IValidatable<java.lang.String> validatable) {\n        creditCardNumber = validatable.getValue();\n        if (!isLengthAndPrefixCorrect(creditCardNumber)) {\n            error(validatable);\n        }\n    }\n\n    private boolean isLengthAndPrefixCorrect(java.lang.String creditCardNumber) {\n        if (creditCardNumber != null) {\n            creditCardNumber = creditCardNumber.replaceAll(\"[ -]\", \"\");\n        }\n        if (((creditCardNumber != null) && (creditCardNumber.length() >= 12)) && (creditCardNumber.length() <= 19)) {\n            if (isAmericanExpress(creditCardNumber)) {\n                return true;\n            } else if (isChinaUnionPay(creditCardNumber)) {\n                return true;\n            } else if (isDinersClubCarteBlanche(creditCardNumber)) {\n                return true;\n            } else if (isDinersClubInternational(creditCardNumber)) {\n                return true;\n            } else if (isDinersClubUsAndCanada(creditCardNumber)) {\n                return true;\n            } else if (isDiscoverCard(creditCardNumber)) {\n                return true;\n            } else if (isJCB(creditCardNumber)) {\n                return true;\n            } else if (isLaser(creditCardNumber)) {\n                return true;\n            } else if (isMaestro(creditCardNumber)) {\n                return true;\n            } else if (isMastercard(creditCardNumber)) {\n                return true;\n            } else if (isSolo(creditCardNumber)) {\n                return true;\n            } else if (isSwitch(creditCardNumber)) {\n                return true;\n            } else if (isVisa(creditCardNumber)) {\n                return true;\n            } else if (isVisaElectron(creditCardNumber)) {\n                return true;\n            } else if (isUnknown(creditCardNumber)) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    protected boolean isUnknown(java.lang.String creditCardNumber) {\n        return false;\n    }\n\n    private boolean isAmericanExpress(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 15) && (creditCardNumber.startsWith(\"34\") || creditCardNumber.startsWith(\"37\"))) {\n            if (isChecksumCorrect(creditCardNumber)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.AMERICAN_EXPRESS;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isChinaUnionPay(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() >= 16) && (creditCardNumber.length() <= 19)) && creditCardNumber.startsWith(\"622\")) {\n            int firstDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 5));\n            if ((firstDigits >= 622126) && (firstDigits <= 622925)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.CHINA_UNIONPAY;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isDinersClubCarteBlanche(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 14) && creditCardNumber.startsWith(\"30\")) {\n            int firstDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 3));\n            if (((firstDigits >= 300) && (firstDigits <= 305)) && isChecksumCorrect(creditCardNumber)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.DINERS_CLUB_CARTE_BLANCHE;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isDinersClubInternational(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() == 14) && creditCardNumber.startsWith(\"36\")) && isChecksumCorrect(creditCardNumber)) {\n            cardId = org.apache.wicket.validation.validator.CreditCardValidator.DINERS_CLUB_INTERNATIONAL;\n            returnValue = true;\n        }\n        return returnValue;\n    }\n\n    private boolean isDinersClubUsAndCanada(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() == 16) && (creditCardNumber.startsWith(\"54\") || creditCardNumber.startsWith(\"55\"))) && isChecksumCorrect(creditCardNumber)) {\n            cardId = org.apache.wicket.validation.validator.CreditCardValidator.DINERS_CLUB_US_AND_CANADA;\n            returnValue = true;\n        }\n        return returnValue;\n    }\n\n    private boolean isDiscoverCard(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() == 16) && creditCardNumber.startsWith(\"6\")) && isChecksumCorrect(creditCardNumber)) {\n            int firstThreeDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 3));\n            int firstSixDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 6));\n            if (((creditCardNumber.startsWith(\"6011\") || creditCardNumber.startsWith(\"65\")) || ((firstThreeDigits >= 644) && (firstThreeDigits <= 649))) || ((firstSixDigits >= 622126) && (firstSixDigits <= 622925))) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.DISCOVER_CARD;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isJCB(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 16) && isChecksumCorrect(creditCardNumber)) {\n            int firstFourDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 4));\n            if ((firstFourDigits >= 3528) && (firstFourDigits <= 3589)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.JCB;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isLaser(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() >= 16) && (creditCardNumber.length() <= 19)) && isChecksumCorrect(creditCardNumber)) {\n            if (((creditCardNumber.startsWith(\"6304\") || creditCardNumber.startsWith(\"6706\")) || creditCardNumber.startsWith(\"6771\")) || creditCardNumber.startsWith(\"6709\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.LASER;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isMaestro(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() >= 12) && (creditCardNumber.length() <= 19)) && isChecksumCorrect(creditCardNumber)) {\n            if ((((((creditCardNumber.startsWith(\"5018\") || creditCardNumber.startsWith(\"5020\")) || creditCardNumber.startsWith(\"5038\")) || creditCardNumber.startsWith(\"6304\")) || creditCardNumber.startsWith(\"6759\")) || creditCardNumber.startsWith(\"6761\")) || creditCardNumber.startsWith(\"6763\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.MAESTRO;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isSolo(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((((creditCardNumber.length() == 16) || (creditCardNumber.length() == 18)) || (creditCardNumber.length() == 19)) && isChecksumCorrect(creditCardNumber)) {\n            if (creditCardNumber.startsWith(\"6334\") || creditCardNumber.startsWith(\"6767\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.SOLO;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isSwitch(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((((creditCardNumber.length() == 16) || (creditCardNumber.length() == 18)) || (creditCardNumber.length() == 19)) && isChecksumCorrect(creditCardNumber)) {\n            if (((((((creditCardNumber.startsWith(\"4903\") || creditCardNumber.startsWith(\"4905\")) || creditCardNumber.startsWith(\"4911\")) || creditCardNumber.startsWith(\"4936\")) || creditCardNumber.startsWith(\"564182\")) || creditCardNumber.startsWith(\"633110\")) || creditCardNumber.startsWith(\"6333\")) || creditCardNumber.startsWith(\"6759\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.SWITCH;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isVisa(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 13) || (creditCardNumber.length() == 16)) {\n            if (creditCardNumber.startsWith(\"4\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.SWITCH;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isVisaElectron(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 16) && ((((creditCardNumber.startsWith(\"417500\") || creditCardNumber.startsWith(\"4917\")) || creditCardNumber.startsWith(\"4913\")) || creditCardNumber.startsWith(\"4508\")) || creditCardNumber.startsWith(\"4844\"))) {\n            cardId = org.apache.wicket.validation.validator.CreditCardValidator.VISA_ELECTRON;\n            returnValue = true;\n        }\n        return returnValue;\n    }\n\n    private boolean isMastercard(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 16) && isChecksumCorrect(creditCardNumber)) {\n            int firstTwoDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 2));\n            if ((firstTwoDigits >= 51) && (firstTwoDigits <= 55)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.MASTERCARD;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private java.lang.String getCardName() {\n        return (cardId > (-1)) && (cardId < org.apache.wicket.validation.validator.CreditCardValidator.creditCardNames.length) ? org.apache.wicket.validation.validator.CreditCardValidator.creditCardNames[cardId] : \"\";\n    }\n\n    private boolean isChecksumCorrect(java.lang.String creditCardNumber) {\n        java.lang.String input = creditCardNumber;\n        java.lang.String numberToCheck = input.replaceAll(\"[ -]\", \"\");\n        int nulOffset = '0';\n        int sum = 0;\n        for (int i = 1; i <= numberToCheck.length(); i++) {\n            int currentDigit = numberToCheck.charAt(numberToCheck.length() - i) - nulOffset;\n            if ((i % 2) == 0) {\n                currentDigit *= 2;\n                currentDigit = (currentDigit > 9) ? currentDigit - 9 : currentDigit;\n                sum += currentDigit;\n            } else {\n                sum += currentDigit;\n            }\n        }\n        return (sum % 10) == 0;\n    }\n}",
            "src_parent_type": "Class",
            "src_type": "Field"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Package",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Class",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "public static final int CHINA_UNIONPAY = 1;",
            "src_parent": "public class CreditCardValidator extends org.apache.wicket.validation.validator.AbstractValidator<java.lang.String> {\n    private static final long serialVersionUID = 1L;\n\n    private java.lang.String creditCardNumber = null;\n\n    private int cardId = -1;\n\n    public static final int INVALID = -1;\n\n    public static final int AMERICAN_EXPRESS = 0;\n\n    public static final int CHINA_UNIONPAY = 1;\n\n    public static final int DINERS_CLUB_CARTE_BLANCHE = 2;\n\n    public static final int DINERS_CLUB_INTERNATIONAL = 3;\n\n    public static final int DINERS_CLUB_US_AND_CANADA = 4;\n\n    public static final int DISCOVER_CARD = 5;\n\n    public static final int JCB = 6;\n\n    public static final int LASER = 7;\n\n    public static final int MAESTRO = 8;\n\n    public static final int MASTERCARD = 9;\n\n    public static final int SOLO = 10;\n\n    public static final int SWITCH = 11;\n\n    public static final int VISA = 12;\n\n    public static final int VISA_ELECTRON = 13;\n\n    private static final java.lang.String[] creditCardNames = new java.lang.String[]{ \"American Express\", \"China UnionPay\", \"Diners Club Carte Blanche\", \"Diners Club International\", \"Diners Club US & Canada\", \"Discover Card\", \"JCB\", \"Laser\", \"Maestro\", \"MasterCard\", \"Solo\", \"Switch\", \"Visa\", \"Visa Electron\" };\n\n    @java.lang.Override\n    protected void onValidate(org.apache.wicket.validation.IValidatable<java.lang.String> validatable) {\n        creditCardNumber = validatable.getValue();\n        if (!isLengthAndPrefixCorrect(creditCardNumber)) {\n            error(validatable);\n        }\n    }\n\n    private boolean isLengthAndPrefixCorrect(java.lang.String creditCardNumber) {\n        if (creditCardNumber != null) {\n            creditCardNumber = creditCardNumber.replaceAll(\"[ -]\", \"\");\n        }\n        if (((creditCardNumber != null) && (creditCardNumber.length() >= 12)) && (creditCardNumber.length() <= 19)) {\n            if (isAmericanExpress(creditCardNumber)) {\n                return true;\n            } else if (isChinaUnionPay(creditCardNumber)) {\n                return true;\n            } else if (isDinersClubCarteBlanche(creditCardNumber)) {\n                return true;\n            } else if (isDinersClubInternational(creditCardNumber)) {\n                return true;\n            } else if (isDinersClubUsAndCanada(creditCardNumber)) {\n                return true;\n            } else if (isDiscoverCard(creditCardNumber)) {\n                return true;\n            } else if (isJCB(creditCardNumber)) {\n                return true;\n            } else if (isLaser(creditCardNumber)) {\n                return true;\n            } else if (isMaestro(creditCardNumber)) {\n                return true;\n            } else if (isMastercard(creditCardNumber)) {\n                return true;\n            } else if (isSolo(creditCardNumber)) {\n                return true;\n            } else if (isSwitch(creditCardNumber)) {\n                return true;\n            } else if (isVisa(creditCardNumber)) {\n                return true;\n            } else if (isVisaElectron(creditCardNumber)) {\n                return true;\n            } else if (isUnknown(creditCardNumber)) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    protected boolean isUnknown(java.lang.String creditCardNumber) {\n        return false;\n    }\n\n    private boolean isAmericanExpress(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 15) && (creditCardNumber.startsWith(\"34\") || creditCardNumber.startsWith(\"37\"))) {\n            if (isChecksumCorrect(creditCardNumber)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.AMERICAN_EXPRESS;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isChinaUnionPay(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() >= 16) && (creditCardNumber.length() <= 19)) && creditCardNumber.startsWith(\"622\")) {\n            int firstDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 5));\n            if ((firstDigits >= 622126) && (firstDigits <= 622925)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.CHINA_UNIONPAY;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isDinersClubCarteBlanche(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 14) && creditCardNumber.startsWith(\"30\")) {\n            int firstDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 3));\n            if (((firstDigits >= 300) && (firstDigits <= 305)) && isChecksumCorrect(creditCardNumber)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.DINERS_CLUB_CARTE_BLANCHE;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isDinersClubInternational(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() == 14) && creditCardNumber.startsWith(\"36\")) && isChecksumCorrect(creditCardNumber)) {\n            cardId = org.apache.wicket.validation.validator.CreditCardValidator.DINERS_CLUB_INTERNATIONAL;\n            returnValue = true;\n        }\n        return returnValue;\n    }\n\n    private boolean isDinersClubUsAndCanada(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() == 16) && (creditCardNumber.startsWith(\"54\") || creditCardNumber.startsWith(\"55\"))) && isChecksumCorrect(creditCardNumber)) {\n            cardId = org.apache.wicket.validation.validator.CreditCardValidator.DINERS_CLUB_US_AND_CANADA;\n            returnValue = true;\n        }\n        return returnValue;\n    }\n\n    private boolean isDiscoverCard(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() == 16) && creditCardNumber.startsWith(\"6\")) && isChecksumCorrect(creditCardNumber)) {\n            int firstThreeDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 3));\n            int firstSixDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 6));\n            if (((creditCardNumber.startsWith(\"6011\") || creditCardNumber.startsWith(\"65\")) || ((firstThreeDigits >= 644) && (firstThreeDigits <= 649))) || ((firstSixDigits >= 622126) && (firstSixDigits <= 622925))) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.DISCOVER_CARD;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isJCB(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 16) && isChecksumCorrect(creditCardNumber)) {\n            int firstFourDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 4));\n            if ((firstFourDigits >= 3528) && (firstFourDigits <= 3589)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.JCB;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isLaser(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() >= 16) && (creditCardNumber.length() <= 19)) && isChecksumCorrect(creditCardNumber)) {\n            if (((creditCardNumber.startsWith(\"6304\") || creditCardNumber.startsWith(\"6706\")) || creditCardNumber.startsWith(\"6771\")) || creditCardNumber.startsWith(\"6709\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.LASER;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isMaestro(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() >= 12) && (creditCardNumber.length() <= 19)) && isChecksumCorrect(creditCardNumber)) {\n            if ((((((creditCardNumber.startsWith(\"5018\") || creditCardNumber.startsWith(\"5020\")) || creditCardNumber.startsWith(\"5038\")) || creditCardNumber.startsWith(\"6304\")) || creditCardNumber.startsWith(\"6759\")) || creditCardNumber.startsWith(\"6761\")) || creditCardNumber.startsWith(\"6763\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.MAESTRO;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isSolo(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((((creditCardNumber.length() == 16) || (creditCardNumber.length() == 18)) || (creditCardNumber.length() == 19)) && isChecksumCorrect(creditCardNumber)) {\n            if (creditCardNumber.startsWith(\"6334\") || creditCardNumber.startsWith(\"6767\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.SOLO;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isSwitch(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((((creditCardNumber.length() == 16) || (creditCardNumber.length() == 18)) || (creditCardNumber.length() == 19)) && isChecksumCorrect(creditCardNumber)) {\n            if (((((((creditCardNumber.startsWith(\"4903\") || creditCardNumber.startsWith(\"4905\")) || creditCardNumber.startsWith(\"4911\")) || creditCardNumber.startsWith(\"4936\")) || creditCardNumber.startsWith(\"564182\")) || creditCardNumber.startsWith(\"633110\")) || creditCardNumber.startsWith(\"6333\")) || creditCardNumber.startsWith(\"6759\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.SWITCH;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isVisa(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 13) || (creditCardNumber.length() == 16)) {\n            if (creditCardNumber.startsWith(\"4\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.SWITCH;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isVisaElectron(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 16) && ((((creditCardNumber.startsWith(\"417500\") || creditCardNumber.startsWith(\"4917\")) || creditCardNumber.startsWith(\"4913\")) || creditCardNumber.startsWith(\"4508\")) || creditCardNumber.startsWith(\"4844\"))) {\n            cardId = org.apache.wicket.validation.validator.CreditCardValidator.VISA_ELECTRON;\n            returnValue = true;\n        }\n        return returnValue;\n    }\n\n    private boolean isMastercard(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 16) && isChecksumCorrect(creditCardNumber)) {\n            int firstTwoDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 2));\n            if ((firstTwoDigits >= 51) && (firstTwoDigits <= 55)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.MASTERCARD;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private java.lang.String getCardName() {\n        return (cardId > (-1)) && (cardId < org.apache.wicket.validation.validator.CreditCardValidator.creditCardNames.length) ? org.apache.wicket.validation.validator.CreditCardValidator.creditCardNames[cardId] : \"\";\n    }\n\n    private boolean isChecksumCorrect(java.lang.String creditCardNumber) {\n        java.lang.String input = creditCardNumber;\n        java.lang.String numberToCheck = input.replaceAll(\"[ -]\", \"\");\n        int nulOffset = '0';\n        int sum = 0;\n        for (int i = 1; i <= numberToCheck.length(); i++) {\n            int currentDigit = numberToCheck.charAt(numberToCheck.length() - i) - nulOffset;\n            if ((i % 2) == 0) {\n                currentDigit *= 2;\n                currentDigit = (currentDigit > 9) ? currentDigit - 9 : currentDigit;\n                sum += currentDigit;\n            } else {\n                sum += currentDigit;\n            }\n        }\n        return (sum % 10) == 0;\n    }\n}",
            "src_parent_type": "Class",
            "src_type": "Field"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Package",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Class",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "public static final int DINERS_CLUB_CARTE_BLANCHE = 2;",
            "src_parent": "public class CreditCardValidator extends org.apache.wicket.validation.validator.AbstractValidator<java.lang.String> {\n    private static final long serialVersionUID = 1L;\n\n    private java.lang.String creditCardNumber = null;\n\n    private int cardId = -1;\n\n    public static final int INVALID = -1;\n\n    public static final int AMERICAN_EXPRESS = 0;\n\n    public static final int CHINA_UNIONPAY = 1;\n\n    public static final int DINERS_CLUB_CARTE_BLANCHE = 2;\n\n    public static final int DINERS_CLUB_INTERNATIONAL = 3;\n\n    public static final int DINERS_CLUB_US_AND_CANADA = 4;\n\n    public static final int DISCOVER_CARD = 5;\n\n    public static final int JCB = 6;\n\n    public static final int LASER = 7;\n\n    public static final int MAESTRO = 8;\n\n    public static final int MASTERCARD = 9;\n\n    public static final int SOLO = 10;\n\n    public static final int SWITCH = 11;\n\n    public static final int VISA = 12;\n\n    public static final int VISA_ELECTRON = 13;\n\n    private static final java.lang.String[] creditCardNames = new java.lang.String[]{ \"American Express\", \"China UnionPay\", \"Diners Club Carte Blanche\", \"Diners Club International\", \"Diners Club US & Canada\", \"Discover Card\", \"JCB\", \"Laser\", \"Maestro\", \"MasterCard\", \"Solo\", \"Switch\", \"Visa\", \"Visa Electron\" };\n\n    @java.lang.Override\n    protected void onValidate(org.apache.wicket.validation.IValidatable<java.lang.String> validatable) {\n        creditCardNumber = validatable.getValue();\n        if (!isLengthAndPrefixCorrect(creditCardNumber)) {\n            error(validatable);\n        }\n    }\n\n    private boolean isLengthAndPrefixCorrect(java.lang.String creditCardNumber) {\n        if (creditCardNumber != null) {\n            creditCardNumber = creditCardNumber.replaceAll(\"[ -]\", \"\");\n        }\n        if (((creditCardNumber != null) && (creditCardNumber.length() >= 12)) && (creditCardNumber.length() <= 19)) {\n            if (isAmericanExpress(creditCardNumber)) {\n                return true;\n            } else if (isChinaUnionPay(creditCardNumber)) {\n                return true;\n            } else if (isDinersClubCarteBlanche(creditCardNumber)) {\n                return true;\n            } else if (isDinersClubInternational(creditCardNumber)) {\n                return true;\n            } else if (isDinersClubUsAndCanada(creditCardNumber)) {\n                return true;\n            } else if (isDiscoverCard(creditCardNumber)) {\n                return true;\n            } else if (isJCB(creditCardNumber)) {\n                return true;\n            } else if (isLaser(creditCardNumber)) {\n                return true;\n            } else if (isMaestro(creditCardNumber)) {\n                return true;\n            } else if (isMastercard(creditCardNumber)) {\n                return true;\n            } else if (isSolo(creditCardNumber)) {\n                return true;\n            } else if (isSwitch(creditCardNumber)) {\n                return true;\n            } else if (isVisa(creditCardNumber)) {\n                return true;\n            } else if (isVisaElectron(creditCardNumber)) {\n                return true;\n            } else if (isUnknown(creditCardNumber)) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    protected boolean isUnknown(java.lang.String creditCardNumber) {\n        return false;\n    }\n\n    private boolean isAmericanExpress(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 15) && (creditCardNumber.startsWith(\"34\") || creditCardNumber.startsWith(\"37\"))) {\n            if (isChecksumCorrect(creditCardNumber)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.AMERICAN_EXPRESS;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isChinaUnionPay(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() >= 16) && (creditCardNumber.length() <= 19)) && creditCardNumber.startsWith(\"622\")) {\n            int firstDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 5));\n            if ((firstDigits >= 622126) && (firstDigits <= 622925)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.CHINA_UNIONPAY;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isDinersClubCarteBlanche(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 14) && creditCardNumber.startsWith(\"30\")) {\n            int firstDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 3));\n            if (((firstDigits >= 300) && (firstDigits <= 305)) && isChecksumCorrect(creditCardNumber)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.DINERS_CLUB_CARTE_BLANCHE;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isDinersClubInternational(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() == 14) && creditCardNumber.startsWith(\"36\")) && isChecksumCorrect(creditCardNumber)) {\n            cardId = org.apache.wicket.validation.validator.CreditCardValidator.DINERS_CLUB_INTERNATIONAL;\n            returnValue = true;\n        }\n        return returnValue;\n    }\n\n    private boolean isDinersClubUsAndCanada(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() == 16) && (creditCardNumber.startsWith(\"54\") || creditCardNumber.startsWith(\"55\"))) && isChecksumCorrect(creditCardNumber)) {\n            cardId = org.apache.wicket.validation.validator.CreditCardValidator.DINERS_CLUB_US_AND_CANADA;\n            returnValue = true;\n        }\n        return returnValue;\n    }\n\n    private boolean isDiscoverCard(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() == 16) && creditCardNumber.startsWith(\"6\")) && isChecksumCorrect(creditCardNumber)) {\n            int firstThreeDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 3));\n            int firstSixDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 6));\n            if (((creditCardNumber.startsWith(\"6011\") || creditCardNumber.startsWith(\"65\")) || ((firstThreeDigits >= 644) && (firstThreeDigits <= 649))) || ((firstSixDigits >= 622126) && (firstSixDigits <= 622925))) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.DISCOVER_CARD;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isJCB(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 16) && isChecksumCorrect(creditCardNumber)) {\n            int firstFourDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 4));\n            if ((firstFourDigits >= 3528) && (firstFourDigits <= 3589)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.JCB;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isLaser(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() >= 16) && (creditCardNumber.length() <= 19)) && isChecksumCorrect(creditCardNumber)) {\n            if (((creditCardNumber.startsWith(\"6304\") || creditCardNumber.startsWith(\"6706\")) || creditCardNumber.startsWith(\"6771\")) || creditCardNumber.startsWith(\"6709\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.LASER;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isMaestro(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() >= 12) && (creditCardNumber.length() <= 19)) && isChecksumCorrect(creditCardNumber)) {\n            if ((((((creditCardNumber.startsWith(\"5018\") || creditCardNumber.startsWith(\"5020\")) || creditCardNumber.startsWith(\"5038\")) || creditCardNumber.startsWith(\"6304\")) || creditCardNumber.startsWith(\"6759\")) || creditCardNumber.startsWith(\"6761\")) || creditCardNumber.startsWith(\"6763\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.MAESTRO;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isSolo(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((((creditCardNumber.length() == 16) || (creditCardNumber.length() == 18)) || (creditCardNumber.length() == 19)) && isChecksumCorrect(creditCardNumber)) {\n            if (creditCardNumber.startsWith(\"6334\") || creditCardNumber.startsWith(\"6767\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.SOLO;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isSwitch(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((((creditCardNumber.length() == 16) || (creditCardNumber.length() == 18)) || (creditCardNumber.length() == 19)) && isChecksumCorrect(creditCardNumber)) {\n            if (((((((creditCardNumber.startsWith(\"4903\") || creditCardNumber.startsWith(\"4905\")) || creditCardNumber.startsWith(\"4911\")) || creditCardNumber.startsWith(\"4936\")) || creditCardNumber.startsWith(\"564182\")) || creditCardNumber.startsWith(\"633110\")) || creditCardNumber.startsWith(\"6333\")) || creditCardNumber.startsWith(\"6759\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.SWITCH;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isVisa(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 13) || (creditCardNumber.length() == 16)) {\n            if (creditCardNumber.startsWith(\"4\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.SWITCH;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isVisaElectron(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 16) && ((((creditCardNumber.startsWith(\"417500\") || creditCardNumber.startsWith(\"4917\")) || creditCardNumber.startsWith(\"4913\")) || creditCardNumber.startsWith(\"4508\")) || creditCardNumber.startsWith(\"4844\"))) {\n            cardId = org.apache.wicket.validation.validator.CreditCardValidator.VISA_ELECTRON;\n            returnValue = true;\n        }\n        return returnValue;\n    }\n\n    private boolean isMastercard(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 16) && isChecksumCorrect(creditCardNumber)) {\n            int firstTwoDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 2));\n            if ((firstTwoDigits >= 51) && (firstTwoDigits <= 55)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.MASTERCARD;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private java.lang.String getCardName() {\n        return (cardId > (-1)) && (cardId < org.apache.wicket.validation.validator.CreditCardValidator.creditCardNames.length) ? org.apache.wicket.validation.validator.CreditCardValidator.creditCardNames[cardId] : \"\";\n    }\n\n    private boolean isChecksumCorrect(java.lang.String creditCardNumber) {\n        java.lang.String input = creditCardNumber;\n        java.lang.String numberToCheck = input.replaceAll(\"[ -]\", \"\");\n        int nulOffset = '0';\n        int sum = 0;\n        for (int i = 1; i <= numberToCheck.length(); i++) {\n            int currentDigit = numberToCheck.charAt(numberToCheck.length() - i) - nulOffset;\n            if ((i % 2) == 0) {\n                currentDigit *= 2;\n                currentDigit = (currentDigit > 9) ? currentDigit - 9 : currentDigit;\n                sum += currentDigit;\n            } else {\n                sum += currentDigit;\n            }\n        }\n        return (sum % 10) == 0;\n    }\n}",
            "src_parent_type": "Class",
            "src_type": "Field"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Package",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Class",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "public static final int DINERS_CLUB_INTERNATIONAL = 3;",
            "src_parent": "public class CreditCardValidator extends org.apache.wicket.validation.validator.AbstractValidator<java.lang.String> {\n    private static final long serialVersionUID = 1L;\n\n    private java.lang.String creditCardNumber = null;\n\n    private int cardId = -1;\n\n    public static final int INVALID = -1;\n\n    public static final int AMERICAN_EXPRESS = 0;\n\n    public static final int CHINA_UNIONPAY = 1;\n\n    public static final int DINERS_CLUB_CARTE_BLANCHE = 2;\n\n    public static final int DINERS_CLUB_INTERNATIONAL = 3;\n\n    public static final int DINERS_CLUB_US_AND_CANADA = 4;\n\n    public static final int DISCOVER_CARD = 5;\n\n    public static final int JCB = 6;\n\n    public static final int LASER = 7;\n\n    public static final int MAESTRO = 8;\n\n    public static final int MASTERCARD = 9;\n\n    public static final int SOLO = 10;\n\n    public static final int SWITCH = 11;\n\n    public static final int VISA = 12;\n\n    public static final int VISA_ELECTRON = 13;\n\n    private static final java.lang.String[] creditCardNames = new java.lang.String[]{ \"American Express\", \"China UnionPay\", \"Diners Club Carte Blanche\", \"Diners Club International\", \"Diners Club US & Canada\", \"Discover Card\", \"JCB\", \"Laser\", \"Maestro\", \"MasterCard\", \"Solo\", \"Switch\", \"Visa\", \"Visa Electron\" };\n\n    @java.lang.Override\n    protected void onValidate(org.apache.wicket.validation.IValidatable<java.lang.String> validatable) {\n        creditCardNumber = validatable.getValue();\n        if (!isLengthAndPrefixCorrect(creditCardNumber)) {\n            error(validatable);\n        }\n    }\n\n    private boolean isLengthAndPrefixCorrect(java.lang.String creditCardNumber) {\n        if (creditCardNumber != null) {\n            creditCardNumber = creditCardNumber.replaceAll(\"[ -]\", \"\");\n        }\n        if (((creditCardNumber != null) && (creditCardNumber.length() >= 12)) && (creditCardNumber.length() <= 19)) {\n            if (isAmericanExpress(creditCardNumber)) {\n                return true;\n            } else if (isChinaUnionPay(creditCardNumber)) {\n                return true;\n            } else if (isDinersClubCarteBlanche(creditCardNumber)) {\n                return true;\n            } else if (isDinersClubInternational(creditCardNumber)) {\n                return true;\n            } else if (isDinersClubUsAndCanada(creditCardNumber)) {\n                return true;\n            } else if (isDiscoverCard(creditCardNumber)) {\n                return true;\n            } else if (isJCB(creditCardNumber)) {\n                return true;\n            } else if (isLaser(creditCardNumber)) {\n                return true;\n            } else if (isMaestro(creditCardNumber)) {\n                return true;\n            } else if (isMastercard(creditCardNumber)) {\n                return true;\n            } else if (isSolo(creditCardNumber)) {\n                return true;\n            } else if (isSwitch(creditCardNumber)) {\n                return true;\n            } else if (isVisa(creditCardNumber)) {\n                return true;\n            } else if (isVisaElectron(creditCardNumber)) {\n                return true;\n            } else if (isUnknown(creditCardNumber)) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    protected boolean isUnknown(java.lang.String creditCardNumber) {\n        return false;\n    }\n\n    private boolean isAmericanExpress(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 15) && (creditCardNumber.startsWith(\"34\") || creditCardNumber.startsWith(\"37\"))) {\n            if (isChecksumCorrect(creditCardNumber)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.AMERICAN_EXPRESS;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isChinaUnionPay(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() >= 16) && (creditCardNumber.length() <= 19)) && creditCardNumber.startsWith(\"622\")) {\n            int firstDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 5));\n            if ((firstDigits >= 622126) && (firstDigits <= 622925)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.CHINA_UNIONPAY;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isDinersClubCarteBlanche(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 14) && creditCardNumber.startsWith(\"30\")) {\n            int firstDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 3));\n            if (((firstDigits >= 300) && (firstDigits <= 305)) && isChecksumCorrect(creditCardNumber)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.DINERS_CLUB_CARTE_BLANCHE;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isDinersClubInternational(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() == 14) && creditCardNumber.startsWith(\"36\")) && isChecksumCorrect(creditCardNumber)) {\n            cardId = org.apache.wicket.validation.validator.CreditCardValidator.DINERS_CLUB_INTERNATIONAL;\n            returnValue = true;\n        }\n        return returnValue;\n    }\n\n    private boolean isDinersClubUsAndCanada(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() == 16) && (creditCardNumber.startsWith(\"54\") || creditCardNumber.startsWith(\"55\"))) && isChecksumCorrect(creditCardNumber)) {\n            cardId = org.apache.wicket.validation.validator.CreditCardValidator.DINERS_CLUB_US_AND_CANADA;\n            returnValue = true;\n        }\n        return returnValue;\n    }\n\n    private boolean isDiscoverCard(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() == 16) && creditCardNumber.startsWith(\"6\")) && isChecksumCorrect(creditCardNumber)) {\n            int firstThreeDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 3));\n            int firstSixDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 6));\n            if (((creditCardNumber.startsWith(\"6011\") || creditCardNumber.startsWith(\"65\")) || ((firstThreeDigits >= 644) && (firstThreeDigits <= 649))) || ((firstSixDigits >= 622126) && (firstSixDigits <= 622925))) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.DISCOVER_CARD;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isJCB(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 16) && isChecksumCorrect(creditCardNumber)) {\n            int firstFourDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 4));\n            if ((firstFourDigits >= 3528) && (firstFourDigits <= 3589)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.JCB;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isLaser(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() >= 16) && (creditCardNumber.length() <= 19)) && isChecksumCorrect(creditCardNumber)) {\n            if (((creditCardNumber.startsWith(\"6304\") || creditCardNumber.startsWith(\"6706\")) || creditCardNumber.startsWith(\"6771\")) || creditCardNumber.startsWith(\"6709\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.LASER;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isMaestro(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() >= 12) && (creditCardNumber.length() <= 19)) && isChecksumCorrect(creditCardNumber)) {\n            if ((((((creditCardNumber.startsWith(\"5018\") || creditCardNumber.startsWith(\"5020\")) || creditCardNumber.startsWith(\"5038\")) || creditCardNumber.startsWith(\"6304\")) || creditCardNumber.startsWith(\"6759\")) || creditCardNumber.startsWith(\"6761\")) || creditCardNumber.startsWith(\"6763\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.MAESTRO;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isSolo(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((((creditCardNumber.length() == 16) || (creditCardNumber.length() == 18)) || (creditCardNumber.length() == 19)) && isChecksumCorrect(creditCardNumber)) {\n            if (creditCardNumber.startsWith(\"6334\") || creditCardNumber.startsWith(\"6767\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.SOLO;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isSwitch(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((((creditCardNumber.length() == 16) || (creditCardNumber.length() == 18)) || (creditCardNumber.length() == 19)) && isChecksumCorrect(creditCardNumber)) {\n            if (((((((creditCardNumber.startsWith(\"4903\") || creditCardNumber.startsWith(\"4905\")) || creditCardNumber.startsWith(\"4911\")) || creditCardNumber.startsWith(\"4936\")) || creditCardNumber.startsWith(\"564182\")) || creditCardNumber.startsWith(\"633110\")) || creditCardNumber.startsWith(\"6333\")) || creditCardNumber.startsWith(\"6759\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.SWITCH;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isVisa(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 13) || (creditCardNumber.length() == 16)) {\n            if (creditCardNumber.startsWith(\"4\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.SWITCH;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isVisaElectron(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 16) && ((((creditCardNumber.startsWith(\"417500\") || creditCardNumber.startsWith(\"4917\")) || creditCardNumber.startsWith(\"4913\")) || creditCardNumber.startsWith(\"4508\")) || creditCardNumber.startsWith(\"4844\"))) {\n            cardId = org.apache.wicket.validation.validator.CreditCardValidator.VISA_ELECTRON;\n            returnValue = true;\n        }\n        return returnValue;\n    }\n\n    private boolean isMastercard(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 16) && isChecksumCorrect(creditCardNumber)) {\n            int firstTwoDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 2));\n            if ((firstTwoDigits >= 51) && (firstTwoDigits <= 55)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.MASTERCARD;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private java.lang.String getCardName() {\n        return (cardId > (-1)) && (cardId < org.apache.wicket.validation.validator.CreditCardValidator.creditCardNames.length) ? org.apache.wicket.validation.validator.CreditCardValidator.creditCardNames[cardId] : \"\";\n    }\n\n    private boolean isChecksumCorrect(java.lang.String creditCardNumber) {\n        java.lang.String input = creditCardNumber;\n        java.lang.String numberToCheck = input.replaceAll(\"[ -]\", \"\");\n        int nulOffset = '0';\n        int sum = 0;\n        for (int i = 1; i <= numberToCheck.length(); i++) {\n            int currentDigit = numberToCheck.charAt(numberToCheck.length() - i) - nulOffset;\n            if ((i % 2) == 0) {\n                currentDigit *= 2;\n                currentDigit = (currentDigit > 9) ? currentDigit - 9 : currentDigit;\n                sum += currentDigit;\n            } else {\n                sum += currentDigit;\n            }\n        }\n        return (sum % 10) == 0;\n    }\n}",
            "src_parent_type": "Class",
            "src_type": "Field"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Package",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Class",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "public static final int DINERS_CLUB_US_AND_CANADA = 4;",
            "src_parent": "public class CreditCardValidator extends org.apache.wicket.validation.validator.AbstractValidator<java.lang.String> {\n    private static final long serialVersionUID = 1L;\n\n    private java.lang.String creditCardNumber = null;\n\n    private int cardId = -1;\n\n    public static final int INVALID = -1;\n\n    public static final int AMERICAN_EXPRESS = 0;\n\n    public static final int CHINA_UNIONPAY = 1;\n\n    public static final int DINERS_CLUB_CARTE_BLANCHE = 2;\n\n    public static final int DINERS_CLUB_INTERNATIONAL = 3;\n\n    public static final int DINERS_CLUB_US_AND_CANADA = 4;\n\n    public static final int DISCOVER_CARD = 5;\n\n    public static final int JCB = 6;\n\n    public static final int LASER = 7;\n\n    public static final int MAESTRO = 8;\n\n    public static final int MASTERCARD = 9;\n\n    public static final int SOLO = 10;\n\n    public static final int SWITCH = 11;\n\n    public static final int VISA = 12;\n\n    public static final int VISA_ELECTRON = 13;\n\n    private static final java.lang.String[] creditCardNames = new java.lang.String[]{ \"American Express\", \"China UnionPay\", \"Diners Club Carte Blanche\", \"Diners Club International\", \"Diners Club US & Canada\", \"Discover Card\", \"JCB\", \"Laser\", \"Maestro\", \"MasterCard\", \"Solo\", \"Switch\", \"Visa\", \"Visa Electron\" };\n\n    @java.lang.Override\n    protected void onValidate(org.apache.wicket.validation.IValidatable<java.lang.String> validatable) {\n        creditCardNumber = validatable.getValue();\n        if (!isLengthAndPrefixCorrect(creditCardNumber)) {\n            error(validatable);\n        }\n    }\n\n    private boolean isLengthAndPrefixCorrect(java.lang.String creditCardNumber) {\n        if (creditCardNumber != null) {\n            creditCardNumber = creditCardNumber.replaceAll(\"[ -]\", \"\");\n        }\n        if (((creditCardNumber != null) && (creditCardNumber.length() >= 12)) && (creditCardNumber.length() <= 19)) {\n            if (isAmericanExpress(creditCardNumber)) {\n                return true;\n            } else if (isChinaUnionPay(creditCardNumber)) {\n                return true;\n            } else if (isDinersClubCarteBlanche(creditCardNumber)) {\n                return true;\n            } else if (isDinersClubInternational(creditCardNumber)) {\n                return true;\n            } else if (isDinersClubUsAndCanada(creditCardNumber)) {\n                return true;\n            } else if (isDiscoverCard(creditCardNumber)) {\n                return true;\n            } else if (isJCB(creditCardNumber)) {\n                return true;\n            } else if (isLaser(creditCardNumber)) {\n                return true;\n            } else if (isMaestro(creditCardNumber)) {\n                return true;\n            } else if (isMastercard(creditCardNumber)) {\n                return true;\n            } else if (isSolo(creditCardNumber)) {\n                return true;\n            } else if (isSwitch(creditCardNumber)) {\n                return true;\n            } else if (isVisa(creditCardNumber)) {\n                return true;\n            } else if (isVisaElectron(creditCardNumber)) {\n                return true;\n            } else if (isUnknown(creditCardNumber)) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    protected boolean isUnknown(java.lang.String creditCardNumber) {\n        return false;\n    }\n\n    private boolean isAmericanExpress(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 15) && (creditCardNumber.startsWith(\"34\") || creditCardNumber.startsWith(\"37\"))) {\n            if (isChecksumCorrect(creditCardNumber)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.AMERICAN_EXPRESS;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isChinaUnionPay(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() >= 16) && (creditCardNumber.length() <= 19)) && creditCardNumber.startsWith(\"622\")) {\n            int firstDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 5));\n            if ((firstDigits >= 622126) && (firstDigits <= 622925)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.CHINA_UNIONPAY;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isDinersClubCarteBlanche(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 14) && creditCardNumber.startsWith(\"30\")) {\n            int firstDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 3));\n            if (((firstDigits >= 300) && (firstDigits <= 305)) && isChecksumCorrect(creditCardNumber)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.DINERS_CLUB_CARTE_BLANCHE;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isDinersClubInternational(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() == 14) && creditCardNumber.startsWith(\"36\")) && isChecksumCorrect(creditCardNumber)) {\n            cardId = org.apache.wicket.validation.validator.CreditCardValidator.DINERS_CLUB_INTERNATIONAL;\n            returnValue = true;\n        }\n        return returnValue;\n    }\n\n    private boolean isDinersClubUsAndCanada(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() == 16) && (creditCardNumber.startsWith(\"54\") || creditCardNumber.startsWith(\"55\"))) && isChecksumCorrect(creditCardNumber)) {\n            cardId = org.apache.wicket.validation.validator.CreditCardValidator.DINERS_CLUB_US_AND_CANADA;\n            returnValue = true;\n        }\n        return returnValue;\n    }\n\n    private boolean isDiscoverCard(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() == 16) && creditCardNumber.startsWith(\"6\")) && isChecksumCorrect(creditCardNumber)) {\n            int firstThreeDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 3));\n            int firstSixDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 6));\n            if (((creditCardNumber.startsWith(\"6011\") || creditCardNumber.startsWith(\"65\")) || ((firstThreeDigits >= 644) && (firstThreeDigits <= 649))) || ((firstSixDigits >= 622126) && (firstSixDigits <= 622925))) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.DISCOVER_CARD;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isJCB(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 16) && isChecksumCorrect(creditCardNumber)) {\n            int firstFourDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 4));\n            if ((firstFourDigits >= 3528) && (firstFourDigits <= 3589)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.JCB;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isLaser(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() >= 16) && (creditCardNumber.length() <= 19)) && isChecksumCorrect(creditCardNumber)) {\n            if (((creditCardNumber.startsWith(\"6304\") || creditCardNumber.startsWith(\"6706\")) || creditCardNumber.startsWith(\"6771\")) || creditCardNumber.startsWith(\"6709\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.LASER;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isMaestro(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() >= 12) && (creditCardNumber.length() <= 19)) && isChecksumCorrect(creditCardNumber)) {\n            if ((((((creditCardNumber.startsWith(\"5018\") || creditCardNumber.startsWith(\"5020\")) || creditCardNumber.startsWith(\"5038\")) || creditCardNumber.startsWith(\"6304\")) || creditCardNumber.startsWith(\"6759\")) || creditCardNumber.startsWith(\"6761\")) || creditCardNumber.startsWith(\"6763\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.MAESTRO;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isSolo(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((((creditCardNumber.length() == 16) || (creditCardNumber.length() == 18)) || (creditCardNumber.length() == 19)) && isChecksumCorrect(creditCardNumber)) {\n            if (creditCardNumber.startsWith(\"6334\") || creditCardNumber.startsWith(\"6767\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.SOLO;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isSwitch(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((((creditCardNumber.length() == 16) || (creditCardNumber.length() == 18)) || (creditCardNumber.length() == 19)) && isChecksumCorrect(creditCardNumber)) {\n            if (((((((creditCardNumber.startsWith(\"4903\") || creditCardNumber.startsWith(\"4905\")) || creditCardNumber.startsWith(\"4911\")) || creditCardNumber.startsWith(\"4936\")) || creditCardNumber.startsWith(\"564182\")) || creditCardNumber.startsWith(\"633110\")) || creditCardNumber.startsWith(\"6333\")) || creditCardNumber.startsWith(\"6759\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.SWITCH;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isVisa(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 13) || (creditCardNumber.length() == 16)) {\n            if (creditCardNumber.startsWith(\"4\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.SWITCH;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isVisaElectron(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 16) && ((((creditCardNumber.startsWith(\"417500\") || creditCardNumber.startsWith(\"4917\")) || creditCardNumber.startsWith(\"4913\")) || creditCardNumber.startsWith(\"4508\")) || creditCardNumber.startsWith(\"4844\"))) {\n            cardId = org.apache.wicket.validation.validator.CreditCardValidator.VISA_ELECTRON;\n            returnValue = true;\n        }\n        return returnValue;\n    }\n\n    private boolean isMastercard(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 16) && isChecksumCorrect(creditCardNumber)) {\n            int firstTwoDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 2));\n            if ((firstTwoDigits >= 51) && (firstTwoDigits <= 55)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.MASTERCARD;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private java.lang.String getCardName() {\n        return (cardId > (-1)) && (cardId < org.apache.wicket.validation.validator.CreditCardValidator.creditCardNames.length) ? org.apache.wicket.validation.validator.CreditCardValidator.creditCardNames[cardId] : \"\";\n    }\n\n    private boolean isChecksumCorrect(java.lang.String creditCardNumber) {\n        java.lang.String input = creditCardNumber;\n        java.lang.String numberToCheck = input.replaceAll(\"[ -]\", \"\");\n        int nulOffset = '0';\n        int sum = 0;\n        for (int i = 1; i <= numberToCheck.length(); i++) {\n            int currentDigit = numberToCheck.charAt(numberToCheck.length() - i) - nulOffset;\n            if ((i % 2) == 0) {\n                currentDigit *= 2;\n                currentDigit = (currentDigit > 9) ? currentDigit - 9 : currentDigit;\n                sum += currentDigit;\n            } else {\n                sum += currentDigit;\n            }\n        }\n        return (sum % 10) == 0;\n    }\n}",
            "src_parent_type": "Class",
            "src_type": "Field"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Package",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Class",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "public static final int DISCOVER_CARD = 5;",
            "src_parent": "public class CreditCardValidator extends org.apache.wicket.validation.validator.AbstractValidator<java.lang.String> {\n    private static final long serialVersionUID = 1L;\n\n    private java.lang.String creditCardNumber = null;\n\n    private int cardId = -1;\n\n    public static final int INVALID = -1;\n\n    public static final int AMERICAN_EXPRESS = 0;\n\n    public static final int CHINA_UNIONPAY = 1;\n\n    public static final int DINERS_CLUB_CARTE_BLANCHE = 2;\n\n    public static final int DINERS_CLUB_INTERNATIONAL = 3;\n\n    public static final int DINERS_CLUB_US_AND_CANADA = 4;\n\n    public static final int DISCOVER_CARD = 5;\n\n    public static final int JCB = 6;\n\n    public static final int LASER = 7;\n\n    public static final int MAESTRO = 8;\n\n    public static final int MASTERCARD = 9;\n\n    public static final int SOLO = 10;\n\n    public static final int SWITCH = 11;\n\n    public static final int VISA = 12;\n\n    public static final int VISA_ELECTRON = 13;\n\n    private static final java.lang.String[] creditCardNames = new java.lang.String[]{ \"American Express\", \"China UnionPay\", \"Diners Club Carte Blanche\", \"Diners Club International\", \"Diners Club US & Canada\", \"Discover Card\", \"JCB\", \"Laser\", \"Maestro\", \"MasterCard\", \"Solo\", \"Switch\", \"Visa\", \"Visa Electron\" };\n\n    @java.lang.Override\n    protected void onValidate(org.apache.wicket.validation.IValidatable<java.lang.String> validatable) {\n        creditCardNumber = validatable.getValue();\n        if (!isLengthAndPrefixCorrect(creditCardNumber)) {\n            error(validatable);\n        }\n    }\n\n    private boolean isLengthAndPrefixCorrect(java.lang.String creditCardNumber) {\n        if (creditCardNumber != null) {\n            creditCardNumber = creditCardNumber.replaceAll(\"[ -]\", \"\");\n        }\n        if (((creditCardNumber != null) && (creditCardNumber.length() >= 12)) && (creditCardNumber.length() <= 19)) {\n            if (isAmericanExpress(creditCardNumber)) {\n                return true;\n            } else if (isChinaUnionPay(creditCardNumber)) {\n                return true;\n            } else if (isDinersClubCarteBlanche(creditCardNumber)) {\n                return true;\n            } else if (isDinersClubInternational(creditCardNumber)) {\n                return true;\n            } else if (isDinersClubUsAndCanada(creditCardNumber)) {\n                return true;\n            } else if (isDiscoverCard(creditCardNumber)) {\n                return true;\n            } else if (isJCB(creditCardNumber)) {\n                return true;\n            } else if (isLaser(creditCardNumber)) {\n                return true;\n            } else if (isMaestro(creditCardNumber)) {\n                return true;\n            } else if (isMastercard(creditCardNumber)) {\n                return true;\n            } else if (isSolo(creditCardNumber)) {\n                return true;\n            } else if (isSwitch(creditCardNumber)) {\n                return true;\n            } else if (isVisa(creditCardNumber)) {\n                return true;\n            } else if (isVisaElectron(creditCardNumber)) {\n                return true;\n            } else if (isUnknown(creditCardNumber)) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    protected boolean isUnknown(java.lang.String creditCardNumber) {\n        return false;\n    }\n\n    private boolean isAmericanExpress(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 15) && (creditCardNumber.startsWith(\"34\") || creditCardNumber.startsWith(\"37\"))) {\n            if (isChecksumCorrect(creditCardNumber)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.AMERICAN_EXPRESS;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isChinaUnionPay(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() >= 16) && (creditCardNumber.length() <= 19)) && creditCardNumber.startsWith(\"622\")) {\n            int firstDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 5));\n            if ((firstDigits >= 622126) && (firstDigits <= 622925)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.CHINA_UNIONPAY;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isDinersClubCarteBlanche(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 14) && creditCardNumber.startsWith(\"30\")) {\n            int firstDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 3));\n            if (((firstDigits >= 300) && (firstDigits <= 305)) && isChecksumCorrect(creditCardNumber)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.DINERS_CLUB_CARTE_BLANCHE;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isDinersClubInternational(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() == 14) && creditCardNumber.startsWith(\"36\")) && isChecksumCorrect(creditCardNumber)) {\n            cardId = org.apache.wicket.validation.validator.CreditCardValidator.DINERS_CLUB_INTERNATIONAL;\n            returnValue = true;\n        }\n        return returnValue;\n    }\n\n    private boolean isDinersClubUsAndCanada(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() == 16) && (creditCardNumber.startsWith(\"54\") || creditCardNumber.startsWith(\"55\"))) && isChecksumCorrect(creditCardNumber)) {\n            cardId = org.apache.wicket.validation.validator.CreditCardValidator.DINERS_CLUB_US_AND_CANADA;\n            returnValue = true;\n        }\n        return returnValue;\n    }\n\n    private boolean isDiscoverCard(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() == 16) && creditCardNumber.startsWith(\"6\")) && isChecksumCorrect(creditCardNumber)) {\n            int firstThreeDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 3));\n            int firstSixDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 6));\n            if (((creditCardNumber.startsWith(\"6011\") || creditCardNumber.startsWith(\"65\")) || ((firstThreeDigits >= 644) && (firstThreeDigits <= 649))) || ((firstSixDigits >= 622126) && (firstSixDigits <= 622925))) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.DISCOVER_CARD;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isJCB(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 16) && isChecksumCorrect(creditCardNumber)) {\n            int firstFourDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 4));\n            if ((firstFourDigits >= 3528) && (firstFourDigits <= 3589)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.JCB;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isLaser(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() >= 16) && (creditCardNumber.length() <= 19)) && isChecksumCorrect(creditCardNumber)) {\n            if (((creditCardNumber.startsWith(\"6304\") || creditCardNumber.startsWith(\"6706\")) || creditCardNumber.startsWith(\"6771\")) || creditCardNumber.startsWith(\"6709\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.LASER;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isMaestro(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() >= 12) && (creditCardNumber.length() <= 19)) && isChecksumCorrect(creditCardNumber)) {\n            if ((((((creditCardNumber.startsWith(\"5018\") || creditCardNumber.startsWith(\"5020\")) || creditCardNumber.startsWith(\"5038\")) || creditCardNumber.startsWith(\"6304\")) || creditCardNumber.startsWith(\"6759\")) || creditCardNumber.startsWith(\"6761\")) || creditCardNumber.startsWith(\"6763\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.MAESTRO;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isSolo(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((((creditCardNumber.length() == 16) || (creditCardNumber.length() == 18)) || (creditCardNumber.length() == 19)) && isChecksumCorrect(creditCardNumber)) {\n            if (creditCardNumber.startsWith(\"6334\") || creditCardNumber.startsWith(\"6767\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.SOLO;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isSwitch(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((((creditCardNumber.length() == 16) || (creditCardNumber.length() == 18)) || (creditCardNumber.length() == 19)) && isChecksumCorrect(creditCardNumber)) {\n            if (((((((creditCardNumber.startsWith(\"4903\") || creditCardNumber.startsWith(\"4905\")) || creditCardNumber.startsWith(\"4911\")) || creditCardNumber.startsWith(\"4936\")) || creditCardNumber.startsWith(\"564182\")) || creditCardNumber.startsWith(\"633110\")) || creditCardNumber.startsWith(\"6333\")) || creditCardNumber.startsWith(\"6759\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.SWITCH;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isVisa(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 13) || (creditCardNumber.length() == 16)) {\n            if (creditCardNumber.startsWith(\"4\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.SWITCH;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isVisaElectron(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 16) && ((((creditCardNumber.startsWith(\"417500\") || creditCardNumber.startsWith(\"4917\")) || creditCardNumber.startsWith(\"4913\")) || creditCardNumber.startsWith(\"4508\")) || creditCardNumber.startsWith(\"4844\"))) {\n            cardId = org.apache.wicket.validation.validator.CreditCardValidator.VISA_ELECTRON;\n            returnValue = true;\n        }\n        return returnValue;\n    }\n\n    private boolean isMastercard(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 16) && isChecksumCorrect(creditCardNumber)) {\n            int firstTwoDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 2));\n            if ((firstTwoDigits >= 51) && (firstTwoDigits <= 55)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.MASTERCARD;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private java.lang.String getCardName() {\n        return (cardId > (-1)) && (cardId < org.apache.wicket.validation.validator.CreditCardValidator.creditCardNames.length) ? org.apache.wicket.validation.validator.CreditCardValidator.creditCardNames[cardId] : \"\";\n    }\n\n    private boolean isChecksumCorrect(java.lang.String creditCardNumber) {\n        java.lang.String input = creditCardNumber;\n        java.lang.String numberToCheck = input.replaceAll(\"[ -]\", \"\");\n        int nulOffset = '0';\n        int sum = 0;\n        for (int i = 1; i <= numberToCheck.length(); i++) {\n            int currentDigit = numberToCheck.charAt(numberToCheck.length() - i) - nulOffset;\n            if ((i % 2) == 0) {\n                currentDigit *= 2;\n                currentDigit = (currentDigit > 9) ? currentDigit - 9 : currentDigit;\n                sum += currentDigit;\n            } else {\n                sum += currentDigit;\n            }\n        }\n        return (sum % 10) == 0;\n    }\n}",
            "src_parent_type": "Class",
            "src_type": "Field"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Package",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Class",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "public static final int JCB = 6;",
            "src_parent": "public class CreditCardValidator extends org.apache.wicket.validation.validator.AbstractValidator<java.lang.String> {\n    private static final long serialVersionUID = 1L;\n\n    private java.lang.String creditCardNumber = null;\n\n    private int cardId = -1;\n\n    public static final int INVALID = -1;\n\n    public static final int AMERICAN_EXPRESS = 0;\n\n    public static final int CHINA_UNIONPAY = 1;\n\n    public static final int DINERS_CLUB_CARTE_BLANCHE = 2;\n\n    public static final int DINERS_CLUB_INTERNATIONAL = 3;\n\n    public static final int DINERS_CLUB_US_AND_CANADA = 4;\n\n    public static final int DISCOVER_CARD = 5;\n\n    public static final int JCB = 6;\n\n    public static final int LASER = 7;\n\n    public static final int MAESTRO = 8;\n\n    public static final int MASTERCARD = 9;\n\n    public static final int SOLO = 10;\n\n    public static final int SWITCH = 11;\n\n    public static final int VISA = 12;\n\n    public static final int VISA_ELECTRON = 13;\n\n    private static final java.lang.String[] creditCardNames = new java.lang.String[]{ \"American Express\", \"China UnionPay\", \"Diners Club Carte Blanche\", \"Diners Club International\", \"Diners Club US & Canada\", \"Discover Card\", \"JCB\", \"Laser\", \"Maestro\", \"MasterCard\", \"Solo\", \"Switch\", \"Visa\", \"Visa Electron\" };\n\n    @java.lang.Override\n    protected void onValidate(org.apache.wicket.validation.IValidatable<java.lang.String> validatable) {\n        creditCardNumber = validatable.getValue();\n        if (!isLengthAndPrefixCorrect(creditCardNumber)) {\n            error(validatable);\n        }\n    }\n\n    private boolean isLengthAndPrefixCorrect(java.lang.String creditCardNumber) {\n        if (creditCardNumber != null) {\n            creditCardNumber = creditCardNumber.replaceAll(\"[ -]\", \"\");\n        }\n        if (((creditCardNumber != null) && (creditCardNumber.length() >= 12)) && (creditCardNumber.length() <= 19)) {\n            if (isAmericanExpress(creditCardNumber)) {\n                return true;\n            } else if (isChinaUnionPay(creditCardNumber)) {\n                return true;\n            } else if (isDinersClubCarteBlanche(creditCardNumber)) {\n                return true;\n            } else if (isDinersClubInternational(creditCardNumber)) {\n                return true;\n            } else if (isDinersClubUsAndCanada(creditCardNumber)) {\n                return true;\n            } else if (isDiscoverCard(creditCardNumber)) {\n                return true;\n            } else if (isJCB(creditCardNumber)) {\n                return true;\n            } else if (isLaser(creditCardNumber)) {\n                return true;\n            } else if (isMaestro(creditCardNumber)) {\n                return true;\n            } else if (isMastercard(creditCardNumber)) {\n                return true;\n            } else if (isSolo(creditCardNumber)) {\n                return true;\n            } else if (isSwitch(creditCardNumber)) {\n                return true;\n            } else if (isVisa(creditCardNumber)) {\n                return true;\n            } else if (isVisaElectron(creditCardNumber)) {\n                return true;\n            } else if (isUnknown(creditCardNumber)) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    protected boolean isUnknown(java.lang.String creditCardNumber) {\n        return false;\n    }\n\n    private boolean isAmericanExpress(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 15) && (creditCardNumber.startsWith(\"34\") || creditCardNumber.startsWith(\"37\"))) {\n            if (isChecksumCorrect(creditCardNumber)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.AMERICAN_EXPRESS;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isChinaUnionPay(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() >= 16) && (creditCardNumber.length() <= 19)) && creditCardNumber.startsWith(\"622\")) {\n            int firstDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 5));\n            if ((firstDigits >= 622126) && (firstDigits <= 622925)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.CHINA_UNIONPAY;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isDinersClubCarteBlanche(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 14) && creditCardNumber.startsWith(\"30\")) {\n            int firstDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 3));\n            if (((firstDigits >= 300) && (firstDigits <= 305)) && isChecksumCorrect(creditCardNumber)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.DINERS_CLUB_CARTE_BLANCHE;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isDinersClubInternational(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() == 14) && creditCardNumber.startsWith(\"36\")) && isChecksumCorrect(creditCardNumber)) {\n            cardId = org.apache.wicket.validation.validator.CreditCardValidator.DINERS_CLUB_INTERNATIONAL;\n            returnValue = true;\n        }\n        return returnValue;\n    }\n\n    private boolean isDinersClubUsAndCanada(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() == 16) && (creditCardNumber.startsWith(\"54\") || creditCardNumber.startsWith(\"55\"))) && isChecksumCorrect(creditCardNumber)) {\n            cardId = org.apache.wicket.validation.validator.CreditCardValidator.DINERS_CLUB_US_AND_CANADA;\n            returnValue = true;\n        }\n        return returnValue;\n    }\n\n    private boolean isDiscoverCard(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() == 16) && creditCardNumber.startsWith(\"6\")) && isChecksumCorrect(creditCardNumber)) {\n            int firstThreeDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 3));\n            int firstSixDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 6));\n            if (((creditCardNumber.startsWith(\"6011\") || creditCardNumber.startsWith(\"65\")) || ((firstThreeDigits >= 644) && (firstThreeDigits <= 649))) || ((firstSixDigits >= 622126) && (firstSixDigits <= 622925))) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.DISCOVER_CARD;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isJCB(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 16) && isChecksumCorrect(creditCardNumber)) {\n            int firstFourDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 4));\n            if ((firstFourDigits >= 3528) && (firstFourDigits <= 3589)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.JCB;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isLaser(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() >= 16) && (creditCardNumber.length() <= 19)) && isChecksumCorrect(creditCardNumber)) {\n            if (((creditCardNumber.startsWith(\"6304\") || creditCardNumber.startsWith(\"6706\")) || creditCardNumber.startsWith(\"6771\")) || creditCardNumber.startsWith(\"6709\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.LASER;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isMaestro(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() >= 12) && (creditCardNumber.length() <= 19)) && isChecksumCorrect(creditCardNumber)) {\n            if ((((((creditCardNumber.startsWith(\"5018\") || creditCardNumber.startsWith(\"5020\")) || creditCardNumber.startsWith(\"5038\")) || creditCardNumber.startsWith(\"6304\")) || creditCardNumber.startsWith(\"6759\")) || creditCardNumber.startsWith(\"6761\")) || creditCardNumber.startsWith(\"6763\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.MAESTRO;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isSolo(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((((creditCardNumber.length() == 16) || (creditCardNumber.length() == 18)) || (creditCardNumber.length() == 19)) && isChecksumCorrect(creditCardNumber)) {\n            if (creditCardNumber.startsWith(\"6334\") || creditCardNumber.startsWith(\"6767\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.SOLO;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isSwitch(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((((creditCardNumber.length() == 16) || (creditCardNumber.length() == 18)) || (creditCardNumber.length() == 19)) && isChecksumCorrect(creditCardNumber)) {\n            if (((((((creditCardNumber.startsWith(\"4903\") || creditCardNumber.startsWith(\"4905\")) || creditCardNumber.startsWith(\"4911\")) || creditCardNumber.startsWith(\"4936\")) || creditCardNumber.startsWith(\"564182\")) || creditCardNumber.startsWith(\"633110\")) || creditCardNumber.startsWith(\"6333\")) || creditCardNumber.startsWith(\"6759\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.SWITCH;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isVisa(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 13) || (creditCardNumber.length() == 16)) {\n            if (creditCardNumber.startsWith(\"4\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.SWITCH;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isVisaElectron(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 16) && ((((creditCardNumber.startsWith(\"417500\") || creditCardNumber.startsWith(\"4917\")) || creditCardNumber.startsWith(\"4913\")) || creditCardNumber.startsWith(\"4508\")) || creditCardNumber.startsWith(\"4844\"))) {\n            cardId = org.apache.wicket.validation.validator.CreditCardValidator.VISA_ELECTRON;\n            returnValue = true;\n        }\n        return returnValue;\n    }\n\n    private boolean isMastercard(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 16) && isChecksumCorrect(creditCardNumber)) {\n            int firstTwoDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 2));\n            if ((firstTwoDigits >= 51) && (firstTwoDigits <= 55)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.MASTERCARD;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private java.lang.String getCardName() {\n        return (cardId > (-1)) && (cardId < org.apache.wicket.validation.validator.CreditCardValidator.creditCardNames.length) ? org.apache.wicket.validation.validator.CreditCardValidator.creditCardNames[cardId] : \"\";\n    }\n\n    private boolean isChecksumCorrect(java.lang.String creditCardNumber) {\n        java.lang.String input = creditCardNumber;\n        java.lang.String numberToCheck = input.replaceAll(\"[ -]\", \"\");\n        int nulOffset = '0';\n        int sum = 0;\n        for (int i = 1; i <= numberToCheck.length(); i++) {\n            int currentDigit = numberToCheck.charAt(numberToCheck.length() - i) - nulOffset;\n            if ((i % 2) == 0) {\n                currentDigit *= 2;\n                currentDigit = (currentDigit > 9) ? currentDigit - 9 : currentDigit;\n                sum += currentDigit;\n            } else {\n                sum += currentDigit;\n            }\n        }\n        return (sum % 10) == 0;\n    }\n}",
            "src_parent_type": "Class",
            "src_type": "Field"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Package",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Class",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "public static final int LASER = 7;",
            "src_parent": "public class CreditCardValidator extends org.apache.wicket.validation.validator.AbstractValidator<java.lang.String> {\n    private static final long serialVersionUID = 1L;\n\n    private java.lang.String creditCardNumber = null;\n\n    private int cardId = -1;\n\n    public static final int INVALID = -1;\n\n    public static final int AMERICAN_EXPRESS = 0;\n\n    public static final int CHINA_UNIONPAY = 1;\n\n    public static final int DINERS_CLUB_CARTE_BLANCHE = 2;\n\n    public static final int DINERS_CLUB_INTERNATIONAL = 3;\n\n    public static final int DINERS_CLUB_US_AND_CANADA = 4;\n\n    public static final int DISCOVER_CARD = 5;\n\n    public static final int JCB = 6;\n\n    public static final int LASER = 7;\n\n    public static final int MAESTRO = 8;\n\n    public static final int MASTERCARD = 9;\n\n    public static final int SOLO = 10;\n\n    public static final int SWITCH = 11;\n\n    public static final int VISA = 12;\n\n    public static final int VISA_ELECTRON = 13;\n\n    private static final java.lang.String[] creditCardNames = new java.lang.String[]{ \"American Express\", \"China UnionPay\", \"Diners Club Carte Blanche\", \"Diners Club International\", \"Diners Club US & Canada\", \"Discover Card\", \"JCB\", \"Laser\", \"Maestro\", \"MasterCard\", \"Solo\", \"Switch\", \"Visa\", \"Visa Electron\" };\n\n    @java.lang.Override\n    protected void onValidate(org.apache.wicket.validation.IValidatable<java.lang.String> validatable) {\n        creditCardNumber = validatable.getValue();\n        if (!isLengthAndPrefixCorrect(creditCardNumber)) {\n            error(validatable);\n        }\n    }\n\n    private boolean isLengthAndPrefixCorrect(java.lang.String creditCardNumber) {\n        if (creditCardNumber != null) {\n            creditCardNumber = creditCardNumber.replaceAll(\"[ -]\", \"\");\n        }\n        if (((creditCardNumber != null) && (creditCardNumber.length() >= 12)) && (creditCardNumber.length() <= 19)) {\n            if (isAmericanExpress(creditCardNumber)) {\n                return true;\n            } else if (isChinaUnionPay(creditCardNumber)) {\n                return true;\n            } else if (isDinersClubCarteBlanche(creditCardNumber)) {\n                return true;\n            } else if (isDinersClubInternational(creditCardNumber)) {\n                return true;\n            } else if (isDinersClubUsAndCanada(creditCardNumber)) {\n                return true;\n            } else if (isDiscoverCard(creditCardNumber)) {\n                return true;\n            } else if (isJCB(creditCardNumber)) {\n                return true;\n            } else if (isLaser(creditCardNumber)) {\n                return true;\n            } else if (isMaestro(creditCardNumber)) {\n                return true;\n            } else if (isMastercard(creditCardNumber)) {\n                return true;\n            } else if (isSolo(creditCardNumber)) {\n                return true;\n            } else if (isSwitch(creditCardNumber)) {\n                return true;\n            } else if (isVisa(creditCardNumber)) {\n                return true;\n            } else if (isVisaElectron(creditCardNumber)) {\n                return true;\n            } else if (isUnknown(creditCardNumber)) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    protected boolean isUnknown(java.lang.String creditCardNumber) {\n        return false;\n    }\n\n    private boolean isAmericanExpress(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 15) && (creditCardNumber.startsWith(\"34\") || creditCardNumber.startsWith(\"37\"))) {\n            if (isChecksumCorrect(creditCardNumber)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.AMERICAN_EXPRESS;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isChinaUnionPay(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() >= 16) && (creditCardNumber.length() <= 19)) && creditCardNumber.startsWith(\"622\")) {\n            int firstDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 5));\n            if ((firstDigits >= 622126) && (firstDigits <= 622925)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.CHINA_UNIONPAY;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isDinersClubCarteBlanche(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 14) && creditCardNumber.startsWith(\"30\")) {\n            int firstDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 3));\n            if (((firstDigits >= 300) && (firstDigits <= 305)) && isChecksumCorrect(creditCardNumber)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.DINERS_CLUB_CARTE_BLANCHE;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isDinersClubInternational(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() == 14) && creditCardNumber.startsWith(\"36\")) && isChecksumCorrect(creditCardNumber)) {\n            cardId = org.apache.wicket.validation.validator.CreditCardValidator.DINERS_CLUB_INTERNATIONAL;\n            returnValue = true;\n        }\n        return returnValue;\n    }\n\n    private boolean isDinersClubUsAndCanada(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() == 16) && (creditCardNumber.startsWith(\"54\") || creditCardNumber.startsWith(\"55\"))) && isChecksumCorrect(creditCardNumber)) {\n            cardId = org.apache.wicket.validation.validator.CreditCardValidator.DINERS_CLUB_US_AND_CANADA;\n            returnValue = true;\n        }\n        return returnValue;\n    }\n\n    private boolean isDiscoverCard(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() == 16) && creditCardNumber.startsWith(\"6\")) && isChecksumCorrect(creditCardNumber)) {\n            int firstThreeDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 3));\n            int firstSixDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 6));\n            if (((creditCardNumber.startsWith(\"6011\") || creditCardNumber.startsWith(\"65\")) || ((firstThreeDigits >= 644) && (firstThreeDigits <= 649))) || ((firstSixDigits >= 622126) && (firstSixDigits <= 622925))) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.DISCOVER_CARD;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isJCB(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 16) && isChecksumCorrect(creditCardNumber)) {\n            int firstFourDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 4));\n            if ((firstFourDigits >= 3528) && (firstFourDigits <= 3589)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.JCB;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isLaser(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() >= 16) && (creditCardNumber.length() <= 19)) && isChecksumCorrect(creditCardNumber)) {\n            if (((creditCardNumber.startsWith(\"6304\") || creditCardNumber.startsWith(\"6706\")) || creditCardNumber.startsWith(\"6771\")) || creditCardNumber.startsWith(\"6709\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.LASER;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isMaestro(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() >= 12) && (creditCardNumber.length() <= 19)) && isChecksumCorrect(creditCardNumber)) {\n            if ((((((creditCardNumber.startsWith(\"5018\") || creditCardNumber.startsWith(\"5020\")) || creditCardNumber.startsWith(\"5038\")) || creditCardNumber.startsWith(\"6304\")) || creditCardNumber.startsWith(\"6759\")) || creditCardNumber.startsWith(\"6761\")) || creditCardNumber.startsWith(\"6763\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.MAESTRO;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isSolo(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((((creditCardNumber.length() == 16) || (creditCardNumber.length() == 18)) || (creditCardNumber.length() == 19)) && isChecksumCorrect(creditCardNumber)) {\n            if (creditCardNumber.startsWith(\"6334\") || creditCardNumber.startsWith(\"6767\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.SOLO;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isSwitch(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((((creditCardNumber.length() == 16) || (creditCardNumber.length() == 18)) || (creditCardNumber.length() == 19)) && isChecksumCorrect(creditCardNumber)) {\n            if (((((((creditCardNumber.startsWith(\"4903\") || creditCardNumber.startsWith(\"4905\")) || creditCardNumber.startsWith(\"4911\")) || creditCardNumber.startsWith(\"4936\")) || creditCardNumber.startsWith(\"564182\")) || creditCardNumber.startsWith(\"633110\")) || creditCardNumber.startsWith(\"6333\")) || creditCardNumber.startsWith(\"6759\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.SWITCH;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isVisa(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 13) || (creditCardNumber.length() == 16)) {\n            if (creditCardNumber.startsWith(\"4\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.SWITCH;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isVisaElectron(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 16) && ((((creditCardNumber.startsWith(\"417500\") || creditCardNumber.startsWith(\"4917\")) || creditCardNumber.startsWith(\"4913\")) || creditCardNumber.startsWith(\"4508\")) || creditCardNumber.startsWith(\"4844\"))) {\n            cardId = org.apache.wicket.validation.validator.CreditCardValidator.VISA_ELECTRON;\n            returnValue = true;\n        }\n        return returnValue;\n    }\n\n    private boolean isMastercard(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 16) && isChecksumCorrect(creditCardNumber)) {\n            int firstTwoDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 2));\n            if ((firstTwoDigits >= 51) && (firstTwoDigits <= 55)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.MASTERCARD;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private java.lang.String getCardName() {\n        return (cardId > (-1)) && (cardId < org.apache.wicket.validation.validator.CreditCardValidator.creditCardNames.length) ? org.apache.wicket.validation.validator.CreditCardValidator.creditCardNames[cardId] : \"\";\n    }\n\n    private boolean isChecksumCorrect(java.lang.String creditCardNumber) {\n        java.lang.String input = creditCardNumber;\n        java.lang.String numberToCheck = input.replaceAll(\"[ -]\", \"\");\n        int nulOffset = '0';\n        int sum = 0;\n        for (int i = 1; i <= numberToCheck.length(); i++) {\n            int currentDigit = numberToCheck.charAt(numberToCheck.length() - i) - nulOffset;\n            if ((i % 2) == 0) {\n                currentDigit *= 2;\n                currentDigit = (currentDigit > 9) ? currentDigit - 9 : currentDigit;\n                sum += currentDigit;\n            } else {\n                sum += currentDigit;\n            }\n        }\n        return (sum % 10) == 0;\n    }\n}",
            "src_parent_type": "Class",
            "src_type": "Field"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Package",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Class",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "public static final int MAESTRO = 8;",
            "src_parent": "public class CreditCardValidator extends org.apache.wicket.validation.validator.AbstractValidator<java.lang.String> {\n    private static final long serialVersionUID = 1L;\n\n    private java.lang.String creditCardNumber = null;\n\n    private int cardId = -1;\n\n    public static final int INVALID = -1;\n\n    public static final int AMERICAN_EXPRESS = 0;\n\n    public static final int CHINA_UNIONPAY = 1;\n\n    public static final int DINERS_CLUB_CARTE_BLANCHE = 2;\n\n    public static final int DINERS_CLUB_INTERNATIONAL = 3;\n\n    public static final int DINERS_CLUB_US_AND_CANADA = 4;\n\n    public static final int DISCOVER_CARD = 5;\n\n    public static final int JCB = 6;\n\n    public static final int LASER = 7;\n\n    public static final int MAESTRO = 8;\n\n    public static final int MASTERCARD = 9;\n\n    public static final int SOLO = 10;\n\n    public static final int SWITCH = 11;\n\n    public static final int VISA = 12;\n\n    public static final int VISA_ELECTRON = 13;\n\n    private static final java.lang.String[] creditCardNames = new java.lang.String[]{ \"American Express\", \"China UnionPay\", \"Diners Club Carte Blanche\", \"Diners Club International\", \"Diners Club US & Canada\", \"Discover Card\", \"JCB\", \"Laser\", \"Maestro\", \"MasterCard\", \"Solo\", \"Switch\", \"Visa\", \"Visa Electron\" };\n\n    @java.lang.Override\n    protected void onValidate(org.apache.wicket.validation.IValidatable<java.lang.String> validatable) {\n        creditCardNumber = validatable.getValue();\n        if (!isLengthAndPrefixCorrect(creditCardNumber)) {\n            error(validatable);\n        }\n    }\n\n    private boolean isLengthAndPrefixCorrect(java.lang.String creditCardNumber) {\n        if (creditCardNumber != null) {\n            creditCardNumber = creditCardNumber.replaceAll(\"[ -]\", \"\");\n        }\n        if (((creditCardNumber != null) && (creditCardNumber.length() >= 12)) && (creditCardNumber.length() <= 19)) {\n            if (isAmericanExpress(creditCardNumber)) {\n                return true;\n            } else if (isChinaUnionPay(creditCardNumber)) {\n                return true;\n            } else if (isDinersClubCarteBlanche(creditCardNumber)) {\n                return true;\n            } else if (isDinersClubInternational(creditCardNumber)) {\n                return true;\n            } else if (isDinersClubUsAndCanada(creditCardNumber)) {\n                return true;\n            } else if (isDiscoverCard(creditCardNumber)) {\n                return true;\n            } else if (isJCB(creditCardNumber)) {\n                return true;\n            } else if (isLaser(creditCardNumber)) {\n                return true;\n            } else if (isMaestro(creditCardNumber)) {\n                return true;\n            } else if (isMastercard(creditCardNumber)) {\n                return true;\n            } else if (isSolo(creditCardNumber)) {\n                return true;\n            } else if (isSwitch(creditCardNumber)) {\n                return true;\n            } else if (isVisa(creditCardNumber)) {\n                return true;\n            } else if (isVisaElectron(creditCardNumber)) {\n                return true;\n            } else if (isUnknown(creditCardNumber)) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    protected boolean isUnknown(java.lang.String creditCardNumber) {\n        return false;\n    }\n\n    private boolean isAmericanExpress(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 15) && (creditCardNumber.startsWith(\"34\") || creditCardNumber.startsWith(\"37\"))) {\n            if (isChecksumCorrect(creditCardNumber)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.AMERICAN_EXPRESS;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isChinaUnionPay(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() >= 16) && (creditCardNumber.length() <= 19)) && creditCardNumber.startsWith(\"622\")) {\n            int firstDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 5));\n            if ((firstDigits >= 622126) && (firstDigits <= 622925)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.CHINA_UNIONPAY;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isDinersClubCarteBlanche(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 14) && creditCardNumber.startsWith(\"30\")) {\n            int firstDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 3));\n            if (((firstDigits >= 300) && (firstDigits <= 305)) && isChecksumCorrect(creditCardNumber)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.DINERS_CLUB_CARTE_BLANCHE;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isDinersClubInternational(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() == 14) && creditCardNumber.startsWith(\"36\")) && isChecksumCorrect(creditCardNumber)) {\n            cardId = org.apache.wicket.validation.validator.CreditCardValidator.DINERS_CLUB_INTERNATIONAL;\n            returnValue = true;\n        }\n        return returnValue;\n    }\n\n    private boolean isDinersClubUsAndCanada(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() == 16) && (creditCardNumber.startsWith(\"54\") || creditCardNumber.startsWith(\"55\"))) && isChecksumCorrect(creditCardNumber)) {\n            cardId = org.apache.wicket.validation.validator.CreditCardValidator.DINERS_CLUB_US_AND_CANADA;\n            returnValue = true;\n        }\n        return returnValue;\n    }\n\n    private boolean isDiscoverCard(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() == 16) && creditCardNumber.startsWith(\"6\")) && isChecksumCorrect(creditCardNumber)) {\n            int firstThreeDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 3));\n            int firstSixDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 6));\n            if (((creditCardNumber.startsWith(\"6011\") || creditCardNumber.startsWith(\"65\")) || ((firstThreeDigits >= 644) && (firstThreeDigits <= 649))) || ((firstSixDigits >= 622126) && (firstSixDigits <= 622925))) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.DISCOVER_CARD;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isJCB(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 16) && isChecksumCorrect(creditCardNumber)) {\n            int firstFourDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 4));\n            if ((firstFourDigits >= 3528) && (firstFourDigits <= 3589)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.JCB;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isLaser(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() >= 16) && (creditCardNumber.length() <= 19)) && isChecksumCorrect(creditCardNumber)) {\n            if (((creditCardNumber.startsWith(\"6304\") || creditCardNumber.startsWith(\"6706\")) || creditCardNumber.startsWith(\"6771\")) || creditCardNumber.startsWith(\"6709\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.LASER;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isMaestro(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() >= 12) && (creditCardNumber.length() <= 19)) && isChecksumCorrect(creditCardNumber)) {\n            if ((((((creditCardNumber.startsWith(\"5018\") || creditCardNumber.startsWith(\"5020\")) || creditCardNumber.startsWith(\"5038\")) || creditCardNumber.startsWith(\"6304\")) || creditCardNumber.startsWith(\"6759\")) || creditCardNumber.startsWith(\"6761\")) || creditCardNumber.startsWith(\"6763\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.MAESTRO;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isSolo(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((((creditCardNumber.length() == 16) || (creditCardNumber.length() == 18)) || (creditCardNumber.length() == 19)) && isChecksumCorrect(creditCardNumber)) {\n            if (creditCardNumber.startsWith(\"6334\") || creditCardNumber.startsWith(\"6767\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.SOLO;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isSwitch(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((((creditCardNumber.length() == 16) || (creditCardNumber.length() == 18)) || (creditCardNumber.length() == 19)) && isChecksumCorrect(creditCardNumber)) {\n            if (((((((creditCardNumber.startsWith(\"4903\") || creditCardNumber.startsWith(\"4905\")) || creditCardNumber.startsWith(\"4911\")) || creditCardNumber.startsWith(\"4936\")) || creditCardNumber.startsWith(\"564182\")) || creditCardNumber.startsWith(\"633110\")) || creditCardNumber.startsWith(\"6333\")) || creditCardNumber.startsWith(\"6759\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.SWITCH;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isVisa(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 13) || (creditCardNumber.length() == 16)) {\n            if (creditCardNumber.startsWith(\"4\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.SWITCH;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isVisaElectron(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 16) && ((((creditCardNumber.startsWith(\"417500\") || creditCardNumber.startsWith(\"4917\")) || creditCardNumber.startsWith(\"4913\")) || creditCardNumber.startsWith(\"4508\")) || creditCardNumber.startsWith(\"4844\"))) {\n            cardId = org.apache.wicket.validation.validator.CreditCardValidator.VISA_ELECTRON;\n            returnValue = true;\n        }\n        return returnValue;\n    }\n\n    private boolean isMastercard(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 16) && isChecksumCorrect(creditCardNumber)) {\n            int firstTwoDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 2));\n            if ((firstTwoDigits >= 51) && (firstTwoDigits <= 55)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.MASTERCARD;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private java.lang.String getCardName() {\n        return (cardId > (-1)) && (cardId < org.apache.wicket.validation.validator.CreditCardValidator.creditCardNames.length) ? org.apache.wicket.validation.validator.CreditCardValidator.creditCardNames[cardId] : \"\";\n    }\n\n    private boolean isChecksumCorrect(java.lang.String creditCardNumber) {\n        java.lang.String input = creditCardNumber;\n        java.lang.String numberToCheck = input.replaceAll(\"[ -]\", \"\");\n        int nulOffset = '0';\n        int sum = 0;\n        for (int i = 1; i <= numberToCheck.length(); i++) {\n            int currentDigit = numberToCheck.charAt(numberToCheck.length() - i) - nulOffset;\n            if ((i % 2) == 0) {\n                currentDigit *= 2;\n                currentDigit = (currentDigit > 9) ? currentDigit - 9 : currentDigit;\n                sum += currentDigit;\n            } else {\n                sum += currentDigit;\n            }\n        }\n        return (sum % 10) == 0;\n    }\n}",
            "src_parent_type": "Class",
            "src_type": "Field"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Package",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Class",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "public static final int MASTERCARD = 9;",
            "src_parent": "public class CreditCardValidator extends org.apache.wicket.validation.validator.AbstractValidator<java.lang.String> {\n    private static final long serialVersionUID = 1L;\n\n    private java.lang.String creditCardNumber = null;\n\n    private int cardId = -1;\n\n    public static final int INVALID = -1;\n\n    public static final int AMERICAN_EXPRESS = 0;\n\n    public static final int CHINA_UNIONPAY = 1;\n\n    public static final int DINERS_CLUB_CARTE_BLANCHE = 2;\n\n    public static final int DINERS_CLUB_INTERNATIONAL = 3;\n\n    public static final int DINERS_CLUB_US_AND_CANADA = 4;\n\n    public static final int DISCOVER_CARD = 5;\n\n    public static final int JCB = 6;\n\n    public static final int LASER = 7;\n\n    public static final int MAESTRO = 8;\n\n    public static final int MASTERCARD = 9;\n\n    public static final int SOLO = 10;\n\n    public static final int SWITCH = 11;\n\n    public static final int VISA = 12;\n\n    public static final int VISA_ELECTRON = 13;\n\n    private static final java.lang.String[] creditCardNames = new java.lang.String[]{ \"American Express\", \"China UnionPay\", \"Diners Club Carte Blanche\", \"Diners Club International\", \"Diners Club US & Canada\", \"Discover Card\", \"JCB\", \"Laser\", \"Maestro\", \"MasterCard\", \"Solo\", \"Switch\", \"Visa\", \"Visa Electron\" };\n\n    @java.lang.Override\n    protected void onValidate(org.apache.wicket.validation.IValidatable<java.lang.String> validatable) {\n        creditCardNumber = validatable.getValue();\n        if (!isLengthAndPrefixCorrect(creditCardNumber)) {\n            error(validatable);\n        }\n    }\n\n    private boolean isLengthAndPrefixCorrect(java.lang.String creditCardNumber) {\n        if (creditCardNumber != null) {\n            creditCardNumber = creditCardNumber.replaceAll(\"[ -]\", \"\");\n        }\n        if (((creditCardNumber != null) && (creditCardNumber.length() >= 12)) && (creditCardNumber.length() <= 19)) {\n            if (isAmericanExpress(creditCardNumber)) {\n                return true;\n            } else if (isChinaUnionPay(creditCardNumber)) {\n                return true;\n            } else if (isDinersClubCarteBlanche(creditCardNumber)) {\n                return true;\n            } else if (isDinersClubInternational(creditCardNumber)) {\n                return true;\n            } else if (isDinersClubUsAndCanada(creditCardNumber)) {\n                return true;\n            } else if (isDiscoverCard(creditCardNumber)) {\n                return true;\n            } else if (isJCB(creditCardNumber)) {\n                return true;\n            } else if (isLaser(creditCardNumber)) {\n                return true;\n            } else if (isMaestro(creditCardNumber)) {\n                return true;\n            } else if (isMastercard(creditCardNumber)) {\n                return true;\n            } else if (isSolo(creditCardNumber)) {\n                return true;\n            } else if (isSwitch(creditCardNumber)) {\n                return true;\n            } else if (isVisa(creditCardNumber)) {\n                return true;\n            } else if (isVisaElectron(creditCardNumber)) {\n                return true;\n            } else if (isUnknown(creditCardNumber)) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    protected boolean isUnknown(java.lang.String creditCardNumber) {\n        return false;\n    }\n\n    private boolean isAmericanExpress(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 15) && (creditCardNumber.startsWith(\"34\") || creditCardNumber.startsWith(\"37\"))) {\n            if (isChecksumCorrect(creditCardNumber)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.AMERICAN_EXPRESS;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isChinaUnionPay(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() >= 16) && (creditCardNumber.length() <= 19)) && creditCardNumber.startsWith(\"622\")) {\n            int firstDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 5));\n            if ((firstDigits >= 622126) && (firstDigits <= 622925)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.CHINA_UNIONPAY;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isDinersClubCarteBlanche(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 14) && creditCardNumber.startsWith(\"30\")) {\n            int firstDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 3));\n            if (((firstDigits >= 300) && (firstDigits <= 305)) && isChecksumCorrect(creditCardNumber)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.DINERS_CLUB_CARTE_BLANCHE;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isDinersClubInternational(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() == 14) && creditCardNumber.startsWith(\"36\")) && isChecksumCorrect(creditCardNumber)) {\n            cardId = org.apache.wicket.validation.validator.CreditCardValidator.DINERS_CLUB_INTERNATIONAL;\n            returnValue = true;\n        }\n        return returnValue;\n    }\n\n    private boolean isDinersClubUsAndCanada(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() == 16) && (creditCardNumber.startsWith(\"54\") || creditCardNumber.startsWith(\"55\"))) && isChecksumCorrect(creditCardNumber)) {\n            cardId = org.apache.wicket.validation.validator.CreditCardValidator.DINERS_CLUB_US_AND_CANADA;\n            returnValue = true;\n        }\n        return returnValue;\n    }\n\n    private boolean isDiscoverCard(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() == 16) && creditCardNumber.startsWith(\"6\")) && isChecksumCorrect(creditCardNumber)) {\n            int firstThreeDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 3));\n            int firstSixDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 6));\n            if (((creditCardNumber.startsWith(\"6011\") || creditCardNumber.startsWith(\"65\")) || ((firstThreeDigits >= 644) && (firstThreeDigits <= 649))) || ((firstSixDigits >= 622126) && (firstSixDigits <= 622925))) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.DISCOVER_CARD;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isJCB(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 16) && isChecksumCorrect(creditCardNumber)) {\n            int firstFourDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 4));\n            if ((firstFourDigits >= 3528) && (firstFourDigits <= 3589)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.JCB;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isLaser(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() >= 16) && (creditCardNumber.length() <= 19)) && isChecksumCorrect(creditCardNumber)) {\n            if (((creditCardNumber.startsWith(\"6304\") || creditCardNumber.startsWith(\"6706\")) || creditCardNumber.startsWith(\"6771\")) || creditCardNumber.startsWith(\"6709\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.LASER;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isMaestro(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() >= 12) && (creditCardNumber.length() <= 19)) && isChecksumCorrect(creditCardNumber)) {\n            if ((((((creditCardNumber.startsWith(\"5018\") || creditCardNumber.startsWith(\"5020\")) || creditCardNumber.startsWith(\"5038\")) || creditCardNumber.startsWith(\"6304\")) || creditCardNumber.startsWith(\"6759\")) || creditCardNumber.startsWith(\"6761\")) || creditCardNumber.startsWith(\"6763\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.MAESTRO;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isSolo(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((((creditCardNumber.length() == 16) || (creditCardNumber.length() == 18)) || (creditCardNumber.length() == 19)) && isChecksumCorrect(creditCardNumber)) {\n            if (creditCardNumber.startsWith(\"6334\") || creditCardNumber.startsWith(\"6767\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.SOLO;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isSwitch(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((((creditCardNumber.length() == 16) || (creditCardNumber.length() == 18)) || (creditCardNumber.length() == 19)) && isChecksumCorrect(creditCardNumber)) {\n            if (((((((creditCardNumber.startsWith(\"4903\") || creditCardNumber.startsWith(\"4905\")) || creditCardNumber.startsWith(\"4911\")) || creditCardNumber.startsWith(\"4936\")) || creditCardNumber.startsWith(\"564182\")) || creditCardNumber.startsWith(\"633110\")) || creditCardNumber.startsWith(\"6333\")) || creditCardNumber.startsWith(\"6759\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.SWITCH;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isVisa(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 13) || (creditCardNumber.length() == 16)) {\n            if (creditCardNumber.startsWith(\"4\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.SWITCH;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isVisaElectron(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 16) && ((((creditCardNumber.startsWith(\"417500\") || creditCardNumber.startsWith(\"4917\")) || creditCardNumber.startsWith(\"4913\")) || creditCardNumber.startsWith(\"4508\")) || creditCardNumber.startsWith(\"4844\"))) {\n            cardId = org.apache.wicket.validation.validator.CreditCardValidator.VISA_ELECTRON;\n            returnValue = true;\n        }\n        return returnValue;\n    }\n\n    private boolean isMastercard(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 16) && isChecksumCorrect(creditCardNumber)) {\n            int firstTwoDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 2));\n            if ((firstTwoDigits >= 51) && (firstTwoDigits <= 55)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.MASTERCARD;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private java.lang.String getCardName() {\n        return (cardId > (-1)) && (cardId < org.apache.wicket.validation.validator.CreditCardValidator.creditCardNames.length) ? org.apache.wicket.validation.validator.CreditCardValidator.creditCardNames[cardId] : \"\";\n    }\n\n    private boolean isChecksumCorrect(java.lang.String creditCardNumber) {\n        java.lang.String input = creditCardNumber;\n        java.lang.String numberToCheck = input.replaceAll(\"[ -]\", \"\");\n        int nulOffset = '0';\n        int sum = 0;\n        for (int i = 1; i <= numberToCheck.length(); i++) {\n            int currentDigit = numberToCheck.charAt(numberToCheck.length() - i) - nulOffset;\n            if ((i % 2) == 0) {\n                currentDigit *= 2;\n                currentDigit = (currentDigit > 9) ? currentDigit - 9 : currentDigit;\n                sum += currentDigit;\n            } else {\n                sum += currentDigit;\n            }\n        }\n        return (sum % 10) == 0;\n    }\n}",
            "src_parent_type": "Class",
            "src_type": "Field"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Package",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Class",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "public static final int SOLO = 10;",
            "src_parent": "public class CreditCardValidator extends org.apache.wicket.validation.validator.AbstractValidator<java.lang.String> {\n    private static final long serialVersionUID = 1L;\n\n    private java.lang.String creditCardNumber = null;\n\n    private int cardId = -1;\n\n    public static final int INVALID = -1;\n\n    public static final int AMERICAN_EXPRESS = 0;\n\n    public static final int CHINA_UNIONPAY = 1;\n\n    public static final int DINERS_CLUB_CARTE_BLANCHE = 2;\n\n    public static final int DINERS_CLUB_INTERNATIONAL = 3;\n\n    public static final int DINERS_CLUB_US_AND_CANADA = 4;\n\n    public static final int DISCOVER_CARD = 5;\n\n    public static final int JCB = 6;\n\n    public static final int LASER = 7;\n\n    public static final int MAESTRO = 8;\n\n    public static final int MASTERCARD = 9;\n\n    public static final int SOLO = 10;\n\n    public static final int SWITCH = 11;\n\n    public static final int VISA = 12;\n\n    public static final int VISA_ELECTRON = 13;\n\n    private static final java.lang.String[] creditCardNames = new java.lang.String[]{ \"American Express\", \"China UnionPay\", \"Diners Club Carte Blanche\", \"Diners Club International\", \"Diners Club US & Canada\", \"Discover Card\", \"JCB\", \"Laser\", \"Maestro\", \"MasterCard\", \"Solo\", \"Switch\", \"Visa\", \"Visa Electron\" };\n\n    @java.lang.Override\n    protected void onValidate(org.apache.wicket.validation.IValidatable<java.lang.String> validatable) {\n        creditCardNumber = validatable.getValue();\n        if (!isLengthAndPrefixCorrect(creditCardNumber)) {\n            error(validatable);\n        }\n    }\n\n    private boolean isLengthAndPrefixCorrect(java.lang.String creditCardNumber) {\n        if (creditCardNumber != null) {\n            creditCardNumber = creditCardNumber.replaceAll(\"[ -]\", \"\");\n        }\n        if (((creditCardNumber != null) && (creditCardNumber.length() >= 12)) && (creditCardNumber.length() <= 19)) {\n            if (isAmericanExpress(creditCardNumber)) {\n                return true;\n            } else if (isChinaUnionPay(creditCardNumber)) {\n                return true;\n            } else if (isDinersClubCarteBlanche(creditCardNumber)) {\n                return true;\n            } else if (isDinersClubInternational(creditCardNumber)) {\n                return true;\n            } else if (isDinersClubUsAndCanada(creditCardNumber)) {\n                return true;\n            } else if (isDiscoverCard(creditCardNumber)) {\n                return true;\n            } else if (isJCB(creditCardNumber)) {\n                return true;\n            } else if (isLaser(creditCardNumber)) {\n                return true;\n            } else if (isMaestro(creditCardNumber)) {\n                return true;\n            } else if (isMastercard(creditCardNumber)) {\n                return true;\n            } else if (isSolo(creditCardNumber)) {\n                return true;\n            } else if (isSwitch(creditCardNumber)) {\n                return true;\n            } else if (isVisa(creditCardNumber)) {\n                return true;\n            } else if (isVisaElectron(creditCardNumber)) {\n                return true;\n            } else if (isUnknown(creditCardNumber)) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    protected boolean isUnknown(java.lang.String creditCardNumber) {\n        return false;\n    }\n\n    private boolean isAmericanExpress(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 15) && (creditCardNumber.startsWith(\"34\") || creditCardNumber.startsWith(\"37\"))) {\n            if (isChecksumCorrect(creditCardNumber)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.AMERICAN_EXPRESS;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isChinaUnionPay(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() >= 16) && (creditCardNumber.length() <= 19)) && creditCardNumber.startsWith(\"622\")) {\n            int firstDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 5));\n            if ((firstDigits >= 622126) && (firstDigits <= 622925)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.CHINA_UNIONPAY;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isDinersClubCarteBlanche(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 14) && creditCardNumber.startsWith(\"30\")) {\n            int firstDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 3));\n            if (((firstDigits >= 300) && (firstDigits <= 305)) && isChecksumCorrect(creditCardNumber)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.DINERS_CLUB_CARTE_BLANCHE;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isDinersClubInternational(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() == 14) && creditCardNumber.startsWith(\"36\")) && isChecksumCorrect(creditCardNumber)) {\n            cardId = org.apache.wicket.validation.validator.CreditCardValidator.DINERS_CLUB_INTERNATIONAL;\n            returnValue = true;\n        }\n        return returnValue;\n    }\n\n    private boolean isDinersClubUsAndCanada(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() == 16) && (creditCardNumber.startsWith(\"54\") || creditCardNumber.startsWith(\"55\"))) && isChecksumCorrect(creditCardNumber)) {\n            cardId = org.apache.wicket.validation.validator.CreditCardValidator.DINERS_CLUB_US_AND_CANADA;\n            returnValue = true;\n        }\n        return returnValue;\n    }\n\n    private boolean isDiscoverCard(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() == 16) && creditCardNumber.startsWith(\"6\")) && isChecksumCorrect(creditCardNumber)) {\n            int firstThreeDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 3));\n            int firstSixDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 6));\n            if (((creditCardNumber.startsWith(\"6011\") || creditCardNumber.startsWith(\"65\")) || ((firstThreeDigits >= 644) && (firstThreeDigits <= 649))) || ((firstSixDigits >= 622126) && (firstSixDigits <= 622925))) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.DISCOVER_CARD;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isJCB(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 16) && isChecksumCorrect(creditCardNumber)) {\n            int firstFourDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 4));\n            if ((firstFourDigits >= 3528) && (firstFourDigits <= 3589)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.JCB;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isLaser(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() >= 16) && (creditCardNumber.length() <= 19)) && isChecksumCorrect(creditCardNumber)) {\n            if (((creditCardNumber.startsWith(\"6304\") || creditCardNumber.startsWith(\"6706\")) || creditCardNumber.startsWith(\"6771\")) || creditCardNumber.startsWith(\"6709\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.LASER;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isMaestro(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() >= 12) && (creditCardNumber.length() <= 19)) && isChecksumCorrect(creditCardNumber)) {\n            if ((((((creditCardNumber.startsWith(\"5018\") || creditCardNumber.startsWith(\"5020\")) || creditCardNumber.startsWith(\"5038\")) || creditCardNumber.startsWith(\"6304\")) || creditCardNumber.startsWith(\"6759\")) || creditCardNumber.startsWith(\"6761\")) || creditCardNumber.startsWith(\"6763\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.MAESTRO;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isSolo(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((((creditCardNumber.length() == 16) || (creditCardNumber.length() == 18)) || (creditCardNumber.length() == 19)) && isChecksumCorrect(creditCardNumber)) {\n            if (creditCardNumber.startsWith(\"6334\") || creditCardNumber.startsWith(\"6767\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.SOLO;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isSwitch(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((((creditCardNumber.length() == 16) || (creditCardNumber.length() == 18)) || (creditCardNumber.length() == 19)) && isChecksumCorrect(creditCardNumber)) {\n            if (((((((creditCardNumber.startsWith(\"4903\") || creditCardNumber.startsWith(\"4905\")) || creditCardNumber.startsWith(\"4911\")) || creditCardNumber.startsWith(\"4936\")) || creditCardNumber.startsWith(\"564182\")) || creditCardNumber.startsWith(\"633110\")) || creditCardNumber.startsWith(\"6333\")) || creditCardNumber.startsWith(\"6759\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.SWITCH;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isVisa(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 13) || (creditCardNumber.length() == 16)) {\n            if (creditCardNumber.startsWith(\"4\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.SWITCH;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isVisaElectron(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 16) && ((((creditCardNumber.startsWith(\"417500\") || creditCardNumber.startsWith(\"4917\")) || creditCardNumber.startsWith(\"4913\")) || creditCardNumber.startsWith(\"4508\")) || creditCardNumber.startsWith(\"4844\"))) {\n            cardId = org.apache.wicket.validation.validator.CreditCardValidator.VISA_ELECTRON;\n            returnValue = true;\n        }\n        return returnValue;\n    }\n\n    private boolean isMastercard(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 16) && isChecksumCorrect(creditCardNumber)) {\n            int firstTwoDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 2));\n            if ((firstTwoDigits >= 51) && (firstTwoDigits <= 55)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.MASTERCARD;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private java.lang.String getCardName() {\n        return (cardId > (-1)) && (cardId < org.apache.wicket.validation.validator.CreditCardValidator.creditCardNames.length) ? org.apache.wicket.validation.validator.CreditCardValidator.creditCardNames[cardId] : \"\";\n    }\n\n    private boolean isChecksumCorrect(java.lang.String creditCardNumber) {\n        java.lang.String input = creditCardNumber;\n        java.lang.String numberToCheck = input.replaceAll(\"[ -]\", \"\");\n        int nulOffset = '0';\n        int sum = 0;\n        for (int i = 1; i <= numberToCheck.length(); i++) {\n            int currentDigit = numberToCheck.charAt(numberToCheck.length() - i) - nulOffset;\n            if ((i % 2) == 0) {\n                currentDigit *= 2;\n                currentDigit = (currentDigit > 9) ? currentDigit - 9 : currentDigit;\n                sum += currentDigit;\n            } else {\n                sum += currentDigit;\n            }\n        }\n        return (sum % 10) == 0;\n    }\n}",
            "src_parent_type": "Class",
            "src_type": "Field"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Package",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Class",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "public static final int SWITCH = 11;",
            "src_parent": "public class CreditCardValidator extends org.apache.wicket.validation.validator.AbstractValidator<java.lang.String> {\n    private static final long serialVersionUID = 1L;\n\n    private java.lang.String creditCardNumber = null;\n\n    private int cardId = -1;\n\n    public static final int INVALID = -1;\n\n    public static final int AMERICAN_EXPRESS = 0;\n\n    public static final int CHINA_UNIONPAY = 1;\n\n    public static final int DINERS_CLUB_CARTE_BLANCHE = 2;\n\n    public static final int DINERS_CLUB_INTERNATIONAL = 3;\n\n    public static final int DINERS_CLUB_US_AND_CANADA = 4;\n\n    public static final int DISCOVER_CARD = 5;\n\n    public static final int JCB = 6;\n\n    public static final int LASER = 7;\n\n    public static final int MAESTRO = 8;\n\n    public static final int MASTERCARD = 9;\n\n    public static final int SOLO = 10;\n\n    public static final int SWITCH = 11;\n\n    public static final int VISA = 12;\n\n    public static final int VISA_ELECTRON = 13;\n\n    private static final java.lang.String[] creditCardNames = new java.lang.String[]{ \"American Express\", \"China UnionPay\", \"Diners Club Carte Blanche\", \"Diners Club International\", \"Diners Club US & Canada\", \"Discover Card\", \"JCB\", \"Laser\", \"Maestro\", \"MasterCard\", \"Solo\", \"Switch\", \"Visa\", \"Visa Electron\" };\n\n    @java.lang.Override\n    protected void onValidate(org.apache.wicket.validation.IValidatable<java.lang.String> validatable) {\n        creditCardNumber = validatable.getValue();\n        if (!isLengthAndPrefixCorrect(creditCardNumber)) {\n            error(validatable);\n        }\n    }\n\n    private boolean isLengthAndPrefixCorrect(java.lang.String creditCardNumber) {\n        if (creditCardNumber != null) {\n            creditCardNumber = creditCardNumber.replaceAll(\"[ -]\", \"\");\n        }\n        if (((creditCardNumber != null) && (creditCardNumber.length() >= 12)) && (creditCardNumber.length() <= 19)) {\n            if (isAmericanExpress(creditCardNumber)) {\n                return true;\n            } else if (isChinaUnionPay(creditCardNumber)) {\n                return true;\n            } else if (isDinersClubCarteBlanche(creditCardNumber)) {\n                return true;\n            } else if (isDinersClubInternational(creditCardNumber)) {\n                return true;\n            } else if (isDinersClubUsAndCanada(creditCardNumber)) {\n                return true;\n            } else if (isDiscoverCard(creditCardNumber)) {\n                return true;\n            } else if (isJCB(creditCardNumber)) {\n                return true;\n            } else if (isLaser(creditCardNumber)) {\n                return true;\n            } else if (isMaestro(creditCardNumber)) {\n                return true;\n            } else if (isMastercard(creditCardNumber)) {\n                return true;\n            } else if (isSolo(creditCardNumber)) {\n                return true;\n            } else if (isSwitch(creditCardNumber)) {\n                return true;\n            } else if (isVisa(creditCardNumber)) {\n                return true;\n            } else if (isVisaElectron(creditCardNumber)) {\n                return true;\n            } else if (isUnknown(creditCardNumber)) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    protected boolean isUnknown(java.lang.String creditCardNumber) {\n        return false;\n    }\n\n    private boolean isAmericanExpress(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 15) && (creditCardNumber.startsWith(\"34\") || creditCardNumber.startsWith(\"37\"))) {\n            if (isChecksumCorrect(creditCardNumber)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.AMERICAN_EXPRESS;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isChinaUnionPay(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() >= 16) && (creditCardNumber.length() <= 19)) && creditCardNumber.startsWith(\"622\")) {\n            int firstDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 5));\n            if ((firstDigits >= 622126) && (firstDigits <= 622925)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.CHINA_UNIONPAY;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isDinersClubCarteBlanche(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 14) && creditCardNumber.startsWith(\"30\")) {\n            int firstDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 3));\n            if (((firstDigits >= 300) && (firstDigits <= 305)) && isChecksumCorrect(creditCardNumber)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.DINERS_CLUB_CARTE_BLANCHE;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isDinersClubInternational(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() == 14) && creditCardNumber.startsWith(\"36\")) && isChecksumCorrect(creditCardNumber)) {\n            cardId = org.apache.wicket.validation.validator.CreditCardValidator.DINERS_CLUB_INTERNATIONAL;\n            returnValue = true;\n        }\n        return returnValue;\n    }\n\n    private boolean isDinersClubUsAndCanada(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() == 16) && (creditCardNumber.startsWith(\"54\") || creditCardNumber.startsWith(\"55\"))) && isChecksumCorrect(creditCardNumber)) {\n            cardId = org.apache.wicket.validation.validator.CreditCardValidator.DINERS_CLUB_US_AND_CANADA;\n            returnValue = true;\n        }\n        return returnValue;\n    }\n\n    private boolean isDiscoverCard(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() == 16) && creditCardNumber.startsWith(\"6\")) && isChecksumCorrect(creditCardNumber)) {\n            int firstThreeDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 3));\n            int firstSixDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 6));\n            if (((creditCardNumber.startsWith(\"6011\") || creditCardNumber.startsWith(\"65\")) || ((firstThreeDigits >= 644) && (firstThreeDigits <= 649))) || ((firstSixDigits >= 622126) && (firstSixDigits <= 622925))) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.DISCOVER_CARD;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isJCB(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 16) && isChecksumCorrect(creditCardNumber)) {\n            int firstFourDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 4));\n            if ((firstFourDigits >= 3528) && (firstFourDigits <= 3589)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.JCB;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isLaser(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() >= 16) && (creditCardNumber.length() <= 19)) && isChecksumCorrect(creditCardNumber)) {\n            if (((creditCardNumber.startsWith(\"6304\") || creditCardNumber.startsWith(\"6706\")) || creditCardNumber.startsWith(\"6771\")) || creditCardNumber.startsWith(\"6709\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.LASER;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isMaestro(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() >= 12) && (creditCardNumber.length() <= 19)) && isChecksumCorrect(creditCardNumber)) {\n            if ((((((creditCardNumber.startsWith(\"5018\") || creditCardNumber.startsWith(\"5020\")) || creditCardNumber.startsWith(\"5038\")) || creditCardNumber.startsWith(\"6304\")) || creditCardNumber.startsWith(\"6759\")) || creditCardNumber.startsWith(\"6761\")) || creditCardNumber.startsWith(\"6763\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.MAESTRO;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isSolo(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((((creditCardNumber.length() == 16) || (creditCardNumber.length() == 18)) || (creditCardNumber.length() == 19)) && isChecksumCorrect(creditCardNumber)) {\n            if (creditCardNumber.startsWith(\"6334\") || creditCardNumber.startsWith(\"6767\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.SOLO;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isSwitch(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((((creditCardNumber.length() == 16) || (creditCardNumber.length() == 18)) || (creditCardNumber.length() == 19)) && isChecksumCorrect(creditCardNumber)) {\n            if (((((((creditCardNumber.startsWith(\"4903\") || creditCardNumber.startsWith(\"4905\")) || creditCardNumber.startsWith(\"4911\")) || creditCardNumber.startsWith(\"4936\")) || creditCardNumber.startsWith(\"564182\")) || creditCardNumber.startsWith(\"633110\")) || creditCardNumber.startsWith(\"6333\")) || creditCardNumber.startsWith(\"6759\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.SWITCH;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isVisa(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 13) || (creditCardNumber.length() == 16)) {\n            if (creditCardNumber.startsWith(\"4\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.SWITCH;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isVisaElectron(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 16) && ((((creditCardNumber.startsWith(\"417500\") || creditCardNumber.startsWith(\"4917\")) || creditCardNumber.startsWith(\"4913\")) || creditCardNumber.startsWith(\"4508\")) || creditCardNumber.startsWith(\"4844\"))) {\n            cardId = org.apache.wicket.validation.validator.CreditCardValidator.VISA_ELECTRON;\n            returnValue = true;\n        }\n        return returnValue;\n    }\n\n    private boolean isMastercard(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 16) && isChecksumCorrect(creditCardNumber)) {\n            int firstTwoDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 2));\n            if ((firstTwoDigits >= 51) && (firstTwoDigits <= 55)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.MASTERCARD;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private java.lang.String getCardName() {\n        return (cardId > (-1)) && (cardId < org.apache.wicket.validation.validator.CreditCardValidator.creditCardNames.length) ? org.apache.wicket.validation.validator.CreditCardValidator.creditCardNames[cardId] : \"\";\n    }\n\n    private boolean isChecksumCorrect(java.lang.String creditCardNumber) {\n        java.lang.String input = creditCardNumber;\n        java.lang.String numberToCheck = input.replaceAll(\"[ -]\", \"\");\n        int nulOffset = '0';\n        int sum = 0;\n        for (int i = 1; i <= numberToCheck.length(); i++) {\n            int currentDigit = numberToCheck.charAt(numberToCheck.length() - i) - nulOffset;\n            if ((i % 2) == 0) {\n                currentDigit *= 2;\n                currentDigit = (currentDigit > 9) ? currentDigit - 9 : currentDigit;\n                sum += currentDigit;\n            } else {\n                sum += currentDigit;\n            }\n        }\n        return (sum % 10) == 0;\n    }\n}",
            "src_parent_type": "Class",
            "src_type": "Field"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Package",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Class",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "public static final int VISA = 12;",
            "src_parent": "public class CreditCardValidator extends org.apache.wicket.validation.validator.AbstractValidator<java.lang.String> {\n    private static final long serialVersionUID = 1L;\n\n    private java.lang.String creditCardNumber = null;\n\n    private int cardId = -1;\n\n    public static final int INVALID = -1;\n\n    public static final int AMERICAN_EXPRESS = 0;\n\n    public static final int CHINA_UNIONPAY = 1;\n\n    public static final int DINERS_CLUB_CARTE_BLANCHE = 2;\n\n    public static final int DINERS_CLUB_INTERNATIONAL = 3;\n\n    public static final int DINERS_CLUB_US_AND_CANADA = 4;\n\n    public static final int DISCOVER_CARD = 5;\n\n    public static final int JCB = 6;\n\n    public static final int LASER = 7;\n\n    public static final int MAESTRO = 8;\n\n    public static final int MASTERCARD = 9;\n\n    public static final int SOLO = 10;\n\n    public static final int SWITCH = 11;\n\n    public static final int VISA = 12;\n\n    public static final int VISA_ELECTRON = 13;\n\n    private static final java.lang.String[] creditCardNames = new java.lang.String[]{ \"American Express\", \"China UnionPay\", \"Diners Club Carte Blanche\", \"Diners Club International\", \"Diners Club US & Canada\", \"Discover Card\", \"JCB\", \"Laser\", \"Maestro\", \"MasterCard\", \"Solo\", \"Switch\", \"Visa\", \"Visa Electron\" };\n\n    @java.lang.Override\n    protected void onValidate(org.apache.wicket.validation.IValidatable<java.lang.String> validatable) {\n        creditCardNumber = validatable.getValue();\n        if (!isLengthAndPrefixCorrect(creditCardNumber)) {\n            error(validatable);\n        }\n    }\n\n    private boolean isLengthAndPrefixCorrect(java.lang.String creditCardNumber) {\n        if (creditCardNumber != null) {\n            creditCardNumber = creditCardNumber.replaceAll(\"[ -]\", \"\");\n        }\n        if (((creditCardNumber != null) && (creditCardNumber.length() >= 12)) && (creditCardNumber.length() <= 19)) {\n            if (isAmericanExpress(creditCardNumber)) {\n                return true;\n            } else if (isChinaUnionPay(creditCardNumber)) {\n                return true;\n            } else if (isDinersClubCarteBlanche(creditCardNumber)) {\n                return true;\n            } else if (isDinersClubInternational(creditCardNumber)) {\n                return true;\n            } else if (isDinersClubUsAndCanada(creditCardNumber)) {\n                return true;\n            } else if (isDiscoverCard(creditCardNumber)) {\n                return true;\n            } else if (isJCB(creditCardNumber)) {\n                return true;\n            } else if (isLaser(creditCardNumber)) {\n                return true;\n            } else if (isMaestro(creditCardNumber)) {\n                return true;\n            } else if (isMastercard(creditCardNumber)) {\n                return true;\n            } else if (isSolo(creditCardNumber)) {\n                return true;\n            } else if (isSwitch(creditCardNumber)) {\n                return true;\n            } else if (isVisa(creditCardNumber)) {\n                return true;\n            } else if (isVisaElectron(creditCardNumber)) {\n                return true;\n            } else if (isUnknown(creditCardNumber)) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    protected boolean isUnknown(java.lang.String creditCardNumber) {\n        return false;\n    }\n\n    private boolean isAmericanExpress(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 15) && (creditCardNumber.startsWith(\"34\") || creditCardNumber.startsWith(\"37\"))) {\n            if (isChecksumCorrect(creditCardNumber)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.AMERICAN_EXPRESS;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isChinaUnionPay(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() >= 16) && (creditCardNumber.length() <= 19)) && creditCardNumber.startsWith(\"622\")) {\n            int firstDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 5));\n            if ((firstDigits >= 622126) && (firstDigits <= 622925)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.CHINA_UNIONPAY;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isDinersClubCarteBlanche(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 14) && creditCardNumber.startsWith(\"30\")) {\n            int firstDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 3));\n            if (((firstDigits >= 300) && (firstDigits <= 305)) && isChecksumCorrect(creditCardNumber)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.DINERS_CLUB_CARTE_BLANCHE;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isDinersClubInternational(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() == 14) && creditCardNumber.startsWith(\"36\")) && isChecksumCorrect(creditCardNumber)) {\n            cardId = org.apache.wicket.validation.validator.CreditCardValidator.DINERS_CLUB_INTERNATIONAL;\n            returnValue = true;\n        }\n        return returnValue;\n    }\n\n    private boolean isDinersClubUsAndCanada(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() == 16) && (creditCardNumber.startsWith(\"54\") || creditCardNumber.startsWith(\"55\"))) && isChecksumCorrect(creditCardNumber)) {\n            cardId = org.apache.wicket.validation.validator.CreditCardValidator.DINERS_CLUB_US_AND_CANADA;\n            returnValue = true;\n        }\n        return returnValue;\n    }\n\n    private boolean isDiscoverCard(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() == 16) && creditCardNumber.startsWith(\"6\")) && isChecksumCorrect(creditCardNumber)) {\n            int firstThreeDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 3));\n            int firstSixDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 6));\n            if (((creditCardNumber.startsWith(\"6011\") || creditCardNumber.startsWith(\"65\")) || ((firstThreeDigits >= 644) && (firstThreeDigits <= 649))) || ((firstSixDigits >= 622126) && (firstSixDigits <= 622925))) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.DISCOVER_CARD;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isJCB(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 16) && isChecksumCorrect(creditCardNumber)) {\n            int firstFourDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 4));\n            if ((firstFourDigits >= 3528) && (firstFourDigits <= 3589)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.JCB;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isLaser(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() >= 16) && (creditCardNumber.length() <= 19)) && isChecksumCorrect(creditCardNumber)) {\n            if (((creditCardNumber.startsWith(\"6304\") || creditCardNumber.startsWith(\"6706\")) || creditCardNumber.startsWith(\"6771\")) || creditCardNumber.startsWith(\"6709\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.LASER;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isMaestro(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() >= 12) && (creditCardNumber.length() <= 19)) && isChecksumCorrect(creditCardNumber)) {\n            if ((((((creditCardNumber.startsWith(\"5018\") || creditCardNumber.startsWith(\"5020\")) || creditCardNumber.startsWith(\"5038\")) || creditCardNumber.startsWith(\"6304\")) || creditCardNumber.startsWith(\"6759\")) || creditCardNumber.startsWith(\"6761\")) || creditCardNumber.startsWith(\"6763\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.MAESTRO;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isSolo(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((((creditCardNumber.length() == 16) || (creditCardNumber.length() == 18)) || (creditCardNumber.length() == 19)) && isChecksumCorrect(creditCardNumber)) {\n            if (creditCardNumber.startsWith(\"6334\") || creditCardNumber.startsWith(\"6767\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.SOLO;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isSwitch(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((((creditCardNumber.length() == 16) || (creditCardNumber.length() == 18)) || (creditCardNumber.length() == 19)) && isChecksumCorrect(creditCardNumber)) {\n            if (((((((creditCardNumber.startsWith(\"4903\") || creditCardNumber.startsWith(\"4905\")) || creditCardNumber.startsWith(\"4911\")) || creditCardNumber.startsWith(\"4936\")) || creditCardNumber.startsWith(\"564182\")) || creditCardNumber.startsWith(\"633110\")) || creditCardNumber.startsWith(\"6333\")) || creditCardNumber.startsWith(\"6759\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.SWITCH;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isVisa(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 13) || (creditCardNumber.length() == 16)) {\n            if (creditCardNumber.startsWith(\"4\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.SWITCH;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isVisaElectron(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 16) && ((((creditCardNumber.startsWith(\"417500\") || creditCardNumber.startsWith(\"4917\")) || creditCardNumber.startsWith(\"4913\")) || creditCardNumber.startsWith(\"4508\")) || creditCardNumber.startsWith(\"4844\"))) {\n            cardId = org.apache.wicket.validation.validator.CreditCardValidator.VISA_ELECTRON;\n            returnValue = true;\n        }\n        return returnValue;\n    }\n\n    private boolean isMastercard(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 16) && isChecksumCorrect(creditCardNumber)) {\n            int firstTwoDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 2));\n            if ((firstTwoDigits >= 51) && (firstTwoDigits <= 55)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.MASTERCARD;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private java.lang.String getCardName() {\n        return (cardId > (-1)) && (cardId < org.apache.wicket.validation.validator.CreditCardValidator.creditCardNames.length) ? org.apache.wicket.validation.validator.CreditCardValidator.creditCardNames[cardId] : \"\";\n    }\n\n    private boolean isChecksumCorrect(java.lang.String creditCardNumber) {\n        java.lang.String input = creditCardNumber;\n        java.lang.String numberToCheck = input.replaceAll(\"[ -]\", \"\");\n        int nulOffset = '0';\n        int sum = 0;\n        for (int i = 1; i <= numberToCheck.length(); i++) {\n            int currentDigit = numberToCheck.charAt(numberToCheck.length() - i) - nulOffset;\n            if ((i % 2) == 0) {\n                currentDigit *= 2;\n                currentDigit = (currentDigit > 9) ? currentDigit - 9 : currentDigit;\n                sum += currentDigit;\n            } else {\n                sum += currentDigit;\n            }\n        }\n        return (sum % 10) == 0;\n    }\n}",
            "src_parent_type": "Class",
            "src_type": "Field"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Package",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Class",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "public static final int VISA_ELECTRON = 13;",
            "src_parent": "public class CreditCardValidator extends org.apache.wicket.validation.validator.AbstractValidator<java.lang.String> {\n    private static final long serialVersionUID = 1L;\n\n    private java.lang.String creditCardNumber = null;\n\n    private int cardId = -1;\n\n    public static final int INVALID = -1;\n\n    public static final int AMERICAN_EXPRESS = 0;\n\n    public static final int CHINA_UNIONPAY = 1;\n\n    public static final int DINERS_CLUB_CARTE_BLANCHE = 2;\n\n    public static final int DINERS_CLUB_INTERNATIONAL = 3;\n\n    public static final int DINERS_CLUB_US_AND_CANADA = 4;\n\n    public static final int DISCOVER_CARD = 5;\n\n    public static final int JCB = 6;\n\n    public static final int LASER = 7;\n\n    public static final int MAESTRO = 8;\n\n    public static final int MASTERCARD = 9;\n\n    public static final int SOLO = 10;\n\n    public static final int SWITCH = 11;\n\n    public static final int VISA = 12;\n\n    public static final int VISA_ELECTRON = 13;\n\n    private static final java.lang.String[] creditCardNames = new java.lang.String[]{ \"American Express\", \"China UnionPay\", \"Diners Club Carte Blanche\", \"Diners Club International\", \"Diners Club US & Canada\", \"Discover Card\", \"JCB\", \"Laser\", \"Maestro\", \"MasterCard\", \"Solo\", \"Switch\", \"Visa\", \"Visa Electron\" };\n\n    @java.lang.Override\n    protected void onValidate(org.apache.wicket.validation.IValidatable<java.lang.String> validatable) {\n        creditCardNumber = validatable.getValue();\n        if (!isLengthAndPrefixCorrect(creditCardNumber)) {\n            error(validatable);\n        }\n    }\n\n    private boolean isLengthAndPrefixCorrect(java.lang.String creditCardNumber) {\n        if (creditCardNumber != null) {\n            creditCardNumber = creditCardNumber.replaceAll(\"[ -]\", \"\");\n        }\n        if (((creditCardNumber != null) && (creditCardNumber.length() >= 12)) && (creditCardNumber.length() <= 19)) {\n            if (isAmericanExpress(creditCardNumber)) {\n                return true;\n            } else if (isChinaUnionPay(creditCardNumber)) {\n                return true;\n            } else if (isDinersClubCarteBlanche(creditCardNumber)) {\n                return true;\n            } else if (isDinersClubInternational(creditCardNumber)) {\n                return true;\n            } else if (isDinersClubUsAndCanada(creditCardNumber)) {\n                return true;\n            } else if (isDiscoverCard(creditCardNumber)) {\n                return true;\n            } else if (isJCB(creditCardNumber)) {\n                return true;\n            } else if (isLaser(creditCardNumber)) {\n                return true;\n            } else if (isMaestro(creditCardNumber)) {\n                return true;\n            } else if (isMastercard(creditCardNumber)) {\n                return true;\n            } else if (isSolo(creditCardNumber)) {\n                return true;\n            } else if (isSwitch(creditCardNumber)) {\n                return true;\n            } else if (isVisa(creditCardNumber)) {\n                return true;\n            } else if (isVisaElectron(creditCardNumber)) {\n                return true;\n            } else if (isUnknown(creditCardNumber)) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    protected boolean isUnknown(java.lang.String creditCardNumber) {\n        return false;\n    }\n\n    private boolean isAmericanExpress(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 15) && (creditCardNumber.startsWith(\"34\") || creditCardNumber.startsWith(\"37\"))) {\n            if (isChecksumCorrect(creditCardNumber)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.AMERICAN_EXPRESS;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isChinaUnionPay(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() >= 16) && (creditCardNumber.length() <= 19)) && creditCardNumber.startsWith(\"622\")) {\n            int firstDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 5));\n            if ((firstDigits >= 622126) && (firstDigits <= 622925)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.CHINA_UNIONPAY;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isDinersClubCarteBlanche(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 14) && creditCardNumber.startsWith(\"30\")) {\n            int firstDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 3));\n            if (((firstDigits >= 300) && (firstDigits <= 305)) && isChecksumCorrect(creditCardNumber)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.DINERS_CLUB_CARTE_BLANCHE;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isDinersClubInternational(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() == 14) && creditCardNumber.startsWith(\"36\")) && isChecksumCorrect(creditCardNumber)) {\n            cardId = org.apache.wicket.validation.validator.CreditCardValidator.DINERS_CLUB_INTERNATIONAL;\n            returnValue = true;\n        }\n        return returnValue;\n    }\n\n    private boolean isDinersClubUsAndCanada(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() == 16) && (creditCardNumber.startsWith(\"54\") || creditCardNumber.startsWith(\"55\"))) && isChecksumCorrect(creditCardNumber)) {\n            cardId = org.apache.wicket.validation.validator.CreditCardValidator.DINERS_CLUB_US_AND_CANADA;\n            returnValue = true;\n        }\n        return returnValue;\n    }\n\n    private boolean isDiscoverCard(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() == 16) && creditCardNumber.startsWith(\"6\")) && isChecksumCorrect(creditCardNumber)) {\n            int firstThreeDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 3));\n            int firstSixDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 6));\n            if (((creditCardNumber.startsWith(\"6011\") || creditCardNumber.startsWith(\"65\")) || ((firstThreeDigits >= 644) && (firstThreeDigits <= 649))) || ((firstSixDigits >= 622126) && (firstSixDigits <= 622925))) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.DISCOVER_CARD;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isJCB(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 16) && isChecksumCorrect(creditCardNumber)) {\n            int firstFourDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 4));\n            if ((firstFourDigits >= 3528) && (firstFourDigits <= 3589)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.JCB;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isLaser(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() >= 16) && (creditCardNumber.length() <= 19)) && isChecksumCorrect(creditCardNumber)) {\n            if (((creditCardNumber.startsWith(\"6304\") || creditCardNumber.startsWith(\"6706\")) || creditCardNumber.startsWith(\"6771\")) || creditCardNumber.startsWith(\"6709\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.LASER;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isMaestro(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() >= 12) && (creditCardNumber.length() <= 19)) && isChecksumCorrect(creditCardNumber)) {\n            if ((((((creditCardNumber.startsWith(\"5018\") || creditCardNumber.startsWith(\"5020\")) || creditCardNumber.startsWith(\"5038\")) || creditCardNumber.startsWith(\"6304\")) || creditCardNumber.startsWith(\"6759\")) || creditCardNumber.startsWith(\"6761\")) || creditCardNumber.startsWith(\"6763\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.MAESTRO;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isSolo(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((((creditCardNumber.length() == 16) || (creditCardNumber.length() == 18)) || (creditCardNumber.length() == 19)) && isChecksumCorrect(creditCardNumber)) {\n            if (creditCardNumber.startsWith(\"6334\") || creditCardNumber.startsWith(\"6767\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.SOLO;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isSwitch(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((((creditCardNumber.length() == 16) || (creditCardNumber.length() == 18)) || (creditCardNumber.length() == 19)) && isChecksumCorrect(creditCardNumber)) {\n            if (((((((creditCardNumber.startsWith(\"4903\") || creditCardNumber.startsWith(\"4905\")) || creditCardNumber.startsWith(\"4911\")) || creditCardNumber.startsWith(\"4936\")) || creditCardNumber.startsWith(\"564182\")) || creditCardNumber.startsWith(\"633110\")) || creditCardNumber.startsWith(\"6333\")) || creditCardNumber.startsWith(\"6759\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.SWITCH;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isVisa(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 13) || (creditCardNumber.length() == 16)) {\n            if (creditCardNumber.startsWith(\"4\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.SWITCH;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isVisaElectron(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 16) && ((((creditCardNumber.startsWith(\"417500\") || creditCardNumber.startsWith(\"4917\")) || creditCardNumber.startsWith(\"4913\")) || creditCardNumber.startsWith(\"4508\")) || creditCardNumber.startsWith(\"4844\"))) {\n            cardId = org.apache.wicket.validation.validator.CreditCardValidator.VISA_ELECTRON;\n            returnValue = true;\n        }\n        return returnValue;\n    }\n\n    private boolean isMastercard(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 16) && isChecksumCorrect(creditCardNumber)) {\n            int firstTwoDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 2));\n            if ((firstTwoDigits >= 51) && (firstTwoDigits <= 55)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.MASTERCARD;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private java.lang.String getCardName() {\n        return (cardId > (-1)) && (cardId < org.apache.wicket.validation.validator.CreditCardValidator.creditCardNames.length) ? org.apache.wicket.validation.validator.CreditCardValidator.creditCardNames[cardId] : \"\";\n    }\n\n    private boolean isChecksumCorrect(java.lang.String creditCardNumber) {\n        java.lang.String input = creditCardNumber;\n        java.lang.String numberToCheck = input.replaceAll(\"[ -]\", \"\");\n        int nulOffset = '0';\n        int sum = 0;\n        for (int i = 1; i <= numberToCheck.length(); i++) {\n            int currentDigit = numberToCheck.charAt(numberToCheck.length() - i) - nulOffset;\n            if ((i % 2) == 0) {\n                currentDigit *= 2;\n                currentDigit = (currentDigit > 9) ? currentDigit - 9 : currentDigit;\n                sum += currentDigit;\n            } else {\n                sum += currentDigit;\n            }\n        }\n        return (sum % 10) == 0;\n    }\n}",
            "src_parent_type": "Class",
            "src_type": "Field"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Package",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Class",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "private static final java.lang.String[] creditCardNames = new java.lang.String[]{ \"American Express\", \"China UnionPay\", \"Diners Club Carte Blanche\", \"Diners Club International\", \"Diners Club US & Canada\", \"Discover Card\", \"JCB\", \"Laser\", \"Maestro\", \"MasterCard\", \"Solo\", \"Switch\", \"Visa\", \"Visa Electron\" };",
            "src_parent": "public class CreditCardValidator extends org.apache.wicket.validation.validator.AbstractValidator<java.lang.String> {\n    private static final long serialVersionUID = 1L;\n\n    private java.lang.String creditCardNumber = null;\n\n    private int cardId = -1;\n\n    public static final int INVALID = -1;\n\n    public static final int AMERICAN_EXPRESS = 0;\n\n    public static final int CHINA_UNIONPAY = 1;\n\n    public static final int DINERS_CLUB_CARTE_BLANCHE = 2;\n\n    public static final int DINERS_CLUB_INTERNATIONAL = 3;\n\n    public static final int DINERS_CLUB_US_AND_CANADA = 4;\n\n    public static final int DISCOVER_CARD = 5;\n\n    public static final int JCB = 6;\n\n    public static final int LASER = 7;\n\n    public static final int MAESTRO = 8;\n\n    public static final int MASTERCARD = 9;\n\n    public static final int SOLO = 10;\n\n    public static final int SWITCH = 11;\n\n    public static final int VISA = 12;\n\n    public static final int VISA_ELECTRON = 13;\n\n    private static final java.lang.String[] creditCardNames = new java.lang.String[]{ \"American Express\", \"China UnionPay\", \"Diners Club Carte Blanche\", \"Diners Club International\", \"Diners Club US & Canada\", \"Discover Card\", \"JCB\", \"Laser\", \"Maestro\", \"MasterCard\", \"Solo\", \"Switch\", \"Visa\", \"Visa Electron\" };\n\n    @java.lang.Override\n    protected void onValidate(org.apache.wicket.validation.IValidatable<java.lang.String> validatable) {\n        creditCardNumber = validatable.getValue();\n        if (!isLengthAndPrefixCorrect(creditCardNumber)) {\n            error(validatable);\n        }\n    }\n\n    private boolean isLengthAndPrefixCorrect(java.lang.String creditCardNumber) {\n        if (creditCardNumber != null) {\n            creditCardNumber = creditCardNumber.replaceAll(\"[ -]\", \"\");\n        }\n        if (((creditCardNumber != null) && (creditCardNumber.length() >= 12)) && (creditCardNumber.length() <= 19)) {\n            if (isAmericanExpress(creditCardNumber)) {\n                return true;\n            } else if (isChinaUnionPay(creditCardNumber)) {\n                return true;\n            } else if (isDinersClubCarteBlanche(creditCardNumber)) {\n                return true;\n            } else if (isDinersClubInternational(creditCardNumber)) {\n                return true;\n            } else if (isDinersClubUsAndCanada(creditCardNumber)) {\n                return true;\n            } else if (isDiscoverCard(creditCardNumber)) {\n                return true;\n            } else if (isJCB(creditCardNumber)) {\n                return true;\n            } else if (isLaser(creditCardNumber)) {\n                return true;\n            } else if (isMaestro(creditCardNumber)) {\n                return true;\n            } else if (isMastercard(creditCardNumber)) {\n                return true;\n            } else if (isSolo(creditCardNumber)) {\n                return true;\n            } else if (isSwitch(creditCardNumber)) {\n                return true;\n            } else if (isVisa(creditCardNumber)) {\n                return true;\n            } else if (isVisaElectron(creditCardNumber)) {\n                return true;\n            } else if (isUnknown(creditCardNumber)) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    protected boolean isUnknown(java.lang.String creditCardNumber) {\n        return false;\n    }\n\n    private boolean isAmericanExpress(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 15) && (creditCardNumber.startsWith(\"34\") || creditCardNumber.startsWith(\"37\"))) {\n            if (isChecksumCorrect(creditCardNumber)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.AMERICAN_EXPRESS;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isChinaUnionPay(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() >= 16) && (creditCardNumber.length() <= 19)) && creditCardNumber.startsWith(\"622\")) {\n            int firstDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 5));\n            if ((firstDigits >= 622126) && (firstDigits <= 622925)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.CHINA_UNIONPAY;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isDinersClubCarteBlanche(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 14) && creditCardNumber.startsWith(\"30\")) {\n            int firstDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 3));\n            if (((firstDigits >= 300) && (firstDigits <= 305)) && isChecksumCorrect(creditCardNumber)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.DINERS_CLUB_CARTE_BLANCHE;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isDinersClubInternational(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() == 14) && creditCardNumber.startsWith(\"36\")) && isChecksumCorrect(creditCardNumber)) {\n            cardId = org.apache.wicket.validation.validator.CreditCardValidator.DINERS_CLUB_INTERNATIONAL;\n            returnValue = true;\n        }\n        return returnValue;\n    }\n\n    private boolean isDinersClubUsAndCanada(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() == 16) && (creditCardNumber.startsWith(\"54\") || creditCardNumber.startsWith(\"55\"))) && isChecksumCorrect(creditCardNumber)) {\n            cardId = org.apache.wicket.validation.validator.CreditCardValidator.DINERS_CLUB_US_AND_CANADA;\n            returnValue = true;\n        }\n        return returnValue;\n    }\n\n    private boolean isDiscoverCard(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() == 16) && creditCardNumber.startsWith(\"6\")) && isChecksumCorrect(creditCardNumber)) {\n            int firstThreeDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 3));\n            int firstSixDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 6));\n            if (((creditCardNumber.startsWith(\"6011\") || creditCardNumber.startsWith(\"65\")) || ((firstThreeDigits >= 644) && (firstThreeDigits <= 649))) || ((firstSixDigits >= 622126) && (firstSixDigits <= 622925))) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.DISCOVER_CARD;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isJCB(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 16) && isChecksumCorrect(creditCardNumber)) {\n            int firstFourDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 4));\n            if ((firstFourDigits >= 3528) && (firstFourDigits <= 3589)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.JCB;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isLaser(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() >= 16) && (creditCardNumber.length() <= 19)) && isChecksumCorrect(creditCardNumber)) {\n            if (((creditCardNumber.startsWith(\"6304\") || creditCardNumber.startsWith(\"6706\")) || creditCardNumber.startsWith(\"6771\")) || creditCardNumber.startsWith(\"6709\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.LASER;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isMaestro(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() >= 12) && (creditCardNumber.length() <= 19)) && isChecksumCorrect(creditCardNumber)) {\n            if ((((((creditCardNumber.startsWith(\"5018\") || creditCardNumber.startsWith(\"5020\")) || creditCardNumber.startsWith(\"5038\")) || creditCardNumber.startsWith(\"6304\")) || creditCardNumber.startsWith(\"6759\")) || creditCardNumber.startsWith(\"6761\")) || creditCardNumber.startsWith(\"6763\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.MAESTRO;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isSolo(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((((creditCardNumber.length() == 16) || (creditCardNumber.length() == 18)) || (creditCardNumber.length() == 19)) && isChecksumCorrect(creditCardNumber)) {\n            if (creditCardNumber.startsWith(\"6334\") || creditCardNumber.startsWith(\"6767\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.SOLO;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isSwitch(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((((creditCardNumber.length() == 16) || (creditCardNumber.length() == 18)) || (creditCardNumber.length() == 19)) && isChecksumCorrect(creditCardNumber)) {\n            if (((((((creditCardNumber.startsWith(\"4903\") || creditCardNumber.startsWith(\"4905\")) || creditCardNumber.startsWith(\"4911\")) || creditCardNumber.startsWith(\"4936\")) || creditCardNumber.startsWith(\"564182\")) || creditCardNumber.startsWith(\"633110\")) || creditCardNumber.startsWith(\"6333\")) || creditCardNumber.startsWith(\"6759\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.SWITCH;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isVisa(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 13) || (creditCardNumber.length() == 16)) {\n            if (creditCardNumber.startsWith(\"4\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.SWITCH;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isVisaElectron(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 16) && ((((creditCardNumber.startsWith(\"417500\") || creditCardNumber.startsWith(\"4917\")) || creditCardNumber.startsWith(\"4913\")) || creditCardNumber.startsWith(\"4508\")) || creditCardNumber.startsWith(\"4844\"))) {\n            cardId = org.apache.wicket.validation.validator.CreditCardValidator.VISA_ELECTRON;\n            returnValue = true;\n        }\n        return returnValue;\n    }\n\n    private boolean isMastercard(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 16) && isChecksumCorrect(creditCardNumber)) {\n            int firstTwoDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 2));\n            if ((firstTwoDigits >= 51) && (firstTwoDigits <= 55)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.MASTERCARD;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private java.lang.String getCardName() {\n        return (cardId > (-1)) && (cardId < org.apache.wicket.validation.validator.CreditCardValidator.creditCardNames.length) ? org.apache.wicket.validation.validator.CreditCardValidator.creditCardNames[cardId] : \"\";\n    }\n\n    private boolean isChecksumCorrect(java.lang.String creditCardNumber) {\n        java.lang.String input = creditCardNumber;\n        java.lang.String numberToCheck = input.replaceAll(\"[ -]\", \"\");\n        int nulOffset = '0';\n        int sum = 0;\n        for (int i = 1; i <= numberToCheck.length(); i++) {\n            int currentDigit = numberToCheck.charAt(numberToCheck.length() - i) - nulOffset;\n            if ((i % 2) == 0) {\n                currentDigit *= 2;\n                currentDigit = (currentDigit > 9) ? currentDigit - 9 : currentDigit;\n                sum += currentDigit;\n            } else {\n                sum += currentDigit;\n            }\n        }\n        return (sum % 10) == 0;\n    }\n}",
            "src_parent_type": "Class",
            "src_type": "Field"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Package",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Class",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "@java.lang.Override\nprotected void onValidate(org.apache.wicket.validation.IValidatable<java.lang.String> validatable) {\n    creditCardNumber = validatable.getValue();\n    if (!isLengthAndPrefixCorrect(creditCardNumber)) {\n        error(validatable);\n    }\n}",
            "src_parent": "public class CreditCardValidator extends org.apache.wicket.validation.validator.AbstractValidator<java.lang.String> {\n    private static final long serialVersionUID = 1L;\n\n    private java.lang.String creditCardNumber = null;\n\n    private int cardId = -1;\n\n    public static final int INVALID = -1;\n\n    public static final int AMERICAN_EXPRESS = 0;\n\n    public static final int CHINA_UNIONPAY = 1;\n\n    public static final int DINERS_CLUB_CARTE_BLANCHE = 2;\n\n    public static final int DINERS_CLUB_INTERNATIONAL = 3;\n\n    public static final int DINERS_CLUB_US_AND_CANADA = 4;\n\n    public static final int DISCOVER_CARD = 5;\n\n    public static final int JCB = 6;\n\n    public static final int LASER = 7;\n\n    public static final int MAESTRO = 8;\n\n    public static final int MASTERCARD = 9;\n\n    public static final int SOLO = 10;\n\n    public static final int SWITCH = 11;\n\n    public static final int VISA = 12;\n\n    public static final int VISA_ELECTRON = 13;\n\n    private static final java.lang.String[] creditCardNames = new java.lang.String[]{ \"American Express\", \"China UnionPay\", \"Diners Club Carte Blanche\", \"Diners Club International\", \"Diners Club US & Canada\", \"Discover Card\", \"JCB\", \"Laser\", \"Maestro\", \"MasterCard\", \"Solo\", \"Switch\", \"Visa\", \"Visa Electron\" };\n\n    @java.lang.Override\n    protected void onValidate(org.apache.wicket.validation.IValidatable<java.lang.String> validatable) {\n        creditCardNumber = validatable.getValue();\n        if (!isLengthAndPrefixCorrect(creditCardNumber)) {\n            error(validatable);\n        }\n    }\n\n    private boolean isLengthAndPrefixCorrect(java.lang.String creditCardNumber) {\n        if (creditCardNumber != null) {\n            creditCardNumber = creditCardNumber.replaceAll(\"[ -]\", \"\");\n        }\n        if (((creditCardNumber != null) && (creditCardNumber.length() >= 12)) && (creditCardNumber.length() <= 19)) {\n            if (isAmericanExpress(creditCardNumber)) {\n                return true;\n            } else if (isChinaUnionPay(creditCardNumber)) {\n                return true;\n            } else if (isDinersClubCarteBlanche(creditCardNumber)) {\n                return true;\n            } else if (isDinersClubInternational(creditCardNumber)) {\n                return true;\n            } else if (isDinersClubUsAndCanada(creditCardNumber)) {\n                return true;\n            } else if (isDiscoverCard(creditCardNumber)) {\n                return true;\n            } else if (isJCB(creditCardNumber)) {\n                return true;\n            } else if (isLaser(creditCardNumber)) {\n                return true;\n            } else if (isMaestro(creditCardNumber)) {\n                return true;\n            } else if (isMastercard(creditCardNumber)) {\n                return true;\n            } else if (isSolo(creditCardNumber)) {\n                return true;\n            } else if (isSwitch(creditCardNumber)) {\n                return true;\n            } else if (isVisa(creditCardNumber)) {\n                return true;\n            } else if (isVisaElectron(creditCardNumber)) {\n                return true;\n            } else if (isUnknown(creditCardNumber)) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    protected boolean isUnknown(java.lang.String creditCardNumber) {\n        return false;\n    }\n\n    private boolean isAmericanExpress(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 15) && (creditCardNumber.startsWith(\"34\") || creditCardNumber.startsWith(\"37\"))) {\n            if (isChecksumCorrect(creditCardNumber)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.AMERICAN_EXPRESS;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isChinaUnionPay(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() >= 16) && (creditCardNumber.length() <= 19)) && creditCardNumber.startsWith(\"622\")) {\n            int firstDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 5));\n            if ((firstDigits >= 622126) && (firstDigits <= 622925)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.CHINA_UNIONPAY;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isDinersClubCarteBlanche(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 14) && creditCardNumber.startsWith(\"30\")) {\n            int firstDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 3));\n            if (((firstDigits >= 300) && (firstDigits <= 305)) && isChecksumCorrect(creditCardNumber)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.DINERS_CLUB_CARTE_BLANCHE;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isDinersClubInternational(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() == 14) && creditCardNumber.startsWith(\"36\")) && isChecksumCorrect(creditCardNumber)) {\n            cardId = org.apache.wicket.validation.validator.CreditCardValidator.DINERS_CLUB_INTERNATIONAL;\n            returnValue = true;\n        }\n        return returnValue;\n    }\n\n    private boolean isDinersClubUsAndCanada(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() == 16) && (creditCardNumber.startsWith(\"54\") || creditCardNumber.startsWith(\"55\"))) && isChecksumCorrect(creditCardNumber)) {\n            cardId = org.apache.wicket.validation.validator.CreditCardValidator.DINERS_CLUB_US_AND_CANADA;\n            returnValue = true;\n        }\n        return returnValue;\n    }\n\n    private boolean isDiscoverCard(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() == 16) && creditCardNumber.startsWith(\"6\")) && isChecksumCorrect(creditCardNumber)) {\n            int firstThreeDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 3));\n            int firstSixDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 6));\n            if (((creditCardNumber.startsWith(\"6011\") || creditCardNumber.startsWith(\"65\")) || ((firstThreeDigits >= 644) && (firstThreeDigits <= 649))) || ((firstSixDigits >= 622126) && (firstSixDigits <= 622925))) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.DISCOVER_CARD;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isJCB(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 16) && isChecksumCorrect(creditCardNumber)) {\n            int firstFourDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 4));\n            if ((firstFourDigits >= 3528) && (firstFourDigits <= 3589)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.JCB;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isLaser(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() >= 16) && (creditCardNumber.length() <= 19)) && isChecksumCorrect(creditCardNumber)) {\n            if (((creditCardNumber.startsWith(\"6304\") || creditCardNumber.startsWith(\"6706\")) || creditCardNumber.startsWith(\"6771\")) || creditCardNumber.startsWith(\"6709\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.LASER;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isMaestro(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() >= 12) && (creditCardNumber.length() <= 19)) && isChecksumCorrect(creditCardNumber)) {\n            if ((((((creditCardNumber.startsWith(\"5018\") || creditCardNumber.startsWith(\"5020\")) || creditCardNumber.startsWith(\"5038\")) || creditCardNumber.startsWith(\"6304\")) || creditCardNumber.startsWith(\"6759\")) || creditCardNumber.startsWith(\"6761\")) || creditCardNumber.startsWith(\"6763\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.MAESTRO;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isSolo(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((((creditCardNumber.length() == 16) || (creditCardNumber.length() == 18)) || (creditCardNumber.length() == 19)) && isChecksumCorrect(creditCardNumber)) {\n            if (creditCardNumber.startsWith(\"6334\") || creditCardNumber.startsWith(\"6767\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.SOLO;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isSwitch(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((((creditCardNumber.length() == 16) || (creditCardNumber.length() == 18)) || (creditCardNumber.length() == 19)) && isChecksumCorrect(creditCardNumber)) {\n            if (((((((creditCardNumber.startsWith(\"4903\") || creditCardNumber.startsWith(\"4905\")) || creditCardNumber.startsWith(\"4911\")) || creditCardNumber.startsWith(\"4936\")) || creditCardNumber.startsWith(\"564182\")) || creditCardNumber.startsWith(\"633110\")) || creditCardNumber.startsWith(\"6333\")) || creditCardNumber.startsWith(\"6759\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.SWITCH;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isVisa(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 13) || (creditCardNumber.length() == 16)) {\n            if (creditCardNumber.startsWith(\"4\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.SWITCH;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isVisaElectron(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 16) && ((((creditCardNumber.startsWith(\"417500\") || creditCardNumber.startsWith(\"4917\")) || creditCardNumber.startsWith(\"4913\")) || creditCardNumber.startsWith(\"4508\")) || creditCardNumber.startsWith(\"4844\"))) {\n            cardId = org.apache.wicket.validation.validator.CreditCardValidator.VISA_ELECTRON;\n            returnValue = true;\n        }\n        return returnValue;\n    }\n\n    private boolean isMastercard(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 16) && isChecksumCorrect(creditCardNumber)) {\n            int firstTwoDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 2));\n            if ((firstTwoDigits >= 51) && (firstTwoDigits <= 55)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.MASTERCARD;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private java.lang.String getCardName() {\n        return (cardId > (-1)) && (cardId < org.apache.wicket.validation.validator.CreditCardValidator.creditCardNames.length) ? org.apache.wicket.validation.validator.CreditCardValidator.creditCardNames[cardId] : \"\";\n    }\n\n    private boolean isChecksumCorrect(java.lang.String creditCardNumber) {\n        java.lang.String input = creditCardNumber;\n        java.lang.String numberToCheck = input.replaceAll(\"[ -]\", \"\");\n        int nulOffset = '0';\n        int sum = 0;\n        for (int i = 1; i <= numberToCheck.length(); i++) {\n            int currentDigit = numberToCheck.charAt(numberToCheck.length() - i) - nulOffset;\n            if ((i % 2) == 0) {\n                currentDigit *= 2;\n                currentDigit = (currentDigit > 9) ? currentDigit - 9 : currentDigit;\n                sum += currentDigit;\n            } else {\n                sum += currentDigit;\n            }\n        }\n        return (sum % 10) == 0;\n    }\n}",
            "src_parent_type": "Class",
            "src_type": "Method"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Package",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Class",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "private boolean isLengthAndPrefixCorrect(java.lang.String creditCardNumber) {\n    if (creditCardNumber != null) {\n        creditCardNumber = creditCardNumber.replaceAll(\"[ -]\", \"\");\n    }\n    if (((creditCardNumber != null) && (creditCardNumber.length() >= 12)) && (creditCardNumber.length() <= 19)) {\n        if (isAmericanExpress(creditCardNumber)) {\n            return true;\n        } else if (isChinaUnionPay(creditCardNumber)) {\n            return true;\n        } else if (isDinersClubCarteBlanche(creditCardNumber)) {\n            return true;\n        } else if (isDinersClubInternational(creditCardNumber)) {\n            return true;\n        } else if (isDinersClubUsAndCanada(creditCardNumber)) {\n            return true;\n        } else if (isDiscoverCard(creditCardNumber)) {\n            return true;\n        } else if (isJCB(creditCardNumber)) {\n            return true;\n        } else if (isLaser(creditCardNumber)) {\n            return true;\n        } else if (isMaestro(creditCardNumber)) {\n            return true;\n        } else if (isMastercard(creditCardNumber)) {\n            return true;\n        } else if (isSolo(creditCardNumber)) {\n            return true;\n        } else if (isSwitch(creditCardNumber)) {\n            return true;\n        } else if (isVisa(creditCardNumber)) {\n            return true;\n        } else if (isVisaElectron(creditCardNumber)) {\n            return true;\n        } else if (isUnknown(creditCardNumber)) {\n            return true;\n        }\n    }\n    return false;\n}",
            "src_parent": "public class CreditCardValidator extends org.apache.wicket.validation.validator.AbstractValidator<java.lang.String> {\n    private static final long serialVersionUID = 1L;\n\n    private java.lang.String creditCardNumber = null;\n\n    private int cardId = -1;\n\n    public static final int INVALID = -1;\n\n    public static final int AMERICAN_EXPRESS = 0;\n\n    public static final int CHINA_UNIONPAY = 1;\n\n    public static final int DINERS_CLUB_CARTE_BLANCHE = 2;\n\n    public static final int DINERS_CLUB_INTERNATIONAL = 3;\n\n    public static final int DINERS_CLUB_US_AND_CANADA = 4;\n\n    public static final int DISCOVER_CARD = 5;\n\n    public static final int JCB = 6;\n\n    public static final int LASER = 7;\n\n    public static final int MAESTRO = 8;\n\n    public static final int MASTERCARD = 9;\n\n    public static final int SOLO = 10;\n\n    public static final int SWITCH = 11;\n\n    public static final int VISA = 12;\n\n    public static final int VISA_ELECTRON = 13;\n\n    private static final java.lang.String[] creditCardNames = new java.lang.String[]{ \"American Express\", \"China UnionPay\", \"Diners Club Carte Blanche\", \"Diners Club International\", \"Diners Club US & Canada\", \"Discover Card\", \"JCB\", \"Laser\", \"Maestro\", \"MasterCard\", \"Solo\", \"Switch\", \"Visa\", \"Visa Electron\" };\n\n    @java.lang.Override\n    protected void onValidate(org.apache.wicket.validation.IValidatable<java.lang.String> validatable) {\n        creditCardNumber = validatable.getValue();\n        if (!isLengthAndPrefixCorrect(creditCardNumber)) {\n            error(validatable);\n        }\n    }\n\n    private boolean isLengthAndPrefixCorrect(java.lang.String creditCardNumber) {\n        if (creditCardNumber != null) {\n            creditCardNumber = creditCardNumber.replaceAll(\"[ -]\", \"\");\n        }\n        if (((creditCardNumber != null) && (creditCardNumber.length() >= 12)) && (creditCardNumber.length() <= 19)) {\n            if (isAmericanExpress(creditCardNumber)) {\n                return true;\n            } else if (isChinaUnionPay(creditCardNumber)) {\n                return true;\n            } else if (isDinersClubCarteBlanche(creditCardNumber)) {\n                return true;\n            } else if (isDinersClubInternational(creditCardNumber)) {\n                return true;\n            } else if (isDinersClubUsAndCanada(creditCardNumber)) {\n                return true;\n            } else if (isDiscoverCard(creditCardNumber)) {\n                return true;\n            } else if (isJCB(creditCardNumber)) {\n                return true;\n            } else if (isLaser(creditCardNumber)) {\n                return true;\n            } else if (isMaestro(creditCardNumber)) {\n                return true;\n            } else if (isMastercard(creditCardNumber)) {\n                return true;\n            } else if (isSolo(creditCardNumber)) {\n                return true;\n            } else if (isSwitch(creditCardNumber)) {\n                return true;\n            } else if (isVisa(creditCardNumber)) {\n                return true;\n            } else if (isVisaElectron(creditCardNumber)) {\n                return true;\n            } else if (isUnknown(creditCardNumber)) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    protected boolean isUnknown(java.lang.String creditCardNumber) {\n        return false;\n    }\n\n    private boolean isAmericanExpress(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 15) && (creditCardNumber.startsWith(\"34\") || creditCardNumber.startsWith(\"37\"))) {\n            if (isChecksumCorrect(creditCardNumber)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.AMERICAN_EXPRESS;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isChinaUnionPay(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() >= 16) && (creditCardNumber.length() <= 19)) && creditCardNumber.startsWith(\"622\")) {\n            int firstDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 5));\n            if ((firstDigits >= 622126) && (firstDigits <= 622925)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.CHINA_UNIONPAY;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isDinersClubCarteBlanche(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 14) && creditCardNumber.startsWith(\"30\")) {\n            int firstDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 3));\n            if (((firstDigits >= 300) && (firstDigits <= 305)) && isChecksumCorrect(creditCardNumber)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.DINERS_CLUB_CARTE_BLANCHE;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isDinersClubInternational(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() == 14) && creditCardNumber.startsWith(\"36\")) && isChecksumCorrect(creditCardNumber)) {\n            cardId = org.apache.wicket.validation.validator.CreditCardValidator.DINERS_CLUB_INTERNATIONAL;\n            returnValue = true;\n        }\n        return returnValue;\n    }\n\n    private boolean isDinersClubUsAndCanada(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() == 16) && (creditCardNumber.startsWith(\"54\") || creditCardNumber.startsWith(\"55\"))) && isChecksumCorrect(creditCardNumber)) {\n            cardId = org.apache.wicket.validation.validator.CreditCardValidator.DINERS_CLUB_US_AND_CANADA;\n            returnValue = true;\n        }\n        return returnValue;\n    }\n\n    private boolean isDiscoverCard(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() == 16) && creditCardNumber.startsWith(\"6\")) && isChecksumCorrect(creditCardNumber)) {\n            int firstThreeDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 3));\n            int firstSixDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 6));\n            if (((creditCardNumber.startsWith(\"6011\") || creditCardNumber.startsWith(\"65\")) || ((firstThreeDigits >= 644) && (firstThreeDigits <= 649))) || ((firstSixDigits >= 622126) && (firstSixDigits <= 622925))) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.DISCOVER_CARD;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isJCB(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 16) && isChecksumCorrect(creditCardNumber)) {\n            int firstFourDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 4));\n            if ((firstFourDigits >= 3528) && (firstFourDigits <= 3589)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.JCB;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isLaser(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() >= 16) && (creditCardNumber.length() <= 19)) && isChecksumCorrect(creditCardNumber)) {\n            if (((creditCardNumber.startsWith(\"6304\") || creditCardNumber.startsWith(\"6706\")) || creditCardNumber.startsWith(\"6771\")) || creditCardNumber.startsWith(\"6709\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.LASER;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isMaestro(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() >= 12) && (creditCardNumber.length() <= 19)) && isChecksumCorrect(creditCardNumber)) {\n            if ((((((creditCardNumber.startsWith(\"5018\") || creditCardNumber.startsWith(\"5020\")) || creditCardNumber.startsWith(\"5038\")) || creditCardNumber.startsWith(\"6304\")) || creditCardNumber.startsWith(\"6759\")) || creditCardNumber.startsWith(\"6761\")) || creditCardNumber.startsWith(\"6763\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.MAESTRO;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isSolo(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((((creditCardNumber.length() == 16) || (creditCardNumber.length() == 18)) || (creditCardNumber.length() == 19)) && isChecksumCorrect(creditCardNumber)) {\n            if (creditCardNumber.startsWith(\"6334\") || creditCardNumber.startsWith(\"6767\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.SOLO;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isSwitch(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((((creditCardNumber.length() == 16) || (creditCardNumber.length() == 18)) || (creditCardNumber.length() == 19)) && isChecksumCorrect(creditCardNumber)) {\n            if (((((((creditCardNumber.startsWith(\"4903\") || creditCardNumber.startsWith(\"4905\")) || creditCardNumber.startsWith(\"4911\")) || creditCardNumber.startsWith(\"4936\")) || creditCardNumber.startsWith(\"564182\")) || creditCardNumber.startsWith(\"633110\")) || creditCardNumber.startsWith(\"6333\")) || creditCardNumber.startsWith(\"6759\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.SWITCH;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isVisa(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 13) || (creditCardNumber.length() == 16)) {\n            if (creditCardNumber.startsWith(\"4\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.SWITCH;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isVisaElectron(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 16) && ((((creditCardNumber.startsWith(\"417500\") || creditCardNumber.startsWith(\"4917\")) || creditCardNumber.startsWith(\"4913\")) || creditCardNumber.startsWith(\"4508\")) || creditCardNumber.startsWith(\"4844\"))) {\n            cardId = org.apache.wicket.validation.validator.CreditCardValidator.VISA_ELECTRON;\n            returnValue = true;\n        }\n        return returnValue;\n    }\n\n    private boolean isMastercard(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 16) && isChecksumCorrect(creditCardNumber)) {\n            int firstTwoDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 2));\n            if ((firstTwoDigits >= 51) && (firstTwoDigits <= 55)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.MASTERCARD;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private java.lang.String getCardName() {\n        return (cardId > (-1)) && (cardId < org.apache.wicket.validation.validator.CreditCardValidator.creditCardNames.length) ? org.apache.wicket.validation.validator.CreditCardValidator.creditCardNames[cardId] : \"\";\n    }\n\n    private boolean isChecksumCorrect(java.lang.String creditCardNumber) {\n        java.lang.String input = creditCardNumber;\n        java.lang.String numberToCheck = input.replaceAll(\"[ -]\", \"\");\n        int nulOffset = '0';\n        int sum = 0;\n        for (int i = 1; i <= numberToCheck.length(); i++) {\n            int currentDigit = numberToCheck.charAt(numberToCheck.length() - i) - nulOffset;\n            if ((i % 2) == 0) {\n                currentDigit *= 2;\n                currentDigit = (currentDigit > 9) ? currentDigit - 9 : currentDigit;\n                sum += currentDigit;\n            } else {\n                sum += currentDigit;\n            }\n        }\n        return (sum % 10) == 0;\n    }\n}",
            "src_parent_type": "Class",
            "src_type": "Method"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Package",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Class",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "protected boolean isUnknown(java.lang.String creditCardNumber) {\n    return false;\n}",
            "src_parent": "public class CreditCardValidator extends org.apache.wicket.validation.validator.AbstractValidator<java.lang.String> {\n    private static final long serialVersionUID = 1L;\n\n    private java.lang.String creditCardNumber = null;\n\n    private int cardId = -1;\n\n    public static final int INVALID = -1;\n\n    public static final int AMERICAN_EXPRESS = 0;\n\n    public static final int CHINA_UNIONPAY = 1;\n\n    public static final int DINERS_CLUB_CARTE_BLANCHE = 2;\n\n    public static final int DINERS_CLUB_INTERNATIONAL = 3;\n\n    public static final int DINERS_CLUB_US_AND_CANADA = 4;\n\n    public static final int DISCOVER_CARD = 5;\n\n    public static final int JCB = 6;\n\n    public static final int LASER = 7;\n\n    public static final int MAESTRO = 8;\n\n    public static final int MASTERCARD = 9;\n\n    public static final int SOLO = 10;\n\n    public static final int SWITCH = 11;\n\n    public static final int VISA = 12;\n\n    public static final int VISA_ELECTRON = 13;\n\n    private static final java.lang.String[] creditCardNames = new java.lang.String[]{ \"American Express\", \"China UnionPay\", \"Diners Club Carte Blanche\", \"Diners Club International\", \"Diners Club US & Canada\", \"Discover Card\", \"JCB\", \"Laser\", \"Maestro\", \"MasterCard\", \"Solo\", \"Switch\", \"Visa\", \"Visa Electron\" };\n\n    @java.lang.Override\n    protected void onValidate(org.apache.wicket.validation.IValidatable<java.lang.String> validatable) {\n        creditCardNumber = validatable.getValue();\n        if (!isLengthAndPrefixCorrect(creditCardNumber)) {\n            error(validatable);\n        }\n    }\n\n    private boolean isLengthAndPrefixCorrect(java.lang.String creditCardNumber) {\n        if (creditCardNumber != null) {\n            creditCardNumber = creditCardNumber.replaceAll(\"[ -]\", \"\");\n        }\n        if (((creditCardNumber != null) && (creditCardNumber.length() >= 12)) && (creditCardNumber.length() <= 19)) {\n            if (isAmericanExpress(creditCardNumber)) {\n                return true;\n            } else if (isChinaUnionPay(creditCardNumber)) {\n                return true;\n            } else if (isDinersClubCarteBlanche(creditCardNumber)) {\n                return true;\n            } else if (isDinersClubInternational(creditCardNumber)) {\n                return true;\n            } else if (isDinersClubUsAndCanada(creditCardNumber)) {\n                return true;\n            } else if (isDiscoverCard(creditCardNumber)) {\n                return true;\n            } else if (isJCB(creditCardNumber)) {\n                return true;\n            } else if (isLaser(creditCardNumber)) {\n                return true;\n            } else if (isMaestro(creditCardNumber)) {\n                return true;\n            } else if (isMastercard(creditCardNumber)) {\n                return true;\n            } else if (isSolo(creditCardNumber)) {\n                return true;\n            } else if (isSwitch(creditCardNumber)) {\n                return true;\n            } else if (isVisa(creditCardNumber)) {\n                return true;\n            } else if (isVisaElectron(creditCardNumber)) {\n                return true;\n            } else if (isUnknown(creditCardNumber)) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    protected boolean isUnknown(java.lang.String creditCardNumber) {\n        return false;\n    }\n\n    private boolean isAmericanExpress(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 15) && (creditCardNumber.startsWith(\"34\") || creditCardNumber.startsWith(\"37\"))) {\n            if (isChecksumCorrect(creditCardNumber)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.AMERICAN_EXPRESS;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isChinaUnionPay(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() >= 16) && (creditCardNumber.length() <= 19)) && creditCardNumber.startsWith(\"622\")) {\n            int firstDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 5));\n            if ((firstDigits >= 622126) && (firstDigits <= 622925)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.CHINA_UNIONPAY;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isDinersClubCarteBlanche(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 14) && creditCardNumber.startsWith(\"30\")) {\n            int firstDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 3));\n            if (((firstDigits >= 300) && (firstDigits <= 305)) && isChecksumCorrect(creditCardNumber)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.DINERS_CLUB_CARTE_BLANCHE;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isDinersClubInternational(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() == 14) && creditCardNumber.startsWith(\"36\")) && isChecksumCorrect(creditCardNumber)) {\n            cardId = org.apache.wicket.validation.validator.CreditCardValidator.DINERS_CLUB_INTERNATIONAL;\n            returnValue = true;\n        }\n        return returnValue;\n    }\n\n    private boolean isDinersClubUsAndCanada(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() == 16) && (creditCardNumber.startsWith(\"54\") || creditCardNumber.startsWith(\"55\"))) && isChecksumCorrect(creditCardNumber)) {\n            cardId = org.apache.wicket.validation.validator.CreditCardValidator.DINERS_CLUB_US_AND_CANADA;\n            returnValue = true;\n        }\n        return returnValue;\n    }\n\n    private boolean isDiscoverCard(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() == 16) && creditCardNumber.startsWith(\"6\")) && isChecksumCorrect(creditCardNumber)) {\n            int firstThreeDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 3));\n            int firstSixDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 6));\n            if (((creditCardNumber.startsWith(\"6011\") || creditCardNumber.startsWith(\"65\")) || ((firstThreeDigits >= 644) && (firstThreeDigits <= 649))) || ((firstSixDigits >= 622126) && (firstSixDigits <= 622925))) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.DISCOVER_CARD;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isJCB(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 16) && isChecksumCorrect(creditCardNumber)) {\n            int firstFourDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 4));\n            if ((firstFourDigits >= 3528) && (firstFourDigits <= 3589)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.JCB;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isLaser(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() >= 16) && (creditCardNumber.length() <= 19)) && isChecksumCorrect(creditCardNumber)) {\n            if (((creditCardNumber.startsWith(\"6304\") || creditCardNumber.startsWith(\"6706\")) || creditCardNumber.startsWith(\"6771\")) || creditCardNumber.startsWith(\"6709\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.LASER;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isMaestro(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() >= 12) && (creditCardNumber.length() <= 19)) && isChecksumCorrect(creditCardNumber)) {\n            if ((((((creditCardNumber.startsWith(\"5018\") || creditCardNumber.startsWith(\"5020\")) || creditCardNumber.startsWith(\"5038\")) || creditCardNumber.startsWith(\"6304\")) || creditCardNumber.startsWith(\"6759\")) || creditCardNumber.startsWith(\"6761\")) || creditCardNumber.startsWith(\"6763\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.MAESTRO;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isSolo(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((((creditCardNumber.length() == 16) || (creditCardNumber.length() == 18)) || (creditCardNumber.length() == 19)) && isChecksumCorrect(creditCardNumber)) {\n            if (creditCardNumber.startsWith(\"6334\") || creditCardNumber.startsWith(\"6767\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.SOLO;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isSwitch(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((((creditCardNumber.length() == 16) || (creditCardNumber.length() == 18)) || (creditCardNumber.length() == 19)) && isChecksumCorrect(creditCardNumber)) {\n            if (((((((creditCardNumber.startsWith(\"4903\") || creditCardNumber.startsWith(\"4905\")) || creditCardNumber.startsWith(\"4911\")) || creditCardNumber.startsWith(\"4936\")) || creditCardNumber.startsWith(\"564182\")) || creditCardNumber.startsWith(\"633110\")) || creditCardNumber.startsWith(\"6333\")) || creditCardNumber.startsWith(\"6759\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.SWITCH;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isVisa(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 13) || (creditCardNumber.length() == 16)) {\n            if (creditCardNumber.startsWith(\"4\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.SWITCH;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isVisaElectron(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 16) && ((((creditCardNumber.startsWith(\"417500\") || creditCardNumber.startsWith(\"4917\")) || creditCardNumber.startsWith(\"4913\")) || creditCardNumber.startsWith(\"4508\")) || creditCardNumber.startsWith(\"4844\"))) {\n            cardId = org.apache.wicket.validation.validator.CreditCardValidator.VISA_ELECTRON;\n            returnValue = true;\n        }\n        return returnValue;\n    }\n\n    private boolean isMastercard(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 16) && isChecksumCorrect(creditCardNumber)) {\n            int firstTwoDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 2));\n            if ((firstTwoDigits >= 51) && (firstTwoDigits <= 55)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.MASTERCARD;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private java.lang.String getCardName() {\n        return (cardId > (-1)) && (cardId < org.apache.wicket.validation.validator.CreditCardValidator.creditCardNames.length) ? org.apache.wicket.validation.validator.CreditCardValidator.creditCardNames[cardId] : \"\";\n    }\n\n    private boolean isChecksumCorrect(java.lang.String creditCardNumber) {\n        java.lang.String input = creditCardNumber;\n        java.lang.String numberToCheck = input.replaceAll(\"[ -]\", \"\");\n        int nulOffset = '0';\n        int sum = 0;\n        for (int i = 1; i <= numberToCheck.length(); i++) {\n            int currentDigit = numberToCheck.charAt(numberToCheck.length() - i) - nulOffset;\n            if ((i % 2) == 0) {\n                currentDigit *= 2;\n                currentDigit = (currentDigit > 9) ? currentDigit - 9 : currentDigit;\n                sum += currentDigit;\n            } else {\n                sum += currentDigit;\n            }\n        }\n        return (sum % 10) == 0;\n    }\n}",
            "src_parent_type": "Class",
            "src_type": "Method"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Package",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Class",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "private boolean isAmericanExpress(java.lang.String creditCardNumber) {\n    cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n    boolean returnValue = false;\n    if ((creditCardNumber.length() == 15) && (creditCardNumber.startsWith(\"34\") || creditCardNumber.startsWith(\"37\"))) {\n        if (isChecksumCorrect(creditCardNumber)) {\n            cardId = org.apache.wicket.validation.validator.CreditCardValidator.AMERICAN_EXPRESS;\n            returnValue = true;\n        }\n    }\n    return returnValue;\n}",
            "src_parent": "public class CreditCardValidator extends org.apache.wicket.validation.validator.AbstractValidator<java.lang.String> {\n    private static final long serialVersionUID = 1L;\n\n    private java.lang.String creditCardNumber = null;\n\n    private int cardId = -1;\n\n    public static final int INVALID = -1;\n\n    public static final int AMERICAN_EXPRESS = 0;\n\n    public static final int CHINA_UNIONPAY = 1;\n\n    public static final int DINERS_CLUB_CARTE_BLANCHE = 2;\n\n    public static final int DINERS_CLUB_INTERNATIONAL = 3;\n\n    public static final int DINERS_CLUB_US_AND_CANADA = 4;\n\n    public static final int DISCOVER_CARD = 5;\n\n    public static final int JCB = 6;\n\n    public static final int LASER = 7;\n\n    public static final int MAESTRO = 8;\n\n    public static final int MASTERCARD = 9;\n\n    public static final int SOLO = 10;\n\n    public static final int SWITCH = 11;\n\n    public static final int VISA = 12;\n\n    public static final int VISA_ELECTRON = 13;\n\n    private static final java.lang.String[] creditCardNames = new java.lang.String[]{ \"American Express\", \"China UnionPay\", \"Diners Club Carte Blanche\", \"Diners Club International\", \"Diners Club US & Canada\", \"Discover Card\", \"JCB\", \"Laser\", \"Maestro\", \"MasterCard\", \"Solo\", \"Switch\", \"Visa\", \"Visa Electron\" };\n\n    @java.lang.Override\n    protected void onValidate(org.apache.wicket.validation.IValidatable<java.lang.String> validatable) {\n        creditCardNumber = validatable.getValue();\n        if (!isLengthAndPrefixCorrect(creditCardNumber)) {\n            error(validatable);\n        }\n    }\n\n    private boolean isLengthAndPrefixCorrect(java.lang.String creditCardNumber) {\n        if (creditCardNumber != null) {\n            creditCardNumber = creditCardNumber.replaceAll(\"[ -]\", \"\");\n        }\n        if (((creditCardNumber != null) && (creditCardNumber.length() >= 12)) && (creditCardNumber.length() <= 19)) {\n            if (isAmericanExpress(creditCardNumber)) {\n                return true;\n            } else if (isChinaUnionPay(creditCardNumber)) {\n                return true;\n            } else if (isDinersClubCarteBlanche(creditCardNumber)) {\n                return true;\n            } else if (isDinersClubInternational(creditCardNumber)) {\n                return true;\n            } else if (isDinersClubUsAndCanada(creditCardNumber)) {\n                return true;\n            } else if (isDiscoverCard(creditCardNumber)) {\n                return true;\n            } else if (isJCB(creditCardNumber)) {\n                return true;\n            } else if (isLaser(creditCardNumber)) {\n                return true;\n            } else if (isMaestro(creditCardNumber)) {\n                return true;\n            } else if (isMastercard(creditCardNumber)) {\n                return true;\n            } else if (isSolo(creditCardNumber)) {\n                return true;\n            } else if (isSwitch(creditCardNumber)) {\n                return true;\n            } else if (isVisa(creditCardNumber)) {\n                return true;\n            } else if (isVisaElectron(creditCardNumber)) {\n                return true;\n            } else if (isUnknown(creditCardNumber)) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    protected boolean isUnknown(java.lang.String creditCardNumber) {\n        return false;\n    }\n\n    private boolean isAmericanExpress(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 15) && (creditCardNumber.startsWith(\"34\") || creditCardNumber.startsWith(\"37\"))) {\n            if (isChecksumCorrect(creditCardNumber)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.AMERICAN_EXPRESS;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isChinaUnionPay(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() >= 16) && (creditCardNumber.length() <= 19)) && creditCardNumber.startsWith(\"622\")) {\n            int firstDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 5));\n            if ((firstDigits >= 622126) && (firstDigits <= 622925)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.CHINA_UNIONPAY;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isDinersClubCarteBlanche(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 14) && creditCardNumber.startsWith(\"30\")) {\n            int firstDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 3));\n            if (((firstDigits >= 300) && (firstDigits <= 305)) && isChecksumCorrect(creditCardNumber)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.DINERS_CLUB_CARTE_BLANCHE;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isDinersClubInternational(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() == 14) && creditCardNumber.startsWith(\"36\")) && isChecksumCorrect(creditCardNumber)) {\n            cardId = org.apache.wicket.validation.validator.CreditCardValidator.DINERS_CLUB_INTERNATIONAL;\n            returnValue = true;\n        }\n        return returnValue;\n    }\n\n    private boolean isDinersClubUsAndCanada(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() == 16) && (creditCardNumber.startsWith(\"54\") || creditCardNumber.startsWith(\"55\"))) && isChecksumCorrect(creditCardNumber)) {\n            cardId = org.apache.wicket.validation.validator.CreditCardValidator.DINERS_CLUB_US_AND_CANADA;\n            returnValue = true;\n        }\n        return returnValue;\n    }\n\n    private boolean isDiscoverCard(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() == 16) && creditCardNumber.startsWith(\"6\")) && isChecksumCorrect(creditCardNumber)) {\n            int firstThreeDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 3));\n            int firstSixDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 6));\n            if (((creditCardNumber.startsWith(\"6011\") || creditCardNumber.startsWith(\"65\")) || ((firstThreeDigits >= 644) && (firstThreeDigits <= 649))) || ((firstSixDigits >= 622126) && (firstSixDigits <= 622925))) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.DISCOVER_CARD;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isJCB(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 16) && isChecksumCorrect(creditCardNumber)) {\n            int firstFourDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 4));\n            if ((firstFourDigits >= 3528) && (firstFourDigits <= 3589)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.JCB;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isLaser(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() >= 16) && (creditCardNumber.length() <= 19)) && isChecksumCorrect(creditCardNumber)) {\n            if (((creditCardNumber.startsWith(\"6304\") || creditCardNumber.startsWith(\"6706\")) || creditCardNumber.startsWith(\"6771\")) || creditCardNumber.startsWith(\"6709\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.LASER;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isMaestro(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() >= 12) && (creditCardNumber.length() <= 19)) && isChecksumCorrect(creditCardNumber)) {\n            if ((((((creditCardNumber.startsWith(\"5018\") || creditCardNumber.startsWith(\"5020\")) || creditCardNumber.startsWith(\"5038\")) || creditCardNumber.startsWith(\"6304\")) || creditCardNumber.startsWith(\"6759\")) || creditCardNumber.startsWith(\"6761\")) || creditCardNumber.startsWith(\"6763\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.MAESTRO;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isSolo(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((((creditCardNumber.length() == 16) || (creditCardNumber.length() == 18)) || (creditCardNumber.length() == 19)) && isChecksumCorrect(creditCardNumber)) {\n            if (creditCardNumber.startsWith(\"6334\") || creditCardNumber.startsWith(\"6767\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.SOLO;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isSwitch(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((((creditCardNumber.length() == 16) || (creditCardNumber.length() == 18)) || (creditCardNumber.length() == 19)) && isChecksumCorrect(creditCardNumber)) {\n            if (((((((creditCardNumber.startsWith(\"4903\") || creditCardNumber.startsWith(\"4905\")) || creditCardNumber.startsWith(\"4911\")) || creditCardNumber.startsWith(\"4936\")) || creditCardNumber.startsWith(\"564182\")) || creditCardNumber.startsWith(\"633110\")) || creditCardNumber.startsWith(\"6333\")) || creditCardNumber.startsWith(\"6759\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.SWITCH;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isVisa(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 13) || (creditCardNumber.length() == 16)) {\n            if (creditCardNumber.startsWith(\"4\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.SWITCH;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isVisaElectron(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 16) && ((((creditCardNumber.startsWith(\"417500\") || creditCardNumber.startsWith(\"4917\")) || creditCardNumber.startsWith(\"4913\")) || creditCardNumber.startsWith(\"4508\")) || creditCardNumber.startsWith(\"4844\"))) {\n            cardId = org.apache.wicket.validation.validator.CreditCardValidator.VISA_ELECTRON;\n            returnValue = true;\n        }\n        return returnValue;\n    }\n\n    private boolean isMastercard(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 16) && isChecksumCorrect(creditCardNumber)) {\n            int firstTwoDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 2));\n            if ((firstTwoDigits >= 51) && (firstTwoDigits <= 55)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.MASTERCARD;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private java.lang.String getCardName() {\n        return (cardId > (-1)) && (cardId < org.apache.wicket.validation.validator.CreditCardValidator.creditCardNames.length) ? org.apache.wicket.validation.validator.CreditCardValidator.creditCardNames[cardId] : \"\";\n    }\n\n    private boolean isChecksumCorrect(java.lang.String creditCardNumber) {\n        java.lang.String input = creditCardNumber;\n        java.lang.String numberToCheck = input.replaceAll(\"[ -]\", \"\");\n        int nulOffset = '0';\n        int sum = 0;\n        for (int i = 1; i <= numberToCheck.length(); i++) {\n            int currentDigit = numberToCheck.charAt(numberToCheck.length() - i) - nulOffset;\n            if ((i % 2) == 0) {\n                currentDigit *= 2;\n                currentDigit = (currentDigit > 9) ? currentDigit - 9 : currentDigit;\n                sum += currentDigit;\n            } else {\n                sum += currentDigit;\n            }\n        }\n        return (sum % 10) == 0;\n    }\n}",
            "src_parent_type": "Class",
            "src_type": "Method"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Package",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Class",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "private boolean isChinaUnionPay(java.lang.String creditCardNumber) {\n    cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n    boolean returnValue = false;\n    if (((creditCardNumber.length() >= 16) && (creditCardNumber.length() <= 19)) && creditCardNumber.startsWith(\"622\")) {\n        int firstDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 5));\n        if ((firstDigits >= 622126) && (firstDigits <= 622925)) {\n            cardId = org.apache.wicket.validation.validator.CreditCardValidator.CHINA_UNIONPAY;\n            returnValue = true;\n        }\n    }\n    return returnValue;\n}",
            "src_parent": "public class CreditCardValidator extends org.apache.wicket.validation.validator.AbstractValidator<java.lang.String> {\n    private static final long serialVersionUID = 1L;\n\n    private java.lang.String creditCardNumber = null;\n\n    private int cardId = -1;\n\n    public static final int INVALID = -1;\n\n    public static final int AMERICAN_EXPRESS = 0;\n\n    public static final int CHINA_UNIONPAY = 1;\n\n    public static final int DINERS_CLUB_CARTE_BLANCHE = 2;\n\n    public static final int DINERS_CLUB_INTERNATIONAL = 3;\n\n    public static final int DINERS_CLUB_US_AND_CANADA = 4;\n\n    public static final int DISCOVER_CARD = 5;\n\n    public static final int JCB = 6;\n\n    public static final int LASER = 7;\n\n    public static final int MAESTRO = 8;\n\n    public static final int MASTERCARD = 9;\n\n    public static final int SOLO = 10;\n\n    public static final int SWITCH = 11;\n\n    public static final int VISA = 12;\n\n    public static final int VISA_ELECTRON = 13;\n\n    private static final java.lang.String[] creditCardNames = new java.lang.String[]{ \"American Express\", \"China UnionPay\", \"Diners Club Carte Blanche\", \"Diners Club International\", \"Diners Club US & Canada\", \"Discover Card\", \"JCB\", \"Laser\", \"Maestro\", \"MasterCard\", \"Solo\", \"Switch\", \"Visa\", \"Visa Electron\" };\n\n    @java.lang.Override\n    protected void onValidate(org.apache.wicket.validation.IValidatable<java.lang.String> validatable) {\n        creditCardNumber = validatable.getValue();\n        if (!isLengthAndPrefixCorrect(creditCardNumber)) {\n            error(validatable);\n        }\n    }\n\n    private boolean isLengthAndPrefixCorrect(java.lang.String creditCardNumber) {\n        if (creditCardNumber != null) {\n            creditCardNumber = creditCardNumber.replaceAll(\"[ -]\", \"\");\n        }\n        if (((creditCardNumber != null) && (creditCardNumber.length() >= 12)) && (creditCardNumber.length() <= 19)) {\n            if (isAmericanExpress(creditCardNumber)) {\n                return true;\n            } else if (isChinaUnionPay(creditCardNumber)) {\n                return true;\n            } else if (isDinersClubCarteBlanche(creditCardNumber)) {\n                return true;\n            } else if (isDinersClubInternational(creditCardNumber)) {\n                return true;\n            } else if (isDinersClubUsAndCanada(creditCardNumber)) {\n                return true;\n            } else if (isDiscoverCard(creditCardNumber)) {\n                return true;\n            } else if (isJCB(creditCardNumber)) {\n                return true;\n            } else if (isLaser(creditCardNumber)) {\n                return true;\n            } else if (isMaestro(creditCardNumber)) {\n                return true;\n            } else if (isMastercard(creditCardNumber)) {\n                return true;\n            } else if (isSolo(creditCardNumber)) {\n                return true;\n            } else if (isSwitch(creditCardNumber)) {\n                return true;\n            } else if (isVisa(creditCardNumber)) {\n                return true;\n            } else if (isVisaElectron(creditCardNumber)) {\n                return true;\n            } else if (isUnknown(creditCardNumber)) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    protected boolean isUnknown(java.lang.String creditCardNumber) {\n        return false;\n    }\n\n    private boolean isAmericanExpress(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 15) && (creditCardNumber.startsWith(\"34\") || creditCardNumber.startsWith(\"37\"))) {\n            if (isChecksumCorrect(creditCardNumber)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.AMERICAN_EXPRESS;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isChinaUnionPay(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() >= 16) && (creditCardNumber.length() <= 19)) && creditCardNumber.startsWith(\"622\")) {\n            int firstDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 5));\n            if ((firstDigits >= 622126) && (firstDigits <= 622925)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.CHINA_UNIONPAY;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isDinersClubCarteBlanche(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 14) && creditCardNumber.startsWith(\"30\")) {\n            int firstDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 3));\n            if (((firstDigits >= 300) && (firstDigits <= 305)) && isChecksumCorrect(creditCardNumber)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.DINERS_CLUB_CARTE_BLANCHE;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isDinersClubInternational(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() == 14) && creditCardNumber.startsWith(\"36\")) && isChecksumCorrect(creditCardNumber)) {\n            cardId = org.apache.wicket.validation.validator.CreditCardValidator.DINERS_CLUB_INTERNATIONAL;\n            returnValue = true;\n        }\n        return returnValue;\n    }\n\n    private boolean isDinersClubUsAndCanada(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() == 16) && (creditCardNumber.startsWith(\"54\") || creditCardNumber.startsWith(\"55\"))) && isChecksumCorrect(creditCardNumber)) {\n            cardId = org.apache.wicket.validation.validator.CreditCardValidator.DINERS_CLUB_US_AND_CANADA;\n            returnValue = true;\n        }\n        return returnValue;\n    }\n\n    private boolean isDiscoverCard(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() == 16) && creditCardNumber.startsWith(\"6\")) && isChecksumCorrect(creditCardNumber)) {\n            int firstThreeDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 3));\n            int firstSixDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 6));\n            if (((creditCardNumber.startsWith(\"6011\") || creditCardNumber.startsWith(\"65\")) || ((firstThreeDigits >= 644) && (firstThreeDigits <= 649))) || ((firstSixDigits >= 622126) && (firstSixDigits <= 622925))) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.DISCOVER_CARD;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isJCB(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 16) && isChecksumCorrect(creditCardNumber)) {\n            int firstFourDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 4));\n            if ((firstFourDigits >= 3528) && (firstFourDigits <= 3589)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.JCB;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isLaser(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() >= 16) && (creditCardNumber.length() <= 19)) && isChecksumCorrect(creditCardNumber)) {\n            if (((creditCardNumber.startsWith(\"6304\") || creditCardNumber.startsWith(\"6706\")) || creditCardNumber.startsWith(\"6771\")) || creditCardNumber.startsWith(\"6709\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.LASER;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isMaestro(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() >= 12) && (creditCardNumber.length() <= 19)) && isChecksumCorrect(creditCardNumber)) {\n            if ((((((creditCardNumber.startsWith(\"5018\") || creditCardNumber.startsWith(\"5020\")) || creditCardNumber.startsWith(\"5038\")) || creditCardNumber.startsWith(\"6304\")) || creditCardNumber.startsWith(\"6759\")) || creditCardNumber.startsWith(\"6761\")) || creditCardNumber.startsWith(\"6763\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.MAESTRO;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isSolo(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((((creditCardNumber.length() == 16) || (creditCardNumber.length() == 18)) || (creditCardNumber.length() == 19)) && isChecksumCorrect(creditCardNumber)) {\n            if (creditCardNumber.startsWith(\"6334\") || creditCardNumber.startsWith(\"6767\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.SOLO;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isSwitch(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((((creditCardNumber.length() == 16) || (creditCardNumber.length() == 18)) || (creditCardNumber.length() == 19)) && isChecksumCorrect(creditCardNumber)) {\n            if (((((((creditCardNumber.startsWith(\"4903\") || creditCardNumber.startsWith(\"4905\")) || creditCardNumber.startsWith(\"4911\")) || creditCardNumber.startsWith(\"4936\")) || creditCardNumber.startsWith(\"564182\")) || creditCardNumber.startsWith(\"633110\")) || creditCardNumber.startsWith(\"6333\")) || creditCardNumber.startsWith(\"6759\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.SWITCH;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isVisa(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 13) || (creditCardNumber.length() == 16)) {\n            if (creditCardNumber.startsWith(\"4\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.SWITCH;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isVisaElectron(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 16) && ((((creditCardNumber.startsWith(\"417500\") || creditCardNumber.startsWith(\"4917\")) || creditCardNumber.startsWith(\"4913\")) || creditCardNumber.startsWith(\"4508\")) || creditCardNumber.startsWith(\"4844\"))) {\n            cardId = org.apache.wicket.validation.validator.CreditCardValidator.VISA_ELECTRON;\n            returnValue = true;\n        }\n        return returnValue;\n    }\n\n    private boolean isMastercard(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 16) && isChecksumCorrect(creditCardNumber)) {\n            int firstTwoDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 2));\n            if ((firstTwoDigits >= 51) && (firstTwoDigits <= 55)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.MASTERCARD;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private java.lang.String getCardName() {\n        return (cardId > (-1)) && (cardId < org.apache.wicket.validation.validator.CreditCardValidator.creditCardNames.length) ? org.apache.wicket.validation.validator.CreditCardValidator.creditCardNames[cardId] : \"\";\n    }\n\n    private boolean isChecksumCorrect(java.lang.String creditCardNumber) {\n        java.lang.String input = creditCardNumber;\n        java.lang.String numberToCheck = input.replaceAll(\"[ -]\", \"\");\n        int nulOffset = '0';\n        int sum = 0;\n        for (int i = 1; i <= numberToCheck.length(); i++) {\n            int currentDigit = numberToCheck.charAt(numberToCheck.length() - i) - nulOffset;\n            if ((i % 2) == 0) {\n                currentDigit *= 2;\n                currentDigit = (currentDigit > 9) ? currentDigit - 9 : currentDigit;\n                sum += currentDigit;\n            } else {\n                sum += currentDigit;\n            }\n        }\n        return (sum % 10) == 0;\n    }\n}",
            "src_parent_type": "Class",
            "src_type": "Method"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Package",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Class",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "private boolean isDinersClubCarteBlanche(java.lang.String creditCardNumber) {\n    cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n    boolean returnValue = false;\n    if ((creditCardNumber.length() == 14) && creditCardNumber.startsWith(\"30\")) {\n        int firstDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 3));\n        if (((firstDigits >= 300) && (firstDigits <= 305)) && isChecksumCorrect(creditCardNumber)) {\n            cardId = org.apache.wicket.validation.validator.CreditCardValidator.DINERS_CLUB_CARTE_BLANCHE;\n            returnValue = true;\n        }\n    }\n    return returnValue;\n}",
            "src_parent": "public class CreditCardValidator extends org.apache.wicket.validation.validator.AbstractValidator<java.lang.String> {\n    private static final long serialVersionUID = 1L;\n\n    private java.lang.String creditCardNumber = null;\n\n    private int cardId = -1;\n\n    public static final int INVALID = -1;\n\n    public static final int AMERICAN_EXPRESS = 0;\n\n    public static final int CHINA_UNIONPAY = 1;\n\n    public static final int DINERS_CLUB_CARTE_BLANCHE = 2;\n\n    public static final int DINERS_CLUB_INTERNATIONAL = 3;\n\n    public static final int DINERS_CLUB_US_AND_CANADA = 4;\n\n    public static final int DISCOVER_CARD = 5;\n\n    public static final int JCB = 6;\n\n    public static final int LASER = 7;\n\n    public static final int MAESTRO = 8;\n\n    public static final int MASTERCARD = 9;\n\n    public static final int SOLO = 10;\n\n    public static final int SWITCH = 11;\n\n    public static final int VISA = 12;\n\n    public static final int VISA_ELECTRON = 13;\n\n    private static final java.lang.String[] creditCardNames = new java.lang.String[]{ \"American Express\", \"China UnionPay\", \"Diners Club Carte Blanche\", \"Diners Club International\", \"Diners Club US & Canada\", \"Discover Card\", \"JCB\", \"Laser\", \"Maestro\", \"MasterCard\", \"Solo\", \"Switch\", \"Visa\", \"Visa Electron\" };\n\n    @java.lang.Override\n    protected void onValidate(org.apache.wicket.validation.IValidatable<java.lang.String> validatable) {\n        creditCardNumber = validatable.getValue();\n        if (!isLengthAndPrefixCorrect(creditCardNumber)) {\n            error(validatable);\n        }\n    }\n\n    private boolean isLengthAndPrefixCorrect(java.lang.String creditCardNumber) {\n        if (creditCardNumber != null) {\n            creditCardNumber = creditCardNumber.replaceAll(\"[ -]\", \"\");\n        }\n        if (((creditCardNumber != null) && (creditCardNumber.length() >= 12)) && (creditCardNumber.length() <= 19)) {\n            if (isAmericanExpress(creditCardNumber)) {\n                return true;\n            } else if (isChinaUnionPay(creditCardNumber)) {\n                return true;\n            } else if (isDinersClubCarteBlanche(creditCardNumber)) {\n                return true;\n            } else if (isDinersClubInternational(creditCardNumber)) {\n                return true;\n            } else if (isDinersClubUsAndCanada(creditCardNumber)) {\n                return true;\n            } else if (isDiscoverCard(creditCardNumber)) {\n                return true;\n            } else if (isJCB(creditCardNumber)) {\n                return true;\n            } else if (isLaser(creditCardNumber)) {\n                return true;\n            } else if (isMaestro(creditCardNumber)) {\n                return true;\n            } else if (isMastercard(creditCardNumber)) {\n                return true;\n            } else if (isSolo(creditCardNumber)) {\n                return true;\n            } else if (isSwitch(creditCardNumber)) {\n                return true;\n            } else if (isVisa(creditCardNumber)) {\n                return true;\n            } else if (isVisaElectron(creditCardNumber)) {\n                return true;\n            } else if (isUnknown(creditCardNumber)) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    protected boolean isUnknown(java.lang.String creditCardNumber) {\n        return false;\n    }\n\n    private boolean isAmericanExpress(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 15) && (creditCardNumber.startsWith(\"34\") || creditCardNumber.startsWith(\"37\"))) {\n            if (isChecksumCorrect(creditCardNumber)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.AMERICAN_EXPRESS;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isChinaUnionPay(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() >= 16) && (creditCardNumber.length() <= 19)) && creditCardNumber.startsWith(\"622\")) {\n            int firstDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 5));\n            if ((firstDigits >= 622126) && (firstDigits <= 622925)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.CHINA_UNIONPAY;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isDinersClubCarteBlanche(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 14) && creditCardNumber.startsWith(\"30\")) {\n            int firstDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 3));\n            if (((firstDigits >= 300) && (firstDigits <= 305)) && isChecksumCorrect(creditCardNumber)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.DINERS_CLUB_CARTE_BLANCHE;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isDinersClubInternational(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() == 14) && creditCardNumber.startsWith(\"36\")) && isChecksumCorrect(creditCardNumber)) {\n            cardId = org.apache.wicket.validation.validator.CreditCardValidator.DINERS_CLUB_INTERNATIONAL;\n            returnValue = true;\n        }\n        return returnValue;\n    }\n\n    private boolean isDinersClubUsAndCanada(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() == 16) && (creditCardNumber.startsWith(\"54\") || creditCardNumber.startsWith(\"55\"))) && isChecksumCorrect(creditCardNumber)) {\n            cardId = org.apache.wicket.validation.validator.CreditCardValidator.DINERS_CLUB_US_AND_CANADA;\n            returnValue = true;\n        }\n        return returnValue;\n    }\n\n    private boolean isDiscoverCard(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() == 16) && creditCardNumber.startsWith(\"6\")) && isChecksumCorrect(creditCardNumber)) {\n            int firstThreeDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 3));\n            int firstSixDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 6));\n            if (((creditCardNumber.startsWith(\"6011\") || creditCardNumber.startsWith(\"65\")) || ((firstThreeDigits >= 644) && (firstThreeDigits <= 649))) || ((firstSixDigits >= 622126) && (firstSixDigits <= 622925))) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.DISCOVER_CARD;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isJCB(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 16) && isChecksumCorrect(creditCardNumber)) {\n            int firstFourDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 4));\n            if ((firstFourDigits >= 3528) && (firstFourDigits <= 3589)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.JCB;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isLaser(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() >= 16) && (creditCardNumber.length() <= 19)) && isChecksumCorrect(creditCardNumber)) {\n            if (((creditCardNumber.startsWith(\"6304\") || creditCardNumber.startsWith(\"6706\")) || creditCardNumber.startsWith(\"6771\")) || creditCardNumber.startsWith(\"6709\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.LASER;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isMaestro(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() >= 12) && (creditCardNumber.length() <= 19)) && isChecksumCorrect(creditCardNumber)) {\n            if ((((((creditCardNumber.startsWith(\"5018\") || creditCardNumber.startsWith(\"5020\")) || creditCardNumber.startsWith(\"5038\")) || creditCardNumber.startsWith(\"6304\")) || creditCardNumber.startsWith(\"6759\")) || creditCardNumber.startsWith(\"6761\")) || creditCardNumber.startsWith(\"6763\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.MAESTRO;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isSolo(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((((creditCardNumber.length() == 16) || (creditCardNumber.length() == 18)) || (creditCardNumber.length() == 19)) && isChecksumCorrect(creditCardNumber)) {\n            if (creditCardNumber.startsWith(\"6334\") || creditCardNumber.startsWith(\"6767\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.SOLO;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isSwitch(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((((creditCardNumber.length() == 16) || (creditCardNumber.length() == 18)) || (creditCardNumber.length() == 19)) && isChecksumCorrect(creditCardNumber)) {\n            if (((((((creditCardNumber.startsWith(\"4903\") || creditCardNumber.startsWith(\"4905\")) || creditCardNumber.startsWith(\"4911\")) || creditCardNumber.startsWith(\"4936\")) || creditCardNumber.startsWith(\"564182\")) || creditCardNumber.startsWith(\"633110\")) || creditCardNumber.startsWith(\"6333\")) || creditCardNumber.startsWith(\"6759\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.SWITCH;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isVisa(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 13) || (creditCardNumber.length() == 16)) {\n            if (creditCardNumber.startsWith(\"4\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.SWITCH;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isVisaElectron(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 16) && ((((creditCardNumber.startsWith(\"417500\") || creditCardNumber.startsWith(\"4917\")) || creditCardNumber.startsWith(\"4913\")) || creditCardNumber.startsWith(\"4508\")) || creditCardNumber.startsWith(\"4844\"))) {\n            cardId = org.apache.wicket.validation.validator.CreditCardValidator.VISA_ELECTRON;\n            returnValue = true;\n        }\n        return returnValue;\n    }\n\n    private boolean isMastercard(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 16) && isChecksumCorrect(creditCardNumber)) {\n            int firstTwoDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 2));\n            if ((firstTwoDigits >= 51) && (firstTwoDigits <= 55)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.MASTERCARD;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private java.lang.String getCardName() {\n        return (cardId > (-1)) && (cardId < org.apache.wicket.validation.validator.CreditCardValidator.creditCardNames.length) ? org.apache.wicket.validation.validator.CreditCardValidator.creditCardNames[cardId] : \"\";\n    }\n\n    private boolean isChecksumCorrect(java.lang.String creditCardNumber) {\n        java.lang.String input = creditCardNumber;\n        java.lang.String numberToCheck = input.replaceAll(\"[ -]\", \"\");\n        int nulOffset = '0';\n        int sum = 0;\n        for (int i = 1; i <= numberToCheck.length(); i++) {\n            int currentDigit = numberToCheck.charAt(numberToCheck.length() - i) - nulOffset;\n            if ((i % 2) == 0) {\n                currentDigit *= 2;\n                currentDigit = (currentDigit > 9) ? currentDigit - 9 : currentDigit;\n                sum += currentDigit;\n            } else {\n                sum += currentDigit;\n            }\n        }\n        return (sum % 10) == 0;\n    }\n}",
            "src_parent_type": "Class",
            "src_type": "Method"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Package",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Class",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "private boolean isDinersClubInternational(java.lang.String creditCardNumber) {\n    cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n    boolean returnValue = false;\n    if (((creditCardNumber.length() == 14) && creditCardNumber.startsWith(\"36\")) && isChecksumCorrect(creditCardNumber)) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.DINERS_CLUB_INTERNATIONAL;\n        returnValue = true;\n    }\n    return returnValue;\n}",
            "src_parent": "public class CreditCardValidator extends org.apache.wicket.validation.validator.AbstractValidator<java.lang.String> {\n    private static final long serialVersionUID = 1L;\n\n    private java.lang.String creditCardNumber = null;\n\n    private int cardId = -1;\n\n    public static final int INVALID = -1;\n\n    public static final int AMERICAN_EXPRESS = 0;\n\n    public static final int CHINA_UNIONPAY = 1;\n\n    public static final int DINERS_CLUB_CARTE_BLANCHE = 2;\n\n    public static final int DINERS_CLUB_INTERNATIONAL = 3;\n\n    public static final int DINERS_CLUB_US_AND_CANADA = 4;\n\n    public static final int DISCOVER_CARD = 5;\n\n    public static final int JCB = 6;\n\n    public static final int LASER = 7;\n\n    public static final int MAESTRO = 8;\n\n    public static final int MASTERCARD = 9;\n\n    public static final int SOLO = 10;\n\n    public static final int SWITCH = 11;\n\n    public static final int VISA = 12;\n\n    public static final int VISA_ELECTRON = 13;\n\n    private static final java.lang.String[] creditCardNames = new java.lang.String[]{ \"American Express\", \"China UnionPay\", \"Diners Club Carte Blanche\", \"Diners Club International\", \"Diners Club US & Canada\", \"Discover Card\", \"JCB\", \"Laser\", \"Maestro\", \"MasterCard\", \"Solo\", \"Switch\", \"Visa\", \"Visa Electron\" };\n\n    @java.lang.Override\n    protected void onValidate(org.apache.wicket.validation.IValidatable<java.lang.String> validatable) {\n        creditCardNumber = validatable.getValue();\n        if (!isLengthAndPrefixCorrect(creditCardNumber)) {\n            error(validatable);\n        }\n    }\n\n    private boolean isLengthAndPrefixCorrect(java.lang.String creditCardNumber) {\n        if (creditCardNumber != null) {\n            creditCardNumber = creditCardNumber.replaceAll(\"[ -]\", \"\");\n        }\n        if (((creditCardNumber != null) && (creditCardNumber.length() >= 12)) && (creditCardNumber.length() <= 19)) {\n            if (isAmericanExpress(creditCardNumber)) {\n                return true;\n            } else if (isChinaUnionPay(creditCardNumber)) {\n                return true;\n            } else if (isDinersClubCarteBlanche(creditCardNumber)) {\n                return true;\n            } else if (isDinersClubInternational(creditCardNumber)) {\n                return true;\n            } else if (isDinersClubUsAndCanada(creditCardNumber)) {\n                return true;\n            } else if (isDiscoverCard(creditCardNumber)) {\n                return true;\n            } else if (isJCB(creditCardNumber)) {\n                return true;\n            } else if (isLaser(creditCardNumber)) {\n                return true;\n            } else if (isMaestro(creditCardNumber)) {\n                return true;\n            } else if (isMastercard(creditCardNumber)) {\n                return true;\n            } else if (isSolo(creditCardNumber)) {\n                return true;\n            } else if (isSwitch(creditCardNumber)) {\n                return true;\n            } else if (isVisa(creditCardNumber)) {\n                return true;\n            } else if (isVisaElectron(creditCardNumber)) {\n                return true;\n            } else if (isUnknown(creditCardNumber)) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    protected boolean isUnknown(java.lang.String creditCardNumber) {\n        return false;\n    }\n\n    private boolean isAmericanExpress(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 15) && (creditCardNumber.startsWith(\"34\") || creditCardNumber.startsWith(\"37\"))) {\n            if (isChecksumCorrect(creditCardNumber)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.AMERICAN_EXPRESS;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isChinaUnionPay(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() >= 16) && (creditCardNumber.length() <= 19)) && creditCardNumber.startsWith(\"622\")) {\n            int firstDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 5));\n            if ((firstDigits >= 622126) && (firstDigits <= 622925)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.CHINA_UNIONPAY;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isDinersClubCarteBlanche(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 14) && creditCardNumber.startsWith(\"30\")) {\n            int firstDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 3));\n            if (((firstDigits >= 300) && (firstDigits <= 305)) && isChecksumCorrect(creditCardNumber)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.DINERS_CLUB_CARTE_BLANCHE;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isDinersClubInternational(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() == 14) && creditCardNumber.startsWith(\"36\")) && isChecksumCorrect(creditCardNumber)) {\n            cardId = org.apache.wicket.validation.validator.CreditCardValidator.DINERS_CLUB_INTERNATIONAL;\n            returnValue = true;\n        }\n        return returnValue;\n    }\n\n    private boolean isDinersClubUsAndCanada(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() == 16) && (creditCardNumber.startsWith(\"54\") || creditCardNumber.startsWith(\"55\"))) && isChecksumCorrect(creditCardNumber)) {\n            cardId = org.apache.wicket.validation.validator.CreditCardValidator.DINERS_CLUB_US_AND_CANADA;\n            returnValue = true;\n        }\n        return returnValue;\n    }\n\n    private boolean isDiscoverCard(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() == 16) && creditCardNumber.startsWith(\"6\")) && isChecksumCorrect(creditCardNumber)) {\n            int firstThreeDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 3));\n            int firstSixDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 6));\n            if (((creditCardNumber.startsWith(\"6011\") || creditCardNumber.startsWith(\"65\")) || ((firstThreeDigits >= 644) && (firstThreeDigits <= 649))) || ((firstSixDigits >= 622126) && (firstSixDigits <= 622925))) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.DISCOVER_CARD;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isJCB(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 16) && isChecksumCorrect(creditCardNumber)) {\n            int firstFourDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 4));\n            if ((firstFourDigits >= 3528) && (firstFourDigits <= 3589)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.JCB;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isLaser(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() >= 16) && (creditCardNumber.length() <= 19)) && isChecksumCorrect(creditCardNumber)) {\n            if (((creditCardNumber.startsWith(\"6304\") || creditCardNumber.startsWith(\"6706\")) || creditCardNumber.startsWith(\"6771\")) || creditCardNumber.startsWith(\"6709\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.LASER;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isMaestro(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() >= 12) && (creditCardNumber.length() <= 19)) && isChecksumCorrect(creditCardNumber)) {\n            if ((((((creditCardNumber.startsWith(\"5018\") || creditCardNumber.startsWith(\"5020\")) || creditCardNumber.startsWith(\"5038\")) || creditCardNumber.startsWith(\"6304\")) || creditCardNumber.startsWith(\"6759\")) || creditCardNumber.startsWith(\"6761\")) || creditCardNumber.startsWith(\"6763\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.MAESTRO;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isSolo(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((((creditCardNumber.length() == 16) || (creditCardNumber.length() == 18)) || (creditCardNumber.length() == 19)) && isChecksumCorrect(creditCardNumber)) {\n            if (creditCardNumber.startsWith(\"6334\") || creditCardNumber.startsWith(\"6767\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.SOLO;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isSwitch(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((((creditCardNumber.length() == 16) || (creditCardNumber.length() == 18)) || (creditCardNumber.length() == 19)) && isChecksumCorrect(creditCardNumber)) {\n            if (((((((creditCardNumber.startsWith(\"4903\") || creditCardNumber.startsWith(\"4905\")) || creditCardNumber.startsWith(\"4911\")) || creditCardNumber.startsWith(\"4936\")) || creditCardNumber.startsWith(\"564182\")) || creditCardNumber.startsWith(\"633110\")) || creditCardNumber.startsWith(\"6333\")) || creditCardNumber.startsWith(\"6759\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.SWITCH;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isVisa(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 13) || (creditCardNumber.length() == 16)) {\n            if (creditCardNumber.startsWith(\"4\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.SWITCH;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isVisaElectron(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 16) && ((((creditCardNumber.startsWith(\"417500\") || creditCardNumber.startsWith(\"4917\")) || creditCardNumber.startsWith(\"4913\")) || creditCardNumber.startsWith(\"4508\")) || creditCardNumber.startsWith(\"4844\"))) {\n            cardId = org.apache.wicket.validation.validator.CreditCardValidator.VISA_ELECTRON;\n            returnValue = true;\n        }\n        return returnValue;\n    }\n\n    private boolean isMastercard(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 16) && isChecksumCorrect(creditCardNumber)) {\n            int firstTwoDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 2));\n            if ((firstTwoDigits >= 51) && (firstTwoDigits <= 55)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.MASTERCARD;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private java.lang.String getCardName() {\n        return (cardId > (-1)) && (cardId < org.apache.wicket.validation.validator.CreditCardValidator.creditCardNames.length) ? org.apache.wicket.validation.validator.CreditCardValidator.creditCardNames[cardId] : \"\";\n    }\n\n    private boolean isChecksumCorrect(java.lang.String creditCardNumber) {\n        java.lang.String input = creditCardNumber;\n        java.lang.String numberToCheck = input.replaceAll(\"[ -]\", \"\");\n        int nulOffset = '0';\n        int sum = 0;\n        for (int i = 1; i <= numberToCheck.length(); i++) {\n            int currentDigit = numberToCheck.charAt(numberToCheck.length() - i) - nulOffset;\n            if ((i % 2) == 0) {\n                currentDigit *= 2;\n                currentDigit = (currentDigit > 9) ? currentDigit - 9 : currentDigit;\n                sum += currentDigit;\n            } else {\n                sum += currentDigit;\n            }\n        }\n        return (sum % 10) == 0;\n    }\n}",
            "src_parent_type": "Class",
            "src_type": "Method"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Package",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Class",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "private boolean isDinersClubUsAndCanada(java.lang.String creditCardNumber) {\n    cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n    boolean returnValue = false;\n    if (((creditCardNumber.length() == 16) && (creditCardNumber.startsWith(\"54\") || creditCardNumber.startsWith(\"55\"))) && isChecksumCorrect(creditCardNumber)) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.DINERS_CLUB_US_AND_CANADA;\n        returnValue = true;\n    }\n    return returnValue;\n}",
            "src_parent": "public class CreditCardValidator extends org.apache.wicket.validation.validator.AbstractValidator<java.lang.String> {\n    private static final long serialVersionUID = 1L;\n\n    private java.lang.String creditCardNumber = null;\n\n    private int cardId = -1;\n\n    public static final int INVALID = -1;\n\n    public static final int AMERICAN_EXPRESS = 0;\n\n    public static final int CHINA_UNIONPAY = 1;\n\n    public static final int DINERS_CLUB_CARTE_BLANCHE = 2;\n\n    public static final int DINERS_CLUB_INTERNATIONAL = 3;\n\n    public static final int DINERS_CLUB_US_AND_CANADA = 4;\n\n    public static final int DISCOVER_CARD = 5;\n\n    public static final int JCB = 6;\n\n    public static final int LASER = 7;\n\n    public static final int MAESTRO = 8;\n\n    public static final int MASTERCARD = 9;\n\n    public static final int SOLO = 10;\n\n    public static final int SWITCH = 11;\n\n    public static final int VISA = 12;\n\n    public static final int VISA_ELECTRON = 13;\n\n    private static final java.lang.String[] creditCardNames = new java.lang.String[]{ \"American Express\", \"China UnionPay\", \"Diners Club Carte Blanche\", \"Diners Club International\", \"Diners Club US & Canada\", \"Discover Card\", \"JCB\", \"Laser\", \"Maestro\", \"MasterCard\", \"Solo\", \"Switch\", \"Visa\", \"Visa Electron\" };\n\n    @java.lang.Override\n    protected void onValidate(org.apache.wicket.validation.IValidatable<java.lang.String> validatable) {\n        creditCardNumber = validatable.getValue();\n        if (!isLengthAndPrefixCorrect(creditCardNumber)) {\n            error(validatable);\n        }\n    }\n\n    private boolean isLengthAndPrefixCorrect(java.lang.String creditCardNumber) {\n        if (creditCardNumber != null) {\n            creditCardNumber = creditCardNumber.replaceAll(\"[ -]\", \"\");\n        }\n        if (((creditCardNumber != null) && (creditCardNumber.length() >= 12)) && (creditCardNumber.length() <= 19)) {\n            if (isAmericanExpress(creditCardNumber)) {\n                return true;\n            } else if (isChinaUnionPay(creditCardNumber)) {\n                return true;\n            } else if (isDinersClubCarteBlanche(creditCardNumber)) {\n                return true;\n            } else if (isDinersClubInternational(creditCardNumber)) {\n                return true;\n            } else if (isDinersClubUsAndCanada(creditCardNumber)) {\n                return true;\n            } else if (isDiscoverCard(creditCardNumber)) {\n                return true;\n            } else if (isJCB(creditCardNumber)) {\n                return true;\n            } else if (isLaser(creditCardNumber)) {\n                return true;\n            } else if (isMaestro(creditCardNumber)) {\n                return true;\n            } else if (isMastercard(creditCardNumber)) {\n                return true;\n            } else if (isSolo(creditCardNumber)) {\n                return true;\n            } else if (isSwitch(creditCardNumber)) {\n                return true;\n            } else if (isVisa(creditCardNumber)) {\n                return true;\n            } else if (isVisaElectron(creditCardNumber)) {\n                return true;\n            } else if (isUnknown(creditCardNumber)) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    protected boolean isUnknown(java.lang.String creditCardNumber) {\n        return false;\n    }\n\n    private boolean isAmericanExpress(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 15) && (creditCardNumber.startsWith(\"34\") || creditCardNumber.startsWith(\"37\"))) {\n            if (isChecksumCorrect(creditCardNumber)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.AMERICAN_EXPRESS;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isChinaUnionPay(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() >= 16) && (creditCardNumber.length() <= 19)) && creditCardNumber.startsWith(\"622\")) {\n            int firstDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 5));\n            if ((firstDigits >= 622126) && (firstDigits <= 622925)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.CHINA_UNIONPAY;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isDinersClubCarteBlanche(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 14) && creditCardNumber.startsWith(\"30\")) {\n            int firstDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 3));\n            if (((firstDigits >= 300) && (firstDigits <= 305)) && isChecksumCorrect(creditCardNumber)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.DINERS_CLUB_CARTE_BLANCHE;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isDinersClubInternational(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() == 14) && creditCardNumber.startsWith(\"36\")) && isChecksumCorrect(creditCardNumber)) {\n            cardId = org.apache.wicket.validation.validator.CreditCardValidator.DINERS_CLUB_INTERNATIONAL;\n            returnValue = true;\n        }\n        return returnValue;\n    }\n\n    private boolean isDinersClubUsAndCanada(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() == 16) && (creditCardNumber.startsWith(\"54\") || creditCardNumber.startsWith(\"55\"))) && isChecksumCorrect(creditCardNumber)) {\n            cardId = org.apache.wicket.validation.validator.CreditCardValidator.DINERS_CLUB_US_AND_CANADA;\n            returnValue = true;\n        }\n        return returnValue;\n    }\n\n    private boolean isDiscoverCard(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() == 16) && creditCardNumber.startsWith(\"6\")) && isChecksumCorrect(creditCardNumber)) {\n            int firstThreeDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 3));\n            int firstSixDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 6));\n            if (((creditCardNumber.startsWith(\"6011\") || creditCardNumber.startsWith(\"65\")) || ((firstThreeDigits >= 644) && (firstThreeDigits <= 649))) || ((firstSixDigits >= 622126) && (firstSixDigits <= 622925))) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.DISCOVER_CARD;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isJCB(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 16) && isChecksumCorrect(creditCardNumber)) {\n            int firstFourDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 4));\n            if ((firstFourDigits >= 3528) && (firstFourDigits <= 3589)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.JCB;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isLaser(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() >= 16) && (creditCardNumber.length() <= 19)) && isChecksumCorrect(creditCardNumber)) {\n            if (((creditCardNumber.startsWith(\"6304\") || creditCardNumber.startsWith(\"6706\")) || creditCardNumber.startsWith(\"6771\")) || creditCardNumber.startsWith(\"6709\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.LASER;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isMaestro(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() >= 12) && (creditCardNumber.length() <= 19)) && isChecksumCorrect(creditCardNumber)) {\n            if ((((((creditCardNumber.startsWith(\"5018\") || creditCardNumber.startsWith(\"5020\")) || creditCardNumber.startsWith(\"5038\")) || creditCardNumber.startsWith(\"6304\")) || creditCardNumber.startsWith(\"6759\")) || creditCardNumber.startsWith(\"6761\")) || creditCardNumber.startsWith(\"6763\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.MAESTRO;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isSolo(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((((creditCardNumber.length() == 16) || (creditCardNumber.length() == 18)) || (creditCardNumber.length() == 19)) && isChecksumCorrect(creditCardNumber)) {\n            if (creditCardNumber.startsWith(\"6334\") || creditCardNumber.startsWith(\"6767\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.SOLO;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isSwitch(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((((creditCardNumber.length() == 16) || (creditCardNumber.length() == 18)) || (creditCardNumber.length() == 19)) && isChecksumCorrect(creditCardNumber)) {\n            if (((((((creditCardNumber.startsWith(\"4903\") || creditCardNumber.startsWith(\"4905\")) || creditCardNumber.startsWith(\"4911\")) || creditCardNumber.startsWith(\"4936\")) || creditCardNumber.startsWith(\"564182\")) || creditCardNumber.startsWith(\"633110\")) || creditCardNumber.startsWith(\"6333\")) || creditCardNumber.startsWith(\"6759\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.SWITCH;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isVisa(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 13) || (creditCardNumber.length() == 16)) {\n            if (creditCardNumber.startsWith(\"4\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.SWITCH;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isVisaElectron(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 16) && ((((creditCardNumber.startsWith(\"417500\") || creditCardNumber.startsWith(\"4917\")) || creditCardNumber.startsWith(\"4913\")) || creditCardNumber.startsWith(\"4508\")) || creditCardNumber.startsWith(\"4844\"))) {\n            cardId = org.apache.wicket.validation.validator.CreditCardValidator.VISA_ELECTRON;\n            returnValue = true;\n        }\n        return returnValue;\n    }\n\n    private boolean isMastercard(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 16) && isChecksumCorrect(creditCardNumber)) {\n            int firstTwoDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 2));\n            if ((firstTwoDigits >= 51) && (firstTwoDigits <= 55)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.MASTERCARD;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private java.lang.String getCardName() {\n        return (cardId > (-1)) && (cardId < org.apache.wicket.validation.validator.CreditCardValidator.creditCardNames.length) ? org.apache.wicket.validation.validator.CreditCardValidator.creditCardNames[cardId] : \"\";\n    }\n\n    private boolean isChecksumCorrect(java.lang.String creditCardNumber) {\n        java.lang.String input = creditCardNumber;\n        java.lang.String numberToCheck = input.replaceAll(\"[ -]\", \"\");\n        int nulOffset = '0';\n        int sum = 0;\n        for (int i = 1; i <= numberToCheck.length(); i++) {\n            int currentDigit = numberToCheck.charAt(numberToCheck.length() - i) - nulOffset;\n            if ((i % 2) == 0) {\n                currentDigit *= 2;\n                currentDigit = (currentDigit > 9) ? currentDigit - 9 : currentDigit;\n                sum += currentDigit;\n            } else {\n                sum += currentDigit;\n            }\n        }\n        return (sum % 10) == 0;\n    }\n}",
            "src_parent_type": "Class",
            "src_type": "Method"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Package",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Class",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "private boolean isDiscoverCard(java.lang.String creditCardNumber) {\n    cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n    boolean returnValue = false;\n    if (((creditCardNumber.length() == 16) && creditCardNumber.startsWith(\"6\")) && isChecksumCorrect(creditCardNumber)) {\n        int firstThreeDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 3));\n        int firstSixDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 6));\n        if (((creditCardNumber.startsWith(\"6011\") || creditCardNumber.startsWith(\"65\")) || ((firstThreeDigits >= 644) && (firstThreeDigits <= 649))) || ((firstSixDigits >= 622126) && (firstSixDigits <= 622925))) {\n            cardId = org.apache.wicket.validation.validator.CreditCardValidator.DISCOVER_CARD;\n            returnValue = true;\n        }\n    }\n    return returnValue;\n}",
            "src_parent": "public class CreditCardValidator extends org.apache.wicket.validation.validator.AbstractValidator<java.lang.String> {\n    private static final long serialVersionUID = 1L;\n\n    private java.lang.String creditCardNumber = null;\n\n    private int cardId = -1;\n\n    public static final int INVALID = -1;\n\n    public static final int AMERICAN_EXPRESS = 0;\n\n    public static final int CHINA_UNIONPAY = 1;\n\n    public static final int DINERS_CLUB_CARTE_BLANCHE = 2;\n\n    public static final int DINERS_CLUB_INTERNATIONAL = 3;\n\n    public static final int DINERS_CLUB_US_AND_CANADA = 4;\n\n    public static final int DISCOVER_CARD = 5;\n\n    public static final int JCB = 6;\n\n    public static final int LASER = 7;\n\n    public static final int MAESTRO = 8;\n\n    public static final int MASTERCARD = 9;\n\n    public static final int SOLO = 10;\n\n    public static final int SWITCH = 11;\n\n    public static final int VISA = 12;\n\n    public static final int VISA_ELECTRON = 13;\n\n    private static final java.lang.String[] creditCardNames = new java.lang.String[]{ \"American Express\", \"China UnionPay\", \"Diners Club Carte Blanche\", \"Diners Club International\", \"Diners Club US & Canada\", \"Discover Card\", \"JCB\", \"Laser\", \"Maestro\", \"MasterCard\", \"Solo\", \"Switch\", \"Visa\", \"Visa Electron\" };\n\n    @java.lang.Override\n    protected void onValidate(org.apache.wicket.validation.IValidatable<java.lang.String> validatable) {\n        creditCardNumber = validatable.getValue();\n        if (!isLengthAndPrefixCorrect(creditCardNumber)) {\n            error(validatable);\n        }\n    }\n\n    private boolean isLengthAndPrefixCorrect(java.lang.String creditCardNumber) {\n        if (creditCardNumber != null) {\n            creditCardNumber = creditCardNumber.replaceAll(\"[ -]\", \"\");\n        }\n        if (((creditCardNumber != null) && (creditCardNumber.length() >= 12)) && (creditCardNumber.length() <= 19)) {\n            if (isAmericanExpress(creditCardNumber)) {\n                return true;\n            } else if (isChinaUnionPay(creditCardNumber)) {\n                return true;\n            } else if (isDinersClubCarteBlanche(creditCardNumber)) {\n                return true;\n            } else if (isDinersClubInternational(creditCardNumber)) {\n                return true;\n            } else if (isDinersClubUsAndCanada(creditCardNumber)) {\n                return true;\n            } else if (isDiscoverCard(creditCardNumber)) {\n                return true;\n            } else if (isJCB(creditCardNumber)) {\n                return true;\n            } else if (isLaser(creditCardNumber)) {\n                return true;\n            } else if (isMaestro(creditCardNumber)) {\n                return true;\n            } else if (isMastercard(creditCardNumber)) {\n                return true;\n            } else if (isSolo(creditCardNumber)) {\n                return true;\n            } else if (isSwitch(creditCardNumber)) {\n                return true;\n            } else if (isVisa(creditCardNumber)) {\n                return true;\n            } else if (isVisaElectron(creditCardNumber)) {\n                return true;\n            } else if (isUnknown(creditCardNumber)) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    protected boolean isUnknown(java.lang.String creditCardNumber) {\n        return false;\n    }\n\n    private boolean isAmericanExpress(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 15) && (creditCardNumber.startsWith(\"34\") || creditCardNumber.startsWith(\"37\"))) {\n            if (isChecksumCorrect(creditCardNumber)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.AMERICAN_EXPRESS;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isChinaUnionPay(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() >= 16) && (creditCardNumber.length() <= 19)) && creditCardNumber.startsWith(\"622\")) {\n            int firstDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 5));\n            if ((firstDigits >= 622126) && (firstDigits <= 622925)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.CHINA_UNIONPAY;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isDinersClubCarteBlanche(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 14) && creditCardNumber.startsWith(\"30\")) {\n            int firstDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 3));\n            if (((firstDigits >= 300) && (firstDigits <= 305)) && isChecksumCorrect(creditCardNumber)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.DINERS_CLUB_CARTE_BLANCHE;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isDinersClubInternational(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() == 14) && creditCardNumber.startsWith(\"36\")) && isChecksumCorrect(creditCardNumber)) {\n            cardId = org.apache.wicket.validation.validator.CreditCardValidator.DINERS_CLUB_INTERNATIONAL;\n            returnValue = true;\n        }\n        return returnValue;\n    }\n\n    private boolean isDinersClubUsAndCanada(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() == 16) && (creditCardNumber.startsWith(\"54\") || creditCardNumber.startsWith(\"55\"))) && isChecksumCorrect(creditCardNumber)) {\n            cardId = org.apache.wicket.validation.validator.CreditCardValidator.DINERS_CLUB_US_AND_CANADA;\n            returnValue = true;\n        }\n        return returnValue;\n    }\n\n    private boolean isDiscoverCard(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() == 16) && creditCardNumber.startsWith(\"6\")) && isChecksumCorrect(creditCardNumber)) {\n            int firstThreeDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 3));\n            int firstSixDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 6));\n            if (((creditCardNumber.startsWith(\"6011\") || creditCardNumber.startsWith(\"65\")) || ((firstThreeDigits >= 644) && (firstThreeDigits <= 649))) || ((firstSixDigits >= 622126) && (firstSixDigits <= 622925))) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.DISCOVER_CARD;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isJCB(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 16) && isChecksumCorrect(creditCardNumber)) {\n            int firstFourDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 4));\n            if ((firstFourDigits >= 3528) && (firstFourDigits <= 3589)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.JCB;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isLaser(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() >= 16) && (creditCardNumber.length() <= 19)) && isChecksumCorrect(creditCardNumber)) {\n            if (((creditCardNumber.startsWith(\"6304\") || creditCardNumber.startsWith(\"6706\")) || creditCardNumber.startsWith(\"6771\")) || creditCardNumber.startsWith(\"6709\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.LASER;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isMaestro(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() >= 12) && (creditCardNumber.length() <= 19)) && isChecksumCorrect(creditCardNumber)) {\n            if ((((((creditCardNumber.startsWith(\"5018\") || creditCardNumber.startsWith(\"5020\")) || creditCardNumber.startsWith(\"5038\")) || creditCardNumber.startsWith(\"6304\")) || creditCardNumber.startsWith(\"6759\")) || creditCardNumber.startsWith(\"6761\")) || creditCardNumber.startsWith(\"6763\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.MAESTRO;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isSolo(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((((creditCardNumber.length() == 16) || (creditCardNumber.length() == 18)) || (creditCardNumber.length() == 19)) && isChecksumCorrect(creditCardNumber)) {\n            if (creditCardNumber.startsWith(\"6334\") || creditCardNumber.startsWith(\"6767\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.SOLO;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isSwitch(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((((creditCardNumber.length() == 16) || (creditCardNumber.length() == 18)) || (creditCardNumber.length() == 19)) && isChecksumCorrect(creditCardNumber)) {\n            if (((((((creditCardNumber.startsWith(\"4903\") || creditCardNumber.startsWith(\"4905\")) || creditCardNumber.startsWith(\"4911\")) || creditCardNumber.startsWith(\"4936\")) || creditCardNumber.startsWith(\"564182\")) || creditCardNumber.startsWith(\"633110\")) || creditCardNumber.startsWith(\"6333\")) || creditCardNumber.startsWith(\"6759\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.SWITCH;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isVisa(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 13) || (creditCardNumber.length() == 16)) {\n            if (creditCardNumber.startsWith(\"4\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.SWITCH;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isVisaElectron(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 16) && ((((creditCardNumber.startsWith(\"417500\") || creditCardNumber.startsWith(\"4917\")) || creditCardNumber.startsWith(\"4913\")) || creditCardNumber.startsWith(\"4508\")) || creditCardNumber.startsWith(\"4844\"))) {\n            cardId = org.apache.wicket.validation.validator.CreditCardValidator.VISA_ELECTRON;\n            returnValue = true;\n        }\n        return returnValue;\n    }\n\n    private boolean isMastercard(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 16) && isChecksumCorrect(creditCardNumber)) {\n            int firstTwoDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 2));\n            if ((firstTwoDigits >= 51) && (firstTwoDigits <= 55)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.MASTERCARD;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private java.lang.String getCardName() {\n        return (cardId > (-1)) && (cardId < org.apache.wicket.validation.validator.CreditCardValidator.creditCardNames.length) ? org.apache.wicket.validation.validator.CreditCardValidator.creditCardNames[cardId] : \"\";\n    }\n\n    private boolean isChecksumCorrect(java.lang.String creditCardNumber) {\n        java.lang.String input = creditCardNumber;\n        java.lang.String numberToCheck = input.replaceAll(\"[ -]\", \"\");\n        int nulOffset = '0';\n        int sum = 0;\n        for (int i = 1; i <= numberToCheck.length(); i++) {\n            int currentDigit = numberToCheck.charAt(numberToCheck.length() - i) - nulOffset;\n            if ((i % 2) == 0) {\n                currentDigit *= 2;\n                currentDigit = (currentDigit > 9) ? currentDigit - 9 : currentDigit;\n                sum += currentDigit;\n            } else {\n                sum += currentDigit;\n            }\n        }\n        return (sum % 10) == 0;\n    }\n}",
            "src_parent_type": "Class",
            "src_type": "Method"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Package",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Class",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "private boolean isJCB(java.lang.String creditCardNumber) {\n    cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n    boolean returnValue = false;\n    if ((creditCardNumber.length() == 16) && isChecksumCorrect(creditCardNumber)) {\n        int firstFourDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 4));\n        if ((firstFourDigits >= 3528) && (firstFourDigits <= 3589)) {\n            cardId = org.apache.wicket.validation.validator.CreditCardValidator.JCB;\n            returnValue = true;\n        }\n    }\n    return returnValue;\n}",
            "src_parent": "public class CreditCardValidator extends org.apache.wicket.validation.validator.AbstractValidator<java.lang.String> {\n    private static final long serialVersionUID = 1L;\n\n    private java.lang.String creditCardNumber = null;\n\n    private int cardId = -1;\n\n    public static final int INVALID = -1;\n\n    public static final int AMERICAN_EXPRESS = 0;\n\n    public static final int CHINA_UNIONPAY = 1;\n\n    public static final int DINERS_CLUB_CARTE_BLANCHE = 2;\n\n    public static final int DINERS_CLUB_INTERNATIONAL = 3;\n\n    public static final int DINERS_CLUB_US_AND_CANADA = 4;\n\n    public static final int DISCOVER_CARD = 5;\n\n    public static final int JCB = 6;\n\n    public static final int LASER = 7;\n\n    public static final int MAESTRO = 8;\n\n    public static final int MASTERCARD = 9;\n\n    public static final int SOLO = 10;\n\n    public static final int SWITCH = 11;\n\n    public static final int VISA = 12;\n\n    public static final int VISA_ELECTRON = 13;\n\n    private static final java.lang.String[] creditCardNames = new java.lang.String[]{ \"American Express\", \"China UnionPay\", \"Diners Club Carte Blanche\", \"Diners Club International\", \"Diners Club US & Canada\", \"Discover Card\", \"JCB\", \"Laser\", \"Maestro\", \"MasterCard\", \"Solo\", \"Switch\", \"Visa\", \"Visa Electron\" };\n\n    @java.lang.Override\n    protected void onValidate(org.apache.wicket.validation.IValidatable<java.lang.String> validatable) {\n        creditCardNumber = validatable.getValue();\n        if (!isLengthAndPrefixCorrect(creditCardNumber)) {\n            error(validatable);\n        }\n    }\n\n    private boolean isLengthAndPrefixCorrect(java.lang.String creditCardNumber) {\n        if (creditCardNumber != null) {\n            creditCardNumber = creditCardNumber.replaceAll(\"[ -]\", \"\");\n        }\n        if (((creditCardNumber != null) && (creditCardNumber.length() >= 12)) && (creditCardNumber.length() <= 19)) {\n            if (isAmericanExpress(creditCardNumber)) {\n                return true;\n            } else if (isChinaUnionPay(creditCardNumber)) {\n                return true;\n            } else if (isDinersClubCarteBlanche(creditCardNumber)) {\n                return true;\n            } else if (isDinersClubInternational(creditCardNumber)) {\n                return true;\n            } else if (isDinersClubUsAndCanada(creditCardNumber)) {\n                return true;\n            } else if (isDiscoverCard(creditCardNumber)) {\n                return true;\n            } else if (isJCB(creditCardNumber)) {\n                return true;\n            } else if (isLaser(creditCardNumber)) {\n                return true;\n            } else if (isMaestro(creditCardNumber)) {\n                return true;\n            } else if (isMastercard(creditCardNumber)) {\n                return true;\n            } else if (isSolo(creditCardNumber)) {\n                return true;\n            } else if (isSwitch(creditCardNumber)) {\n                return true;\n            } else if (isVisa(creditCardNumber)) {\n                return true;\n            } else if (isVisaElectron(creditCardNumber)) {\n                return true;\n            } else if (isUnknown(creditCardNumber)) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    protected boolean isUnknown(java.lang.String creditCardNumber) {\n        return false;\n    }\n\n    private boolean isAmericanExpress(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 15) && (creditCardNumber.startsWith(\"34\") || creditCardNumber.startsWith(\"37\"))) {\n            if (isChecksumCorrect(creditCardNumber)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.AMERICAN_EXPRESS;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isChinaUnionPay(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() >= 16) && (creditCardNumber.length() <= 19)) && creditCardNumber.startsWith(\"622\")) {\n            int firstDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 5));\n            if ((firstDigits >= 622126) && (firstDigits <= 622925)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.CHINA_UNIONPAY;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isDinersClubCarteBlanche(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 14) && creditCardNumber.startsWith(\"30\")) {\n            int firstDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 3));\n            if (((firstDigits >= 300) && (firstDigits <= 305)) && isChecksumCorrect(creditCardNumber)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.DINERS_CLUB_CARTE_BLANCHE;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isDinersClubInternational(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() == 14) && creditCardNumber.startsWith(\"36\")) && isChecksumCorrect(creditCardNumber)) {\n            cardId = org.apache.wicket.validation.validator.CreditCardValidator.DINERS_CLUB_INTERNATIONAL;\n            returnValue = true;\n        }\n        return returnValue;\n    }\n\n    private boolean isDinersClubUsAndCanada(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() == 16) && (creditCardNumber.startsWith(\"54\") || creditCardNumber.startsWith(\"55\"))) && isChecksumCorrect(creditCardNumber)) {\n            cardId = org.apache.wicket.validation.validator.CreditCardValidator.DINERS_CLUB_US_AND_CANADA;\n            returnValue = true;\n        }\n        return returnValue;\n    }\n\n    private boolean isDiscoverCard(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() == 16) && creditCardNumber.startsWith(\"6\")) && isChecksumCorrect(creditCardNumber)) {\n            int firstThreeDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 3));\n            int firstSixDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 6));\n            if (((creditCardNumber.startsWith(\"6011\") || creditCardNumber.startsWith(\"65\")) || ((firstThreeDigits >= 644) && (firstThreeDigits <= 649))) || ((firstSixDigits >= 622126) && (firstSixDigits <= 622925))) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.DISCOVER_CARD;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isJCB(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 16) && isChecksumCorrect(creditCardNumber)) {\n            int firstFourDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 4));\n            if ((firstFourDigits >= 3528) && (firstFourDigits <= 3589)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.JCB;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isLaser(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() >= 16) && (creditCardNumber.length() <= 19)) && isChecksumCorrect(creditCardNumber)) {\n            if (((creditCardNumber.startsWith(\"6304\") || creditCardNumber.startsWith(\"6706\")) || creditCardNumber.startsWith(\"6771\")) || creditCardNumber.startsWith(\"6709\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.LASER;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isMaestro(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() >= 12) && (creditCardNumber.length() <= 19)) && isChecksumCorrect(creditCardNumber)) {\n            if ((((((creditCardNumber.startsWith(\"5018\") || creditCardNumber.startsWith(\"5020\")) || creditCardNumber.startsWith(\"5038\")) || creditCardNumber.startsWith(\"6304\")) || creditCardNumber.startsWith(\"6759\")) || creditCardNumber.startsWith(\"6761\")) || creditCardNumber.startsWith(\"6763\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.MAESTRO;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isSolo(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((((creditCardNumber.length() == 16) || (creditCardNumber.length() == 18)) || (creditCardNumber.length() == 19)) && isChecksumCorrect(creditCardNumber)) {\n            if (creditCardNumber.startsWith(\"6334\") || creditCardNumber.startsWith(\"6767\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.SOLO;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isSwitch(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((((creditCardNumber.length() == 16) || (creditCardNumber.length() == 18)) || (creditCardNumber.length() == 19)) && isChecksumCorrect(creditCardNumber)) {\n            if (((((((creditCardNumber.startsWith(\"4903\") || creditCardNumber.startsWith(\"4905\")) || creditCardNumber.startsWith(\"4911\")) || creditCardNumber.startsWith(\"4936\")) || creditCardNumber.startsWith(\"564182\")) || creditCardNumber.startsWith(\"633110\")) || creditCardNumber.startsWith(\"6333\")) || creditCardNumber.startsWith(\"6759\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.SWITCH;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isVisa(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 13) || (creditCardNumber.length() == 16)) {\n            if (creditCardNumber.startsWith(\"4\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.SWITCH;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isVisaElectron(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 16) && ((((creditCardNumber.startsWith(\"417500\") || creditCardNumber.startsWith(\"4917\")) || creditCardNumber.startsWith(\"4913\")) || creditCardNumber.startsWith(\"4508\")) || creditCardNumber.startsWith(\"4844\"))) {\n            cardId = org.apache.wicket.validation.validator.CreditCardValidator.VISA_ELECTRON;\n            returnValue = true;\n        }\n        return returnValue;\n    }\n\n    private boolean isMastercard(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 16) && isChecksumCorrect(creditCardNumber)) {\n            int firstTwoDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 2));\n            if ((firstTwoDigits >= 51) && (firstTwoDigits <= 55)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.MASTERCARD;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private java.lang.String getCardName() {\n        return (cardId > (-1)) && (cardId < org.apache.wicket.validation.validator.CreditCardValidator.creditCardNames.length) ? org.apache.wicket.validation.validator.CreditCardValidator.creditCardNames[cardId] : \"\";\n    }\n\n    private boolean isChecksumCorrect(java.lang.String creditCardNumber) {\n        java.lang.String input = creditCardNumber;\n        java.lang.String numberToCheck = input.replaceAll(\"[ -]\", \"\");\n        int nulOffset = '0';\n        int sum = 0;\n        for (int i = 1; i <= numberToCheck.length(); i++) {\n            int currentDigit = numberToCheck.charAt(numberToCheck.length() - i) - nulOffset;\n            if ((i % 2) == 0) {\n                currentDigit *= 2;\n                currentDigit = (currentDigit > 9) ? currentDigit - 9 : currentDigit;\n                sum += currentDigit;\n            } else {\n                sum += currentDigit;\n            }\n        }\n        return (sum % 10) == 0;\n    }\n}",
            "src_parent_type": "Class",
            "src_type": "Method"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Package",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Class",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "private boolean isLaser(java.lang.String creditCardNumber) {\n    cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n    boolean returnValue = false;\n    if (((creditCardNumber.length() >= 16) && (creditCardNumber.length() <= 19)) && isChecksumCorrect(creditCardNumber)) {\n        if (((creditCardNumber.startsWith(\"6304\") || creditCardNumber.startsWith(\"6706\")) || creditCardNumber.startsWith(\"6771\")) || creditCardNumber.startsWith(\"6709\")) {\n            cardId = org.apache.wicket.validation.validator.CreditCardValidator.LASER;\n            returnValue = true;\n        }\n    }\n    return returnValue;\n}",
            "src_parent": "public class CreditCardValidator extends org.apache.wicket.validation.validator.AbstractValidator<java.lang.String> {\n    private static final long serialVersionUID = 1L;\n\n    private java.lang.String creditCardNumber = null;\n\n    private int cardId = -1;\n\n    public static final int INVALID = -1;\n\n    public static final int AMERICAN_EXPRESS = 0;\n\n    public static final int CHINA_UNIONPAY = 1;\n\n    public static final int DINERS_CLUB_CARTE_BLANCHE = 2;\n\n    public static final int DINERS_CLUB_INTERNATIONAL = 3;\n\n    public static final int DINERS_CLUB_US_AND_CANADA = 4;\n\n    public static final int DISCOVER_CARD = 5;\n\n    public static final int JCB = 6;\n\n    public static final int LASER = 7;\n\n    public static final int MAESTRO = 8;\n\n    public static final int MASTERCARD = 9;\n\n    public static final int SOLO = 10;\n\n    public static final int SWITCH = 11;\n\n    public static final int VISA = 12;\n\n    public static final int VISA_ELECTRON = 13;\n\n    private static final java.lang.String[] creditCardNames = new java.lang.String[]{ \"American Express\", \"China UnionPay\", \"Diners Club Carte Blanche\", \"Diners Club International\", \"Diners Club US & Canada\", \"Discover Card\", \"JCB\", \"Laser\", \"Maestro\", \"MasterCard\", \"Solo\", \"Switch\", \"Visa\", \"Visa Electron\" };\n\n    @java.lang.Override\n    protected void onValidate(org.apache.wicket.validation.IValidatable<java.lang.String> validatable) {\n        creditCardNumber = validatable.getValue();\n        if (!isLengthAndPrefixCorrect(creditCardNumber)) {\n            error(validatable);\n        }\n    }\n\n    private boolean isLengthAndPrefixCorrect(java.lang.String creditCardNumber) {\n        if (creditCardNumber != null) {\n            creditCardNumber = creditCardNumber.replaceAll(\"[ -]\", \"\");\n        }\n        if (((creditCardNumber != null) && (creditCardNumber.length() >= 12)) && (creditCardNumber.length() <= 19)) {\n            if (isAmericanExpress(creditCardNumber)) {\n                return true;\n            } else if (isChinaUnionPay(creditCardNumber)) {\n                return true;\n            } else if (isDinersClubCarteBlanche(creditCardNumber)) {\n                return true;\n            } else if (isDinersClubInternational(creditCardNumber)) {\n                return true;\n            } else if (isDinersClubUsAndCanada(creditCardNumber)) {\n                return true;\n            } else if (isDiscoverCard(creditCardNumber)) {\n                return true;\n            } else if (isJCB(creditCardNumber)) {\n                return true;\n            } else if (isLaser(creditCardNumber)) {\n                return true;\n            } else if (isMaestro(creditCardNumber)) {\n                return true;\n            } else if (isMastercard(creditCardNumber)) {\n                return true;\n            } else if (isSolo(creditCardNumber)) {\n                return true;\n            } else if (isSwitch(creditCardNumber)) {\n                return true;\n            } else if (isVisa(creditCardNumber)) {\n                return true;\n            } else if (isVisaElectron(creditCardNumber)) {\n                return true;\n            } else if (isUnknown(creditCardNumber)) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    protected boolean isUnknown(java.lang.String creditCardNumber) {\n        return false;\n    }\n\n    private boolean isAmericanExpress(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 15) && (creditCardNumber.startsWith(\"34\") || creditCardNumber.startsWith(\"37\"))) {\n            if (isChecksumCorrect(creditCardNumber)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.AMERICAN_EXPRESS;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isChinaUnionPay(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() >= 16) && (creditCardNumber.length() <= 19)) && creditCardNumber.startsWith(\"622\")) {\n            int firstDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 5));\n            if ((firstDigits >= 622126) && (firstDigits <= 622925)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.CHINA_UNIONPAY;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isDinersClubCarteBlanche(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 14) && creditCardNumber.startsWith(\"30\")) {\n            int firstDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 3));\n            if (((firstDigits >= 300) && (firstDigits <= 305)) && isChecksumCorrect(creditCardNumber)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.DINERS_CLUB_CARTE_BLANCHE;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isDinersClubInternational(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() == 14) && creditCardNumber.startsWith(\"36\")) && isChecksumCorrect(creditCardNumber)) {\n            cardId = org.apache.wicket.validation.validator.CreditCardValidator.DINERS_CLUB_INTERNATIONAL;\n            returnValue = true;\n        }\n        return returnValue;\n    }\n\n    private boolean isDinersClubUsAndCanada(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() == 16) && (creditCardNumber.startsWith(\"54\") || creditCardNumber.startsWith(\"55\"))) && isChecksumCorrect(creditCardNumber)) {\n            cardId = org.apache.wicket.validation.validator.CreditCardValidator.DINERS_CLUB_US_AND_CANADA;\n            returnValue = true;\n        }\n        return returnValue;\n    }\n\n    private boolean isDiscoverCard(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() == 16) && creditCardNumber.startsWith(\"6\")) && isChecksumCorrect(creditCardNumber)) {\n            int firstThreeDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 3));\n            int firstSixDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 6));\n            if (((creditCardNumber.startsWith(\"6011\") || creditCardNumber.startsWith(\"65\")) || ((firstThreeDigits >= 644) && (firstThreeDigits <= 649))) || ((firstSixDigits >= 622126) && (firstSixDigits <= 622925))) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.DISCOVER_CARD;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isJCB(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 16) && isChecksumCorrect(creditCardNumber)) {\n            int firstFourDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 4));\n            if ((firstFourDigits >= 3528) && (firstFourDigits <= 3589)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.JCB;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isLaser(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() >= 16) && (creditCardNumber.length() <= 19)) && isChecksumCorrect(creditCardNumber)) {\n            if (((creditCardNumber.startsWith(\"6304\") || creditCardNumber.startsWith(\"6706\")) || creditCardNumber.startsWith(\"6771\")) || creditCardNumber.startsWith(\"6709\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.LASER;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isMaestro(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() >= 12) && (creditCardNumber.length() <= 19)) && isChecksumCorrect(creditCardNumber)) {\n            if ((((((creditCardNumber.startsWith(\"5018\") || creditCardNumber.startsWith(\"5020\")) || creditCardNumber.startsWith(\"5038\")) || creditCardNumber.startsWith(\"6304\")) || creditCardNumber.startsWith(\"6759\")) || creditCardNumber.startsWith(\"6761\")) || creditCardNumber.startsWith(\"6763\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.MAESTRO;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isSolo(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((((creditCardNumber.length() == 16) || (creditCardNumber.length() == 18)) || (creditCardNumber.length() == 19)) && isChecksumCorrect(creditCardNumber)) {\n            if (creditCardNumber.startsWith(\"6334\") || creditCardNumber.startsWith(\"6767\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.SOLO;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isSwitch(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((((creditCardNumber.length() == 16) || (creditCardNumber.length() == 18)) || (creditCardNumber.length() == 19)) && isChecksumCorrect(creditCardNumber)) {\n            if (((((((creditCardNumber.startsWith(\"4903\") || creditCardNumber.startsWith(\"4905\")) || creditCardNumber.startsWith(\"4911\")) || creditCardNumber.startsWith(\"4936\")) || creditCardNumber.startsWith(\"564182\")) || creditCardNumber.startsWith(\"633110\")) || creditCardNumber.startsWith(\"6333\")) || creditCardNumber.startsWith(\"6759\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.SWITCH;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isVisa(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 13) || (creditCardNumber.length() == 16)) {\n            if (creditCardNumber.startsWith(\"4\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.SWITCH;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isVisaElectron(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 16) && ((((creditCardNumber.startsWith(\"417500\") || creditCardNumber.startsWith(\"4917\")) || creditCardNumber.startsWith(\"4913\")) || creditCardNumber.startsWith(\"4508\")) || creditCardNumber.startsWith(\"4844\"))) {\n            cardId = org.apache.wicket.validation.validator.CreditCardValidator.VISA_ELECTRON;\n            returnValue = true;\n        }\n        return returnValue;\n    }\n\n    private boolean isMastercard(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 16) && isChecksumCorrect(creditCardNumber)) {\n            int firstTwoDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 2));\n            if ((firstTwoDigits >= 51) && (firstTwoDigits <= 55)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.MASTERCARD;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private java.lang.String getCardName() {\n        return (cardId > (-1)) && (cardId < org.apache.wicket.validation.validator.CreditCardValidator.creditCardNames.length) ? org.apache.wicket.validation.validator.CreditCardValidator.creditCardNames[cardId] : \"\";\n    }\n\n    private boolean isChecksumCorrect(java.lang.String creditCardNumber) {\n        java.lang.String input = creditCardNumber;\n        java.lang.String numberToCheck = input.replaceAll(\"[ -]\", \"\");\n        int nulOffset = '0';\n        int sum = 0;\n        for (int i = 1; i <= numberToCheck.length(); i++) {\n            int currentDigit = numberToCheck.charAt(numberToCheck.length() - i) - nulOffset;\n            if ((i % 2) == 0) {\n                currentDigit *= 2;\n                currentDigit = (currentDigit > 9) ? currentDigit - 9 : currentDigit;\n                sum += currentDigit;\n            } else {\n                sum += currentDigit;\n            }\n        }\n        return (sum % 10) == 0;\n    }\n}",
            "src_parent_type": "Class",
            "src_type": "Method"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Package",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Class",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "private boolean isMaestro(java.lang.String creditCardNumber) {\n    cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n    boolean returnValue = false;\n    if (((creditCardNumber.length() >= 12) && (creditCardNumber.length() <= 19)) && isChecksumCorrect(creditCardNumber)) {\n        if ((((((creditCardNumber.startsWith(\"5018\") || creditCardNumber.startsWith(\"5020\")) || creditCardNumber.startsWith(\"5038\")) || creditCardNumber.startsWith(\"6304\")) || creditCardNumber.startsWith(\"6759\")) || creditCardNumber.startsWith(\"6761\")) || creditCardNumber.startsWith(\"6763\")) {\n            cardId = org.apache.wicket.validation.validator.CreditCardValidator.MAESTRO;\n            returnValue = true;\n        }\n    }\n    return returnValue;\n}",
            "src_parent": "public class CreditCardValidator extends org.apache.wicket.validation.validator.AbstractValidator<java.lang.String> {\n    private static final long serialVersionUID = 1L;\n\n    private java.lang.String creditCardNumber = null;\n\n    private int cardId = -1;\n\n    public static final int INVALID = -1;\n\n    public static final int AMERICAN_EXPRESS = 0;\n\n    public static final int CHINA_UNIONPAY = 1;\n\n    public static final int DINERS_CLUB_CARTE_BLANCHE = 2;\n\n    public static final int DINERS_CLUB_INTERNATIONAL = 3;\n\n    public static final int DINERS_CLUB_US_AND_CANADA = 4;\n\n    public static final int DISCOVER_CARD = 5;\n\n    public static final int JCB = 6;\n\n    public static final int LASER = 7;\n\n    public static final int MAESTRO = 8;\n\n    public static final int MASTERCARD = 9;\n\n    public static final int SOLO = 10;\n\n    public static final int SWITCH = 11;\n\n    public static final int VISA = 12;\n\n    public static final int VISA_ELECTRON = 13;\n\n    private static final java.lang.String[] creditCardNames = new java.lang.String[]{ \"American Express\", \"China UnionPay\", \"Diners Club Carte Blanche\", \"Diners Club International\", \"Diners Club US & Canada\", \"Discover Card\", \"JCB\", \"Laser\", \"Maestro\", \"MasterCard\", \"Solo\", \"Switch\", \"Visa\", \"Visa Electron\" };\n\n    @java.lang.Override\n    protected void onValidate(org.apache.wicket.validation.IValidatable<java.lang.String> validatable) {\n        creditCardNumber = validatable.getValue();\n        if (!isLengthAndPrefixCorrect(creditCardNumber)) {\n            error(validatable);\n        }\n    }\n\n    private boolean isLengthAndPrefixCorrect(java.lang.String creditCardNumber) {\n        if (creditCardNumber != null) {\n            creditCardNumber = creditCardNumber.replaceAll(\"[ -]\", \"\");\n        }\n        if (((creditCardNumber != null) && (creditCardNumber.length() >= 12)) && (creditCardNumber.length() <= 19)) {\n            if (isAmericanExpress(creditCardNumber)) {\n                return true;\n            } else if (isChinaUnionPay(creditCardNumber)) {\n                return true;\n            } else if (isDinersClubCarteBlanche(creditCardNumber)) {\n                return true;\n            } else if (isDinersClubInternational(creditCardNumber)) {\n                return true;\n            } else if (isDinersClubUsAndCanada(creditCardNumber)) {\n                return true;\n            } else if (isDiscoverCard(creditCardNumber)) {\n                return true;\n            } else if (isJCB(creditCardNumber)) {\n                return true;\n            } else if (isLaser(creditCardNumber)) {\n                return true;\n            } else if (isMaestro(creditCardNumber)) {\n                return true;\n            } else if (isMastercard(creditCardNumber)) {\n                return true;\n            } else if (isSolo(creditCardNumber)) {\n                return true;\n            } else if (isSwitch(creditCardNumber)) {\n                return true;\n            } else if (isVisa(creditCardNumber)) {\n                return true;\n            } else if (isVisaElectron(creditCardNumber)) {\n                return true;\n            } else if (isUnknown(creditCardNumber)) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    protected boolean isUnknown(java.lang.String creditCardNumber) {\n        return false;\n    }\n\n    private boolean isAmericanExpress(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 15) && (creditCardNumber.startsWith(\"34\") || creditCardNumber.startsWith(\"37\"))) {\n            if (isChecksumCorrect(creditCardNumber)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.AMERICAN_EXPRESS;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isChinaUnionPay(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() >= 16) && (creditCardNumber.length() <= 19)) && creditCardNumber.startsWith(\"622\")) {\n            int firstDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 5));\n            if ((firstDigits >= 622126) && (firstDigits <= 622925)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.CHINA_UNIONPAY;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isDinersClubCarteBlanche(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 14) && creditCardNumber.startsWith(\"30\")) {\n            int firstDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 3));\n            if (((firstDigits >= 300) && (firstDigits <= 305)) && isChecksumCorrect(creditCardNumber)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.DINERS_CLUB_CARTE_BLANCHE;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isDinersClubInternational(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() == 14) && creditCardNumber.startsWith(\"36\")) && isChecksumCorrect(creditCardNumber)) {\n            cardId = org.apache.wicket.validation.validator.CreditCardValidator.DINERS_CLUB_INTERNATIONAL;\n            returnValue = true;\n        }\n        return returnValue;\n    }\n\n    private boolean isDinersClubUsAndCanada(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() == 16) && (creditCardNumber.startsWith(\"54\") || creditCardNumber.startsWith(\"55\"))) && isChecksumCorrect(creditCardNumber)) {\n            cardId = org.apache.wicket.validation.validator.CreditCardValidator.DINERS_CLUB_US_AND_CANADA;\n            returnValue = true;\n        }\n        return returnValue;\n    }\n\n    private boolean isDiscoverCard(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() == 16) && creditCardNumber.startsWith(\"6\")) && isChecksumCorrect(creditCardNumber)) {\n            int firstThreeDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 3));\n            int firstSixDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 6));\n            if (((creditCardNumber.startsWith(\"6011\") || creditCardNumber.startsWith(\"65\")) || ((firstThreeDigits >= 644) && (firstThreeDigits <= 649))) || ((firstSixDigits >= 622126) && (firstSixDigits <= 622925))) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.DISCOVER_CARD;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isJCB(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 16) && isChecksumCorrect(creditCardNumber)) {\n            int firstFourDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 4));\n            if ((firstFourDigits >= 3528) && (firstFourDigits <= 3589)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.JCB;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isLaser(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() >= 16) && (creditCardNumber.length() <= 19)) && isChecksumCorrect(creditCardNumber)) {\n            if (((creditCardNumber.startsWith(\"6304\") || creditCardNumber.startsWith(\"6706\")) || creditCardNumber.startsWith(\"6771\")) || creditCardNumber.startsWith(\"6709\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.LASER;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isMaestro(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() >= 12) && (creditCardNumber.length() <= 19)) && isChecksumCorrect(creditCardNumber)) {\n            if ((((((creditCardNumber.startsWith(\"5018\") || creditCardNumber.startsWith(\"5020\")) || creditCardNumber.startsWith(\"5038\")) || creditCardNumber.startsWith(\"6304\")) || creditCardNumber.startsWith(\"6759\")) || creditCardNumber.startsWith(\"6761\")) || creditCardNumber.startsWith(\"6763\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.MAESTRO;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isSolo(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((((creditCardNumber.length() == 16) || (creditCardNumber.length() == 18)) || (creditCardNumber.length() == 19)) && isChecksumCorrect(creditCardNumber)) {\n            if (creditCardNumber.startsWith(\"6334\") || creditCardNumber.startsWith(\"6767\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.SOLO;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isSwitch(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((((creditCardNumber.length() == 16) || (creditCardNumber.length() == 18)) || (creditCardNumber.length() == 19)) && isChecksumCorrect(creditCardNumber)) {\n            if (((((((creditCardNumber.startsWith(\"4903\") || creditCardNumber.startsWith(\"4905\")) || creditCardNumber.startsWith(\"4911\")) || creditCardNumber.startsWith(\"4936\")) || creditCardNumber.startsWith(\"564182\")) || creditCardNumber.startsWith(\"633110\")) || creditCardNumber.startsWith(\"6333\")) || creditCardNumber.startsWith(\"6759\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.SWITCH;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isVisa(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 13) || (creditCardNumber.length() == 16)) {\n            if (creditCardNumber.startsWith(\"4\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.SWITCH;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isVisaElectron(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 16) && ((((creditCardNumber.startsWith(\"417500\") || creditCardNumber.startsWith(\"4917\")) || creditCardNumber.startsWith(\"4913\")) || creditCardNumber.startsWith(\"4508\")) || creditCardNumber.startsWith(\"4844\"))) {\n            cardId = org.apache.wicket.validation.validator.CreditCardValidator.VISA_ELECTRON;\n            returnValue = true;\n        }\n        return returnValue;\n    }\n\n    private boolean isMastercard(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 16) && isChecksumCorrect(creditCardNumber)) {\n            int firstTwoDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 2));\n            if ((firstTwoDigits >= 51) && (firstTwoDigits <= 55)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.MASTERCARD;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private java.lang.String getCardName() {\n        return (cardId > (-1)) && (cardId < org.apache.wicket.validation.validator.CreditCardValidator.creditCardNames.length) ? org.apache.wicket.validation.validator.CreditCardValidator.creditCardNames[cardId] : \"\";\n    }\n\n    private boolean isChecksumCorrect(java.lang.String creditCardNumber) {\n        java.lang.String input = creditCardNumber;\n        java.lang.String numberToCheck = input.replaceAll(\"[ -]\", \"\");\n        int nulOffset = '0';\n        int sum = 0;\n        for (int i = 1; i <= numberToCheck.length(); i++) {\n            int currentDigit = numberToCheck.charAt(numberToCheck.length() - i) - nulOffset;\n            if ((i % 2) == 0) {\n                currentDigit *= 2;\n                currentDigit = (currentDigit > 9) ? currentDigit - 9 : currentDigit;\n                sum += currentDigit;\n            } else {\n                sum += currentDigit;\n            }\n        }\n        return (sum % 10) == 0;\n    }\n}",
            "src_parent_type": "Class",
            "src_type": "Method"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Package",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Class",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "private boolean isSolo(java.lang.String creditCardNumber) {\n    cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n    boolean returnValue = false;\n    if ((((creditCardNumber.length() == 16) || (creditCardNumber.length() == 18)) || (creditCardNumber.length() == 19)) && isChecksumCorrect(creditCardNumber)) {\n        if (creditCardNumber.startsWith(\"6334\") || creditCardNumber.startsWith(\"6767\")) {\n            cardId = org.apache.wicket.validation.validator.CreditCardValidator.SOLO;\n            returnValue = true;\n        }\n    }\n    return returnValue;\n}",
            "src_parent": "public class CreditCardValidator extends org.apache.wicket.validation.validator.AbstractValidator<java.lang.String> {\n    private static final long serialVersionUID = 1L;\n\n    private java.lang.String creditCardNumber = null;\n\n    private int cardId = -1;\n\n    public static final int INVALID = -1;\n\n    public static final int AMERICAN_EXPRESS = 0;\n\n    public static final int CHINA_UNIONPAY = 1;\n\n    public static final int DINERS_CLUB_CARTE_BLANCHE = 2;\n\n    public static final int DINERS_CLUB_INTERNATIONAL = 3;\n\n    public static final int DINERS_CLUB_US_AND_CANADA = 4;\n\n    public static final int DISCOVER_CARD = 5;\n\n    public static final int JCB = 6;\n\n    public static final int LASER = 7;\n\n    public static final int MAESTRO = 8;\n\n    public static final int MASTERCARD = 9;\n\n    public static final int SOLO = 10;\n\n    public static final int SWITCH = 11;\n\n    public static final int VISA = 12;\n\n    public static final int VISA_ELECTRON = 13;\n\n    private static final java.lang.String[] creditCardNames = new java.lang.String[]{ \"American Express\", \"China UnionPay\", \"Diners Club Carte Blanche\", \"Diners Club International\", \"Diners Club US & Canada\", \"Discover Card\", \"JCB\", \"Laser\", \"Maestro\", \"MasterCard\", \"Solo\", \"Switch\", \"Visa\", \"Visa Electron\" };\n\n    @java.lang.Override\n    protected void onValidate(org.apache.wicket.validation.IValidatable<java.lang.String> validatable) {\n        creditCardNumber = validatable.getValue();\n        if (!isLengthAndPrefixCorrect(creditCardNumber)) {\n            error(validatable);\n        }\n    }\n\n    private boolean isLengthAndPrefixCorrect(java.lang.String creditCardNumber) {\n        if (creditCardNumber != null) {\n            creditCardNumber = creditCardNumber.replaceAll(\"[ -]\", \"\");\n        }\n        if (((creditCardNumber != null) && (creditCardNumber.length() >= 12)) && (creditCardNumber.length() <= 19)) {\n            if (isAmericanExpress(creditCardNumber)) {\n                return true;\n            } else if (isChinaUnionPay(creditCardNumber)) {\n                return true;\n            } else if (isDinersClubCarteBlanche(creditCardNumber)) {\n                return true;\n            } else if (isDinersClubInternational(creditCardNumber)) {\n                return true;\n            } else if (isDinersClubUsAndCanada(creditCardNumber)) {\n                return true;\n            } else if (isDiscoverCard(creditCardNumber)) {\n                return true;\n            } else if (isJCB(creditCardNumber)) {\n                return true;\n            } else if (isLaser(creditCardNumber)) {\n                return true;\n            } else if (isMaestro(creditCardNumber)) {\n                return true;\n            } else if (isMastercard(creditCardNumber)) {\n                return true;\n            } else if (isSolo(creditCardNumber)) {\n                return true;\n            } else if (isSwitch(creditCardNumber)) {\n                return true;\n            } else if (isVisa(creditCardNumber)) {\n                return true;\n            } else if (isVisaElectron(creditCardNumber)) {\n                return true;\n            } else if (isUnknown(creditCardNumber)) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    protected boolean isUnknown(java.lang.String creditCardNumber) {\n        return false;\n    }\n\n    private boolean isAmericanExpress(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 15) && (creditCardNumber.startsWith(\"34\") || creditCardNumber.startsWith(\"37\"))) {\n            if (isChecksumCorrect(creditCardNumber)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.AMERICAN_EXPRESS;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isChinaUnionPay(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() >= 16) && (creditCardNumber.length() <= 19)) && creditCardNumber.startsWith(\"622\")) {\n            int firstDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 5));\n            if ((firstDigits >= 622126) && (firstDigits <= 622925)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.CHINA_UNIONPAY;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isDinersClubCarteBlanche(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 14) && creditCardNumber.startsWith(\"30\")) {\n            int firstDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 3));\n            if (((firstDigits >= 300) && (firstDigits <= 305)) && isChecksumCorrect(creditCardNumber)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.DINERS_CLUB_CARTE_BLANCHE;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isDinersClubInternational(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() == 14) && creditCardNumber.startsWith(\"36\")) && isChecksumCorrect(creditCardNumber)) {\n            cardId = org.apache.wicket.validation.validator.CreditCardValidator.DINERS_CLUB_INTERNATIONAL;\n            returnValue = true;\n        }\n        return returnValue;\n    }\n\n    private boolean isDinersClubUsAndCanada(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() == 16) && (creditCardNumber.startsWith(\"54\") || creditCardNumber.startsWith(\"55\"))) && isChecksumCorrect(creditCardNumber)) {\n            cardId = org.apache.wicket.validation.validator.CreditCardValidator.DINERS_CLUB_US_AND_CANADA;\n            returnValue = true;\n        }\n        return returnValue;\n    }\n\n    private boolean isDiscoverCard(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() == 16) && creditCardNumber.startsWith(\"6\")) && isChecksumCorrect(creditCardNumber)) {\n            int firstThreeDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 3));\n            int firstSixDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 6));\n            if (((creditCardNumber.startsWith(\"6011\") || creditCardNumber.startsWith(\"65\")) || ((firstThreeDigits >= 644) && (firstThreeDigits <= 649))) || ((firstSixDigits >= 622126) && (firstSixDigits <= 622925))) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.DISCOVER_CARD;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isJCB(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 16) && isChecksumCorrect(creditCardNumber)) {\n            int firstFourDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 4));\n            if ((firstFourDigits >= 3528) && (firstFourDigits <= 3589)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.JCB;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isLaser(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() >= 16) && (creditCardNumber.length() <= 19)) && isChecksumCorrect(creditCardNumber)) {\n            if (((creditCardNumber.startsWith(\"6304\") || creditCardNumber.startsWith(\"6706\")) || creditCardNumber.startsWith(\"6771\")) || creditCardNumber.startsWith(\"6709\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.LASER;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isMaestro(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() >= 12) && (creditCardNumber.length() <= 19)) && isChecksumCorrect(creditCardNumber)) {\n            if ((((((creditCardNumber.startsWith(\"5018\") || creditCardNumber.startsWith(\"5020\")) || creditCardNumber.startsWith(\"5038\")) || creditCardNumber.startsWith(\"6304\")) || creditCardNumber.startsWith(\"6759\")) || creditCardNumber.startsWith(\"6761\")) || creditCardNumber.startsWith(\"6763\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.MAESTRO;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isSolo(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((((creditCardNumber.length() == 16) || (creditCardNumber.length() == 18)) || (creditCardNumber.length() == 19)) && isChecksumCorrect(creditCardNumber)) {\n            if (creditCardNumber.startsWith(\"6334\") || creditCardNumber.startsWith(\"6767\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.SOLO;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isSwitch(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((((creditCardNumber.length() == 16) || (creditCardNumber.length() == 18)) || (creditCardNumber.length() == 19)) && isChecksumCorrect(creditCardNumber)) {\n            if (((((((creditCardNumber.startsWith(\"4903\") || creditCardNumber.startsWith(\"4905\")) || creditCardNumber.startsWith(\"4911\")) || creditCardNumber.startsWith(\"4936\")) || creditCardNumber.startsWith(\"564182\")) || creditCardNumber.startsWith(\"633110\")) || creditCardNumber.startsWith(\"6333\")) || creditCardNumber.startsWith(\"6759\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.SWITCH;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isVisa(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 13) || (creditCardNumber.length() == 16)) {\n            if (creditCardNumber.startsWith(\"4\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.SWITCH;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isVisaElectron(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 16) && ((((creditCardNumber.startsWith(\"417500\") || creditCardNumber.startsWith(\"4917\")) || creditCardNumber.startsWith(\"4913\")) || creditCardNumber.startsWith(\"4508\")) || creditCardNumber.startsWith(\"4844\"))) {\n            cardId = org.apache.wicket.validation.validator.CreditCardValidator.VISA_ELECTRON;\n            returnValue = true;\n        }\n        return returnValue;\n    }\n\n    private boolean isMastercard(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 16) && isChecksumCorrect(creditCardNumber)) {\n            int firstTwoDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 2));\n            if ((firstTwoDigits >= 51) && (firstTwoDigits <= 55)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.MASTERCARD;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private java.lang.String getCardName() {\n        return (cardId > (-1)) && (cardId < org.apache.wicket.validation.validator.CreditCardValidator.creditCardNames.length) ? org.apache.wicket.validation.validator.CreditCardValidator.creditCardNames[cardId] : \"\";\n    }\n\n    private boolean isChecksumCorrect(java.lang.String creditCardNumber) {\n        java.lang.String input = creditCardNumber;\n        java.lang.String numberToCheck = input.replaceAll(\"[ -]\", \"\");\n        int nulOffset = '0';\n        int sum = 0;\n        for (int i = 1; i <= numberToCheck.length(); i++) {\n            int currentDigit = numberToCheck.charAt(numberToCheck.length() - i) - nulOffset;\n            if ((i % 2) == 0) {\n                currentDigit *= 2;\n                currentDigit = (currentDigit > 9) ? currentDigit - 9 : currentDigit;\n                sum += currentDigit;\n            } else {\n                sum += currentDigit;\n            }\n        }\n        return (sum % 10) == 0;\n    }\n}",
            "src_parent_type": "Class",
            "src_type": "Method"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Package",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Class",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "private boolean isSwitch(java.lang.String creditCardNumber) {\n    cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n    boolean returnValue = false;\n    if ((((creditCardNumber.length() == 16) || (creditCardNumber.length() == 18)) || (creditCardNumber.length() == 19)) && isChecksumCorrect(creditCardNumber)) {\n        if (((((((creditCardNumber.startsWith(\"4903\") || creditCardNumber.startsWith(\"4905\")) || creditCardNumber.startsWith(\"4911\")) || creditCardNumber.startsWith(\"4936\")) || creditCardNumber.startsWith(\"564182\")) || creditCardNumber.startsWith(\"633110\")) || creditCardNumber.startsWith(\"6333\")) || creditCardNumber.startsWith(\"6759\")) {\n            cardId = org.apache.wicket.validation.validator.CreditCardValidator.SWITCH;\n            returnValue = true;\n        }\n    }\n    return returnValue;\n}",
            "src_parent": "public class CreditCardValidator extends org.apache.wicket.validation.validator.AbstractValidator<java.lang.String> {\n    private static final long serialVersionUID = 1L;\n\n    private java.lang.String creditCardNumber = null;\n\n    private int cardId = -1;\n\n    public static final int INVALID = -1;\n\n    public static final int AMERICAN_EXPRESS = 0;\n\n    public static final int CHINA_UNIONPAY = 1;\n\n    public static final int DINERS_CLUB_CARTE_BLANCHE = 2;\n\n    public static final int DINERS_CLUB_INTERNATIONAL = 3;\n\n    public static final int DINERS_CLUB_US_AND_CANADA = 4;\n\n    public static final int DISCOVER_CARD = 5;\n\n    public static final int JCB = 6;\n\n    public static final int LASER = 7;\n\n    public static final int MAESTRO = 8;\n\n    public static final int MASTERCARD = 9;\n\n    public static final int SOLO = 10;\n\n    public static final int SWITCH = 11;\n\n    public static final int VISA = 12;\n\n    public static final int VISA_ELECTRON = 13;\n\n    private static final java.lang.String[] creditCardNames = new java.lang.String[]{ \"American Express\", \"China UnionPay\", \"Diners Club Carte Blanche\", \"Diners Club International\", \"Diners Club US & Canada\", \"Discover Card\", \"JCB\", \"Laser\", \"Maestro\", \"MasterCard\", \"Solo\", \"Switch\", \"Visa\", \"Visa Electron\" };\n\n    @java.lang.Override\n    protected void onValidate(org.apache.wicket.validation.IValidatable<java.lang.String> validatable) {\n        creditCardNumber = validatable.getValue();\n        if (!isLengthAndPrefixCorrect(creditCardNumber)) {\n            error(validatable);\n        }\n    }\n\n    private boolean isLengthAndPrefixCorrect(java.lang.String creditCardNumber) {\n        if (creditCardNumber != null) {\n            creditCardNumber = creditCardNumber.replaceAll(\"[ -]\", \"\");\n        }\n        if (((creditCardNumber != null) && (creditCardNumber.length() >= 12)) && (creditCardNumber.length() <= 19)) {\n            if (isAmericanExpress(creditCardNumber)) {\n                return true;\n            } else if (isChinaUnionPay(creditCardNumber)) {\n                return true;\n            } else if (isDinersClubCarteBlanche(creditCardNumber)) {\n                return true;\n            } else if (isDinersClubInternational(creditCardNumber)) {\n                return true;\n            } else if (isDinersClubUsAndCanada(creditCardNumber)) {\n                return true;\n            } else if (isDiscoverCard(creditCardNumber)) {\n                return true;\n            } else if (isJCB(creditCardNumber)) {\n                return true;\n            } else if (isLaser(creditCardNumber)) {\n                return true;\n            } else if (isMaestro(creditCardNumber)) {\n                return true;\n            } else if (isMastercard(creditCardNumber)) {\n                return true;\n            } else if (isSolo(creditCardNumber)) {\n                return true;\n            } else if (isSwitch(creditCardNumber)) {\n                return true;\n            } else if (isVisa(creditCardNumber)) {\n                return true;\n            } else if (isVisaElectron(creditCardNumber)) {\n                return true;\n            } else if (isUnknown(creditCardNumber)) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    protected boolean isUnknown(java.lang.String creditCardNumber) {\n        return false;\n    }\n\n    private boolean isAmericanExpress(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 15) && (creditCardNumber.startsWith(\"34\") || creditCardNumber.startsWith(\"37\"))) {\n            if (isChecksumCorrect(creditCardNumber)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.AMERICAN_EXPRESS;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isChinaUnionPay(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() >= 16) && (creditCardNumber.length() <= 19)) && creditCardNumber.startsWith(\"622\")) {\n            int firstDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 5));\n            if ((firstDigits >= 622126) && (firstDigits <= 622925)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.CHINA_UNIONPAY;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isDinersClubCarteBlanche(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 14) && creditCardNumber.startsWith(\"30\")) {\n            int firstDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 3));\n            if (((firstDigits >= 300) && (firstDigits <= 305)) && isChecksumCorrect(creditCardNumber)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.DINERS_CLUB_CARTE_BLANCHE;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isDinersClubInternational(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() == 14) && creditCardNumber.startsWith(\"36\")) && isChecksumCorrect(creditCardNumber)) {\n            cardId = org.apache.wicket.validation.validator.CreditCardValidator.DINERS_CLUB_INTERNATIONAL;\n            returnValue = true;\n        }\n        return returnValue;\n    }\n\n    private boolean isDinersClubUsAndCanada(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() == 16) && (creditCardNumber.startsWith(\"54\") || creditCardNumber.startsWith(\"55\"))) && isChecksumCorrect(creditCardNumber)) {\n            cardId = org.apache.wicket.validation.validator.CreditCardValidator.DINERS_CLUB_US_AND_CANADA;\n            returnValue = true;\n        }\n        return returnValue;\n    }\n\n    private boolean isDiscoverCard(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() == 16) && creditCardNumber.startsWith(\"6\")) && isChecksumCorrect(creditCardNumber)) {\n            int firstThreeDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 3));\n            int firstSixDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 6));\n            if (((creditCardNumber.startsWith(\"6011\") || creditCardNumber.startsWith(\"65\")) || ((firstThreeDigits >= 644) && (firstThreeDigits <= 649))) || ((firstSixDigits >= 622126) && (firstSixDigits <= 622925))) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.DISCOVER_CARD;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isJCB(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 16) && isChecksumCorrect(creditCardNumber)) {\n            int firstFourDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 4));\n            if ((firstFourDigits >= 3528) && (firstFourDigits <= 3589)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.JCB;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isLaser(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() >= 16) && (creditCardNumber.length() <= 19)) && isChecksumCorrect(creditCardNumber)) {\n            if (((creditCardNumber.startsWith(\"6304\") || creditCardNumber.startsWith(\"6706\")) || creditCardNumber.startsWith(\"6771\")) || creditCardNumber.startsWith(\"6709\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.LASER;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isMaestro(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() >= 12) && (creditCardNumber.length() <= 19)) && isChecksumCorrect(creditCardNumber)) {\n            if ((((((creditCardNumber.startsWith(\"5018\") || creditCardNumber.startsWith(\"5020\")) || creditCardNumber.startsWith(\"5038\")) || creditCardNumber.startsWith(\"6304\")) || creditCardNumber.startsWith(\"6759\")) || creditCardNumber.startsWith(\"6761\")) || creditCardNumber.startsWith(\"6763\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.MAESTRO;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isSolo(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((((creditCardNumber.length() == 16) || (creditCardNumber.length() == 18)) || (creditCardNumber.length() == 19)) && isChecksumCorrect(creditCardNumber)) {\n            if (creditCardNumber.startsWith(\"6334\") || creditCardNumber.startsWith(\"6767\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.SOLO;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isSwitch(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((((creditCardNumber.length() == 16) || (creditCardNumber.length() == 18)) || (creditCardNumber.length() == 19)) && isChecksumCorrect(creditCardNumber)) {\n            if (((((((creditCardNumber.startsWith(\"4903\") || creditCardNumber.startsWith(\"4905\")) || creditCardNumber.startsWith(\"4911\")) || creditCardNumber.startsWith(\"4936\")) || creditCardNumber.startsWith(\"564182\")) || creditCardNumber.startsWith(\"633110\")) || creditCardNumber.startsWith(\"6333\")) || creditCardNumber.startsWith(\"6759\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.SWITCH;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isVisa(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 13) || (creditCardNumber.length() == 16)) {\n            if (creditCardNumber.startsWith(\"4\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.SWITCH;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isVisaElectron(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 16) && ((((creditCardNumber.startsWith(\"417500\") || creditCardNumber.startsWith(\"4917\")) || creditCardNumber.startsWith(\"4913\")) || creditCardNumber.startsWith(\"4508\")) || creditCardNumber.startsWith(\"4844\"))) {\n            cardId = org.apache.wicket.validation.validator.CreditCardValidator.VISA_ELECTRON;\n            returnValue = true;\n        }\n        return returnValue;\n    }\n\n    private boolean isMastercard(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 16) && isChecksumCorrect(creditCardNumber)) {\n            int firstTwoDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 2));\n            if ((firstTwoDigits >= 51) && (firstTwoDigits <= 55)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.MASTERCARD;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private java.lang.String getCardName() {\n        return (cardId > (-1)) && (cardId < org.apache.wicket.validation.validator.CreditCardValidator.creditCardNames.length) ? org.apache.wicket.validation.validator.CreditCardValidator.creditCardNames[cardId] : \"\";\n    }\n\n    private boolean isChecksumCorrect(java.lang.String creditCardNumber) {\n        java.lang.String input = creditCardNumber;\n        java.lang.String numberToCheck = input.replaceAll(\"[ -]\", \"\");\n        int nulOffset = '0';\n        int sum = 0;\n        for (int i = 1; i <= numberToCheck.length(); i++) {\n            int currentDigit = numberToCheck.charAt(numberToCheck.length() - i) - nulOffset;\n            if ((i % 2) == 0) {\n                currentDigit *= 2;\n                currentDigit = (currentDigit > 9) ? currentDigit - 9 : currentDigit;\n                sum += currentDigit;\n            } else {\n                sum += currentDigit;\n            }\n        }\n        return (sum % 10) == 0;\n    }\n}",
            "src_parent_type": "Class",
            "src_type": "Method"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Package",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Class",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "private boolean isVisa(java.lang.String creditCardNumber) {\n    cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n    boolean returnValue = false;\n    if ((creditCardNumber.length() == 13) || (creditCardNumber.length() == 16)) {\n        if (creditCardNumber.startsWith(\"4\")) {\n            cardId = org.apache.wicket.validation.validator.CreditCardValidator.SWITCH;\n            returnValue = true;\n        }\n    }\n    return returnValue;\n}",
            "src_parent": "public class CreditCardValidator extends org.apache.wicket.validation.validator.AbstractValidator<java.lang.String> {\n    private static final long serialVersionUID = 1L;\n\n    private java.lang.String creditCardNumber = null;\n\n    private int cardId = -1;\n\n    public static final int INVALID = -1;\n\n    public static final int AMERICAN_EXPRESS = 0;\n\n    public static final int CHINA_UNIONPAY = 1;\n\n    public static final int DINERS_CLUB_CARTE_BLANCHE = 2;\n\n    public static final int DINERS_CLUB_INTERNATIONAL = 3;\n\n    public static final int DINERS_CLUB_US_AND_CANADA = 4;\n\n    public static final int DISCOVER_CARD = 5;\n\n    public static final int JCB = 6;\n\n    public static final int LASER = 7;\n\n    public static final int MAESTRO = 8;\n\n    public static final int MASTERCARD = 9;\n\n    public static final int SOLO = 10;\n\n    public static final int SWITCH = 11;\n\n    public static final int VISA = 12;\n\n    public static final int VISA_ELECTRON = 13;\n\n    private static final java.lang.String[] creditCardNames = new java.lang.String[]{ \"American Express\", \"China UnionPay\", \"Diners Club Carte Blanche\", \"Diners Club International\", \"Diners Club US & Canada\", \"Discover Card\", \"JCB\", \"Laser\", \"Maestro\", \"MasterCard\", \"Solo\", \"Switch\", \"Visa\", \"Visa Electron\" };\n\n    @java.lang.Override\n    protected void onValidate(org.apache.wicket.validation.IValidatable<java.lang.String> validatable) {\n        creditCardNumber = validatable.getValue();\n        if (!isLengthAndPrefixCorrect(creditCardNumber)) {\n            error(validatable);\n        }\n    }\n\n    private boolean isLengthAndPrefixCorrect(java.lang.String creditCardNumber) {\n        if (creditCardNumber != null) {\n            creditCardNumber = creditCardNumber.replaceAll(\"[ -]\", \"\");\n        }\n        if (((creditCardNumber != null) && (creditCardNumber.length() >= 12)) && (creditCardNumber.length() <= 19)) {\n            if (isAmericanExpress(creditCardNumber)) {\n                return true;\n            } else if (isChinaUnionPay(creditCardNumber)) {\n                return true;\n            } else if (isDinersClubCarteBlanche(creditCardNumber)) {\n                return true;\n            } else if (isDinersClubInternational(creditCardNumber)) {\n                return true;\n            } else if (isDinersClubUsAndCanada(creditCardNumber)) {\n                return true;\n            } else if (isDiscoverCard(creditCardNumber)) {\n                return true;\n            } else if (isJCB(creditCardNumber)) {\n                return true;\n            } else if (isLaser(creditCardNumber)) {\n                return true;\n            } else if (isMaestro(creditCardNumber)) {\n                return true;\n            } else if (isMastercard(creditCardNumber)) {\n                return true;\n            } else if (isSolo(creditCardNumber)) {\n                return true;\n            } else if (isSwitch(creditCardNumber)) {\n                return true;\n            } else if (isVisa(creditCardNumber)) {\n                return true;\n            } else if (isVisaElectron(creditCardNumber)) {\n                return true;\n            } else if (isUnknown(creditCardNumber)) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    protected boolean isUnknown(java.lang.String creditCardNumber) {\n        return false;\n    }\n\n    private boolean isAmericanExpress(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 15) && (creditCardNumber.startsWith(\"34\") || creditCardNumber.startsWith(\"37\"))) {\n            if (isChecksumCorrect(creditCardNumber)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.AMERICAN_EXPRESS;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isChinaUnionPay(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() >= 16) && (creditCardNumber.length() <= 19)) && creditCardNumber.startsWith(\"622\")) {\n            int firstDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 5));\n            if ((firstDigits >= 622126) && (firstDigits <= 622925)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.CHINA_UNIONPAY;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isDinersClubCarteBlanche(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 14) && creditCardNumber.startsWith(\"30\")) {\n            int firstDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 3));\n            if (((firstDigits >= 300) && (firstDigits <= 305)) && isChecksumCorrect(creditCardNumber)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.DINERS_CLUB_CARTE_BLANCHE;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isDinersClubInternational(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() == 14) && creditCardNumber.startsWith(\"36\")) && isChecksumCorrect(creditCardNumber)) {\n            cardId = org.apache.wicket.validation.validator.CreditCardValidator.DINERS_CLUB_INTERNATIONAL;\n            returnValue = true;\n        }\n        return returnValue;\n    }\n\n    private boolean isDinersClubUsAndCanada(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() == 16) && (creditCardNumber.startsWith(\"54\") || creditCardNumber.startsWith(\"55\"))) && isChecksumCorrect(creditCardNumber)) {\n            cardId = org.apache.wicket.validation.validator.CreditCardValidator.DINERS_CLUB_US_AND_CANADA;\n            returnValue = true;\n        }\n        return returnValue;\n    }\n\n    private boolean isDiscoverCard(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() == 16) && creditCardNumber.startsWith(\"6\")) && isChecksumCorrect(creditCardNumber)) {\n            int firstThreeDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 3));\n            int firstSixDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 6));\n            if (((creditCardNumber.startsWith(\"6011\") || creditCardNumber.startsWith(\"65\")) || ((firstThreeDigits >= 644) && (firstThreeDigits <= 649))) || ((firstSixDigits >= 622126) && (firstSixDigits <= 622925))) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.DISCOVER_CARD;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isJCB(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 16) && isChecksumCorrect(creditCardNumber)) {\n            int firstFourDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 4));\n            if ((firstFourDigits >= 3528) && (firstFourDigits <= 3589)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.JCB;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isLaser(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() >= 16) && (creditCardNumber.length() <= 19)) && isChecksumCorrect(creditCardNumber)) {\n            if (((creditCardNumber.startsWith(\"6304\") || creditCardNumber.startsWith(\"6706\")) || creditCardNumber.startsWith(\"6771\")) || creditCardNumber.startsWith(\"6709\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.LASER;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isMaestro(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() >= 12) && (creditCardNumber.length() <= 19)) && isChecksumCorrect(creditCardNumber)) {\n            if ((((((creditCardNumber.startsWith(\"5018\") || creditCardNumber.startsWith(\"5020\")) || creditCardNumber.startsWith(\"5038\")) || creditCardNumber.startsWith(\"6304\")) || creditCardNumber.startsWith(\"6759\")) || creditCardNumber.startsWith(\"6761\")) || creditCardNumber.startsWith(\"6763\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.MAESTRO;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isSolo(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((((creditCardNumber.length() == 16) || (creditCardNumber.length() == 18)) || (creditCardNumber.length() == 19)) && isChecksumCorrect(creditCardNumber)) {\n            if (creditCardNumber.startsWith(\"6334\") || creditCardNumber.startsWith(\"6767\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.SOLO;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isSwitch(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((((creditCardNumber.length() == 16) || (creditCardNumber.length() == 18)) || (creditCardNumber.length() == 19)) && isChecksumCorrect(creditCardNumber)) {\n            if (((((((creditCardNumber.startsWith(\"4903\") || creditCardNumber.startsWith(\"4905\")) || creditCardNumber.startsWith(\"4911\")) || creditCardNumber.startsWith(\"4936\")) || creditCardNumber.startsWith(\"564182\")) || creditCardNumber.startsWith(\"633110\")) || creditCardNumber.startsWith(\"6333\")) || creditCardNumber.startsWith(\"6759\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.SWITCH;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isVisa(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 13) || (creditCardNumber.length() == 16)) {\n            if (creditCardNumber.startsWith(\"4\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.SWITCH;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isVisaElectron(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 16) && ((((creditCardNumber.startsWith(\"417500\") || creditCardNumber.startsWith(\"4917\")) || creditCardNumber.startsWith(\"4913\")) || creditCardNumber.startsWith(\"4508\")) || creditCardNumber.startsWith(\"4844\"))) {\n            cardId = org.apache.wicket.validation.validator.CreditCardValidator.VISA_ELECTRON;\n            returnValue = true;\n        }\n        return returnValue;\n    }\n\n    private boolean isMastercard(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 16) && isChecksumCorrect(creditCardNumber)) {\n            int firstTwoDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 2));\n            if ((firstTwoDigits >= 51) && (firstTwoDigits <= 55)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.MASTERCARD;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private java.lang.String getCardName() {\n        return (cardId > (-1)) && (cardId < org.apache.wicket.validation.validator.CreditCardValidator.creditCardNames.length) ? org.apache.wicket.validation.validator.CreditCardValidator.creditCardNames[cardId] : \"\";\n    }\n\n    private boolean isChecksumCorrect(java.lang.String creditCardNumber) {\n        java.lang.String input = creditCardNumber;\n        java.lang.String numberToCheck = input.replaceAll(\"[ -]\", \"\");\n        int nulOffset = '0';\n        int sum = 0;\n        for (int i = 1; i <= numberToCheck.length(); i++) {\n            int currentDigit = numberToCheck.charAt(numberToCheck.length() - i) - nulOffset;\n            if ((i % 2) == 0) {\n                currentDigit *= 2;\n                currentDigit = (currentDigit > 9) ? currentDigit - 9 : currentDigit;\n                sum += currentDigit;\n            } else {\n                sum += currentDigit;\n            }\n        }\n        return (sum % 10) == 0;\n    }\n}",
            "src_parent_type": "Class",
            "src_type": "Method"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Package",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Class",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "private boolean isVisaElectron(java.lang.String creditCardNumber) {\n    cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n    boolean returnValue = false;\n    if ((creditCardNumber.length() == 16) && ((((creditCardNumber.startsWith(\"417500\") || creditCardNumber.startsWith(\"4917\")) || creditCardNumber.startsWith(\"4913\")) || creditCardNumber.startsWith(\"4508\")) || creditCardNumber.startsWith(\"4844\"))) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.VISA_ELECTRON;\n        returnValue = true;\n    }\n    return returnValue;\n}",
            "src_parent": "public class CreditCardValidator extends org.apache.wicket.validation.validator.AbstractValidator<java.lang.String> {\n    private static final long serialVersionUID = 1L;\n\n    private java.lang.String creditCardNumber = null;\n\n    private int cardId = -1;\n\n    public static final int INVALID = -1;\n\n    public static final int AMERICAN_EXPRESS = 0;\n\n    public static final int CHINA_UNIONPAY = 1;\n\n    public static final int DINERS_CLUB_CARTE_BLANCHE = 2;\n\n    public static final int DINERS_CLUB_INTERNATIONAL = 3;\n\n    public static final int DINERS_CLUB_US_AND_CANADA = 4;\n\n    public static final int DISCOVER_CARD = 5;\n\n    public static final int JCB = 6;\n\n    public static final int LASER = 7;\n\n    public static final int MAESTRO = 8;\n\n    public static final int MASTERCARD = 9;\n\n    public static final int SOLO = 10;\n\n    public static final int SWITCH = 11;\n\n    public static final int VISA = 12;\n\n    public static final int VISA_ELECTRON = 13;\n\n    private static final java.lang.String[] creditCardNames = new java.lang.String[]{ \"American Express\", \"China UnionPay\", \"Diners Club Carte Blanche\", \"Diners Club International\", \"Diners Club US & Canada\", \"Discover Card\", \"JCB\", \"Laser\", \"Maestro\", \"MasterCard\", \"Solo\", \"Switch\", \"Visa\", \"Visa Electron\" };\n\n    @java.lang.Override\n    protected void onValidate(org.apache.wicket.validation.IValidatable<java.lang.String> validatable) {\n        creditCardNumber = validatable.getValue();\n        if (!isLengthAndPrefixCorrect(creditCardNumber)) {\n            error(validatable);\n        }\n    }\n\n    private boolean isLengthAndPrefixCorrect(java.lang.String creditCardNumber) {\n        if (creditCardNumber != null) {\n            creditCardNumber = creditCardNumber.replaceAll(\"[ -]\", \"\");\n        }\n        if (((creditCardNumber != null) && (creditCardNumber.length() >= 12)) && (creditCardNumber.length() <= 19)) {\n            if (isAmericanExpress(creditCardNumber)) {\n                return true;\n            } else if (isChinaUnionPay(creditCardNumber)) {\n                return true;\n            } else if (isDinersClubCarteBlanche(creditCardNumber)) {\n                return true;\n            } else if (isDinersClubInternational(creditCardNumber)) {\n                return true;\n            } else if (isDinersClubUsAndCanada(creditCardNumber)) {\n                return true;\n            } else if (isDiscoverCard(creditCardNumber)) {\n                return true;\n            } else if (isJCB(creditCardNumber)) {\n                return true;\n            } else if (isLaser(creditCardNumber)) {\n                return true;\n            } else if (isMaestro(creditCardNumber)) {\n                return true;\n            } else if (isMastercard(creditCardNumber)) {\n                return true;\n            } else if (isSolo(creditCardNumber)) {\n                return true;\n            } else if (isSwitch(creditCardNumber)) {\n                return true;\n            } else if (isVisa(creditCardNumber)) {\n                return true;\n            } else if (isVisaElectron(creditCardNumber)) {\n                return true;\n            } else if (isUnknown(creditCardNumber)) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    protected boolean isUnknown(java.lang.String creditCardNumber) {\n        return false;\n    }\n\n    private boolean isAmericanExpress(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 15) && (creditCardNumber.startsWith(\"34\") || creditCardNumber.startsWith(\"37\"))) {\n            if (isChecksumCorrect(creditCardNumber)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.AMERICAN_EXPRESS;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isChinaUnionPay(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() >= 16) && (creditCardNumber.length() <= 19)) && creditCardNumber.startsWith(\"622\")) {\n            int firstDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 5));\n            if ((firstDigits >= 622126) && (firstDigits <= 622925)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.CHINA_UNIONPAY;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isDinersClubCarteBlanche(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 14) && creditCardNumber.startsWith(\"30\")) {\n            int firstDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 3));\n            if (((firstDigits >= 300) && (firstDigits <= 305)) && isChecksumCorrect(creditCardNumber)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.DINERS_CLUB_CARTE_BLANCHE;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isDinersClubInternational(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() == 14) && creditCardNumber.startsWith(\"36\")) && isChecksumCorrect(creditCardNumber)) {\n            cardId = org.apache.wicket.validation.validator.CreditCardValidator.DINERS_CLUB_INTERNATIONAL;\n            returnValue = true;\n        }\n        return returnValue;\n    }\n\n    private boolean isDinersClubUsAndCanada(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() == 16) && (creditCardNumber.startsWith(\"54\") || creditCardNumber.startsWith(\"55\"))) && isChecksumCorrect(creditCardNumber)) {\n            cardId = org.apache.wicket.validation.validator.CreditCardValidator.DINERS_CLUB_US_AND_CANADA;\n            returnValue = true;\n        }\n        return returnValue;\n    }\n\n    private boolean isDiscoverCard(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() == 16) && creditCardNumber.startsWith(\"6\")) && isChecksumCorrect(creditCardNumber)) {\n            int firstThreeDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 3));\n            int firstSixDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 6));\n            if (((creditCardNumber.startsWith(\"6011\") || creditCardNumber.startsWith(\"65\")) || ((firstThreeDigits >= 644) && (firstThreeDigits <= 649))) || ((firstSixDigits >= 622126) && (firstSixDigits <= 622925))) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.DISCOVER_CARD;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isJCB(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 16) && isChecksumCorrect(creditCardNumber)) {\n            int firstFourDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 4));\n            if ((firstFourDigits >= 3528) && (firstFourDigits <= 3589)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.JCB;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isLaser(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() >= 16) && (creditCardNumber.length() <= 19)) && isChecksumCorrect(creditCardNumber)) {\n            if (((creditCardNumber.startsWith(\"6304\") || creditCardNumber.startsWith(\"6706\")) || creditCardNumber.startsWith(\"6771\")) || creditCardNumber.startsWith(\"6709\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.LASER;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isMaestro(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() >= 12) && (creditCardNumber.length() <= 19)) && isChecksumCorrect(creditCardNumber)) {\n            if ((((((creditCardNumber.startsWith(\"5018\") || creditCardNumber.startsWith(\"5020\")) || creditCardNumber.startsWith(\"5038\")) || creditCardNumber.startsWith(\"6304\")) || creditCardNumber.startsWith(\"6759\")) || creditCardNumber.startsWith(\"6761\")) || creditCardNumber.startsWith(\"6763\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.MAESTRO;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isSolo(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((((creditCardNumber.length() == 16) || (creditCardNumber.length() == 18)) || (creditCardNumber.length() == 19)) && isChecksumCorrect(creditCardNumber)) {\n            if (creditCardNumber.startsWith(\"6334\") || creditCardNumber.startsWith(\"6767\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.SOLO;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isSwitch(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((((creditCardNumber.length() == 16) || (creditCardNumber.length() == 18)) || (creditCardNumber.length() == 19)) && isChecksumCorrect(creditCardNumber)) {\n            if (((((((creditCardNumber.startsWith(\"4903\") || creditCardNumber.startsWith(\"4905\")) || creditCardNumber.startsWith(\"4911\")) || creditCardNumber.startsWith(\"4936\")) || creditCardNumber.startsWith(\"564182\")) || creditCardNumber.startsWith(\"633110\")) || creditCardNumber.startsWith(\"6333\")) || creditCardNumber.startsWith(\"6759\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.SWITCH;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isVisa(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 13) || (creditCardNumber.length() == 16)) {\n            if (creditCardNumber.startsWith(\"4\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.SWITCH;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isVisaElectron(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 16) && ((((creditCardNumber.startsWith(\"417500\") || creditCardNumber.startsWith(\"4917\")) || creditCardNumber.startsWith(\"4913\")) || creditCardNumber.startsWith(\"4508\")) || creditCardNumber.startsWith(\"4844\"))) {\n            cardId = org.apache.wicket.validation.validator.CreditCardValidator.VISA_ELECTRON;\n            returnValue = true;\n        }\n        return returnValue;\n    }\n\n    private boolean isMastercard(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 16) && isChecksumCorrect(creditCardNumber)) {\n            int firstTwoDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 2));\n            if ((firstTwoDigits >= 51) && (firstTwoDigits <= 55)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.MASTERCARD;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private java.lang.String getCardName() {\n        return (cardId > (-1)) && (cardId < org.apache.wicket.validation.validator.CreditCardValidator.creditCardNames.length) ? org.apache.wicket.validation.validator.CreditCardValidator.creditCardNames[cardId] : \"\";\n    }\n\n    private boolean isChecksumCorrect(java.lang.String creditCardNumber) {\n        java.lang.String input = creditCardNumber;\n        java.lang.String numberToCheck = input.replaceAll(\"[ -]\", \"\");\n        int nulOffset = '0';\n        int sum = 0;\n        for (int i = 1; i <= numberToCheck.length(); i++) {\n            int currentDigit = numberToCheck.charAt(numberToCheck.length() - i) - nulOffset;\n            if ((i % 2) == 0) {\n                currentDigit *= 2;\n                currentDigit = (currentDigit > 9) ? currentDigit - 9 : currentDigit;\n                sum += currentDigit;\n            } else {\n                sum += currentDigit;\n            }\n        }\n        return (sum % 10) == 0;\n    }\n}",
            "src_parent_type": "Class",
            "src_type": "Method"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Package",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Class",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "private boolean isMastercard(java.lang.String creditCardNumber) {\n    cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n    boolean returnValue = false;\n    if ((creditCardNumber.length() == 16) && isChecksumCorrect(creditCardNumber)) {\n        int firstTwoDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 2));\n        if ((firstTwoDigits >= 51) && (firstTwoDigits <= 55)) {\n            cardId = org.apache.wicket.validation.validator.CreditCardValidator.MASTERCARD;\n            returnValue = true;\n        }\n    }\n    return returnValue;\n}",
            "src_parent": "public class CreditCardValidator extends org.apache.wicket.validation.validator.AbstractValidator<java.lang.String> {\n    private static final long serialVersionUID = 1L;\n\n    private java.lang.String creditCardNumber = null;\n\n    private int cardId = -1;\n\n    public static final int INVALID = -1;\n\n    public static final int AMERICAN_EXPRESS = 0;\n\n    public static final int CHINA_UNIONPAY = 1;\n\n    public static final int DINERS_CLUB_CARTE_BLANCHE = 2;\n\n    public static final int DINERS_CLUB_INTERNATIONAL = 3;\n\n    public static final int DINERS_CLUB_US_AND_CANADA = 4;\n\n    public static final int DISCOVER_CARD = 5;\n\n    public static final int JCB = 6;\n\n    public static final int LASER = 7;\n\n    public static final int MAESTRO = 8;\n\n    public static final int MASTERCARD = 9;\n\n    public static final int SOLO = 10;\n\n    public static final int SWITCH = 11;\n\n    public static final int VISA = 12;\n\n    public static final int VISA_ELECTRON = 13;\n\n    private static final java.lang.String[] creditCardNames = new java.lang.String[]{ \"American Express\", \"China UnionPay\", \"Diners Club Carte Blanche\", \"Diners Club International\", \"Diners Club US & Canada\", \"Discover Card\", \"JCB\", \"Laser\", \"Maestro\", \"MasterCard\", \"Solo\", \"Switch\", \"Visa\", \"Visa Electron\" };\n\n    @java.lang.Override\n    protected void onValidate(org.apache.wicket.validation.IValidatable<java.lang.String> validatable) {\n        creditCardNumber = validatable.getValue();\n        if (!isLengthAndPrefixCorrect(creditCardNumber)) {\n            error(validatable);\n        }\n    }\n\n    private boolean isLengthAndPrefixCorrect(java.lang.String creditCardNumber) {\n        if (creditCardNumber != null) {\n            creditCardNumber = creditCardNumber.replaceAll(\"[ -]\", \"\");\n        }\n        if (((creditCardNumber != null) && (creditCardNumber.length() >= 12)) && (creditCardNumber.length() <= 19)) {\n            if (isAmericanExpress(creditCardNumber)) {\n                return true;\n            } else if (isChinaUnionPay(creditCardNumber)) {\n                return true;\n            } else if (isDinersClubCarteBlanche(creditCardNumber)) {\n                return true;\n            } else if (isDinersClubInternational(creditCardNumber)) {\n                return true;\n            } else if (isDinersClubUsAndCanada(creditCardNumber)) {\n                return true;\n            } else if (isDiscoverCard(creditCardNumber)) {\n                return true;\n            } else if (isJCB(creditCardNumber)) {\n                return true;\n            } else if (isLaser(creditCardNumber)) {\n                return true;\n            } else if (isMaestro(creditCardNumber)) {\n                return true;\n            } else if (isMastercard(creditCardNumber)) {\n                return true;\n            } else if (isSolo(creditCardNumber)) {\n                return true;\n            } else if (isSwitch(creditCardNumber)) {\n                return true;\n            } else if (isVisa(creditCardNumber)) {\n                return true;\n            } else if (isVisaElectron(creditCardNumber)) {\n                return true;\n            } else if (isUnknown(creditCardNumber)) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    protected boolean isUnknown(java.lang.String creditCardNumber) {\n        return false;\n    }\n\n    private boolean isAmericanExpress(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 15) && (creditCardNumber.startsWith(\"34\") || creditCardNumber.startsWith(\"37\"))) {\n            if (isChecksumCorrect(creditCardNumber)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.AMERICAN_EXPRESS;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isChinaUnionPay(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() >= 16) && (creditCardNumber.length() <= 19)) && creditCardNumber.startsWith(\"622\")) {\n            int firstDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 5));\n            if ((firstDigits >= 622126) && (firstDigits <= 622925)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.CHINA_UNIONPAY;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isDinersClubCarteBlanche(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 14) && creditCardNumber.startsWith(\"30\")) {\n            int firstDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 3));\n            if (((firstDigits >= 300) && (firstDigits <= 305)) && isChecksumCorrect(creditCardNumber)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.DINERS_CLUB_CARTE_BLANCHE;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isDinersClubInternational(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() == 14) && creditCardNumber.startsWith(\"36\")) && isChecksumCorrect(creditCardNumber)) {\n            cardId = org.apache.wicket.validation.validator.CreditCardValidator.DINERS_CLUB_INTERNATIONAL;\n            returnValue = true;\n        }\n        return returnValue;\n    }\n\n    private boolean isDinersClubUsAndCanada(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() == 16) && (creditCardNumber.startsWith(\"54\") || creditCardNumber.startsWith(\"55\"))) && isChecksumCorrect(creditCardNumber)) {\n            cardId = org.apache.wicket.validation.validator.CreditCardValidator.DINERS_CLUB_US_AND_CANADA;\n            returnValue = true;\n        }\n        return returnValue;\n    }\n\n    private boolean isDiscoverCard(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() == 16) && creditCardNumber.startsWith(\"6\")) && isChecksumCorrect(creditCardNumber)) {\n            int firstThreeDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 3));\n            int firstSixDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 6));\n            if (((creditCardNumber.startsWith(\"6011\") || creditCardNumber.startsWith(\"65\")) || ((firstThreeDigits >= 644) && (firstThreeDigits <= 649))) || ((firstSixDigits >= 622126) && (firstSixDigits <= 622925))) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.DISCOVER_CARD;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isJCB(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 16) && isChecksumCorrect(creditCardNumber)) {\n            int firstFourDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 4));\n            if ((firstFourDigits >= 3528) && (firstFourDigits <= 3589)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.JCB;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isLaser(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() >= 16) && (creditCardNumber.length() <= 19)) && isChecksumCorrect(creditCardNumber)) {\n            if (((creditCardNumber.startsWith(\"6304\") || creditCardNumber.startsWith(\"6706\")) || creditCardNumber.startsWith(\"6771\")) || creditCardNumber.startsWith(\"6709\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.LASER;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isMaestro(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() >= 12) && (creditCardNumber.length() <= 19)) && isChecksumCorrect(creditCardNumber)) {\n            if ((((((creditCardNumber.startsWith(\"5018\") || creditCardNumber.startsWith(\"5020\")) || creditCardNumber.startsWith(\"5038\")) || creditCardNumber.startsWith(\"6304\")) || creditCardNumber.startsWith(\"6759\")) || creditCardNumber.startsWith(\"6761\")) || creditCardNumber.startsWith(\"6763\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.MAESTRO;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isSolo(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((((creditCardNumber.length() == 16) || (creditCardNumber.length() == 18)) || (creditCardNumber.length() == 19)) && isChecksumCorrect(creditCardNumber)) {\n            if (creditCardNumber.startsWith(\"6334\") || creditCardNumber.startsWith(\"6767\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.SOLO;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isSwitch(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((((creditCardNumber.length() == 16) || (creditCardNumber.length() == 18)) || (creditCardNumber.length() == 19)) && isChecksumCorrect(creditCardNumber)) {\n            if (((((((creditCardNumber.startsWith(\"4903\") || creditCardNumber.startsWith(\"4905\")) || creditCardNumber.startsWith(\"4911\")) || creditCardNumber.startsWith(\"4936\")) || creditCardNumber.startsWith(\"564182\")) || creditCardNumber.startsWith(\"633110\")) || creditCardNumber.startsWith(\"6333\")) || creditCardNumber.startsWith(\"6759\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.SWITCH;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isVisa(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 13) || (creditCardNumber.length() == 16)) {\n            if (creditCardNumber.startsWith(\"4\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.SWITCH;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isVisaElectron(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 16) && ((((creditCardNumber.startsWith(\"417500\") || creditCardNumber.startsWith(\"4917\")) || creditCardNumber.startsWith(\"4913\")) || creditCardNumber.startsWith(\"4508\")) || creditCardNumber.startsWith(\"4844\"))) {\n            cardId = org.apache.wicket.validation.validator.CreditCardValidator.VISA_ELECTRON;\n            returnValue = true;\n        }\n        return returnValue;\n    }\n\n    private boolean isMastercard(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 16) && isChecksumCorrect(creditCardNumber)) {\n            int firstTwoDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 2));\n            if ((firstTwoDigits >= 51) && (firstTwoDigits <= 55)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.MASTERCARD;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private java.lang.String getCardName() {\n        return (cardId > (-1)) && (cardId < org.apache.wicket.validation.validator.CreditCardValidator.creditCardNames.length) ? org.apache.wicket.validation.validator.CreditCardValidator.creditCardNames[cardId] : \"\";\n    }\n\n    private boolean isChecksumCorrect(java.lang.String creditCardNumber) {\n        java.lang.String input = creditCardNumber;\n        java.lang.String numberToCheck = input.replaceAll(\"[ -]\", \"\");\n        int nulOffset = '0';\n        int sum = 0;\n        for (int i = 1; i <= numberToCheck.length(); i++) {\n            int currentDigit = numberToCheck.charAt(numberToCheck.length() - i) - nulOffset;\n            if ((i % 2) == 0) {\n                currentDigit *= 2;\n                currentDigit = (currentDigit > 9) ? currentDigit - 9 : currentDigit;\n                sum += currentDigit;\n            } else {\n                sum += currentDigit;\n            }\n        }\n        return (sum % 10) == 0;\n    }\n}",
            "src_parent_type": "Class",
            "src_type": "Method"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Package",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Class",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "private java.lang.String getCardName() {\n    return (cardId > (-1)) && (cardId < org.apache.wicket.validation.validator.CreditCardValidator.creditCardNames.length) ? org.apache.wicket.validation.validator.CreditCardValidator.creditCardNames[cardId] : \"\";\n}",
            "src_parent": "public class CreditCardValidator extends org.apache.wicket.validation.validator.AbstractValidator<java.lang.String> {\n    private static final long serialVersionUID = 1L;\n\n    private java.lang.String creditCardNumber = null;\n\n    private int cardId = -1;\n\n    public static final int INVALID = -1;\n\n    public static final int AMERICAN_EXPRESS = 0;\n\n    public static final int CHINA_UNIONPAY = 1;\n\n    public static final int DINERS_CLUB_CARTE_BLANCHE = 2;\n\n    public static final int DINERS_CLUB_INTERNATIONAL = 3;\n\n    public static final int DINERS_CLUB_US_AND_CANADA = 4;\n\n    public static final int DISCOVER_CARD = 5;\n\n    public static final int JCB = 6;\n\n    public static final int LASER = 7;\n\n    public static final int MAESTRO = 8;\n\n    public static final int MASTERCARD = 9;\n\n    public static final int SOLO = 10;\n\n    public static final int SWITCH = 11;\n\n    public static final int VISA = 12;\n\n    public static final int VISA_ELECTRON = 13;\n\n    private static final java.lang.String[] creditCardNames = new java.lang.String[]{ \"American Express\", \"China UnionPay\", \"Diners Club Carte Blanche\", \"Diners Club International\", \"Diners Club US & Canada\", \"Discover Card\", \"JCB\", \"Laser\", \"Maestro\", \"MasterCard\", \"Solo\", \"Switch\", \"Visa\", \"Visa Electron\" };\n\n    @java.lang.Override\n    protected void onValidate(org.apache.wicket.validation.IValidatable<java.lang.String> validatable) {\n        creditCardNumber = validatable.getValue();\n        if (!isLengthAndPrefixCorrect(creditCardNumber)) {\n            error(validatable);\n        }\n    }\n\n    private boolean isLengthAndPrefixCorrect(java.lang.String creditCardNumber) {\n        if (creditCardNumber != null) {\n            creditCardNumber = creditCardNumber.replaceAll(\"[ -]\", \"\");\n        }\n        if (((creditCardNumber != null) && (creditCardNumber.length() >= 12)) && (creditCardNumber.length() <= 19)) {\n            if (isAmericanExpress(creditCardNumber)) {\n                return true;\n            } else if (isChinaUnionPay(creditCardNumber)) {\n                return true;\n            } else if (isDinersClubCarteBlanche(creditCardNumber)) {\n                return true;\n            } else if (isDinersClubInternational(creditCardNumber)) {\n                return true;\n            } else if (isDinersClubUsAndCanada(creditCardNumber)) {\n                return true;\n            } else if (isDiscoverCard(creditCardNumber)) {\n                return true;\n            } else if (isJCB(creditCardNumber)) {\n                return true;\n            } else if (isLaser(creditCardNumber)) {\n                return true;\n            } else if (isMaestro(creditCardNumber)) {\n                return true;\n            } else if (isMastercard(creditCardNumber)) {\n                return true;\n            } else if (isSolo(creditCardNumber)) {\n                return true;\n            } else if (isSwitch(creditCardNumber)) {\n                return true;\n            } else if (isVisa(creditCardNumber)) {\n                return true;\n            } else if (isVisaElectron(creditCardNumber)) {\n                return true;\n            } else if (isUnknown(creditCardNumber)) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    protected boolean isUnknown(java.lang.String creditCardNumber) {\n        return false;\n    }\n\n    private boolean isAmericanExpress(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 15) && (creditCardNumber.startsWith(\"34\") || creditCardNumber.startsWith(\"37\"))) {\n            if (isChecksumCorrect(creditCardNumber)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.AMERICAN_EXPRESS;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isChinaUnionPay(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() >= 16) && (creditCardNumber.length() <= 19)) && creditCardNumber.startsWith(\"622\")) {\n            int firstDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 5));\n            if ((firstDigits >= 622126) && (firstDigits <= 622925)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.CHINA_UNIONPAY;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isDinersClubCarteBlanche(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 14) && creditCardNumber.startsWith(\"30\")) {\n            int firstDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 3));\n            if (((firstDigits >= 300) && (firstDigits <= 305)) && isChecksumCorrect(creditCardNumber)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.DINERS_CLUB_CARTE_BLANCHE;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isDinersClubInternational(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() == 14) && creditCardNumber.startsWith(\"36\")) && isChecksumCorrect(creditCardNumber)) {\n            cardId = org.apache.wicket.validation.validator.CreditCardValidator.DINERS_CLUB_INTERNATIONAL;\n            returnValue = true;\n        }\n        return returnValue;\n    }\n\n    private boolean isDinersClubUsAndCanada(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() == 16) && (creditCardNumber.startsWith(\"54\") || creditCardNumber.startsWith(\"55\"))) && isChecksumCorrect(creditCardNumber)) {\n            cardId = org.apache.wicket.validation.validator.CreditCardValidator.DINERS_CLUB_US_AND_CANADA;\n            returnValue = true;\n        }\n        return returnValue;\n    }\n\n    private boolean isDiscoverCard(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() == 16) && creditCardNumber.startsWith(\"6\")) && isChecksumCorrect(creditCardNumber)) {\n            int firstThreeDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 3));\n            int firstSixDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 6));\n            if (((creditCardNumber.startsWith(\"6011\") || creditCardNumber.startsWith(\"65\")) || ((firstThreeDigits >= 644) && (firstThreeDigits <= 649))) || ((firstSixDigits >= 622126) && (firstSixDigits <= 622925))) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.DISCOVER_CARD;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isJCB(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 16) && isChecksumCorrect(creditCardNumber)) {\n            int firstFourDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 4));\n            if ((firstFourDigits >= 3528) && (firstFourDigits <= 3589)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.JCB;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isLaser(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() >= 16) && (creditCardNumber.length() <= 19)) && isChecksumCorrect(creditCardNumber)) {\n            if (((creditCardNumber.startsWith(\"6304\") || creditCardNumber.startsWith(\"6706\")) || creditCardNumber.startsWith(\"6771\")) || creditCardNumber.startsWith(\"6709\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.LASER;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isMaestro(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if (((creditCardNumber.length() >= 12) && (creditCardNumber.length() <= 19)) && isChecksumCorrect(creditCardNumber)) {\n            if ((((((creditCardNumber.startsWith(\"5018\") || creditCardNumber.startsWith(\"5020\")) || creditCardNumber.startsWith(\"5038\")) || creditCardNumber.startsWith(\"6304\")) || creditCardNumber.startsWith(\"6759\")) || creditCardNumber.startsWith(\"6761\")) || creditCardNumber.startsWith(\"6763\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.MAESTRO;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isSolo(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((((creditCardNumber.length() == 16) || (creditCardNumber.length() == 18)) || (creditCardNumber.length() == 19)) && isChecksumCorrect(creditCardNumber)) {\n            if (creditCardNumber.startsWith(\"6334\") || creditCardNumber.startsWith(\"6767\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.SOLO;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isSwitch(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((((creditCardNumber.length() == 16) || (creditCardNumber.length() == 18)) || (creditCardNumber.length() == 19)) && isChecksumCorrect(creditCardNumber)) {\n            if (((((((creditCardNumber.startsWith(\"4903\") || creditCardNumber.startsWith(\"4905\")) || creditCardNumber.startsWith(\"4911\")) || creditCardNumber.startsWith(\"4936\")) || creditCardNumber.startsWith(\"564182\")) || creditCardNumber.startsWith(\"633110\")) || creditCardNumber.startsWith(\"6333\")) || creditCardNumber.startsWith(\"6759\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.SWITCH;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isVisa(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 13) || (creditCardNumber.length() == 16)) {\n            if (creditCardNumber.startsWith(\"4\")) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.SWITCH;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private boolean isVisaElectron(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 16) && ((((creditCardNumber.startsWith(\"417500\") || creditCardNumber.startsWith(\"4917\")) || creditCardNumber.startsWith(\"4913\")) || creditCardNumber.startsWith(\"4508\")) || creditCardNumber.startsWith(\"4844\"))) {\n            cardId = org.apache.wicket.validation.validator.CreditCardValidator.VISA_ELECTRON;\n            returnValue = true;\n        }\n        return returnValue;\n    }\n\n    private boolean isMastercard(java.lang.String creditCardNumber) {\n        cardId = org.apache.wicket.validation.validator.CreditCardValidator.INVALID;\n        boolean returnValue = false;\n        if ((creditCardNumber.length() == 16) && isChecksumCorrect(creditCardNumber)) {\n            int firstTwoDigits = java.lang.Integer.parseInt(creditCardNumber.substring(0, 2));\n            if ((firstTwoDigits >= 51) && (firstTwoDigits <= 55)) {\n                cardId = org.apache.wicket.validation.validator.CreditCardValidator.MASTERCARD;\n                returnValue = true;\n            }\n        }\n        return returnValue;\n    }\n\n    private java.lang.String getCardName() {\n        return (cardId > (-1)) && (cardId < org.apache.wicket.validation.validator.CreditCardValidator.creditCardNames.length) ? org.apache.wicket.validation.validator.CreditCardValidator.creditCardNames[cardId] : \"\";\n    }\n\n    private boolean isChecksumCorrect(java.lang.String creditCardNumber) {\n        java.lang.String input = creditCardNumber;\n        java.lang.String numberToCheck = input.replaceAll(\"[ -]\", \"\");\n        int nulOffset = '0';\n        int sum = 0;\n        for (int i = 1; i <= numberToCheck.length(); i++) {\n            int currentDigit = numberToCheck.charAt(numberToCheck.length() - i) - nulOffset;\n            if ((i % 2) == 0) {\n                currentDigit *= 2;\n                currentDigit = (currentDigit > 9) ? currentDigit - 9 : currentDigit;\n                sum += currentDigit;\n            } else {\n                sum += currentDigit;\n            }\n        }\n        return (sum % 10) == 0;\n    }\n}",
            "src_parent_type": "Class",
            "src_type": "Method"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "LocalVariable",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "creditCardNumber",
            "src_parent": "java.lang.String input = creditCardNumber",
            "src_parent_type": "LocalVariable",
            "src_type": "VariableRead"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "VirtualElement",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "VE: Modifiers_Method",
            "dst_parent": "@java.lang.Override\nprotected void onValidate(org.apache.wicket.validation.IValidatable<java.lang.String> validatable) {\n    creditCardNumber = validatable.getValue();\n    if (!isLengthAndPrefixCorrect(creditCardNumber)) {\n        error(validatable);\n    }\n}",
            "dst_parent_type": "Method",
            "dst_type": "VirtualEle",
            "operator": "MOV",
            "src": "VE: Modifiers_Method",
            "src_parent": "@java.lang.Override\nprotected void onValidate(org.apache.wicket.validation.IValidatable<java.lang.String> validatable) {\n    java.lang.String input = validatable.getValue();\n    java.lang.String numberToCheck = input.replaceAll(\"[ -]\", \"\");\n    int nulOffset = '0';\n    int sum = 0;\n    for (int i = 1; i <= numberToCheck.length(); i++) {\n        int currentDigit = numberToCheck.charAt(numberToCheck.length() - i) - nulOffset;\n        if ((i % 2) == 0) {\n            currentDigit *= 2;\n            currentDigit = (currentDigit > 9) ? currentDigit - 9 : currentDigit;\n            sum += currentDigit;\n        } else {\n            sum += currentDigit;\n        }\n    }\n    if (!((sum % 10) == 0)) {\n        error(validatable);\n    }\n}",
            "src_parent_type": "Method",
            "src_type": "VirtualEle"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Parameter",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "org.apache.wicket.validation.IValidatable<java.lang.String> validatable",
            "dst_parent": "@java.lang.Override\nprotected void onValidate(org.apache.wicket.validation.IValidatable<java.lang.String> validatable) {\n    creditCardNumber = validatable.getValue();\n    if (!isLengthAndPrefixCorrect(creditCardNumber)) {\n        error(validatable);\n    }\n}",
            "dst_parent_type": "Method",
            "dst_type": "Parameter",
            "operator": "MOV",
            "src": "org.apache.wicket.validation.IValidatable<java.lang.String> validatable",
            "src_parent": "@java.lang.Override\nprotected void onValidate(org.apache.wicket.validation.IValidatable<java.lang.String> validatable) {\n    java.lang.String input = validatable.getValue();\n    java.lang.String numberToCheck = input.replaceAll(\"[ -]\", \"\");\n    int nulOffset = '0';\n    int sum = 0;\n    for (int i = 1; i <= numberToCheck.length(); i++) {\n        int currentDigit = numberToCheck.charAt(numberToCheck.length() - i) - nulOffset;\n        if ((i % 2) == 0) {\n            currentDigit *= 2;\n            currentDigit = (currentDigit > 9) ? currentDigit - 9 : currentDigit;\n            sum += currentDigit;\n        } else {\n            sum += currentDigit;\n        }\n    }\n    if (!((sum % 10) == 0)) {\n        error(validatable);\n    }\n}",
            "src_parent_type": "Method",
            "src_type": "Parameter"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "LocalVariable",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "validatable.getValue()",
            "dst_parent": "creditCardNumber = validatable.getValue()",
            "dst_parent_type": "Assignment",
            "dst_type": "Invocation",
            "operator": "MOV",
            "src": "validatable.getValue()",
            "src_parent": "java.lang.String input = validatable.getValue()",
            "src_parent_type": "LocalVariable",
            "src_type": "Invocation"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "For",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "LocalVariable",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "{\n    error(validatable);\n}",
            "dst_parent": "if (!isLengthAndPrefixCorrect(creditCardNumber)) {\n    error(validatable);\n}",
            "dst_parent_type": "If",
            "dst_type": "Block",
            "operator": "MOV",
            "src": "{\n    error(validatable);\n}",
            "src_parent": "if (!((sum % 10) == 0)) {\n    error(validatable);\n}",
            "src_parent_type": "If",
            "src_type": "Block"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "For",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "LocalVariable",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "(sum % 10) == 0",
            "dst_parent": "return (sum % 10) == 0",
            "dst_parent_type": "Return",
            "dst_type": "BinaryOperator",
            "operator": "MOV",
            "src": "((sum % 10) == 0)",
            "src_parent": "!((sum % 10) == 0)",
            "src_parent_type": "UnaryOperator",
            "src_type": "BinaryOperator"
          }
        }
      ],
      "file_name": "CreditCardValidator"
    }
  ],
  "id": "wicket_12e1f39b"
}