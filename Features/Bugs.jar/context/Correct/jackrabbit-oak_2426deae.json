{
  "files": [
    {
      "features": [
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Return",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "new org.apache.jackrabbit.oak.spi.commit.CompositeHook(new org.apache.jackrabbit.oak.plugins.commit.ConflictHook(new org.apache.jackrabbit.oak.plugins.commit.AnnotatingConflictHandler()), new org.apache.jackrabbit.oak.spi.commit.EditorHook(new org.apache.jackrabbit.oak.plugins.commit.ConflictValidatorProvider()), new org.apache.jackrabbit.oak.spi.commit.CommitHook() {\n    @java.lang.Override\n    @javax.annotation.Nonnull\n    public org.apache.jackrabbit.oak.spi.state.NodeState processCommit(org.apache.jackrabbit.oak.spi.state.NodeState before, org.apache.jackrabbit.oak.spi.state.NodeState after, org.apache.jackrabbit.oak.spi.commit.CommitInfo info) throws org.apache.jackrabbit.oak.api.CommitFailedException {\n        org.apache.jackrabbit.oak.api.PropertyState stateAfterRebase = before.getChildNode(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.ASYNC).getProperty(name);\n        if (com.google.common.base.Objects.equal(state, stateAfterRebase)) {\n            return org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.postAsyncRunNodeStatus(after.builder(), name).getNodeState();\n        } else {\n            throw org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.CONCURRENT_UPDATE;\n        }\n    }\n})",
            "src_parent": "return new org.apache.jackrabbit.oak.spi.commit.CompositeHook(new org.apache.jackrabbit.oak.plugins.commit.ConflictHook(new org.apache.jackrabbit.oak.plugins.commit.AnnotatingConflictHandler()), new org.apache.jackrabbit.oak.spi.commit.EditorHook(new org.apache.jackrabbit.oak.plugins.commit.ConflictValidatorProvider()), new org.apache.jackrabbit.oak.spi.commit.CommitHook() {\n    @java.lang.Override\n    @javax.annotation.Nonnull\n    public org.apache.jackrabbit.oak.spi.state.NodeState processCommit(org.apache.jackrabbit.oak.spi.state.NodeState before, org.apache.jackrabbit.oak.spi.state.NodeState after, org.apache.jackrabbit.oak.spi.commit.CommitInfo info) throws org.apache.jackrabbit.oak.api.CommitFailedException {\n        org.apache.jackrabbit.oak.api.PropertyState stateAfterRebase = before.getChildNode(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.ASYNC).getProperty(name);\n        if (com.google.common.base.Objects.equal(state, stateAfterRebase)) {\n            return org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.postAsyncRunNodeStatus(after.builder(), name).getNodeState();\n        } else {\n            throw org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.CONCURRENT_UPDATE;\n        }\n    }\n})",
            "src_parent_type": "Return",
            "src_type": "ConstructorCall"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Return",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "new org.apache.jackrabbit.oak.spi.commit.CommitHook() {\n    @java.lang.Override\n    @javax.annotation.Nonnull\n    public org.apache.jackrabbit.oak.spi.state.NodeState processCommit(org.apache.jackrabbit.oak.spi.state.NodeState before, org.apache.jackrabbit.oak.spi.state.NodeState after, org.apache.jackrabbit.oak.spi.commit.CommitInfo info) throws org.apache.jackrabbit.oak.api.CommitFailedException {\n        org.apache.jackrabbit.oak.api.PropertyState stateAfterRebase = before.getChildNode(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.ASYNC).getProperty(name);\n        if (com.google.common.base.Objects.equal(state, stateAfterRebase)) {\n            return org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.postAsyncRunNodeStatus(after.builder(), name).getNodeState();\n        } else {\n            throw org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.CONCURRENT_UPDATE;\n        }\n    }\n}",
            "dst_parent": "new org.apache.jackrabbit.oak.spi.commit.CompositeHook(new org.apache.jackrabbit.oak.plugins.commit.ConflictHook(new org.apache.jackrabbit.oak.plugins.commit.AnnotatingConflictHandler()), new org.apache.jackrabbit.oak.spi.commit.EditorHook(new org.apache.jackrabbit.oak.plugins.commit.ConflictValidatorProvider()), new org.apache.jackrabbit.oak.spi.commit.CommitHook() {\n    @java.lang.Override\n    @javax.annotation.Nonnull\n    public org.apache.jackrabbit.oak.spi.state.NodeState processCommit(org.apache.jackrabbit.oak.spi.state.NodeState before, org.apache.jackrabbit.oak.spi.state.NodeState after, org.apache.jackrabbit.oak.spi.commit.CommitInfo info) throws org.apache.jackrabbit.oak.api.CommitFailedException {\n        org.apache.jackrabbit.oak.api.PropertyState stateAfterRebase = before.getChildNode(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.ASYNC).getProperty(name);\n        if (com.google.common.base.Objects.equal(state, stateAfterRebase)) {\n            return org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.postAsyncRunNodeStatus(after.builder(), name).getNodeState();\n        } else {\n            throw org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.CONCURRENT_UPDATE;\n        }\n    }\n})",
            "dst_parent_type": "ConstructorCall",
            "dst_type": "NewClass",
            "operator": "MOV",
            "src": "new org.apache.jackrabbit.oak.spi.commit.CommitHook() {\n    @java.lang.Override\n    @javax.annotation.Nonnull\n    public org.apache.jackrabbit.oak.spi.state.NodeState processCommit(org.apache.jackrabbit.oak.spi.state.NodeState before, org.apache.jackrabbit.oak.spi.state.NodeState after, org.apache.jackrabbit.oak.spi.commit.CommitInfo info) throws org.apache.jackrabbit.oak.api.CommitFailedException {\n        org.apache.jackrabbit.oak.api.PropertyState stateAfterRebase = before.getChildNode(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.ASYNC).getProperty(name);\n        if (com.google.common.base.Objects.equal(state, stateAfterRebase)) {\n            return org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.postAsyncRunNodeStatus(after.builder(), name).getNodeState();\n        } else {\n            throw org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.CONCURRENT_UPDATE;\n        }\n    }\n}",
            "src_parent": "return new org.apache.jackrabbit.oak.spi.commit.CommitHook() {\n    @java.lang.Override\n    @javax.annotation.Nonnull\n    public org.apache.jackrabbit.oak.spi.state.NodeState processCommit(org.apache.jackrabbit.oak.spi.state.NodeState before, org.apache.jackrabbit.oak.spi.state.NodeState after, org.apache.jackrabbit.oak.spi.commit.CommitInfo info) throws org.apache.jackrabbit.oak.api.CommitFailedException {\n        org.apache.jackrabbit.oak.api.PropertyState stateAfterRebase = before.getChildNode(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.ASYNC).getProperty(name);\n        if (com.google.common.base.Objects.equal(state, stateAfterRebase)) {\n            return org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.postAsyncRunNodeStatus(after.builder(), name).getNodeState();\n        } else {\n            throw org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.CONCURRENT_UPDATE;\n        }\n    }\n}",
            "src_parent_type": "Return",
            "src_type": "NewClass"
          }
        }
      ],
      "file_name": "AsyncIndexUpdate"
    }
  ],
  "id": "jackrabbit-oak_2426deae"
}