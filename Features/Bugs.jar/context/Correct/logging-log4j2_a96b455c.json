{
  "files": [
    {
      "features": [
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Package",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Class",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "static final class JulLevelComparator implements java.util.Comparator<java.util.logging.Level> {\n    @java.lang.Override\n    public int compare(java.util.logging.Level level1, java.util.logging.Level level2) {\n        return java.lang.Integer.compare(level1.intValue(), level2.intValue());\n    }\n}",
            "src_parent": "public class DefaultLevelConverter implements org.apache.logging.log4j.jul.LevelConverter {\n    static final class JulLevelComparator implements java.util.Comparator<java.util.logging.Level> {\n        @java.lang.Override\n        public int compare(java.util.logging.Level level1, java.util.logging.Level level2) {\n            return java.lang.Integer.compare(level1.intValue(), level2.intValue());\n        }\n    }\n\n    private final java.util.Map<java.util.logging.Level, org.apache.logging.log4j.Level> julToLog4j = new java.util.IdentityHashMap<>(9);\n\n    private final java.util.Map<org.apache.logging.log4j.Level, java.util.logging.Level> log4jToJul = new java.util.IdentityHashMap<>(10);\n\n    private final java.util.List<java.util.logging.Level> sortedJulLevels = new java.util.ArrayList<>(9);\n\n    public DefaultLevelConverter() {\n        mapJulToLog4j(java.util.logging.Level.ALL, org.apache.logging.log4j.Level.ALL);\n        mapJulToLog4j(java.util.logging.Level.FINEST, LevelTranslator.FINEST);\n        mapJulToLog4j(java.util.logging.Level.FINER, org.apache.logging.log4j.Level.TRACE);\n        mapJulToLog4j(java.util.logging.Level.FINE, org.apache.logging.log4j.Level.DEBUG);\n        mapJulToLog4j(java.util.logging.Level.CONFIG, LevelTranslator.CONFIG);\n        mapJulToLog4j(java.util.logging.Level.INFO, org.apache.logging.log4j.Level.INFO);\n        mapJulToLog4j(java.util.logging.Level.WARNING, org.apache.logging.log4j.Level.WARN);\n        mapJulToLog4j(java.util.logging.Level.SEVERE, org.apache.logging.log4j.Level.ERROR);\n        mapJulToLog4j(java.util.logging.Level.OFF, org.apache.logging.log4j.Level.OFF);\n        mapLog4jToJul(org.apache.logging.log4j.Level.ALL, java.util.logging.Level.ALL);\n        mapLog4jToJul(LevelTranslator.FINEST, java.util.logging.Level.FINEST);\n        mapLog4jToJul(org.apache.logging.log4j.Level.TRACE, java.util.logging.Level.FINER);\n        mapLog4jToJul(org.apache.logging.log4j.Level.DEBUG, java.util.logging.Level.FINE);\n        mapLog4jToJul(LevelTranslator.CONFIG, java.util.logging.Level.CONFIG);\n        mapLog4jToJul(org.apache.logging.log4j.Level.INFO, java.util.logging.Level.INFO);\n        mapLog4jToJul(org.apache.logging.log4j.Level.WARN, java.util.logging.Level.WARNING);\n        mapLog4jToJul(org.apache.logging.log4j.Level.ERROR, java.util.logging.Level.SEVERE);\n        mapLog4jToJul(org.apache.logging.log4j.Level.FATAL, java.util.logging.Level.SEVERE);\n        mapLog4jToJul(org.apache.logging.log4j.Level.OFF, java.util.logging.Level.OFF);\n        sortedJulLevels.addAll(julToLog4j.keySet());\n        java.util.Collections.sort(sortedJulLevels, new org.apache.logging.log4j.jul.DefaultLevelConverter.JulLevelComparator());\n    }\n\n    private org.apache.logging.log4j.Level addCustomJulLevel(java.util.logging.Level customJavaLevel) {\n        long prevDist = java.lang.Long.MAX_VALUE;\n        java.util.logging.Level prevLevel = null;\n        for (java.util.logging.Level mappedJavaLevel : sortedJulLevels) {\n            long distance = distance(customJavaLevel, mappedJavaLevel);\n            if (distance > prevDist) {\n                return mapCustomJulLevel(customJavaLevel, prevLevel);\n            }\n            prevDist = distance;\n            prevLevel = mappedJavaLevel;\n        }\n        return mapCustomJulLevel(customJavaLevel, prevLevel);\n    }\n\n    private long distance(java.util.logging.Level javaLevel, java.util.logging.Level customJavaLevel) {\n        return java.lang.Math.abs(((long) (customJavaLevel.intValue())) - ((long) (javaLevel.intValue())));\n    }\n\n    private org.apache.logging.log4j.Level mapCustomJulLevel(java.util.logging.Level customJavaLevel, java.util.logging.Level stdJavaLevel) {\n        final org.apache.logging.log4j.Level level = julToLog4j.get(stdJavaLevel);\n        julToLog4j.put(customJavaLevel, level);\n        return level;\n    }\n\n    private void mapJulToLog4j(java.util.logging.Level julLevel, org.apache.logging.log4j.Level level) {\n        julToLog4j.put(julLevel, level);\n    }\n\n    private void mapLog4jToJul(org.apache.logging.log4j.Level level, java.util.logging.Level julLevel) {\n        log4jToJul.put(level, julLevel);\n    }\n\n    @java.lang.Override\n    public java.util.logging.Level toJavaLevel(final org.apache.logging.log4j.Level level) {\n        return log4jToJul.get(level);\n    }\n\n    @java.lang.Override\n    public org.apache.logging.log4j.Level toLevel(final java.util.logging.Level javaLevel) {\n        final org.apache.logging.log4j.Level level = julToLog4j.get(javaLevel);\n        return level != null ? level : addCustomJulLevel(javaLevel);\n    }\n}",
            "src_parent_type": "Class",
            "src_type": "Class"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Package",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Class",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "private final java.util.List<java.util.logging.Level> sortedJulLevels = new java.util.ArrayList<>(9);",
            "src_parent": "public class DefaultLevelConverter implements org.apache.logging.log4j.jul.LevelConverter {\n    static final class JulLevelComparator implements java.util.Comparator<java.util.logging.Level> {\n        @java.lang.Override\n        public int compare(java.util.logging.Level level1, java.util.logging.Level level2) {\n            return java.lang.Integer.compare(level1.intValue(), level2.intValue());\n        }\n    }\n\n    private final java.util.Map<java.util.logging.Level, org.apache.logging.log4j.Level> julToLog4j = new java.util.IdentityHashMap<>(9);\n\n    private final java.util.Map<org.apache.logging.log4j.Level, java.util.logging.Level> log4jToJul = new java.util.IdentityHashMap<>(10);\n\n    private final java.util.List<java.util.logging.Level> sortedJulLevels = new java.util.ArrayList<>(9);\n\n    public DefaultLevelConverter() {\n        mapJulToLog4j(java.util.logging.Level.ALL, org.apache.logging.log4j.Level.ALL);\n        mapJulToLog4j(java.util.logging.Level.FINEST, LevelTranslator.FINEST);\n        mapJulToLog4j(java.util.logging.Level.FINER, org.apache.logging.log4j.Level.TRACE);\n        mapJulToLog4j(java.util.logging.Level.FINE, org.apache.logging.log4j.Level.DEBUG);\n        mapJulToLog4j(java.util.logging.Level.CONFIG, LevelTranslator.CONFIG);\n        mapJulToLog4j(java.util.logging.Level.INFO, org.apache.logging.log4j.Level.INFO);\n        mapJulToLog4j(java.util.logging.Level.WARNING, org.apache.logging.log4j.Level.WARN);\n        mapJulToLog4j(java.util.logging.Level.SEVERE, org.apache.logging.log4j.Level.ERROR);\n        mapJulToLog4j(java.util.logging.Level.OFF, org.apache.logging.log4j.Level.OFF);\n        mapLog4jToJul(org.apache.logging.log4j.Level.ALL, java.util.logging.Level.ALL);\n        mapLog4jToJul(LevelTranslator.FINEST, java.util.logging.Level.FINEST);\n        mapLog4jToJul(org.apache.logging.log4j.Level.TRACE, java.util.logging.Level.FINER);\n        mapLog4jToJul(org.apache.logging.log4j.Level.DEBUG, java.util.logging.Level.FINE);\n        mapLog4jToJul(LevelTranslator.CONFIG, java.util.logging.Level.CONFIG);\n        mapLog4jToJul(org.apache.logging.log4j.Level.INFO, java.util.logging.Level.INFO);\n        mapLog4jToJul(org.apache.logging.log4j.Level.WARN, java.util.logging.Level.WARNING);\n        mapLog4jToJul(org.apache.logging.log4j.Level.ERROR, java.util.logging.Level.SEVERE);\n        mapLog4jToJul(org.apache.logging.log4j.Level.FATAL, java.util.logging.Level.SEVERE);\n        mapLog4jToJul(org.apache.logging.log4j.Level.OFF, java.util.logging.Level.OFF);\n        sortedJulLevels.addAll(julToLog4j.keySet());\n        java.util.Collections.sort(sortedJulLevels, new org.apache.logging.log4j.jul.DefaultLevelConverter.JulLevelComparator());\n    }\n\n    private org.apache.logging.log4j.Level addCustomJulLevel(java.util.logging.Level customJavaLevel) {\n        long prevDist = java.lang.Long.MAX_VALUE;\n        java.util.logging.Level prevLevel = null;\n        for (java.util.logging.Level mappedJavaLevel : sortedJulLevels) {\n            long distance = distance(customJavaLevel, mappedJavaLevel);\n            if (distance > prevDist) {\n                return mapCustomJulLevel(customJavaLevel, prevLevel);\n            }\n            prevDist = distance;\n            prevLevel = mappedJavaLevel;\n        }\n        return mapCustomJulLevel(customJavaLevel, prevLevel);\n    }\n\n    private long distance(java.util.logging.Level javaLevel, java.util.logging.Level customJavaLevel) {\n        return java.lang.Math.abs(((long) (customJavaLevel.intValue())) - ((long) (javaLevel.intValue())));\n    }\n\n    private org.apache.logging.log4j.Level mapCustomJulLevel(java.util.logging.Level customJavaLevel, java.util.logging.Level stdJavaLevel) {\n        final org.apache.logging.log4j.Level level = julToLog4j.get(stdJavaLevel);\n        julToLog4j.put(customJavaLevel, level);\n        return level;\n    }\n\n    private void mapJulToLog4j(java.util.logging.Level julLevel, org.apache.logging.log4j.Level level) {\n        julToLog4j.put(julLevel, level);\n    }\n\n    private void mapLog4jToJul(org.apache.logging.log4j.Level level, java.util.logging.Level julLevel) {\n        log4jToJul.put(level, julLevel);\n    }\n\n    @java.lang.Override\n    public java.util.logging.Level toJavaLevel(final org.apache.logging.log4j.Level level) {\n        return log4jToJul.get(level);\n    }\n\n    @java.lang.Override\n    public org.apache.logging.log4j.Level toLevel(final java.util.logging.Level javaLevel) {\n        final org.apache.logging.log4j.Level level = julToLog4j.get(javaLevel);\n        return level != null ? level : addCustomJulLevel(javaLevel);\n    }\n}",
            "src_parent_type": "Class",
            "src_type": "Field"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Package",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Class",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "private org.apache.logging.log4j.Level addCustomJulLevel(java.util.logging.Level customJavaLevel) {\n    long prevDist = java.lang.Long.MAX_VALUE;\n    java.util.logging.Level prevLevel = null;\n    for (java.util.logging.Level mappedJavaLevel : sortedJulLevels) {\n        long distance = distance(customJavaLevel, mappedJavaLevel);\n        if (distance > prevDist) {\n            return mapCustomJulLevel(customJavaLevel, prevLevel);\n        }\n        prevDist = distance;\n        prevLevel = mappedJavaLevel;\n    }\n    return mapCustomJulLevel(customJavaLevel, prevLevel);\n}",
            "src_parent": "public class DefaultLevelConverter implements org.apache.logging.log4j.jul.LevelConverter {\n    static final class JulLevelComparator implements java.util.Comparator<java.util.logging.Level> {\n        @java.lang.Override\n        public int compare(java.util.logging.Level level1, java.util.logging.Level level2) {\n            return java.lang.Integer.compare(level1.intValue(), level2.intValue());\n        }\n    }\n\n    private final java.util.Map<java.util.logging.Level, org.apache.logging.log4j.Level> julToLog4j = new java.util.IdentityHashMap<>(9);\n\n    private final java.util.Map<org.apache.logging.log4j.Level, java.util.logging.Level> log4jToJul = new java.util.IdentityHashMap<>(10);\n\n    private final java.util.List<java.util.logging.Level> sortedJulLevels = new java.util.ArrayList<>(9);\n\n    public DefaultLevelConverter() {\n        mapJulToLog4j(java.util.logging.Level.ALL, org.apache.logging.log4j.Level.ALL);\n        mapJulToLog4j(java.util.logging.Level.FINEST, LevelTranslator.FINEST);\n        mapJulToLog4j(java.util.logging.Level.FINER, org.apache.logging.log4j.Level.TRACE);\n        mapJulToLog4j(java.util.logging.Level.FINE, org.apache.logging.log4j.Level.DEBUG);\n        mapJulToLog4j(java.util.logging.Level.CONFIG, LevelTranslator.CONFIG);\n        mapJulToLog4j(java.util.logging.Level.INFO, org.apache.logging.log4j.Level.INFO);\n        mapJulToLog4j(java.util.logging.Level.WARNING, org.apache.logging.log4j.Level.WARN);\n        mapJulToLog4j(java.util.logging.Level.SEVERE, org.apache.logging.log4j.Level.ERROR);\n        mapJulToLog4j(java.util.logging.Level.OFF, org.apache.logging.log4j.Level.OFF);\n        mapLog4jToJul(org.apache.logging.log4j.Level.ALL, java.util.logging.Level.ALL);\n        mapLog4jToJul(LevelTranslator.FINEST, java.util.logging.Level.FINEST);\n        mapLog4jToJul(org.apache.logging.log4j.Level.TRACE, java.util.logging.Level.FINER);\n        mapLog4jToJul(org.apache.logging.log4j.Level.DEBUG, java.util.logging.Level.FINE);\n        mapLog4jToJul(LevelTranslator.CONFIG, java.util.logging.Level.CONFIG);\n        mapLog4jToJul(org.apache.logging.log4j.Level.INFO, java.util.logging.Level.INFO);\n        mapLog4jToJul(org.apache.logging.log4j.Level.WARN, java.util.logging.Level.WARNING);\n        mapLog4jToJul(org.apache.logging.log4j.Level.ERROR, java.util.logging.Level.SEVERE);\n        mapLog4jToJul(org.apache.logging.log4j.Level.FATAL, java.util.logging.Level.SEVERE);\n        mapLog4jToJul(org.apache.logging.log4j.Level.OFF, java.util.logging.Level.OFF);\n        sortedJulLevels.addAll(julToLog4j.keySet());\n        java.util.Collections.sort(sortedJulLevels, new org.apache.logging.log4j.jul.DefaultLevelConverter.JulLevelComparator());\n    }\n\n    private org.apache.logging.log4j.Level addCustomJulLevel(java.util.logging.Level customJavaLevel) {\n        long prevDist = java.lang.Long.MAX_VALUE;\n        java.util.logging.Level prevLevel = null;\n        for (java.util.logging.Level mappedJavaLevel : sortedJulLevels) {\n            long distance = distance(customJavaLevel, mappedJavaLevel);\n            if (distance > prevDist) {\n                return mapCustomJulLevel(customJavaLevel, prevLevel);\n            }\n            prevDist = distance;\n            prevLevel = mappedJavaLevel;\n        }\n        return mapCustomJulLevel(customJavaLevel, prevLevel);\n    }\n\n    private long distance(java.util.logging.Level javaLevel, java.util.logging.Level customJavaLevel) {\n        return java.lang.Math.abs(((long) (customJavaLevel.intValue())) - ((long) (javaLevel.intValue())));\n    }\n\n    private org.apache.logging.log4j.Level mapCustomJulLevel(java.util.logging.Level customJavaLevel, java.util.logging.Level stdJavaLevel) {\n        final org.apache.logging.log4j.Level level = julToLog4j.get(stdJavaLevel);\n        julToLog4j.put(customJavaLevel, level);\n        return level;\n    }\n\n    private void mapJulToLog4j(java.util.logging.Level julLevel, org.apache.logging.log4j.Level level) {\n        julToLog4j.put(julLevel, level);\n    }\n\n    private void mapLog4jToJul(org.apache.logging.log4j.Level level, java.util.logging.Level julLevel) {\n        log4jToJul.put(level, julLevel);\n    }\n\n    @java.lang.Override\n    public java.util.logging.Level toJavaLevel(final org.apache.logging.log4j.Level level) {\n        return log4jToJul.get(level);\n    }\n\n    @java.lang.Override\n    public org.apache.logging.log4j.Level toLevel(final java.util.logging.Level javaLevel) {\n        final org.apache.logging.log4j.Level level = julToLog4j.get(javaLevel);\n        return level != null ? level : addCustomJulLevel(javaLevel);\n    }\n}",
            "src_parent_type": "Class",
            "src_type": "Method"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Package",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Class",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "private long distance(java.util.logging.Level javaLevel, java.util.logging.Level customJavaLevel) {\n    return java.lang.Math.abs(((long) (customJavaLevel.intValue())) - ((long) (javaLevel.intValue())));\n}",
            "src_parent": "public class DefaultLevelConverter implements org.apache.logging.log4j.jul.LevelConverter {\n    static final class JulLevelComparator implements java.util.Comparator<java.util.logging.Level> {\n        @java.lang.Override\n        public int compare(java.util.logging.Level level1, java.util.logging.Level level2) {\n            return java.lang.Integer.compare(level1.intValue(), level2.intValue());\n        }\n    }\n\n    private final java.util.Map<java.util.logging.Level, org.apache.logging.log4j.Level> julToLog4j = new java.util.IdentityHashMap<>(9);\n\n    private final java.util.Map<org.apache.logging.log4j.Level, java.util.logging.Level> log4jToJul = new java.util.IdentityHashMap<>(10);\n\n    private final java.util.List<java.util.logging.Level> sortedJulLevels = new java.util.ArrayList<>(9);\n\n    public DefaultLevelConverter() {\n        mapJulToLog4j(java.util.logging.Level.ALL, org.apache.logging.log4j.Level.ALL);\n        mapJulToLog4j(java.util.logging.Level.FINEST, LevelTranslator.FINEST);\n        mapJulToLog4j(java.util.logging.Level.FINER, org.apache.logging.log4j.Level.TRACE);\n        mapJulToLog4j(java.util.logging.Level.FINE, org.apache.logging.log4j.Level.DEBUG);\n        mapJulToLog4j(java.util.logging.Level.CONFIG, LevelTranslator.CONFIG);\n        mapJulToLog4j(java.util.logging.Level.INFO, org.apache.logging.log4j.Level.INFO);\n        mapJulToLog4j(java.util.logging.Level.WARNING, org.apache.logging.log4j.Level.WARN);\n        mapJulToLog4j(java.util.logging.Level.SEVERE, org.apache.logging.log4j.Level.ERROR);\n        mapJulToLog4j(java.util.logging.Level.OFF, org.apache.logging.log4j.Level.OFF);\n        mapLog4jToJul(org.apache.logging.log4j.Level.ALL, java.util.logging.Level.ALL);\n        mapLog4jToJul(LevelTranslator.FINEST, java.util.logging.Level.FINEST);\n        mapLog4jToJul(org.apache.logging.log4j.Level.TRACE, java.util.logging.Level.FINER);\n        mapLog4jToJul(org.apache.logging.log4j.Level.DEBUG, java.util.logging.Level.FINE);\n        mapLog4jToJul(LevelTranslator.CONFIG, java.util.logging.Level.CONFIG);\n        mapLog4jToJul(org.apache.logging.log4j.Level.INFO, java.util.logging.Level.INFO);\n        mapLog4jToJul(org.apache.logging.log4j.Level.WARN, java.util.logging.Level.WARNING);\n        mapLog4jToJul(org.apache.logging.log4j.Level.ERROR, java.util.logging.Level.SEVERE);\n        mapLog4jToJul(org.apache.logging.log4j.Level.FATAL, java.util.logging.Level.SEVERE);\n        mapLog4jToJul(org.apache.logging.log4j.Level.OFF, java.util.logging.Level.OFF);\n        sortedJulLevels.addAll(julToLog4j.keySet());\n        java.util.Collections.sort(sortedJulLevels, new org.apache.logging.log4j.jul.DefaultLevelConverter.JulLevelComparator());\n    }\n\n    private org.apache.logging.log4j.Level addCustomJulLevel(java.util.logging.Level customJavaLevel) {\n        long prevDist = java.lang.Long.MAX_VALUE;\n        java.util.logging.Level prevLevel = null;\n        for (java.util.logging.Level mappedJavaLevel : sortedJulLevels) {\n            long distance = distance(customJavaLevel, mappedJavaLevel);\n            if (distance > prevDist) {\n                return mapCustomJulLevel(customJavaLevel, prevLevel);\n            }\n            prevDist = distance;\n            prevLevel = mappedJavaLevel;\n        }\n        return mapCustomJulLevel(customJavaLevel, prevLevel);\n    }\n\n    private long distance(java.util.logging.Level javaLevel, java.util.logging.Level customJavaLevel) {\n        return java.lang.Math.abs(((long) (customJavaLevel.intValue())) - ((long) (javaLevel.intValue())));\n    }\n\n    private org.apache.logging.log4j.Level mapCustomJulLevel(java.util.logging.Level customJavaLevel, java.util.logging.Level stdJavaLevel) {\n        final org.apache.logging.log4j.Level level = julToLog4j.get(stdJavaLevel);\n        julToLog4j.put(customJavaLevel, level);\n        return level;\n    }\n\n    private void mapJulToLog4j(java.util.logging.Level julLevel, org.apache.logging.log4j.Level level) {\n        julToLog4j.put(julLevel, level);\n    }\n\n    private void mapLog4jToJul(org.apache.logging.log4j.Level level, java.util.logging.Level julLevel) {\n        log4jToJul.put(level, julLevel);\n    }\n\n    @java.lang.Override\n    public java.util.logging.Level toJavaLevel(final org.apache.logging.log4j.Level level) {\n        return log4jToJul.get(level);\n    }\n\n    @java.lang.Override\n    public org.apache.logging.log4j.Level toLevel(final java.util.logging.Level javaLevel) {\n        final org.apache.logging.log4j.Level level = julToLog4j.get(javaLevel);\n        return level != null ? level : addCustomJulLevel(javaLevel);\n    }\n}",
            "src_parent_type": "Class",
            "src_type": "Method"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Package",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Class",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "private org.apache.logging.log4j.Level mapCustomJulLevel(java.util.logging.Level customJavaLevel, java.util.logging.Level stdJavaLevel) {\n    final org.apache.logging.log4j.Level level = julToLog4j.get(stdJavaLevel);\n    julToLog4j.put(customJavaLevel, level);\n    return level;\n}",
            "src_parent": "public class DefaultLevelConverter implements org.apache.logging.log4j.jul.LevelConverter {\n    static final class JulLevelComparator implements java.util.Comparator<java.util.logging.Level> {\n        @java.lang.Override\n        public int compare(java.util.logging.Level level1, java.util.logging.Level level2) {\n            return java.lang.Integer.compare(level1.intValue(), level2.intValue());\n        }\n    }\n\n    private final java.util.Map<java.util.logging.Level, org.apache.logging.log4j.Level> julToLog4j = new java.util.IdentityHashMap<>(9);\n\n    private final java.util.Map<org.apache.logging.log4j.Level, java.util.logging.Level> log4jToJul = new java.util.IdentityHashMap<>(10);\n\n    private final java.util.List<java.util.logging.Level> sortedJulLevels = new java.util.ArrayList<>(9);\n\n    public DefaultLevelConverter() {\n        mapJulToLog4j(java.util.logging.Level.ALL, org.apache.logging.log4j.Level.ALL);\n        mapJulToLog4j(java.util.logging.Level.FINEST, LevelTranslator.FINEST);\n        mapJulToLog4j(java.util.logging.Level.FINER, org.apache.logging.log4j.Level.TRACE);\n        mapJulToLog4j(java.util.logging.Level.FINE, org.apache.logging.log4j.Level.DEBUG);\n        mapJulToLog4j(java.util.logging.Level.CONFIG, LevelTranslator.CONFIG);\n        mapJulToLog4j(java.util.logging.Level.INFO, org.apache.logging.log4j.Level.INFO);\n        mapJulToLog4j(java.util.logging.Level.WARNING, org.apache.logging.log4j.Level.WARN);\n        mapJulToLog4j(java.util.logging.Level.SEVERE, org.apache.logging.log4j.Level.ERROR);\n        mapJulToLog4j(java.util.logging.Level.OFF, org.apache.logging.log4j.Level.OFF);\n        mapLog4jToJul(org.apache.logging.log4j.Level.ALL, java.util.logging.Level.ALL);\n        mapLog4jToJul(LevelTranslator.FINEST, java.util.logging.Level.FINEST);\n        mapLog4jToJul(org.apache.logging.log4j.Level.TRACE, java.util.logging.Level.FINER);\n        mapLog4jToJul(org.apache.logging.log4j.Level.DEBUG, java.util.logging.Level.FINE);\n        mapLog4jToJul(LevelTranslator.CONFIG, java.util.logging.Level.CONFIG);\n        mapLog4jToJul(org.apache.logging.log4j.Level.INFO, java.util.logging.Level.INFO);\n        mapLog4jToJul(org.apache.logging.log4j.Level.WARN, java.util.logging.Level.WARNING);\n        mapLog4jToJul(org.apache.logging.log4j.Level.ERROR, java.util.logging.Level.SEVERE);\n        mapLog4jToJul(org.apache.logging.log4j.Level.FATAL, java.util.logging.Level.SEVERE);\n        mapLog4jToJul(org.apache.logging.log4j.Level.OFF, java.util.logging.Level.OFF);\n        sortedJulLevels.addAll(julToLog4j.keySet());\n        java.util.Collections.sort(sortedJulLevels, new org.apache.logging.log4j.jul.DefaultLevelConverter.JulLevelComparator());\n    }\n\n    private org.apache.logging.log4j.Level addCustomJulLevel(java.util.logging.Level customJavaLevel) {\n        long prevDist = java.lang.Long.MAX_VALUE;\n        java.util.logging.Level prevLevel = null;\n        for (java.util.logging.Level mappedJavaLevel : sortedJulLevels) {\n            long distance = distance(customJavaLevel, mappedJavaLevel);\n            if (distance > prevDist) {\n                return mapCustomJulLevel(customJavaLevel, prevLevel);\n            }\n            prevDist = distance;\n            prevLevel = mappedJavaLevel;\n        }\n        return mapCustomJulLevel(customJavaLevel, prevLevel);\n    }\n\n    private long distance(java.util.logging.Level javaLevel, java.util.logging.Level customJavaLevel) {\n        return java.lang.Math.abs(((long) (customJavaLevel.intValue())) - ((long) (javaLevel.intValue())));\n    }\n\n    private org.apache.logging.log4j.Level mapCustomJulLevel(java.util.logging.Level customJavaLevel, java.util.logging.Level stdJavaLevel) {\n        final org.apache.logging.log4j.Level level = julToLog4j.get(stdJavaLevel);\n        julToLog4j.put(customJavaLevel, level);\n        return level;\n    }\n\n    private void mapJulToLog4j(java.util.logging.Level julLevel, org.apache.logging.log4j.Level level) {\n        julToLog4j.put(julLevel, level);\n    }\n\n    private void mapLog4jToJul(org.apache.logging.log4j.Level level, java.util.logging.Level julLevel) {\n        log4jToJul.put(level, julLevel);\n    }\n\n    @java.lang.Override\n    public java.util.logging.Level toJavaLevel(final org.apache.logging.log4j.Level level) {\n        return log4jToJul.get(level);\n    }\n\n    @java.lang.Override\n    public org.apache.logging.log4j.Level toLevel(final java.util.logging.Level javaLevel) {\n        final org.apache.logging.log4j.Level level = julToLog4j.get(javaLevel);\n        return level != null ? level : addCustomJulLevel(javaLevel);\n    }\n}",
            "src_parent_type": "Class",
            "src_type": "Method"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Constructor",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "sortedJulLevels.addAll(julToLog4j.keySet())",
            "src_parent": "{\n    mapJulToLog4j(java.util.logging.Level.ALL, org.apache.logging.log4j.Level.ALL);\n    mapJulToLog4j(java.util.logging.Level.FINEST, LevelTranslator.FINEST);\n    mapJulToLog4j(java.util.logging.Level.FINER, org.apache.logging.log4j.Level.TRACE);\n    mapJulToLog4j(java.util.logging.Level.FINE, org.apache.logging.log4j.Level.DEBUG);\n    mapJulToLog4j(java.util.logging.Level.CONFIG, LevelTranslator.CONFIG);\n    mapJulToLog4j(java.util.logging.Level.INFO, org.apache.logging.log4j.Level.INFO);\n    mapJulToLog4j(java.util.logging.Level.WARNING, org.apache.logging.log4j.Level.WARN);\n    mapJulToLog4j(java.util.logging.Level.SEVERE, org.apache.logging.log4j.Level.ERROR);\n    mapJulToLog4j(java.util.logging.Level.OFF, org.apache.logging.log4j.Level.OFF);\n    mapLog4jToJul(org.apache.logging.log4j.Level.ALL, java.util.logging.Level.ALL);\n    mapLog4jToJul(LevelTranslator.FINEST, java.util.logging.Level.FINEST);\n    mapLog4jToJul(org.apache.logging.log4j.Level.TRACE, java.util.logging.Level.FINER);\n    mapLog4jToJul(org.apache.logging.log4j.Level.DEBUG, java.util.logging.Level.FINE);\n    mapLog4jToJul(LevelTranslator.CONFIG, java.util.logging.Level.CONFIG);\n    mapLog4jToJul(org.apache.logging.log4j.Level.INFO, java.util.logging.Level.INFO);\n    mapLog4jToJul(org.apache.logging.log4j.Level.WARN, java.util.logging.Level.WARNING);\n    mapLog4jToJul(org.apache.logging.log4j.Level.ERROR, java.util.logging.Level.SEVERE);\n    mapLog4jToJul(org.apache.logging.log4j.Level.FATAL, java.util.logging.Level.SEVERE);\n    mapLog4jToJul(org.apache.logging.log4j.Level.OFF, java.util.logging.Level.OFF);\n    sortedJulLevels.addAll(julToLog4j.keySet());\n    java.util.Collections.sort(sortedJulLevels, new org.apache.logging.log4j.jul.DefaultLevelConverter.JulLevelComparator());\n}",
            "src_parent_type": "Block",
            "src_type": "Invocation"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Constructor",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "java.util.Collections.sort(sortedJulLevels, new org.apache.logging.log4j.jul.DefaultLevelConverter.JulLevelComparator())",
            "src_parent": "{\n    mapJulToLog4j(java.util.logging.Level.ALL, org.apache.logging.log4j.Level.ALL);\n    mapJulToLog4j(java.util.logging.Level.FINEST, LevelTranslator.FINEST);\n    mapJulToLog4j(java.util.logging.Level.FINER, org.apache.logging.log4j.Level.TRACE);\n    mapJulToLog4j(java.util.logging.Level.FINE, org.apache.logging.log4j.Level.DEBUG);\n    mapJulToLog4j(java.util.logging.Level.CONFIG, LevelTranslator.CONFIG);\n    mapJulToLog4j(java.util.logging.Level.INFO, org.apache.logging.log4j.Level.INFO);\n    mapJulToLog4j(java.util.logging.Level.WARNING, org.apache.logging.log4j.Level.WARN);\n    mapJulToLog4j(java.util.logging.Level.SEVERE, org.apache.logging.log4j.Level.ERROR);\n    mapJulToLog4j(java.util.logging.Level.OFF, org.apache.logging.log4j.Level.OFF);\n    mapLog4jToJul(org.apache.logging.log4j.Level.ALL, java.util.logging.Level.ALL);\n    mapLog4jToJul(LevelTranslator.FINEST, java.util.logging.Level.FINEST);\n    mapLog4jToJul(org.apache.logging.log4j.Level.TRACE, java.util.logging.Level.FINER);\n    mapLog4jToJul(org.apache.logging.log4j.Level.DEBUG, java.util.logging.Level.FINE);\n    mapLog4jToJul(LevelTranslator.CONFIG, java.util.logging.Level.CONFIG);\n    mapLog4jToJul(org.apache.logging.log4j.Level.INFO, java.util.logging.Level.INFO);\n    mapLog4jToJul(org.apache.logging.log4j.Level.WARN, java.util.logging.Level.WARNING);\n    mapLog4jToJul(org.apache.logging.log4j.Level.ERROR, java.util.logging.Level.SEVERE);\n    mapLog4jToJul(org.apache.logging.log4j.Level.FATAL, java.util.logging.Level.SEVERE);\n    mapLog4jToJul(org.apache.logging.log4j.Level.OFF, java.util.logging.Level.OFF);\n    sortedJulLevels.addAll(julToLog4j.keySet());\n    java.util.Collections.sort(sortedJulLevels, new org.apache.logging.log4j.jul.DefaultLevelConverter.JulLevelComparator());\n}",
            "src_parent_type": "Block",
            "src_type": "Invocation"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Method",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "final org.apache.logging.log4j.Level level = julToLog4j.get(javaLevel)",
            "src_parent": "{\n    final org.apache.logging.log4j.Level level = julToLog4j.get(javaLevel);\n    return level != null ? level : addCustomJulLevel(javaLevel);\n}",
            "src_parent_type": "Block",
            "src_type": "LocalVariable"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Return",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "level != null ? level : addCustomJulLevel(javaLevel)",
            "src_parent": "return level != null ? level : addCustomJulLevel(javaLevel)",
            "src_parent_type": "Return",
            "src_type": "Conditional"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Constructor",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Invocation",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "mapJulToLog4j(java.util.logging.Level.OFF, org.apache.logging.log4j.Level.OFF)",
            "dst_parent": "{\n    mapJulToLog4j(java.util.logging.Level.ALL, org.apache.logging.log4j.Level.ALL);\n    mapJulToLog4j(java.util.logging.Level.FINEST, LevelTranslator.FINEST);\n    mapJulToLog4j(java.util.logging.Level.FINER, org.apache.logging.log4j.Level.TRACE);\n    mapJulToLog4j(java.util.logging.Level.FINE, org.apache.logging.log4j.Level.DEBUG);\n    mapJulToLog4j(java.util.logging.Level.CONFIG, LevelTranslator.CONFIG);\n    mapJulToLog4j(java.util.logging.Level.INFO, org.apache.logging.log4j.Level.INFO);\n    mapJulToLog4j(java.util.logging.Level.WARNING, org.apache.logging.log4j.Level.WARN);\n    mapJulToLog4j(java.util.logging.Level.SEVERE, org.apache.logging.log4j.Level.ERROR);\n    mapJulToLog4j(java.util.logging.Level.OFF, org.apache.logging.log4j.Level.OFF);\n    mapLog4jToJul(org.apache.logging.log4j.Level.ALL, java.util.logging.Level.ALL);\n    mapLog4jToJul(LevelTranslator.FINEST, java.util.logging.Level.FINEST);\n    mapLog4jToJul(org.apache.logging.log4j.Level.TRACE, java.util.logging.Level.FINER);\n    mapLog4jToJul(org.apache.logging.log4j.Level.DEBUG, java.util.logging.Level.FINE);\n    mapLog4jToJul(LevelTranslator.CONFIG, java.util.logging.Level.CONFIG);\n    mapLog4jToJul(org.apache.logging.log4j.Level.INFO, java.util.logging.Level.INFO);\n    mapLog4jToJul(org.apache.logging.log4j.Level.WARN, java.util.logging.Level.WARNING);\n    mapLog4jToJul(org.apache.logging.log4j.Level.ERROR, java.util.logging.Level.SEVERE);\n    mapLog4jToJul(org.apache.logging.log4j.Level.FATAL, java.util.logging.Level.SEVERE);\n    mapLog4jToJul(org.apache.logging.log4j.Level.OFF, java.util.logging.Level.OFF);\n    sortedJulLevels.addAll(julToLog4j.keySet());\n    java.util.Collections.sort(sortedJulLevels, new org.apache.logging.log4j.jul.DefaultLevelConverter.JulLevelComparator());\n}",
            "dst_parent_type": "Block",
            "dst_type": "Invocation",
            "operator": "MOV",
            "src": "mapJulToLog4j(java.util.logging.Level.OFF, org.apache.logging.log4j.Level.OFF)",
            "src_parent": "{\n    mapJulToLog4j(java.util.logging.Level.OFF, org.apache.logging.log4j.Level.OFF);\n    mapJulToLog4j(java.util.logging.Level.FINEST, LevelTranslator.FINEST);\n    mapJulToLog4j(java.util.logging.Level.FINER, org.apache.logging.log4j.Level.TRACE);\n    mapJulToLog4j(java.util.logging.Level.FINE, org.apache.logging.log4j.Level.DEBUG);\n    mapJulToLog4j(java.util.logging.Level.CONFIG, LevelTranslator.CONFIG);\n    mapJulToLog4j(java.util.logging.Level.INFO, org.apache.logging.log4j.Level.INFO);\n    mapJulToLog4j(java.util.logging.Level.WARNING, org.apache.logging.log4j.Level.WARN);\n    mapJulToLog4j(java.util.logging.Level.SEVERE, org.apache.logging.log4j.Level.ERROR);\n    mapJulToLog4j(java.util.logging.Level.ALL, org.apache.logging.log4j.Level.ALL);\n    mapLog4jToJul(org.apache.logging.log4j.Level.OFF, java.util.logging.Level.OFF);\n    mapLog4jToJul(LevelTranslator.FINEST, java.util.logging.Level.FINEST);\n    mapLog4jToJul(org.apache.logging.log4j.Level.TRACE, java.util.logging.Level.FINER);\n    mapLog4jToJul(org.apache.logging.log4j.Level.DEBUG, java.util.logging.Level.FINE);\n    mapLog4jToJul(LevelTranslator.CONFIG, java.util.logging.Level.CONFIG);\n    mapLog4jToJul(org.apache.logging.log4j.Level.INFO, java.util.logging.Level.INFO);\n    mapLog4jToJul(org.apache.logging.log4j.Level.WARN, java.util.logging.Level.WARNING);\n    mapLog4jToJul(org.apache.logging.log4j.Level.ERROR, java.util.logging.Level.SEVERE);\n    mapLog4jToJul(org.apache.logging.log4j.Level.FATAL, java.util.logging.Level.SEVERE);\n    mapLog4jToJul(org.apache.logging.log4j.Level.ALL, java.util.logging.Level.ALL);\n}",
            "src_parent_type": "Block",
            "src_type": "Invocation"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "Invocation",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Constructor",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Invocation",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "mapJulToLog4j(java.util.logging.Level.ALL, org.apache.logging.log4j.Level.ALL)",
            "dst_parent": "{\n    mapJulToLog4j(java.util.logging.Level.ALL, org.apache.logging.log4j.Level.ALL);\n    mapJulToLog4j(java.util.logging.Level.FINEST, LevelTranslator.FINEST);\n    mapJulToLog4j(java.util.logging.Level.FINER, org.apache.logging.log4j.Level.TRACE);\n    mapJulToLog4j(java.util.logging.Level.FINE, org.apache.logging.log4j.Level.DEBUG);\n    mapJulToLog4j(java.util.logging.Level.CONFIG, LevelTranslator.CONFIG);\n    mapJulToLog4j(java.util.logging.Level.INFO, org.apache.logging.log4j.Level.INFO);\n    mapJulToLog4j(java.util.logging.Level.WARNING, org.apache.logging.log4j.Level.WARN);\n    mapJulToLog4j(java.util.logging.Level.SEVERE, org.apache.logging.log4j.Level.ERROR);\n    mapJulToLog4j(java.util.logging.Level.OFF, org.apache.logging.log4j.Level.OFF);\n    mapLog4jToJul(org.apache.logging.log4j.Level.ALL, java.util.logging.Level.ALL);\n    mapLog4jToJul(LevelTranslator.FINEST, java.util.logging.Level.FINEST);\n    mapLog4jToJul(org.apache.logging.log4j.Level.TRACE, java.util.logging.Level.FINER);\n    mapLog4jToJul(org.apache.logging.log4j.Level.DEBUG, java.util.logging.Level.FINE);\n    mapLog4jToJul(LevelTranslator.CONFIG, java.util.logging.Level.CONFIG);\n    mapLog4jToJul(org.apache.logging.log4j.Level.INFO, java.util.logging.Level.INFO);\n    mapLog4jToJul(org.apache.logging.log4j.Level.WARN, java.util.logging.Level.WARNING);\n    mapLog4jToJul(org.apache.logging.log4j.Level.ERROR, java.util.logging.Level.SEVERE);\n    mapLog4jToJul(org.apache.logging.log4j.Level.FATAL, java.util.logging.Level.SEVERE);\n    mapLog4jToJul(org.apache.logging.log4j.Level.OFF, java.util.logging.Level.OFF);\n    sortedJulLevels.addAll(julToLog4j.keySet());\n    java.util.Collections.sort(sortedJulLevels, new org.apache.logging.log4j.jul.DefaultLevelConverter.JulLevelComparator());\n}",
            "dst_parent_type": "Block",
            "dst_type": "Invocation",
            "operator": "MOV",
            "src": "mapJulToLog4j(java.util.logging.Level.ALL, org.apache.logging.log4j.Level.ALL)",
            "src_parent": "{\n    mapJulToLog4j(java.util.logging.Level.OFF, org.apache.logging.log4j.Level.OFF);\n    mapJulToLog4j(java.util.logging.Level.FINEST, LevelTranslator.FINEST);\n    mapJulToLog4j(java.util.logging.Level.FINER, org.apache.logging.log4j.Level.TRACE);\n    mapJulToLog4j(java.util.logging.Level.FINE, org.apache.logging.log4j.Level.DEBUG);\n    mapJulToLog4j(java.util.logging.Level.CONFIG, LevelTranslator.CONFIG);\n    mapJulToLog4j(java.util.logging.Level.INFO, org.apache.logging.log4j.Level.INFO);\n    mapJulToLog4j(java.util.logging.Level.WARNING, org.apache.logging.log4j.Level.WARN);\n    mapJulToLog4j(java.util.logging.Level.SEVERE, org.apache.logging.log4j.Level.ERROR);\n    mapJulToLog4j(java.util.logging.Level.ALL, org.apache.logging.log4j.Level.ALL);\n    mapLog4jToJul(org.apache.logging.log4j.Level.OFF, java.util.logging.Level.OFF);\n    mapLog4jToJul(LevelTranslator.FINEST, java.util.logging.Level.FINEST);\n    mapLog4jToJul(org.apache.logging.log4j.Level.TRACE, java.util.logging.Level.FINER);\n    mapLog4jToJul(org.apache.logging.log4j.Level.DEBUG, java.util.logging.Level.FINE);\n    mapLog4jToJul(LevelTranslator.CONFIG, java.util.logging.Level.CONFIG);\n    mapLog4jToJul(org.apache.logging.log4j.Level.INFO, java.util.logging.Level.INFO);\n    mapLog4jToJul(org.apache.logging.log4j.Level.WARN, java.util.logging.Level.WARNING);\n    mapLog4jToJul(org.apache.logging.log4j.Level.ERROR, java.util.logging.Level.SEVERE);\n    mapLog4jToJul(org.apache.logging.log4j.Level.FATAL, java.util.logging.Level.SEVERE);\n    mapLog4jToJul(org.apache.logging.log4j.Level.ALL, java.util.logging.Level.ALL);\n}",
            "src_parent_type": "Block",
            "src_type": "Invocation"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "Invocation",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Constructor",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Invocation",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "mapLog4jToJul(org.apache.logging.log4j.Level.OFF, java.util.logging.Level.OFF)",
            "dst_parent": "{\n    mapJulToLog4j(java.util.logging.Level.ALL, org.apache.logging.log4j.Level.ALL);\n    mapJulToLog4j(java.util.logging.Level.FINEST, LevelTranslator.FINEST);\n    mapJulToLog4j(java.util.logging.Level.FINER, org.apache.logging.log4j.Level.TRACE);\n    mapJulToLog4j(java.util.logging.Level.FINE, org.apache.logging.log4j.Level.DEBUG);\n    mapJulToLog4j(java.util.logging.Level.CONFIG, LevelTranslator.CONFIG);\n    mapJulToLog4j(java.util.logging.Level.INFO, org.apache.logging.log4j.Level.INFO);\n    mapJulToLog4j(java.util.logging.Level.WARNING, org.apache.logging.log4j.Level.WARN);\n    mapJulToLog4j(java.util.logging.Level.SEVERE, org.apache.logging.log4j.Level.ERROR);\n    mapJulToLog4j(java.util.logging.Level.OFF, org.apache.logging.log4j.Level.OFF);\n    mapLog4jToJul(org.apache.logging.log4j.Level.ALL, java.util.logging.Level.ALL);\n    mapLog4jToJul(LevelTranslator.FINEST, java.util.logging.Level.FINEST);\n    mapLog4jToJul(org.apache.logging.log4j.Level.TRACE, java.util.logging.Level.FINER);\n    mapLog4jToJul(org.apache.logging.log4j.Level.DEBUG, java.util.logging.Level.FINE);\n    mapLog4jToJul(LevelTranslator.CONFIG, java.util.logging.Level.CONFIG);\n    mapLog4jToJul(org.apache.logging.log4j.Level.INFO, java.util.logging.Level.INFO);\n    mapLog4jToJul(org.apache.logging.log4j.Level.WARN, java.util.logging.Level.WARNING);\n    mapLog4jToJul(org.apache.logging.log4j.Level.ERROR, java.util.logging.Level.SEVERE);\n    mapLog4jToJul(org.apache.logging.log4j.Level.FATAL, java.util.logging.Level.SEVERE);\n    mapLog4jToJul(org.apache.logging.log4j.Level.OFF, java.util.logging.Level.OFF);\n    sortedJulLevels.addAll(julToLog4j.keySet());\n    java.util.Collections.sort(sortedJulLevels, new org.apache.logging.log4j.jul.DefaultLevelConverter.JulLevelComparator());\n}",
            "dst_parent_type": "Block",
            "dst_type": "Invocation",
            "operator": "MOV",
            "src": "mapLog4jToJul(org.apache.logging.log4j.Level.OFF, java.util.logging.Level.OFF)",
            "src_parent": "{\n    mapJulToLog4j(java.util.logging.Level.OFF, org.apache.logging.log4j.Level.OFF);\n    mapJulToLog4j(java.util.logging.Level.FINEST, LevelTranslator.FINEST);\n    mapJulToLog4j(java.util.logging.Level.FINER, org.apache.logging.log4j.Level.TRACE);\n    mapJulToLog4j(java.util.logging.Level.FINE, org.apache.logging.log4j.Level.DEBUG);\n    mapJulToLog4j(java.util.logging.Level.CONFIG, LevelTranslator.CONFIG);\n    mapJulToLog4j(java.util.logging.Level.INFO, org.apache.logging.log4j.Level.INFO);\n    mapJulToLog4j(java.util.logging.Level.WARNING, org.apache.logging.log4j.Level.WARN);\n    mapJulToLog4j(java.util.logging.Level.SEVERE, org.apache.logging.log4j.Level.ERROR);\n    mapJulToLog4j(java.util.logging.Level.ALL, org.apache.logging.log4j.Level.ALL);\n    mapLog4jToJul(org.apache.logging.log4j.Level.OFF, java.util.logging.Level.OFF);\n    mapLog4jToJul(LevelTranslator.FINEST, java.util.logging.Level.FINEST);\n    mapLog4jToJul(org.apache.logging.log4j.Level.TRACE, java.util.logging.Level.FINER);\n    mapLog4jToJul(org.apache.logging.log4j.Level.DEBUG, java.util.logging.Level.FINE);\n    mapLog4jToJul(LevelTranslator.CONFIG, java.util.logging.Level.CONFIG);\n    mapLog4jToJul(org.apache.logging.log4j.Level.INFO, java.util.logging.Level.INFO);\n    mapLog4jToJul(org.apache.logging.log4j.Level.WARN, java.util.logging.Level.WARNING);\n    mapLog4jToJul(org.apache.logging.log4j.Level.ERROR, java.util.logging.Level.SEVERE);\n    mapLog4jToJul(org.apache.logging.log4j.Level.FATAL, java.util.logging.Level.SEVERE);\n    mapLog4jToJul(org.apache.logging.log4j.Level.ALL, java.util.logging.Level.ALL);\n}",
            "src_parent_type": "Block",
            "src_type": "Invocation"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "Invocation",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Constructor",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Invocation",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "mapLog4jToJul(org.apache.logging.log4j.Level.ALL, java.util.logging.Level.ALL)",
            "dst_parent": "{\n    mapJulToLog4j(java.util.logging.Level.ALL, org.apache.logging.log4j.Level.ALL);\n    mapJulToLog4j(java.util.logging.Level.FINEST, LevelTranslator.FINEST);\n    mapJulToLog4j(java.util.logging.Level.FINER, org.apache.logging.log4j.Level.TRACE);\n    mapJulToLog4j(java.util.logging.Level.FINE, org.apache.logging.log4j.Level.DEBUG);\n    mapJulToLog4j(java.util.logging.Level.CONFIG, LevelTranslator.CONFIG);\n    mapJulToLog4j(java.util.logging.Level.INFO, org.apache.logging.log4j.Level.INFO);\n    mapJulToLog4j(java.util.logging.Level.WARNING, org.apache.logging.log4j.Level.WARN);\n    mapJulToLog4j(java.util.logging.Level.SEVERE, org.apache.logging.log4j.Level.ERROR);\n    mapJulToLog4j(java.util.logging.Level.OFF, org.apache.logging.log4j.Level.OFF);\n    mapLog4jToJul(org.apache.logging.log4j.Level.ALL, java.util.logging.Level.ALL);\n    mapLog4jToJul(LevelTranslator.FINEST, java.util.logging.Level.FINEST);\n    mapLog4jToJul(org.apache.logging.log4j.Level.TRACE, java.util.logging.Level.FINER);\n    mapLog4jToJul(org.apache.logging.log4j.Level.DEBUG, java.util.logging.Level.FINE);\n    mapLog4jToJul(LevelTranslator.CONFIG, java.util.logging.Level.CONFIG);\n    mapLog4jToJul(org.apache.logging.log4j.Level.INFO, java.util.logging.Level.INFO);\n    mapLog4jToJul(org.apache.logging.log4j.Level.WARN, java.util.logging.Level.WARNING);\n    mapLog4jToJul(org.apache.logging.log4j.Level.ERROR, java.util.logging.Level.SEVERE);\n    mapLog4jToJul(org.apache.logging.log4j.Level.FATAL, java.util.logging.Level.SEVERE);\n    mapLog4jToJul(org.apache.logging.log4j.Level.OFF, java.util.logging.Level.OFF);\n    sortedJulLevels.addAll(julToLog4j.keySet());\n    java.util.Collections.sort(sortedJulLevels, new org.apache.logging.log4j.jul.DefaultLevelConverter.JulLevelComparator());\n}",
            "dst_parent_type": "Block",
            "dst_type": "Invocation",
            "operator": "MOV",
            "src": "mapLog4jToJul(org.apache.logging.log4j.Level.ALL, java.util.logging.Level.ALL)",
            "src_parent": "{\n    mapJulToLog4j(java.util.logging.Level.OFF, org.apache.logging.log4j.Level.OFF);\n    mapJulToLog4j(java.util.logging.Level.FINEST, LevelTranslator.FINEST);\n    mapJulToLog4j(java.util.logging.Level.FINER, org.apache.logging.log4j.Level.TRACE);\n    mapJulToLog4j(java.util.logging.Level.FINE, org.apache.logging.log4j.Level.DEBUG);\n    mapJulToLog4j(java.util.logging.Level.CONFIG, LevelTranslator.CONFIG);\n    mapJulToLog4j(java.util.logging.Level.INFO, org.apache.logging.log4j.Level.INFO);\n    mapJulToLog4j(java.util.logging.Level.WARNING, org.apache.logging.log4j.Level.WARN);\n    mapJulToLog4j(java.util.logging.Level.SEVERE, org.apache.logging.log4j.Level.ERROR);\n    mapJulToLog4j(java.util.logging.Level.ALL, org.apache.logging.log4j.Level.ALL);\n    mapLog4jToJul(org.apache.logging.log4j.Level.OFF, java.util.logging.Level.OFF);\n    mapLog4jToJul(LevelTranslator.FINEST, java.util.logging.Level.FINEST);\n    mapLog4jToJul(org.apache.logging.log4j.Level.TRACE, java.util.logging.Level.FINER);\n    mapLog4jToJul(org.apache.logging.log4j.Level.DEBUG, java.util.logging.Level.FINE);\n    mapLog4jToJul(LevelTranslator.CONFIG, java.util.logging.Level.CONFIG);\n    mapLog4jToJul(org.apache.logging.log4j.Level.INFO, java.util.logging.Level.INFO);\n    mapLog4jToJul(org.apache.logging.log4j.Level.WARN, java.util.logging.Level.WARNING);\n    mapLog4jToJul(org.apache.logging.log4j.Level.ERROR, java.util.logging.Level.SEVERE);\n    mapLog4jToJul(org.apache.logging.log4j.Level.FATAL, java.util.logging.Level.SEVERE);\n    mapLog4jToJul(org.apache.logging.log4j.Level.ALL, java.util.logging.Level.ALL);\n}",
            "src_parent_type": "Block",
            "src_type": "Invocation"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Return",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "julToLog4j.get(javaLevel)",
            "dst_parent": "final org.apache.logging.log4j.Level level = julToLog4j.get(javaLevel)",
            "dst_parent_type": "LocalVariable",
            "dst_type": "Invocation",
            "operator": "MOV",
            "src": "julToLog4j.get(javaLevel)",
            "src_parent": "return julToLog4j.get(javaLevel)",
            "src_parent_type": "Return",
            "src_type": "Invocation"
          }
        }
      ],
      "file_name": "DefaultLevelConverter"
    }
  ],
  "id": "logging-log4j2_a96b455c"
}