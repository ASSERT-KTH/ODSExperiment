{
  "files": [
    {
      "features": [
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "While",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "if ((current == org.apache.flink.runtime.jobgraph.JobStatus.RUNNING) || (current == org.apache.flink.runtime.jobgraph.JobStatus.CREATED)) {\n    if (transitionState(current, JobStatus.CANCELLING)) {\n        for (org.apache.flink.runtime.executiongraph.ExecutionJobVertex ejv : verticesInCreationOrder) {\n            ejv.cancel();\n        }\n        return;\n    }\n} else {\n    return;\n}",
            "src_parent": "{\n    org.apache.flink.runtime.jobgraph.JobStatus current = state;\n    if ((current == org.apache.flink.runtime.jobgraph.JobStatus.RUNNING) || (current == org.apache.flink.runtime.jobgraph.JobStatus.CREATED)) {\n        if (transitionState(current, JobStatus.CANCELLING)) {\n            for (org.apache.flink.runtime.executiongraph.ExecutionJobVertex ejv : verticesInCreationOrder) {\n                ejv.cancel();\n            }\n            return;\n        }\n    } else {\n        return;\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "If"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "ForEach",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Synchronized",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "state",
            "src_parent": "state != org.apache.flink.runtime.jobgraph.JobStatus.RESTARTING",
            "src_parent_type": "BinaryOperator",
            "src_type": "FieldRead"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "While",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "if ((current == org.apache.flink.runtime.jobgraph.JobStatus.RUNNING) || (current == org.apache.flink.runtime.jobgraph.JobStatus.CREATED)) {\n    if (transitionState(current, JobStatus.CANCELLING)) {\n        for (org.apache.flink.runtime.executiongraph.ExecutionJobVertex ejv : verticesInCreationOrder) {\n            ejv.cancel();\n        }\n        return;\n    }\n} else if (current == org.apache.flink.runtime.jobgraph.JobStatus.FAILING) {\n    if (transitionState(current, JobStatus.CANCELLING)) {\n        return;\n    }\n} else if (current == org.apache.flink.runtime.jobgraph.JobStatus.RESTARTING) {\n    synchronized(progressLock) {\n        if (transitionState(current, JobStatus.CANCELED)) {\n            postRunCleanup();\n            progressLock.notifyAll();\n            org.apache.flink.runtime.executiongraph.ExecutionGraph.LOG.info(\"Canceled during restart.\");\n            return;\n        }\n    }\n} else {\n    return;\n}",
            "src_parent": "{\n    org.apache.flink.runtime.jobgraph.JobStatus current = state;\n    if ((current == org.apache.flink.runtime.jobgraph.JobStatus.RUNNING) || (current == org.apache.flink.runtime.jobgraph.JobStatus.CREATED)) {\n        if (transitionState(current, JobStatus.CANCELLING)) {\n            for (org.apache.flink.runtime.executiongraph.ExecutionJobVertex ejv : verticesInCreationOrder) {\n                ejv.cancel();\n            }\n            return;\n        }\n    } else if (current == org.apache.flink.runtime.jobgraph.JobStatus.FAILING) {\n        if (transitionState(current, JobStatus.CANCELLING)) {\n            return;\n        }\n    } else if (current == org.apache.flink.runtime.jobgraph.JobStatus.RESTARTING) {\n        synchronized(progressLock) {\n            if (transitionState(current, JobStatus.CANCELED)) {\n                postRunCleanup();\n                progressLock.notifyAll();\n                org.apache.flink.runtime.executiongraph.ExecutionGraph.LOG.info(\"Canceled during restart.\");\n                return;\n            }\n        }\n    } else {\n        return;\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "If"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Try",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "org.apache.flink.runtime.jobgraph.JobStatus current = state",
            "src_parent": "{\n    org.apache.flink.runtime.jobgraph.JobStatus current = state;\n    if (current == org.apache.flink.runtime.jobgraph.JobStatus.CANCELED) {\n        org.apache.flink.runtime.executiongraph.ExecutionGraph.LOG.info(\"Canceled job during restart. Aborting restart.\");\n        return;\n    } else if (current != org.apache.flink.runtime.jobgraph.JobStatus.RESTARTING) {\n        throw new java.lang.IllegalStateException(\"Can only restart job from state restarting.\");\n    }\n    if (scheduler == null) {\n        throw new java.lang.IllegalStateException(\"The execution graph has not been scheduled before - scheduler is null.\");\n    }\n    this.currentExecutions.clear();\n    for (org.apache.flink.runtime.executiongraph.ExecutionJobVertex jv : this.verticesInCreationOrder) {\n        jv.resetForNewExecution();\n    }\n    for (int i = 0; i < stateTimestamps.length; i++) {\n        stateTimestamps[i] = 0;\n    }\n    numFinishedJobVertices = 0;\n    transitionState(JobStatus.RESTARTING, JobStatus.CREATED);\n    if (checkpointCoordinator != null) {\n        checkpointCoordinator.restoreLatestCheckpointedState(getAllVertices(), false, false);\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "LocalVariable"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Try",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "if (current == org.apache.flink.runtime.jobgraph.JobStatus.CANCELED) {\n    org.apache.flink.runtime.executiongraph.ExecutionGraph.LOG.info(\"Canceled job during restart. Aborting restart.\");\n    return;\n} else if (current != org.apache.flink.runtime.jobgraph.JobStatus.RESTARTING) {\n    throw new java.lang.IllegalStateException(\"Can only restart job from state restarting.\");\n}",
            "src_parent": "{\n    org.apache.flink.runtime.jobgraph.JobStatus current = state;\n    if (current == org.apache.flink.runtime.jobgraph.JobStatus.CANCELED) {\n        org.apache.flink.runtime.executiongraph.ExecutionGraph.LOG.info(\"Canceled job during restart. Aborting restart.\");\n        return;\n    } else if (current != org.apache.flink.runtime.jobgraph.JobStatus.RESTARTING) {\n        throw new java.lang.IllegalStateException(\"Can only restart job from state restarting.\");\n    }\n    if (scheduler == null) {\n        throw new java.lang.IllegalStateException(\"The execution graph has not been scheduled before - scheduler is null.\");\n    }\n    this.currentExecutions.clear();\n    for (org.apache.flink.runtime.executiongraph.ExecutionJobVertex jv : this.verticesInCreationOrder) {\n        jv.resetForNewExecution();\n    }\n    for (int i = 0; i < stateTimestamps.length; i++) {\n        stateTimestamps[i] = 0;\n    }\n    numFinishedJobVertices = 0;\n    transitionState(JobStatus.RESTARTING, JobStatus.CREATED);\n    if (checkpointCoordinator != null) {\n        checkpointCoordinator.restoreLatestCheckpointedState(getAllVertices(), false, false);\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "If"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "ForEach",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Synchronized",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "current",
            "src_parent": "current != org.apache.flink.runtime.jobgraph.JobStatus.RESTARTING",
            "src_parent_type": "BinaryOperator",
            "src_type": "VariableRead"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "While",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "(current == org.apache.flink.runtime.jobgraph.JobStatus.RUNNING) || (current == org.apache.flink.runtime.jobgraph.JobStatus.CREATED)",
            "dst_parent": "if ((current == org.apache.flink.runtime.jobgraph.JobStatus.RUNNING) || (current == org.apache.flink.runtime.jobgraph.JobStatus.CREATED)) {\n    if (transitionState(current, JobStatus.CANCELLING)) {\n        for (org.apache.flink.runtime.executiongraph.ExecutionJobVertex ejv : verticesInCreationOrder) {\n            ejv.cancel();\n        }\n        return;\n    }\n} else if (current == org.apache.flink.runtime.jobgraph.JobStatus.FAILING) {\n    if (transitionState(current, JobStatus.CANCELLING)) {\n        return;\n    }\n} else if (current == org.apache.flink.runtime.jobgraph.JobStatus.RESTARTING) {\n    synchronized(progressLock) {\n        if (transitionState(current, JobStatus.CANCELED)) {\n            postRunCleanup();\n            progressLock.notifyAll();\n            org.apache.flink.runtime.executiongraph.ExecutionGraph.LOG.info(\"Canceled during restart.\");\n            return;\n        }\n    }\n} else {\n    return;\n}",
            "dst_parent_type": "If",
            "dst_type": "BinaryOperator",
            "operator": "MOV",
            "src": "(current == org.apache.flink.runtime.jobgraph.JobStatus.RUNNING) || (current == org.apache.flink.runtime.jobgraph.JobStatus.CREATED)",
            "src_parent": "if ((current == org.apache.flink.runtime.jobgraph.JobStatus.RUNNING) || (current == org.apache.flink.runtime.jobgraph.JobStatus.CREATED)) {\n    if (transitionState(current, JobStatus.CANCELLING)) {\n        for (org.apache.flink.runtime.executiongraph.ExecutionJobVertex ejv : verticesInCreationOrder) {\n            ejv.cancel();\n        }\n        return;\n    }\n} else {\n    return;\n}",
            "src_parent_type": "If",
            "src_type": "BinaryOperator"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "While",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "{\n    if (transitionState(current, JobStatus.CANCELLING)) {\n        for (org.apache.flink.runtime.executiongraph.ExecutionJobVertex ejv : verticesInCreationOrder) {\n            ejv.cancel();\n        }\n        return;\n    }\n}",
            "dst_parent": "if ((current == org.apache.flink.runtime.jobgraph.JobStatus.RUNNING) || (current == org.apache.flink.runtime.jobgraph.JobStatus.CREATED)) {\n    if (transitionState(current, JobStatus.CANCELLING)) {\n        for (org.apache.flink.runtime.executiongraph.ExecutionJobVertex ejv : verticesInCreationOrder) {\n            ejv.cancel();\n        }\n        return;\n    }\n} else if (current == org.apache.flink.runtime.jobgraph.JobStatus.FAILING) {\n    if (transitionState(current, JobStatus.CANCELLING)) {\n        return;\n    }\n} else if (current == org.apache.flink.runtime.jobgraph.JobStatus.RESTARTING) {\n    synchronized(progressLock) {\n        if (transitionState(current, JobStatus.CANCELED)) {\n            postRunCleanup();\n            progressLock.notifyAll();\n            org.apache.flink.runtime.executiongraph.ExecutionGraph.LOG.info(\"Canceled during restart.\");\n            return;\n        }\n    }\n} else {\n    return;\n}",
            "dst_parent_type": "If",
            "dst_type": "Block",
            "operator": "MOV",
            "src": "{\n    if (transitionState(current, JobStatus.CANCELLING)) {\n        for (org.apache.flink.runtime.executiongraph.ExecutionJobVertex ejv : verticesInCreationOrder) {\n            ejv.cancel();\n        }\n        return;\n    }\n}",
            "src_parent": "if ((current == org.apache.flink.runtime.jobgraph.JobStatus.RUNNING) || (current == org.apache.flink.runtime.jobgraph.JobStatus.CREATED)) {\n    if (transitionState(current, JobStatus.CANCELLING)) {\n        for (org.apache.flink.runtime.executiongraph.ExecutionJobVertex ejv : verticesInCreationOrder) {\n            ejv.cancel();\n        }\n        return;\n    }\n} else {\n    return;\n}",
            "src_parent_type": "If",
            "src_type": "Block"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Try",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Synchronized",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "if (current != org.apache.flink.runtime.jobgraph.JobStatus.RESTARTING) {\n    throw new java.lang.IllegalStateException(\"Can only restart job from state restarting.\");\n}",
            "dst_parent": "{\n    if (current != org.apache.flink.runtime.jobgraph.JobStatus.RESTARTING) {\n        throw new java.lang.IllegalStateException(\"Can only restart job from state restarting.\");\n    }\n}",
            "dst_parent_type": "Block",
            "dst_type": "If",
            "operator": "MOV",
            "src": "if (state != org.apache.flink.runtime.jobgraph.JobStatus.RESTARTING) {\n    throw new java.lang.IllegalStateException(\"Can only restart job from state restarting.\");\n}",
            "src_parent": "{\n    if (state != org.apache.flink.runtime.jobgraph.JobStatus.RESTARTING) {\n        throw new java.lang.IllegalStateException(\"Can only restart job from state restarting.\");\n    }\n    if (scheduler == null) {\n        throw new java.lang.IllegalStateException(\"The execution graph has not been scheduled before - scheduler is null.\");\n    }\n    this.currentExecutions.clear();\n    for (org.apache.flink.runtime.executiongraph.ExecutionJobVertex jv : this.verticesInCreationOrder) {\n        jv.resetForNewExecution();\n    }\n    for (int i = 0; i < stateTimestamps.length; i++) {\n        stateTimestamps[i] = 0;\n    }\n    numFinishedJobVertices = 0;\n    transitionState(JobStatus.RESTARTING, JobStatus.CREATED);\n    if (checkpointCoordinator != null) {\n        checkpointCoordinator.restoreLatestCheckpointedState(getAllVertices(), false, false);\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "If"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "While",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "{\n    return;\n}",
            "dst_parent": "if (current == org.apache.flink.runtime.jobgraph.JobStatus.RESTARTING) {\n    synchronized(progressLock) {\n        if (transitionState(current, JobStatus.CANCELED)) {\n            postRunCleanup();\n            progressLock.notifyAll();\n            org.apache.flink.runtime.executiongraph.ExecutionGraph.LOG.info(\"Canceled during restart.\");\n            return;\n        }\n    }\n} else {\n    return;\n}",
            "dst_parent_type": "If",
            "dst_type": "Block",
            "operator": "MOV",
            "src": "{\n    return;\n}",
            "src_parent": "if ((current == org.apache.flink.runtime.jobgraph.JobStatus.RUNNING) || (current == org.apache.flink.runtime.jobgraph.JobStatus.CREATED)) {\n    if (transitionState(current, JobStatus.CANCELLING)) {\n        for (org.apache.flink.runtime.executiongraph.ExecutionJobVertex ejv : verticesInCreationOrder) {\n            ejv.cancel();\n        }\n        return;\n    }\n} else {\n    return;\n}",
            "src_parent_type": "If",
            "src_type": "Block"
          }
        }
      ],
      "file_name": "ExecutionGraph"
    }
  ],
  "id": "flink_5a86a0a1"
}