{
  "files": [
    {
      "features": [
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Method",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "read()",
            "src_parent": "{\n    read();\n    return baseState;\n}",
            "src_parent_type": "Block",
            "src_type": "Invocation"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "java.util.Map<java.lang.String, org.apache.jackrabbit.oak.plugins.memory.MemoryNodeBuilder.MutableNodeState> nodes = writeState.nodes",
            "src_parent": "{\n    java.util.Map<java.lang.String, org.apache.jackrabbit.oak.plugins.memory.MemoryNodeBuilder.MutableNodeState> nodes = writeState.nodes;\n    for (java.util.Map.Entry<java.lang.String, org.apache.jackrabbit.oak.plugins.memory.MemoryNodeBuilder.MutableNodeState> n : writeState.nodes.entrySet()) {\n        if (n.getValue() == null) {\n            return true;\n        }\n        if ((baseState == null) || (!baseState.hasChildNode(n.getKey()))) {\n            return true;\n        }\n    }\n    for (java.util.Map.Entry<java.lang.String, org.apache.jackrabbit.oak.api.PropertyState> p : writeState.properties.entrySet()) {\n        org.apache.jackrabbit.oak.api.PropertyState pState = p.getValue();\n        if (pState == null) {\n            return true;\n        }\n        if ((baseState == null) || (!pState.equals(baseState.getProperty(p.getKey())))) {\n            return true;\n        }\n    }\n    return false;\n}",
            "src_parent_type": "Block",
            "src_type": "LocalVariable"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "org.apache.jackrabbit.oak.spi.state.NodeState baseState = getBaseState()",
            "dst_parent": "{\n    org.apache.jackrabbit.oak.spi.state.NodeState baseState = getBaseState();\n    if (writeState == null) {\n        return false;\n    } else {\n        java.util.Map<java.lang.String, org.apache.jackrabbit.oak.plugins.memory.MemoryNodeBuilder.MutableNodeState> nodes = writeState.nodes;\n        for (java.util.Map.Entry<java.lang.String, org.apache.jackrabbit.oak.plugins.memory.MemoryNodeBuilder.MutableNodeState> n : writeState.nodes.entrySet()) {\n            if (n.getValue() == null) {\n                return true;\n            }\n            if ((baseState == null) || (!baseState.hasChildNode(n.getKey()))) {\n                return true;\n            }\n        }\n        for (java.util.Map.Entry<java.lang.String, org.apache.jackrabbit.oak.api.PropertyState> p : writeState.properties.entrySet()) {\n            org.apache.jackrabbit.oak.api.PropertyState pState = p.getValue();\n            if (pState == null) {\n                return true;\n            }\n            if ((baseState == null) || (!pState.equals(baseState.getProperty(p.getKey())))) {\n                return true;\n            }\n        }\n        return false;\n    }\n}",
            "dst_parent_type": "Block",
            "dst_type": "LocalVariable",
            "operator": "MOV",
            "src": "org.apache.jackrabbit.oak.spi.state.NodeState baseState = getBaseState()",
            "src_parent": "{\n    org.apache.jackrabbit.oak.spi.state.NodeState baseState = getBaseState();\n    for (java.util.Map.Entry<java.lang.String, org.apache.jackrabbit.oak.plugins.memory.MemoryNodeBuilder.MutableNodeState> n : writeState.nodes.entrySet()) {\n        if (n.getValue() == null) {\n            return true;\n        }\n        if ((baseState == null) || (!baseState.hasChildNode(n.getKey()))) {\n            return true;\n        }\n    }\n    for (java.util.Map.Entry<java.lang.String, org.apache.jackrabbit.oak.api.PropertyState> p : writeState.properties.entrySet()) {\n        org.apache.jackrabbit.oak.api.PropertyState pState = p.getValue();\n        if (pState == null) {\n            return true;\n        }\n        if ((baseState == null) || (!pState.equals(baseState.getProperty(p.getKey())))) {\n            return true;\n        }\n    }\n    return false;\n}",
            "src_parent_type": "Block",
            "src_type": "LocalVariable"
          }
        }
      ],
      "file_name": "MemoryNodeBuilder"
    }
  ],
  "id": "jackrabbit-oak_999097e1"
}