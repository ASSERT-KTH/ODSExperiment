{
  "files": [
    {
      "features": [
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "Return",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "Invocation",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "throw new org.apache.wicket.WicketRuntimeException(\"ByteArrayResource's data cannot be 'null'.\")",
            "src_parent": "{\n    throw new org.apache.wicket.WicketRuntimeException(\"ByteArrayResource's data cannot be 'null'.\");\n}",
            "src_parent_type": "Block",
            "src_type": "Throw"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "Return",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "Invocation",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "{\n    response.setContentLength(data.length);\n    if (response.dataNeedsToBeWritten(attributes)) {\n        if (filename != null) {\n            response.setFileName(filename);\n            response.setContentDisposition(ContentDisposition.ATTACHMENT);\n        } else {\n            response.setContentDisposition(ContentDisposition.INLINE);\n        }\n        response.setWriteCallback(new org.apache.wicket.request.resource.WriteCallback() {\n            @java.lang.Override\n            public void writeData(final org.apache.wicket.request.resource.Attributes attributes) {\n                attributes.getResponse().write(data);\n            }\n        });\n        configureResponse(response, attributes);\n    }\n}",
            "src_parent": "if (data == null) {\n    response.setError(HttpServletResponse.SC_NOT_FOUND);\n} else {\n    response.setContentLength(data.length);\n    if (response.dataNeedsToBeWritten(attributes)) {\n        if (filename != null) {\n            response.setFileName(filename);\n            response.setContentDisposition(ContentDisposition.ATTACHMENT);\n        } else {\n            response.setContentDisposition(ContentDisposition.INLINE);\n        }\n        response.setWriteCallback(new org.apache.wicket.request.resource.WriteCallback() {\n            @java.lang.Override\n            public void writeData(final org.apache.wicket.request.resource.Attributes attributes) {\n                attributes.getResponse().write(data);\n            }\n        });\n        configureResponse(response, attributes);\n    }\n}",
            "src_parent_type": "If",
            "src_type": "Block"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "Return",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "Invocation",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "response.setError(HttpServletResponse.SC_NOT_FOUND)",
            "src_parent": "{\n    response.setError(HttpServletResponse.SC_NOT_FOUND);\n}",
            "src_parent_type": "Block",
            "src_type": "Invocation"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "Return",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "Invocation",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Invocation",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "response.setContentLength(data.length)",
            "dst_parent": "{\n    response.setContentLength(data.length);\n    if (response.dataNeedsToBeWritten(attributes)) {\n        if (filename != null) {\n            response.setFileName(filename);\n            response.setContentDisposition(ContentDisposition.ATTACHMENT);\n        } else {\n            response.setContentDisposition(ContentDisposition.INLINE);\n        }\n        response.setWriteCallback(new org.apache.wicket.request.resource.WriteCallback() {\n            @java.lang.Override\n            public void writeData(final org.apache.wicket.request.resource.Attributes attributes) {\n                attributes.getResponse().write(data);\n            }\n        });\n        configureResponse(response, attributes);\n    }\n}",
            "dst_parent_type": "Block",
            "dst_type": "Invocation",
            "operator": "MOV",
            "src": "response.setContentLength(data.length)",
            "src_parent": "{\n    final org.apache.wicket.request.resource.ResourceResponse response = new org.apache.wicket.request.resource.ResourceResponse();\n    java.lang.String contentType = this.contentType;\n    if (contentType == null) {\n        if (filename != null) {\n            contentType = java.net.URLConnection.getFileNameMap().getContentTypeFor(filename);\n        }\n        if (contentType == null) {\n            contentType = \"application/octet-stream\";\n        }\n    }\n    response.setContentType(contentType);\n    response.setLastModified(lastModified);\n    final byte[] data = getData(attributes);\n    if (data == null) {\n        throw new org.apache.wicket.WicketRuntimeException(\"ByteArrayResource's data cannot be 'null'.\");\n    }\n    response.setContentLength(data.length);\n    if (response.dataNeedsToBeWritten(attributes)) {\n        if (filename != null) {\n            response.setFileName(filename);\n            response.setContentDisposition(ContentDisposition.ATTACHMENT);\n        } else {\n            response.setContentDisposition(ContentDisposition.INLINE);\n        }\n        response.setWriteCallback(new org.apache.wicket.request.resource.WriteCallback() {\n            @java.lang.Override\n            public void writeData(final org.apache.wicket.request.resource.Attributes attributes) {\n                attributes.getResponse().write(data);\n            }\n        });\n        configureResponse(response, attributes);\n    }\n    return response;\n}",
            "src_parent_type": "Block",
            "src_type": "Invocation"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Return",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "LocalVariable",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "if (response.dataNeedsToBeWritten(attributes)) {\n    if (filename != null) {\n        response.setFileName(filename);\n        response.setContentDisposition(ContentDisposition.ATTACHMENT);\n    } else {\n        response.setContentDisposition(ContentDisposition.INLINE);\n    }\n    response.setWriteCallback(new org.apache.wicket.request.resource.WriteCallback() {\n        @java.lang.Override\n        public void writeData(final org.apache.wicket.request.resource.Attributes attributes) {\n            attributes.getResponse().write(data);\n        }\n    });\n    configureResponse(response, attributes);\n}",
            "dst_parent": "{\n    response.setContentLength(data.length);\n    if (response.dataNeedsToBeWritten(attributes)) {\n        if (filename != null) {\n            response.setFileName(filename);\n            response.setContentDisposition(ContentDisposition.ATTACHMENT);\n        } else {\n            response.setContentDisposition(ContentDisposition.INLINE);\n        }\n        response.setWriteCallback(new org.apache.wicket.request.resource.WriteCallback() {\n            @java.lang.Override\n            public void writeData(final org.apache.wicket.request.resource.Attributes attributes) {\n                attributes.getResponse().write(data);\n            }\n        });\n        configureResponse(response, attributes);\n    }\n}",
            "dst_parent_type": "Block",
            "dst_type": "If",
            "operator": "MOV",
            "src": "if (response.dataNeedsToBeWritten(attributes)) {\n    if (filename != null) {\n        response.setFileName(filename);\n        response.setContentDisposition(ContentDisposition.ATTACHMENT);\n    } else {\n        response.setContentDisposition(ContentDisposition.INLINE);\n    }\n    response.setWriteCallback(new org.apache.wicket.request.resource.WriteCallback() {\n        @java.lang.Override\n        public void writeData(final org.apache.wicket.request.resource.Attributes attributes) {\n            attributes.getResponse().write(data);\n        }\n    });\n    configureResponse(response, attributes);\n}",
            "src_parent": "{\n    final org.apache.wicket.request.resource.ResourceResponse response = new org.apache.wicket.request.resource.ResourceResponse();\n    java.lang.String contentType = this.contentType;\n    if (contentType == null) {\n        if (filename != null) {\n            contentType = java.net.URLConnection.getFileNameMap().getContentTypeFor(filename);\n        }\n        if (contentType == null) {\n            contentType = \"application/octet-stream\";\n        }\n    }\n    response.setContentType(contentType);\n    response.setLastModified(lastModified);\n    final byte[] data = getData(attributes);\n    if (data == null) {\n        throw new org.apache.wicket.WicketRuntimeException(\"ByteArrayResource's data cannot be 'null'.\");\n    }\n    response.setContentLength(data.length);\n    if (response.dataNeedsToBeWritten(attributes)) {\n        if (filename != null) {\n            response.setFileName(filename);\n            response.setContentDisposition(ContentDisposition.ATTACHMENT);\n        } else {\n            response.setContentDisposition(ContentDisposition.INLINE);\n        }\n        response.setWriteCallback(new org.apache.wicket.request.resource.WriteCallback() {\n            @java.lang.Override\n            public void writeData(final org.apache.wicket.request.resource.Attributes attributes) {\n                attributes.getResponse().write(data);\n            }\n        });\n        configureResponse(response, attributes);\n    }\n    return response;\n}",
            "src_parent_type": "Block",
            "src_type": "If"
          }
        }
      ],
      "file_name": "ByteArrayResource"
    }
  ],
  "id": "wicket_50b52742"
}