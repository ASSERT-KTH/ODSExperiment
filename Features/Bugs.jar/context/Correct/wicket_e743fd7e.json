{
  "files": [
    {
      "features": [
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "LocalVariable",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "org.apache.wicket.model.IModel<java.lang.String> labelModel = findLabelContent(markupStream, openTag)",
            "dst_parent": "{\n    org.apache.wicket.model.IModel<java.lang.String> labelModel = findLabelContent(markupStream, openTag);\n    replaceComponentTagBody(markupStream, openTag, labelModel != null ? labelModel.getObject() : \"\");\n    if (labelModel != null) {\n        if (labeled instanceof org.apache.wicket.markup.html.form.FormComponent) {\n            org.apache.wicket.markup.html.form.FormComponent<?> fc = ((org.apache.wicket.markup.html.form.FormComponent<?>) (labeled));\n            fc.setLabel(labelModel);\n        } else {\n            labelModel.detach();\n        }\n    }\n}",
            "dst_parent_type": "Block",
            "dst_type": "LocalVariable",
            "operator": "UPD",
            "src": "boolean storeLabelText = false",
            "src_parent": "{\n    boolean storeLabelText = false;\n    java.lang.String labelText = null;\n    if (labeled instanceof org.apache.wicket.markup.html.form.ILabelProvider) {\n        org.apache.wicket.markup.html.form.ILabelProvider<java.lang.String> provider = ((org.apache.wicket.markup.html.form.ILabelProvider<java.lang.String>) (labeled));\n        if (provider.getLabel() != null) {\n            java.lang.String text = provider.getLabel().getObject();\n            if (!org.apache.wicket.util.string.Strings.isEmpty(text)) {\n                labelText = text;\n            }\n        }\n    }\n    if ((labelText == null) && (labeled instanceof org.apache.wicket.markup.html.form.FormComponent)) {\n        java.lang.String text = ((org.apache.wicket.markup.html.form.FormComponent<?>) (labeled)).getDefaultLabel(\"wicket:unknown\");\n        if ((!\"wicket:unknown\".equals(text)) && (!org.apache.wicket.util.string.Strings.isEmpty(text))) {\n            labelText = text;\n        }\n    }\n    if ((labelText == null) && (openTag.getAttribute(\"key\") != null)) {\n        java.lang.String text = labeled.getString(openTag.getAttribute(\"key\"));\n        if (!org.apache.wicket.util.string.Strings.isEmpty(text)) {\n            labelText = text;\n            storeLabelText = true;\n        }\n    }\n    if (labelText == null) {\n        java.lang.String text = new org.apache.wicket.markup.html.internal.ResponseBufferZone(org.apache.wicket.request.cycle.RequestCycle.get(), markupStream) {\n            @java.lang.Override\n            protected void executeInsideBufferedZone() {\n                org.apache.wicket.markup.html.form.AutoLabelTextResolver.TextLabel.super.onComponentTagBody(markupStream, openTag);\n            }\n        }.execute().toString();\n        if (!org.apache.wicket.util.string.Strings.isEmpty(text)) {\n            labelText = text;\n            storeLabelText = true;\n        }\n    }\n    replaceComponentTagBody(markupStream, openTag, labelText);\n    if (labeled instanceof org.apache.wicket.markup.html.form.FormComponent) {\n        org.apache.wicket.markup.html.form.FormComponent<?> fc = ((org.apache.wicket.markup.html.form.FormComponent<?>) (labeled));\n        fc.setLabel(org.apache.wicket.model.Model.of(labelText));\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "LocalVariable"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "LocalVariable",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "org.apache.wicket.model.IModel<java.lang.String>",
            "dst_parent": "org.apache.wicket.model.IModel<java.lang.String> labelModel = findLabelContent(markupStream, openTag)",
            "dst_parent_type": "LocalVariable",
            "dst_type": "TypeReference",
            "operator": "UPD",
            "src": "boolean",
            "src_parent": "boolean storeLabelText = false",
            "src_parent_type": "LocalVariable",
            "src_type": "TypeReference"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "LocalVariable",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "tag",
            "dst_parent": "tag.getAttribute(\"key\")",
            "dst_parent_type": "Invocation",
            "dst_type": "VariableRead",
            "operator": "UPD",
            "src": "openTag",
            "src_parent": "openTag.getAttribute(\"key\")",
            "src_parent_type": "Invocation",
            "src_type": "VariableRead"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "LocalVariable",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "resourceKey",
            "dst_parent": "labeled.getString(resourceKey)",
            "dst_parent_type": "Invocation",
            "dst_type": "VariableRead",
            "operator": "UPD",
            "src": "openTag",
            "src_parent": "openTag.getAttribute(\"key\")",
            "src_parent_type": "Invocation",
            "src_type": "VariableRead"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "LocalVariable",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "{\n    @java.lang.Override\n    protected void executeInsideBufferedZone() {\n        org.apache.wicket.markup.html.form.AutoLabelTextResolver.TextLabel.super.onComponentTagBody(markupStream, tag);\n    }\n}",
            "dst_parent": "new org.apache.wicket.markup.html.internal.ResponseBufferZone(org.apache.wicket.request.cycle.RequestCycle.get(), markupStream) {\n    @java.lang.Override\n    protected void executeInsideBufferedZone() {\n        org.apache.wicket.markup.html.form.AutoLabelTextResolver.TextLabel.super.onComponentTagBody(markupStream, tag);\n    }\n}",
            "dst_parent_type": "NewClass",
            "dst_type": "Class",
            "operator": "UPD",
            "src": "{\n    @java.lang.Override\n    protected void executeInsideBufferedZone() {\n        org.apache.wicket.markup.html.form.AutoLabelTextResolver.TextLabel.super.onComponentTagBody(markupStream, openTag);\n    }\n}",
            "src_parent": "new org.apache.wicket.markup.html.internal.ResponseBufferZone(org.apache.wicket.request.cycle.RequestCycle.get(), markupStream) {\n    @java.lang.Override\n    protected void executeInsideBufferedZone() {\n        org.apache.wicket.markup.html.form.AutoLabelTextResolver.TextLabel.super.onComponentTagBody(markupStream, openTag);\n    }\n}",
            "src_parent_type": "NewClass",
            "src_type": "Class"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Invocation",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "text",
            "dst_parent": "org.apache.wicket.model.Model.of(text)",
            "dst_parent_type": "Invocation",
            "dst_type": "VariableRead",
            "operator": "UPD",
            "src": "labelText",
            "src_parent": "org.apache.wicket.model.Model.of(labelText)",
            "src_parent_type": "Invocation",
            "src_type": "VariableRead"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Invocation",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "tag",
            "dst_parent": "org.apache.wicket.markup.html.form.AutoLabelTextResolver.TextLabel.super.onComponentTagBody(markupStream, tag)",
            "dst_parent_type": "Invocation",
            "dst_type": "VariableRead",
            "operator": "UPD",
            "src": "openTag",
            "src_parent": "org.apache.wicket.markup.html.form.AutoLabelTextResolver.TextLabel.super.onComponentTagBody(markupStream, openTag)",
            "src_parent_type": "Invocation",
            "src_type": "VariableRead"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "java.lang.String text = provider.getLabel().getObject()",
            "src_parent": "{\n    java.lang.String text = provider.getLabel().getObject();\n    if (!org.apache.wicket.util.string.Strings.isEmpty(text)) {\n        labelText = text;\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "LocalVariable"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "text",
            "src_parent": "org.apache.wicket.util.string.Strings.isEmpty(text)",
            "src_parent_type": "Invocation",
            "src_type": "VariableRead"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "labelText = text",
            "src_parent": "{\n    labelText = text;\n}",
            "src_parent_type": "Block",
            "src_type": "Assignment"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "LocalVariable",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "(labelText == null) && (labeled instanceof org.apache.wicket.markup.html.form.FormComponent)",
            "src_parent": "if ((labelText == null) && (labeled instanceof org.apache.wicket.markup.html.form.FormComponent)) {\n    java.lang.String text = ((org.apache.wicket.markup.html.form.FormComponent<?>) (labeled)).getDefaultLabel(\"wicket:unknown\");\n    if ((!\"wicket:unknown\".equals(text)) && (!org.apache.wicket.util.string.Strings.isEmpty(text))) {\n        labelText = text;\n    }\n}",
            "src_parent_type": "If",
            "src_type": "BinaryOperator"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "labelText = text",
            "src_parent": "{\n    labelText = text;\n}",
            "src_parent_type": "Block",
            "src_type": "Assignment"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "LocalVariable",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "openTag.getAttribute(\"key\")",
            "src_parent": "labeled.getString(openTag.getAttribute(\"key\"))",
            "src_parent_type": "Invocation",
            "src_type": "Invocation"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "labelText = text",
            "src_parent": "{\n    labelText = text;\n    storeLabelText = true;\n}",
            "src_parent_type": "Block",
            "src_type": "Assignment"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "storeLabelText = true",
            "src_parent": "{\n    labelText = text;\n    storeLabelText = true;\n}",
            "src_parent_type": "Block",
            "src_type": "Assignment"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "If",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "fc.setLabel(org.apache.wicket.model.Model.of(labelText))",
            "src_parent": "{\n    org.apache.wicket.markup.html.form.FormComponent<?> fc = ((org.apache.wicket.markup.html.form.FormComponent<?>) (labeled));\n    fc.setLabel(org.apache.wicket.model.Model.of(labelText));\n}",
            "src_parent_type": "Block",
            "src_type": "Invocation"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Method",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "@java.lang.Override\npublic void onComponentTagBody(final org.apache.wicket.markup.MarkupStream markupStream, final org.apache.wicket.markup.ComponentTag openTag) {\n    boolean storeLabelText = false;\n    java.lang.String labelText = null;\n    if (labeled instanceof org.apache.wicket.markup.html.form.ILabelProvider) {\n        org.apache.wicket.markup.html.form.ILabelProvider<java.lang.String> provider = ((org.apache.wicket.markup.html.form.ILabelProvider<java.lang.String>) (labeled));\n        if (provider.getLabel() != null) {\n            java.lang.String text = provider.getLabel().getObject();\n            if (!org.apache.wicket.util.string.Strings.isEmpty(text)) {\n                labelText = text;\n            }\n        }\n    }\n    if ((labelText == null) && (labeled instanceof org.apache.wicket.markup.html.form.FormComponent)) {\n        java.lang.String text = ((org.apache.wicket.markup.html.form.FormComponent<?>) (labeled)).getDefaultLabel(\"wicket:unknown\");\n        if ((!\"wicket:unknown\".equals(text)) && (!org.apache.wicket.util.string.Strings.isEmpty(text))) {\n            labelText = text;\n        }\n    }\n    if ((labelText == null) && (openTag.getAttribute(\"key\") != null)) {\n        java.lang.String text = labeled.getString(openTag.getAttribute(\"key\"));\n        if (!org.apache.wicket.util.string.Strings.isEmpty(text)) {\n            labelText = text;\n            storeLabelText = true;\n        }\n    }\n    if (labelText == null) {\n        java.lang.String text = new org.apache.wicket.markup.html.internal.ResponseBufferZone(org.apache.wicket.request.cycle.RequestCycle.get(), markupStream) {\n            @java.lang.Override\n            protected void executeInsideBufferedZone() {\n                org.apache.wicket.markup.html.form.AutoLabelTextResolver.TextLabel.super.onComponentTagBody(markupStream, openTag);\n            }\n        }.execute().toString();\n        if (!org.apache.wicket.util.string.Strings.isEmpty(text)) {\n            labelText = text;\n            storeLabelText = true;\n        }\n    }\n    replaceComponentTagBody(markupStream, openTag, labelText);\n    if (labeled instanceof org.apache.wicket.markup.html.form.FormComponent) {\n        org.apache.wicket.markup.html.form.FormComponent<?> fc = ((org.apache.wicket.markup.html.form.FormComponent<?>) (labeled));\n        fc.setLabel(org.apache.wicket.model.Model.of(labelText));\n    }\n}",
            "src_parent": "private static class TextLabel extends org.apache.wicket.markup.html.WebMarkupContainer {\n    private final org.apache.wicket.Component labeled;\n\n    public TextLabel(java.lang.String id, org.apache.wicket.Component labeled) {\n        super(id);\n        this.labeled = labeled;\n        setRenderBodyOnly(true);\n    }\n\n    @java.lang.Override\n    protected void onComponentTag(final org.apache.wicket.markup.ComponentTag tag) {\n        if (tag.isOpenClose()) {\n            tag.setType(XmlTag.TagType.OPEN);\n        }\n        super.onComponentTag(tag);\n    }\n\n    @java.lang.Override\n    public void onComponentTagBody(final org.apache.wicket.markup.MarkupStream markupStream, final org.apache.wicket.markup.ComponentTag openTag) {\n        boolean storeLabelText = false;\n        java.lang.String labelText = null;\n        if (labeled instanceof org.apache.wicket.markup.html.form.ILabelProvider) {\n            org.apache.wicket.markup.html.form.ILabelProvider<java.lang.String> provider = ((org.apache.wicket.markup.html.form.ILabelProvider<java.lang.String>) (labeled));\n            if (provider.getLabel() != null) {\n                java.lang.String text = provider.getLabel().getObject();\n                if (!org.apache.wicket.util.string.Strings.isEmpty(text)) {\n                    labelText = text;\n                }\n            }\n        }\n        if ((labelText == null) && (labeled instanceof org.apache.wicket.markup.html.form.FormComponent)) {\n            java.lang.String text = ((org.apache.wicket.markup.html.form.FormComponent<?>) (labeled)).getDefaultLabel(\"wicket:unknown\");\n            if ((!\"wicket:unknown\".equals(text)) && (!org.apache.wicket.util.string.Strings.isEmpty(text))) {\n                labelText = text;\n            }\n        }\n        if ((labelText == null) && (openTag.getAttribute(\"key\") != null)) {\n            java.lang.String text = labeled.getString(openTag.getAttribute(\"key\"));\n            if (!org.apache.wicket.util.string.Strings.isEmpty(text)) {\n                labelText = text;\n                storeLabelText = true;\n            }\n        }\n        if (labelText == null) {\n            java.lang.String text = new org.apache.wicket.markup.html.internal.ResponseBufferZone(org.apache.wicket.request.cycle.RequestCycle.get(), markupStream) {\n                @java.lang.Override\n                protected void executeInsideBufferedZone() {\n                    org.apache.wicket.markup.html.form.AutoLabelTextResolver.TextLabel.super.onComponentTagBody(markupStream, openTag);\n                }\n            }.execute().toString();\n            if (!org.apache.wicket.util.string.Strings.isEmpty(text)) {\n                labelText = text;\n                storeLabelText = true;\n            }\n        }\n        replaceComponentTagBody(markupStream, openTag, labelText);\n        if (labeled instanceof org.apache.wicket.markup.html.form.FormComponent) {\n            org.apache.wicket.markup.html.form.FormComponent<?> fc = ((org.apache.wicket.markup.html.form.FormComponent<?>) (labeled));\n            fc.setLabel(org.apache.wicket.model.Model.of(labelText));\n        }\n    }\n}",
            "src_parent_type": "Class",
            "src_type": "Method"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "true",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Class",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "@java.lang.Override\npublic void onComponentTagBody(final org.apache.wicket.markup.MarkupStream markupStream, final org.apache.wicket.markup.ComponentTag openTag) {\n    org.apache.wicket.model.IModel<java.lang.String> labelModel = findLabelContent(markupStream, openTag);\n    replaceComponentTagBody(markupStream, openTag, labelModel != null ? labelModel.getObject() : \"\");\n    if (labelModel != null) {\n        if (labeled instanceof org.apache.wicket.markup.html.form.FormComponent) {\n            org.apache.wicket.markup.html.form.FormComponent<?> fc = ((org.apache.wicket.markup.html.form.FormComponent<?>) (labeled));\n            fc.setLabel(labelModel);\n        } else {\n            labelModel.detach();\n        }\n    }\n}",
            "src_parent": "private static class TextLabel extends org.apache.wicket.markup.html.WebMarkupContainer {\n    private final org.apache.wicket.Component labeled;\n\n    public TextLabel(java.lang.String id, org.apache.wicket.Component labeled) {\n        super(id);\n        this.labeled = labeled;\n        setRenderBodyOnly(true);\n    }\n\n    @java.lang.Override\n    protected void onComponentTag(final org.apache.wicket.markup.ComponentTag tag) {\n        if (tag.isOpenClose()) {\n            tag.setType(XmlTag.TagType.OPEN);\n        }\n        super.onComponentTag(tag);\n    }\n\n    @java.lang.Override\n    public void onComponentTagBody(final org.apache.wicket.markup.MarkupStream markupStream, final org.apache.wicket.markup.ComponentTag openTag) {\n        org.apache.wicket.model.IModel<java.lang.String> labelModel = findLabelContent(markupStream, openTag);\n        replaceComponentTagBody(markupStream, openTag, labelModel != null ? labelModel.getObject() : \"\");\n        if (labelModel != null) {\n            if (labeled instanceof org.apache.wicket.markup.html.form.FormComponent) {\n                org.apache.wicket.markup.html.form.FormComponent<?> fc = ((org.apache.wicket.markup.html.form.FormComponent<?>) (labeled));\n                fc.setLabel(labelModel);\n            } else {\n                labelModel.detach();\n            }\n        }\n    }\n\n    private org.apache.wicket.model.IModel<java.lang.String> findLabelContent(final org.apache.wicket.markup.MarkupStream markupStream, final org.apache.wicket.markup.ComponentTag tag) {\n        if (labeled instanceof org.apache.wicket.markup.html.form.ILabelProvider) {\n            org.apache.wicket.markup.html.form.ILabelProvider<java.lang.String> provider = ((org.apache.wicket.markup.html.form.ILabelProvider<java.lang.String>) (labeled));\n            if (provider.getLabel() != null) {\n                if (!org.apache.wicket.util.string.Strings.isEmpty(provider.getLabel().getObject())) {\n                    return provider.getLabel();\n                }\n            }\n        }\n        if (labeled instanceof org.apache.wicket.markup.html.form.FormComponent) {\n            final org.apache.wicket.markup.html.form.FormComponent<?> formComponent = ((org.apache.wicket.markup.html.form.FormComponent<?>) (labeled));\n            java.lang.String text = formComponent.getDefaultLabel(\"wicket:unknown\");\n            if ((!\"wicket:unknown\".equals(text)) && (!org.apache.wicket.util.string.Strings.isEmpty(text))) {\n                return new org.apache.wicket.model.LoadableDetachableModel<java.lang.String>() {\n                    @java.lang.Override\n                    protected java.lang.String load() {\n                        return formComponent.getDefaultLabel(\"wicket:unknown\");\n                    }\n                };\n            }\n        }\n        {\n            java.lang.String resourceKey = tag.getAttribute(\"key\");\n            if (resourceKey != null) {\n                java.lang.String text = labeled.getString(resourceKey);\n                if (!org.apache.wicket.util.string.Strings.isEmpty(text)) {\n                    return new org.apache.wicket.model.StringResourceModel(resourceKey, labeled, null);\n                }\n            }\n        }\n        {\n            java.lang.String text = new org.apache.wicket.markup.html.internal.ResponseBufferZone(org.apache.wicket.request.cycle.RequestCycle.get(), markupStream) {\n                @java.lang.Override\n                protected void executeInsideBufferedZone() {\n                    org.apache.wicket.markup.html.form.AutoLabelTextResolver.TextLabel.super.onComponentTagBody(markupStream, tag);\n                }\n            }.execute().toString();\n            if (!org.apache.wicket.util.string.Strings.isEmpty(text)) {\n                return org.apache.wicket.model.Model.of(text);\n            }\n        }\n        return null;\n    }\n}",
            "src_parent_type": "Class",
            "src_type": "Method"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "true",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Class",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "private org.apache.wicket.model.IModel<java.lang.String> findLabelContent(final org.apache.wicket.markup.MarkupStream markupStream, final org.apache.wicket.markup.ComponentTag tag) {\n    if (labeled instanceof org.apache.wicket.markup.html.form.ILabelProvider) {\n        org.apache.wicket.markup.html.form.ILabelProvider<java.lang.String> provider = ((org.apache.wicket.markup.html.form.ILabelProvider<java.lang.String>) (labeled));\n        if (provider.getLabel() != null) {\n            if (!org.apache.wicket.util.string.Strings.isEmpty(provider.getLabel().getObject())) {\n                return provider.getLabel();\n            }\n        }\n    }\n    if (labeled instanceof org.apache.wicket.markup.html.form.FormComponent) {\n        final org.apache.wicket.markup.html.form.FormComponent<?> formComponent = ((org.apache.wicket.markup.html.form.FormComponent<?>) (labeled));\n        java.lang.String text = formComponent.getDefaultLabel(\"wicket:unknown\");\n        if ((!\"wicket:unknown\".equals(text)) && (!org.apache.wicket.util.string.Strings.isEmpty(text))) {\n            return new org.apache.wicket.model.LoadableDetachableModel<java.lang.String>() {\n                @java.lang.Override\n                protected java.lang.String load() {\n                    return formComponent.getDefaultLabel(\"wicket:unknown\");\n                }\n            };\n        }\n    }\n    {\n        java.lang.String resourceKey = tag.getAttribute(\"key\");\n        if (resourceKey != null) {\n            java.lang.String text = labeled.getString(resourceKey);\n            if (!org.apache.wicket.util.string.Strings.isEmpty(text)) {\n                return new org.apache.wicket.model.StringResourceModel(resourceKey, labeled, null);\n            }\n        }\n    }\n    {\n        java.lang.String text = new org.apache.wicket.markup.html.internal.ResponseBufferZone(org.apache.wicket.request.cycle.RequestCycle.get(), markupStream) {\n            @java.lang.Override\n            protected void executeInsideBufferedZone() {\n                org.apache.wicket.markup.html.form.AutoLabelTextResolver.TextLabel.super.onComponentTagBody(markupStream, tag);\n            }\n        }.execute().toString();\n        if (!org.apache.wicket.util.string.Strings.isEmpty(text)) {\n            return org.apache.wicket.model.Model.of(text);\n        }\n    }\n    return null;\n}",
            "src_parent": "private static class TextLabel extends org.apache.wicket.markup.html.WebMarkupContainer {\n    private final org.apache.wicket.Component labeled;\n\n    public TextLabel(java.lang.String id, org.apache.wicket.Component labeled) {\n        super(id);\n        this.labeled = labeled;\n        setRenderBodyOnly(true);\n    }\n\n    @java.lang.Override\n    protected void onComponentTag(final org.apache.wicket.markup.ComponentTag tag) {\n        if (tag.isOpenClose()) {\n            tag.setType(XmlTag.TagType.OPEN);\n        }\n        super.onComponentTag(tag);\n    }\n\n    @java.lang.Override\n    public void onComponentTagBody(final org.apache.wicket.markup.MarkupStream markupStream, final org.apache.wicket.markup.ComponentTag openTag) {\n        org.apache.wicket.model.IModel<java.lang.String> labelModel = findLabelContent(markupStream, openTag);\n        replaceComponentTagBody(markupStream, openTag, labelModel != null ? labelModel.getObject() : \"\");\n        if (labelModel != null) {\n            if (labeled instanceof org.apache.wicket.markup.html.form.FormComponent) {\n                org.apache.wicket.markup.html.form.FormComponent<?> fc = ((org.apache.wicket.markup.html.form.FormComponent<?>) (labeled));\n                fc.setLabel(labelModel);\n            } else {\n                labelModel.detach();\n            }\n        }\n    }\n\n    private org.apache.wicket.model.IModel<java.lang.String> findLabelContent(final org.apache.wicket.markup.MarkupStream markupStream, final org.apache.wicket.markup.ComponentTag tag) {\n        if (labeled instanceof org.apache.wicket.markup.html.form.ILabelProvider) {\n            org.apache.wicket.markup.html.form.ILabelProvider<java.lang.String> provider = ((org.apache.wicket.markup.html.form.ILabelProvider<java.lang.String>) (labeled));\n            if (provider.getLabel() != null) {\n                if (!org.apache.wicket.util.string.Strings.isEmpty(provider.getLabel().getObject())) {\n                    return provider.getLabel();\n                }\n            }\n        }\n        if (labeled instanceof org.apache.wicket.markup.html.form.FormComponent) {\n            final org.apache.wicket.markup.html.form.FormComponent<?> formComponent = ((org.apache.wicket.markup.html.form.FormComponent<?>) (labeled));\n            java.lang.String text = formComponent.getDefaultLabel(\"wicket:unknown\");\n            if ((!\"wicket:unknown\".equals(text)) && (!org.apache.wicket.util.string.Strings.isEmpty(text))) {\n                return new org.apache.wicket.model.LoadableDetachableModel<java.lang.String>() {\n                    @java.lang.Override\n                    protected java.lang.String load() {\n                        return formComponent.getDefaultLabel(\"wicket:unknown\");\n                    }\n                };\n            }\n        }\n        {\n            java.lang.String resourceKey = tag.getAttribute(\"key\");\n            if (resourceKey != null) {\n                java.lang.String text = labeled.getString(resourceKey);\n                if (!org.apache.wicket.util.string.Strings.isEmpty(text)) {\n                    return new org.apache.wicket.model.StringResourceModel(resourceKey, labeled, null);\n                }\n            }\n        }\n        {\n            java.lang.String text = new org.apache.wicket.markup.html.internal.ResponseBufferZone(org.apache.wicket.request.cycle.RequestCycle.get(), markupStream) {\n                @java.lang.Override\n                protected void executeInsideBufferedZone() {\n                    org.apache.wicket.markup.html.form.AutoLabelTextResolver.TextLabel.super.onComponentTagBody(markupStream, tag);\n                }\n            }.execute().toString();\n            if (!org.apache.wicket.util.string.Strings.isEmpty(text)) {\n                return org.apache.wicket.model.Model.of(text);\n            }\n        }\n        return null;\n    }\n}",
            "src_parent_type": "Class",
            "src_type": "Method"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "LocalVariable",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "final org.apache.wicket.markup.html.form.FormComponent<?> formComponent = ((org.apache.wicket.markup.html.form.FormComponent<?>) (labeled))",
            "src_parent": "{\n    final org.apache.wicket.markup.html.form.FormComponent<?> formComponent = ((org.apache.wicket.markup.html.form.FormComponent<?>) (labeled));\n    java.lang.String text = formComponent.getDefaultLabel(\"wicket:unknown\");\n    if ((!\"wicket:unknown\".equals(text)) && (!org.apache.wicket.util.string.Strings.isEmpty(text))) {\n        return new org.apache.wicket.model.LoadableDetachableModel<java.lang.String>() {\n            @java.lang.Override\n            protected java.lang.String load() {\n                return formComponent.getDefaultLabel(\"wicket:unknown\");\n            }\n        };\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "LocalVariable"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "If",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "return org.apache.wicket.model.Model.of(text)",
            "src_parent": "{\n    return org.apache.wicket.model.Model.of(text);\n}",
            "src_parent_type": "Block",
            "src_type": "Return"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "LocalVariable",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "formComponent",
            "src_parent": "formComponent.getDefaultLabel(\"wicket:unknown\")",
            "src_parent_type": "Invocation",
            "src_type": "VariableRead"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "return new org.apache.wicket.model.LoadableDetachableModel<java.lang.String>() {\n    @java.lang.Override\n    protected java.lang.String load() {\n        return formComponent.getDefaultLabel(\"wicket:unknown\");\n    }\n}",
            "src_parent": "{\n    return new org.apache.wicket.model.LoadableDetachableModel<java.lang.String>() {\n        @java.lang.Override\n        protected java.lang.String load() {\n            return formComponent.getDefaultLabel(\"wicket:unknown\");\n        }\n    };\n}",
            "src_parent_type": "Block",
            "src_type": "Return"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "return new org.apache.wicket.model.StringResourceModel(resourceKey, labeled, null)",
            "src_parent": "{\n    return new org.apache.wicket.model.StringResourceModel(resourceKey, labeled, null);\n}",
            "src_parent_type": "Block",
            "src_type": "Return"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "return provider.getLabel()",
            "src_parent": "{\n    return provider.getLabel();\n}",
            "src_parent_type": "Block",
            "src_type": "Return"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "TypeReference",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "void",
            "dst_parent": "@java.lang.Override\npublic void onComponentTagBody(final org.apache.wicket.markup.MarkupStream markupStream, final org.apache.wicket.markup.ComponentTag openTag) {\n    org.apache.wicket.model.IModel<java.lang.String> labelModel = findLabelContent(markupStream, openTag);\n    replaceComponentTagBody(markupStream, openTag, labelModel != null ? labelModel.getObject() : \"\");\n    if (labelModel != null) {\n        if (labeled instanceof org.apache.wicket.markup.html.form.FormComponent) {\n            org.apache.wicket.markup.html.form.FormComponent<?> fc = ((org.apache.wicket.markup.html.form.FormComponent<?>) (labeled));\n            fc.setLabel(labelModel);\n        } else {\n            labelModel.detach();\n        }\n    }\n}",
            "dst_parent_type": "Method",
            "dst_type": "TypeReference",
            "operator": "MOV",
            "src": "void",
            "src_parent": "@java.lang.Override\npublic void onComponentTagBody(final org.apache.wicket.markup.MarkupStream markupStream, final org.apache.wicket.markup.ComponentTag openTag) {\n    boolean storeLabelText = false;\n    java.lang.String labelText = null;\n    if (labeled instanceof org.apache.wicket.markup.html.form.ILabelProvider) {\n        org.apache.wicket.markup.html.form.ILabelProvider<java.lang.String> provider = ((org.apache.wicket.markup.html.form.ILabelProvider<java.lang.String>) (labeled));\n        if (provider.getLabel() != null) {\n            java.lang.String text = provider.getLabel().getObject();\n            if (!org.apache.wicket.util.string.Strings.isEmpty(text)) {\n                labelText = text;\n            }\n        }\n    }\n    if ((labelText == null) && (labeled instanceof org.apache.wicket.markup.html.form.FormComponent)) {\n        java.lang.String text = ((org.apache.wicket.markup.html.form.FormComponent<?>) (labeled)).getDefaultLabel(\"wicket:unknown\");\n        if ((!\"wicket:unknown\".equals(text)) && (!org.apache.wicket.util.string.Strings.isEmpty(text))) {\n            labelText = text;\n        }\n    }\n    if ((labelText == null) && (openTag.getAttribute(\"key\") != null)) {\n        java.lang.String text = labeled.getString(openTag.getAttribute(\"key\"));\n        if (!org.apache.wicket.util.string.Strings.isEmpty(text)) {\n            labelText = text;\n            storeLabelText = true;\n        }\n    }\n    if (labelText == null) {\n        java.lang.String text = new org.apache.wicket.markup.html.internal.ResponseBufferZone(org.apache.wicket.request.cycle.RequestCycle.get(), markupStream) {\n            @java.lang.Override\n            protected void executeInsideBufferedZone() {\n                org.apache.wicket.markup.html.form.AutoLabelTextResolver.TextLabel.super.onComponentTagBody(markupStream, openTag);\n            }\n        }.execute().toString();\n        if (!org.apache.wicket.util.string.Strings.isEmpty(text)) {\n            labelText = text;\n            storeLabelText = true;\n        }\n    }\n    replaceComponentTagBody(markupStream, openTag, labelText);\n    if (labeled instanceof org.apache.wicket.markup.html.form.FormComponent) {\n        org.apache.wicket.markup.html.form.FormComponent<?> fc = ((org.apache.wicket.markup.html.form.FormComponent<?>) (labeled));\n        fc.setLabel(org.apache.wicket.model.Model.of(labelText));\n    }\n}",
            "src_parent_type": "Method",
            "src_type": "TypeReference"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "VirtualElement",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "VE: Modifiers_Method",
            "dst_parent": "@java.lang.Override\npublic void onComponentTagBody(final org.apache.wicket.markup.MarkupStream markupStream, final org.apache.wicket.markup.ComponentTag openTag) {\n    org.apache.wicket.model.IModel<java.lang.String> labelModel = findLabelContent(markupStream, openTag);\n    replaceComponentTagBody(markupStream, openTag, labelModel != null ? labelModel.getObject() : \"\");\n    if (labelModel != null) {\n        if (labeled instanceof org.apache.wicket.markup.html.form.FormComponent) {\n            org.apache.wicket.markup.html.form.FormComponent<?> fc = ((org.apache.wicket.markup.html.form.FormComponent<?>) (labeled));\n            fc.setLabel(labelModel);\n        } else {\n            labelModel.detach();\n        }\n    }\n}",
            "dst_parent_type": "Method",
            "dst_type": "VirtualEle",
            "operator": "MOV",
            "src": "VE: Modifiers_Method",
            "src_parent": "@java.lang.Override\npublic void onComponentTagBody(final org.apache.wicket.markup.MarkupStream markupStream, final org.apache.wicket.markup.ComponentTag openTag) {\n    boolean storeLabelText = false;\n    java.lang.String labelText = null;\n    if (labeled instanceof org.apache.wicket.markup.html.form.ILabelProvider) {\n        org.apache.wicket.markup.html.form.ILabelProvider<java.lang.String> provider = ((org.apache.wicket.markup.html.form.ILabelProvider<java.lang.String>) (labeled));\n        if (provider.getLabel() != null) {\n            java.lang.String text = provider.getLabel().getObject();\n            if (!org.apache.wicket.util.string.Strings.isEmpty(text)) {\n                labelText = text;\n            }\n        }\n    }\n    if ((labelText == null) && (labeled instanceof org.apache.wicket.markup.html.form.FormComponent)) {\n        java.lang.String text = ((org.apache.wicket.markup.html.form.FormComponent<?>) (labeled)).getDefaultLabel(\"wicket:unknown\");\n        if ((!\"wicket:unknown\".equals(text)) && (!org.apache.wicket.util.string.Strings.isEmpty(text))) {\n            labelText = text;\n        }\n    }\n    if ((labelText == null) && (openTag.getAttribute(\"key\") != null)) {\n        java.lang.String text = labeled.getString(openTag.getAttribute(\"key\"));\n        if (!org.apache.wicket.util.string.Strings.isEmpty(text)) {\n            labelText = text;\n            storeLabelText = true;\n        }\n    }\n    if (labelText == null) {\n        java.lang.String text = new org.apache.wicket.markup.html.internal.ResponseBufferZone(org.apache.wicket.request.cycle.RequestCycle.get(), markupStream) {\n            @java.lang.Override\n            protected void executeInsideBufferedZone() {\n                org.apache.wicket.markup.html.form.AutoLabelTextResolver.TextLabel.super.onComponentTagBody(markupStream, openTag);\n            }\n        }.execute().toString();\n        if (!org.apache.wicket.util.string.Strings.isEmpty(text)) {\n            labelText = text;\n            storeLabelText = true;\n        }\n    }\n    replaceComponentTagBody(markupStream, openTag, labelText);\n    if (labeled instanceof org.apache.wicket.markup.html.form.FormComponent) {\n        org.apache.wicket.markup.html.form.FormComponent<?> fc = ((org.apache.wicket.markup.html.form.FormComponent<?>) (labeled));\n        fc.setLabel(org.apache.wicket.model.Model.of(labelText));\n    }\n}",
            "src_parent_type": "Method",
            "src_type": "VirtualEle"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Annotation",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "@java.lang.Override",
            "dst_parent": "@java.lang.Override\npublic void onComponentTagBody(final org.apache.wicket.markup.MarkupStream markupStream, final org.apache.wicket.markup.ComponentTag openTag) {\n    org.apache.wicket.model.IModel<java.lang.String> labelModel = findLabelContent(markupStream, openTag);\n    replaceComponentTagBody(markupStream, openTag, labelModel != null ? labelModel.getObject() : \"\");\n    if (labelModel != null) {\n        if (labeled instanceof org.apache.wicket.markup.html.form.FormComponent) {\n            org.apache.wicket.markup.html.form.FormComponent<?> fc = ((org.apache.wicket.markup.html.form.FormComponent<?>) (labeled));\n            fc.setLabel(labelModel);\n        } else {\n            labelModel.detach();\n        }\n    }\n}",
            "dst_parent_type": "Method",
            "dst_type": "Annotation",
            "operator": "MOV",
            "src": "@java.lang.Override",
            "src_parent": "@java.lang.Override\npublic void onComponentTagBody(final org.apache.wicket.markup.MarkupStream markupStream, final org.apache.wicket.markup.ComponentTag openTag) {\n    boolean storeLabelText = false;\n    java.lang.String labelText = null;\n    if (labeled instanceof org.apache.wicket.markup.html.form.ILabelProvider) {\n        org.apache.wicket.markup.html.form.ILabelProvider<java.lang.String> provider = ((org.apache.wicket.markup.html.form.ILabelProvider<java.lang.String>) (labeled));\n        if (provider.getLabel() != null) {\n            java.lang.String text = provider.getLabel().getObject();\n            if (!org.apache.wicket.util.string.Strings.isEmpty(text)) {\n                labelText = text;\n            }\n        }\n    }\n    if ((labelText == null) && (labeled instanceof org.apache.wicket.markup.html.form.FormComponent)) {\n        java.lang.String text = ((org.apache.wicket.markup.html.form.FormComponent<?>) (labeled)).getDefaultLabel(\"wicket:unknown\");\n        if ((!\"wicket:unknown\".equals(text)) && (!org.apache.wicket.util.string.Strings.isEmpty(text))) {\n            labelText = text;\n        }\n    }\n    if ((labelText == null) && (openTag.getAttribute(\"key\") != null)) {\n        java.lang.String text = labeled.getString(openTag.getAttribute(\"key\"));\n        if (!org.apache.wicket.util.string.Strings.isEmpty(text)) {\n            labelText = text;\n            storeLabelText = true;\n        }\n    }\n    if (labelText == null) {\n        java.lang.String text = new org.apache.wicket.markup.html.internal.ResponseBufferZone(org.apache.wicket.request.cycle.RequestCycle.get(), markupStream) {\n            @java.lang.Override\n            protected void executeInsideBufferedZone() {\n                org.apache.wicket.markup.html.form.AutoLabelTextResolver.TextLabel.super.onComponentTagBody(markupStream, openTag);\n            }\n        }.execute().toString();\n        if (!org.apache.wicket.util.string.Strings.isEmpty(text)) {\n            labelText = text;\n            storeLabelText = true;\n        }\n    }\n    replaceComponentTagBody(markupStream, openTag, labelText);\n    if (labeled instanceof org.apache.wicket.markup.html.form.FormComponent) {\n        org.apache.wicket.markup.html.form.FormComponent<?> fc = ((org.apache.wicket.markup.html.form.FormComponent<?>) (labeled));\n        fc.setLabel(org.apache.wicket.model.Model.of(labelText));\n    }\n}",
            "src_parent_type": "Method",
            "src_type": "Annotation"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Parameter",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "final org.apache.wicket.markup.ComponentTag openTag",
            "dst_parent": "@java.lang.Override\npublic void onComponentTagBody(final org.apache.wicket.markup.MarkupStream markupStream, final org.apache.wicket.markup.ComponentTag openTag) {\n    org.apache.wicket.model.IModel<java.lang.String> labelModel = findLabelContent(markupStream, openTag);\n    replaceComponentTagBody(markupStream, openTag, labelModel != null ? labelModel.getObject() : \"\");\n    if (labelModel != null) {\n        if (labeled instanceof org.apache.wicket.markup.html.form.FormComponent) {\n            org.apache.wicket.markup.html.form.FormComponent<?> fc = ((org.apache.wicket.markup.html.form.FormComponent<?>) (labeled));\n            fc.setLabel(labelModel);\n        } else {\n            labelModel.detach();\n        }\n    }\n}",
            "dst_parent_type": "Method",
            "dst_type": "Parameter",
            "operator": "MOV",
            "src": "final org.apache.wicket.markup.ComponentTag openTag",
            "src_parent": "@java.lang.Override\npublic void onComponentTagBody(final org.apache.wicket.markup.MarkupStream markupStream, final org.apache.wicket.markup.ComponentTag openTag) {\n    boolean storeLabelText = false;\n    java.lang.String labelText = null;\n    if (labeled instanceof org.apache.wicket.markup.html.form.ILabelProvider) {\n        org.apache.wicket.markup.html.form.ILabelProvider<java.lang.String> provider = ((org.apache.wicket.markup.html.form.ILabelProvider<java.lang.String>) (labeled));\n        if (provider.getLabel() != null) {\n            java.lang.String text = provider.getLabel().getObject();\n            if (!org.apache.wicket.util.string.Strings.isEmpty(text)) {\n                labelText = text;\n            }\n        }\n    }\n    if ((labelText == null) && (labeled instanceof org.apache.wicket.markup.html.form.FormComponent)) {\n        java.lang.String text = ((org.apache.wicket.markup.html.form.FormComponent<?>) (labeled)).getDefaultLabel(\"wicket:unknown\");\n        if ((!\"wicket:unknown\".equals(text)) && (!org.apache.wicket.util.string.Strings.isEmpty(text))) {\n            labelText = text;\n        }\n    }\n    if ((labelText == null) && (openTag.getAttribute(\"key\") != null)) {\n        java.lang.String text = labeled.getString(openTag.getAttribute(\"key\"));\n        if (!org.apache.wicket.util.string.Strings.isEmpty(text)) {\n            labelText = text;\n            storeLabelText = true;\n        }\n    }\n    if (labelText == null) {\n        java.lang.String text = new org.apache.wicket.markup.html.internal.ResponseBufferZone(org.apache.wicket.request.cycle.RequestCycle.get(), markupStream) {\n            @java.lang.Override\n            protected void executeInsideBufferedZone() {\n                org.apache.wicket.markup.html.form.AutoLabelTextResolver.TextLabel.super.onComponentTagBody(markupStream, openTag);\n            }\n        }.execute().toString();\n        if (!org.apache.wicket.util.string.Strings.isEmpty(text)) {\n            labelText = text;\n            storeLabelText = true;\n        }\n    }\n    replaceComponentTagBody(markupStream, openTag, labelText);\n    if (labeled instanceof org.apache.wicket.markup.html.form.FormComponent) {\n        org.apache.wicket.markup.html.form.FormComponent<?> fc = ((org.apache.wicket.markup.html.form.FormComponent<?>) (labeled));\n        fc.setLabel(org.apache.wicket.model.Model.of(labelText));\n    }\n}",
            "src_parent_type": "Method",
            "src_type": "Parameter"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "LocalVariable",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "org.apache.wicket.model.IModel<java.lang.String> labelModel = findLabelContent(markupStream, openTag)",
            "dst_parent": "{\n    org.apache.wicket.model.IModel<java.lang.String> labelModel = findLabelContent(markupStream, openTag);\n    replaceComponentTagBody(markupStream, openTag, labelModel != null ? labelModel.getObject() : \"\");\n    if (labelModel != null) {\n        if (labeled instanceof org.apache.wicket.markup.html.form.FormComponent) {\n            org.apache.wicket.markup.html.form.FormComponent<?> fc = ((org.apache.wicket.markup.html.form.FormComponent<?>) (labeled));\n            fc.setLabel(labelModel);\n        } else {\n            labelModel.detach();\n        }\n    }\n}",
            "dst_parent_type": "Block",
            "dst_type": "LocalVariable",
            "operator": "MOV",
            "src": "boolean storeLabelText = false",
            "src_parent": "{\n    boolean storeLabelText = false;\n    java.lang.String labelText = null;\n    if (labeled instanceof org.apache.wicket.markup.html.form.ILabelProvider) {\n        org.apache.wicket.markup.html.form.ILabelProvider<java.lang.String> provider = ((org.apache.wicket.markup.html.form.ILabelProvider<java.lang.String>) (labeled));\n        if (provider.getLabel() != null) {\n            java.lang.String text = provider.getLabel().getObject();\n            if (!org.apache.wicket.util.string.Strings.isEmpty(text)) {\n                labelText = text;\n            }\n        }\n    }\n    if ((labelText == null) && (labeled instanceof org.apache.wicket.markup.html.form.FormComponent)) {\n        java.lang.String text = ((org.apache.wicket.markup.html.form.FormComponent<?>) (labeled)).getDefaultLabel(\"wicket:unknown\");\n        if ((!\"wicket:unknown\".equals(text)) && (!org.apache.wicket.util.string.Strings.isEmpty(text))) {\n            labelText = text;\n        }\n    }\n    if ((labelText == null) && (openTag.getAttribute(\"key\") != null)) {\n        java.lang.String text = labeled.getString(openTag.getAttribute(\"key\"));\n        if (!org.apache.wicket.util.string.Strings.isEmpty(text)) {\n            labelText = text;\n            storeLabelText = true;\n        }\n    }\n    if (labelText == null) {\n        java.lang.String text = new org.apache.wicket.markup.html.internal.ResponseBufferZone(org.apache.wicket.request.cycle.RequestCycle.get(), markupStream) {\n            @java.lang.Override\n            protected void executeInsideBufferedZone() {\n                org.apache.wicket.markup.html.form.AutoLabelTextResolver.TextLabel.super.onComponentTagBody(markupStream, openTag);\n            }\n        }.execute().toString();\n        if (!org.apache.wicket.util.string.Strings.isEmpty(text)) {\n            labelText = text;\n            storeLabelText = true;\n        }\n    }\n    replaceComponentTagBody(markupStream, openTag, labelText);\n    if (labeled instanceof org.apache.wicket.markup.html.form.FormComponent) {\n        org.apache.wicket.markup.html.form.FormComponent<?> fc = ((org.apache.wicket.markup.html.form.FormComponent<?>) (labeled));\n        fc.setLabel(org.apache.wicket.model.Model.of(labelText));\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "LocalVariable"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Parameter",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "final org.apache.wicket.markup.MarkupStream markupStream",
            "dst_parent": "private org.apache.wicket.model.IModel<java.lang.String> findLabelContent(final org.apache.wicket.markup.MarkupStream markupStream, final org.apache.wicket.markup.ComponentTag tag) {\n    if (labeled instanceof org.apache.wicket.markup.html.form.ILabelProvider) {\n        org.apache.wicket.markup.html.form.ILabelProvider<java.lang.String> provider = ((org.apache.wicket.markup.html.form.ILabelProvider<java.lang.String>) (labeled));\n        if (provider.getLabel() != null) {\n            if (!org.apache.wicket.util.string.Strings.isEmpty(provider.getLabel().getObject())) {\n                return provider.getLabel();\n            }\n        }\n    }\n    if (labeled instanceof org.apache.wicket.markup.html.form.FormComponent) {\n        final org.apache.wicket.markup.html.form.FormComponent<?> formComponent = ((org.apache.wicket.markup.html.form.FormComponent<?>) (labeled));\n        java.lang.String text = formComponent.getDefaultLabel(\"wicket:unknown\");\n        if ((!\"wicket:unknown\".equals(text)) && (!org.apache.wicket.util.string.Strings.isEmpty(text))) {\n            return new org.apache.wicket.model.LoadableDetachableModel<java.lang.String>() {\n                @java.lang.Override\n                protected java.lang.String load() {\n                    return formComponent.getDefaultLabel(\"wicket:unknown\");\n                }\n            };\n        }\n    }\n    {\n        java.lang.String resourceKey = tag.getAttribute(\"key\");\n        if (resourceKey != null) {\n            java.lang.String text = labeled.getString(resourceKey);\n            if (!org.apache.wicket.util.string.Strings.isEmpty(text)) {\n                return new org.apache.wicket.model.StringResourceModel(resourceKey, labeled, null);\n            }\n        }\n    }\n    {\n        java.lang.String text = new org.apache.wicket.markup.html.internal.ResponseBufferZone(org.apache.wicket.request.cycle.RequestCycle.get(), markupStream) {\n            @java.lang.Override\n            protected void executeInsideBufferedZone() {\n                org.apache.wicket.markup.html.form.AutoLabelTextResolver.TextLabel.super.onComponentTagBody(markupStream, tag);\n            }\n        }.execute().toString();\n        if (!org.apache.wicket.util.string.Strings.isEmpty(text)) {\n            return org.apache.wicket.model.Model.of(text);\n        }\n    }\n    return null;\n}",
            "dst_parent_type": "Method",
            "dst_type": "Parameter",
            "operator": "MOV",
            "src": "final org.apache.wicket.markup.MarkupStream markupStream",
            "src_parent": "@java.lang.Override\npublic void onComponentTagBody(final org.apache.wicket.markup.MarkupStream markupStream, final org.apache.wicket.markup.ComponentTag openTag) {\n    boolean storeLabelText = false;\n    java.lang.String labelText = null;\n    if (labeled instanceof org.apache.wicket.markup.html.form.ILabelProvider) {\n        org.apache.wicket.markup.html.form.ILabelProvider<java.lang.String> provider = ((org.apache.wicket.markup.html.form.ILabelProvider<java.lang.String>) (labeled));\n        if (provider.getLabel() != null) {\n            java.lang.String text = provider.getLabel().getObject();\n            if (!org.apache.wicket.util.string.Strings.isEmpty(text)) {\n                labelText = text;\n            }\n        }\n    }\n    if ((labelText == null) && (labeled instanceof org.apache.wicket.markup.html.form.FormComponent)) {\n        java.lang.String text = ((org.apache.wicket.markup.html.form.FormComponent<?>) (labeled)).getDefaultLabel(\"wicket:unknown\");\n        if ((!\"wicket:unknown\".equals(text)) && (!org.apache.wicket.util.string.Strings.isEmpty(text))) {\n            labelText = text;\n        }\n    }\n    if ((labelText == null) && (openTag.getAttribute(\"key\") != null)) {\n        java.lang.String text = labeled.getString(openTag.getAttribute(\"key\"));\n        if (!org.apache.wicket.util.string.Strings.isEmpty(text)) {\n            labelText = text;\n            storeLabelText = true;\n        }\n    }\n    if (labelText == null) {\n        java.lang.String text = new org.apache.wicket.markup.html.internal.ResponseBufferZone(org.apache.wicket.request.cycle.RequestCycle.get(), markupStream) {\n            @java.lang.Override\n            protected void executeInsideBufferedZone() {\n                org.apache.wicket.markup.html.form.AutoLabelTextResolver.TextLabel.super.onComponentTagBody(markupStream, openTag);\n            }\n        }.execute().toString();\n        if (!org.apache.wicket.util.string.Strings.isEmpty(text)) {\n            labelText = text;\n            storeLabelText = true;\n        }\n    }\n    replaceComponentTagBody(markupStream, openTag, labelText);\n    if (labeled instanceof org.apache.wicket.markup.html.form.FormComponent) {\n        org.apache.wicket.markup.html.form.FormComponent<?> fc = ((org.apache.wicket.markup.html.form.FormComponent<?>) (labeled));\n        fc.setLabel(org.apache.wicket.model.Model.of(labelText));\n    }\n}",
            "src_parent_type": "Method",
            "src_type": "Parameter"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "if (labeled instanceof org.apache.wicket.markup.html.form.ILabelProvider) {\n    org.apache.wicket.markup.html.form.ILabelProvider<java.lang.String> provider = ((org.apache.wicket.markup.html.form.ILabelProvider<java.lang.String>) (labeled));\n    if (provider.getLabel() != null) {\n        if (!org.apache.wicket.util.string.Strings.isEmpty(provider.getLabel().getObject())) {\n            return provider.getLabel();\n        }\n    }\n}",
            "dst_parent": "{\n    if (labeled instanceof org.apache.wicket.markup.html.form.ILabelProvider) {\n        org.apache.wicket.markup.html.form.ILabelProvider<java.lang.String> provider = ((org.apache.wicket.markup.html.form.ILabelProvider<java.lang.String>) (labeled));\n        if (provider.getLabel() != null) {\n            if (!org.apache.wicket.util.string.Strings.isEmpty(provider.getLabel().getObject())) {\n                return provider.getLabel();\n            }\n        }\n    }\n    if (labeled instanceof org.apache.wicket.markup.html.form.FormComponent) {\n        final org.apache.wicket.markup.html.form.FormComponent<?> formComponent = ((org.apache.wicket.markup.html.form.FormComponent<?>) (labeled));\n        java.lang.String text = formComponent.getDefaultLabel(\"wicket:unknown\");\n        if ((!\"wicket:unknown\".equals(text)) && (!org.apache.wicket.util.string.Strings.isEmpty(text))) {\n            return new org.apache.wicket.model.LoadableDetachableModel<java.lang.String>() {\n                @java.lang.Override\n                protected java.lang.String load() {\n                    return formComponent.getDefaultLabel(\"wicket:unknown\");\n                }\n            };\n        }\n    }\n    {\n        java.lang.String resourceKey = tag.getAttribute(\"key\");\n        if (resourceKey != null) {\n            java.lang.String text = labeled.getString(resourceKey);\n            if (!org.apache.wicket.util.string.Strings.isEmpty(text)) {\n                return new org.apache.wicket.model.StringResourceModel(resourceKey, labeled, null);\n            }\n        }\n    }\n    {\n        java.lang.String text = new org.apache.wicket.markup.html.internal.ResponseBufferZone(org.apache.wicket.request.cycle.RequestCycle.get(), markupStream) {\n            @java.lang.Override\n            protected void executeInsideBufferedZone() {\n                org.apache.wicket.markup.html.form.AutoLabelTextResolver.TextLabel.super.onComponentTagBody(markupStream, tag);\n            }\n        }.execute().toString();\n        if (!org.apache.wicket.util.string.Strings.isEmpty(text)) {\n            return org.apache.wicket.model.Model.of(text);\n        }\n    }\n    return null;\n}",
            "dst_parent_type": "Block",
            "dst_type": "If",
            "operator": "MOV",
            "src": "if (labeled instanceof org.apache.wicket.markup.html.form.ILabelProvider) {\n    org.apache.wicket.markup.html.form.ILabelProvider<java.lang.String> provider = ((org.apache.wicket.markup.html.form.ILabelProvider<java.lang.String>) (labeled));\n    if (provider.getLabel() != null) {\n        java.lang.String text = provider.getLabel().getObject();\n        if (!org.apache.wicket.util.string.Strings.isEmpty(text)) {\n            labelText = text;\n        }\n    }\n}",
            "src_parent": "{\n    boolean storeLabelText = false;\n    java.lang.String labelText = null;\n    if (labeled instanceof org.apache.wicket.markup.html.form.ILabelProvider) {\n        org.apache.wicket.markup.html.form.ILabelProvider<java.lang.String> provider = ((org.apache.wicket.markup.html.form.ILabelProvider<java.lang.String>) (labeled));\n        if (provider.getLabel() != null) {\n            java.lang.String text = provider.getLabel().getObject();\n            if (!org.apache.wicket.util.string.Strings.isEmpty(text)) {\n                labelText = text;\n            }\n        }\n    }\n    if ((labelText == null) && (labeled instanceof org.apache.wicket.markup.html.form.FormComponent)) {\n        java.lang.String text = ((org.apache.wicket.markup.html.form.FormComponent<?>) (labeled)).getDefaultLabel(\"wicket:unknown\");\n        if ((!\"wicket:unknown\".equals(text)) && (!org.apache.wicket.util.string.Strings.isEmpty(text))) {\n            labelText = text;\n        }\n    }\n    if ((labelText == null) && (openTag.getAttribute(\"key\") != null)) {\n        java.lang.String text = labeled.getString(openTag.getAttribute(\"key\"));\n        if (!org.apache.wicket.util.string.Strings.isEmpty(text)) {\n            labelText = text;\n            storeLabelText = true;\n        }\n    }\n    if (labelText == null) {\n        java.lang.String text = new org.apache.wicket.markup.html.internal.ResponseBufferZone(org.apache.wicket.request.cycle.RequestCycle.get(), markupStream) {\n            @java.lang.Override\n            protected void executeInsideBufferedZone() {\n                org.apache.wicket.markup.html.form.AutoLabelTextResolver.TextLabel.super.onComponentTagBody(markupStream, openTag);\n            }\n        }.execute().toString();\n        if (!org.apache.wicket.util.string.Strings.isEmpty(text)) {\n            labelText = text;\n            storeLabelText = true;\n        }\n    }\n    replaceComponentTagBody(markupStream, openTag, labelText);\n    if (labeled instanceof org.apache.wicket.markup.html.form.FormComponent) {\n        org.apache.wicket.markup.html.form.FormComponent<?> fc = ((org.apache.wicket.markup.html.form.FormComponent<?>) (labeled));\n        fc.setLabel(org.apache.wicket.model.Model.of(labelText));\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "If"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "LocalVariable",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "if (labeled instanceof org.apache.wicket.markup.html.form.FormComponent) {\n    final org.apache.wicket.markup.html.form.FormComponent<?> formComponent = ((org.apache.wicket.markup.html.form.FormComponent<?>) (labeled));\n    java.lang.String text = formComponent.getDefaultLabel(\"wicket:unknown\");\n    if ((!\"wicket:unknown\".equals(text)) && (!org.apache.wicket.util.string.Strings.isEmpty(text))) {\n        return new org.apache.wicket.model.LoadableDetachableModel<java.lang.String>() {\n            @java.lang.Override\n            protected java.lang.String load() {\n                return formComponent.getDefaultLabel(\"wicket:unknown\");\n            }\n        };\n    }\n}",
            "dst_parent": "{\n    if (labeled instanceof org.apache.wicket.markup.html.form.ILabelProvider) {\n        org.apache.wicket.markup.html.form.ILabelProvider<java.lang.String> provider = ((org.apache.wicket.markup.html.form.ILabelProvider<java.lang.String>) (labeled));\n        if (provider.getLabel() != null) {\n            if (!org.apache.wicket.util.string.Strings.isEmpty(provider.getLabel().getObject())) {\n                return provider.getLabel();\n            }\n        }\n    }\n    if (labeled instanceof org.apache.wicket.markup.html.form.FormComponent) {\n        final org.apache.wicket.markup.html.form.FormComponent<?> formComponent = ((org.apache.wicket.markup.html.form.FormComponent<?>) (labeled));\n        java.lang.String text = formComponent.getDefaultLabel(\"wicket:unknown\");\n        if ((!\"wicket:unknown\".equals(text)) && (!org.apache.wicket.util.string.Strings.isEmpty(text))) {\n            return new org.apache.wicket.model.LoadableDetachableModel<java.lang.String>() {\n                @java.lang.Override\n                protected java.lang.String load() {\n                    return formComponent.getDefaultLabel(\"wicket:unknown\");\n                }\n            };\n        }\n    }\n    {\n        java.lang.String resourceKey = tag.getAttribute(\"key\");\n        if (resourceKey != null) {\n            java.lang.String text = labeled.getString(resourceKey);\n            if (!org.apache.wicket.util.string.Strings.isEmpty(text)) {\n                return new org.apache.wicket.model.StringResourceModel(resourceKey, labeled, null);\n            }\n        }\n    }\n    {\n        java.lang.String text = new org.apache.wicket.markup.html.internal.ResponseBufferZone(org.apache.wicket.request.cycle.RequestCycle.get(), markupStream) {\n            @java.lang.Override\n            protected void executeInsideBufferedZone() {\n                org.apache.wicket.markup.html.form.AutoLabelTextResolver.TextLabel.super.onComponentTagBody(markupStream, tag);\n            }\n        }.execute().toString();\n        if (!org.apache.wicket.util.string.Strings.isEmpty(text)) {\n            return org.apache.wicket.model.Model.of(text);\n        }\n    }\n    return null;\n}",
            "dst_parent_type": "Block",
            "dst_type": "If",
            "operator": "MOV",
            "src": "if ((labelText == null) && (labeled instanceof org.apache.wicket.markup.html.form.FormComponent)) {\n    java.lang.String text = ((org.apache.wicket.markup.html.form.FormComponent<?>) (labeled)).getDefaultLabel(\"wicket:unknown\");\n    if ((!\"wicket:unknown\".equals(text)) && (!org.apache.wicket.util.string.Strings.isEmpty(text))) {\n        labelText = text;\n    }\n}",
            "src_parent": "{\n    boolean storeLabelText = false;\n    java.lang.String labelText = null;\n    if (labeled instanceof org.apache.wicket.markup.html.form.ILabelProvider) {\n        org.apache.wicket.markup.html.form.ILabelProvider<java.lang.String> provider = ((org.apache.wicket.markup.html.form.ILabelProvider<java.lang.String>) (labeled));\n        if (provider.getLabel() != null) {\n            java.lang.String text = provider.getLabel().getObject();\n            if (!org.apache.wicket.util.string.Strings.isEmpty(text)) {\n                labelText = text;\n            }\n        }\n    }\n    if ((labelText == null) && (labeled instanceof org.apache.wicket.markup.html.form.FormComponent)) {\n        java.lang.String text = ((org.apache.wicket.markup.html.form.FormComponent<?>) (labeled)).getDefaultLabel(\"wicket:unknown\");\n        if ((!\"wicket:unknown\".equals(text)) && (!org.apache.wicket.util.string.Strings.isEmpty(text))) {\n            labelText = text;\n        }\n    }\n    if ((labelText == null) && (openTag.getAttribute(\"key\") != null)) {\n        java.lang.String text = labeled.getString(openTag.getAttribute(\"key\"));\n        if (!org.apache.wicket.util.string.Strings.isEmpty(text)) {\n            labelText = text;\n            storeLabelText = true;\n        }\n    }\n    if (labelText == null) {\n        java.lang.String text = new org.apache.wicket.markup.html.internal.ResponseBufferZone(org.apache.wicket.request.cycle.RequestCycle.get(), markupStream) {\n            @java.lang.Override\n            protected void executeInsideBufferedZone() {\n                org.apache.wicket.markup.html.form.AutoLabelTextResolver.TextLabel.super.onComponentTagBody(markupStream, openTag);\n            }\n        }.execute().toString();\n        if (!org.apache.wicket.util.string.Strings.isEmpty(text)) {\n            labelText = text;\n            storeLabelText = true;\n        }\n    }\n    replaceComponentTagBody(markupStream, openTag, labelText);\n    if (labeled instanceof org.apache.wicket.markup.html.form.FormComponent) {\n        org.apache.wicket.markup.html.form.FormComponent<?> fc = ((org.apache.wicket.markup.html.form.FormComponent<?>) (labeled));\n        fc.setLabel(org.apache.wicket.model.Model.of(labelText));\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "If"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "If",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "if (!org.apache.wicket.util.string.Strings.isEmpty(text)) {\n    return org.apache.wicket.model.Model.of(text);\n}",
            "dst_parent": "{\n    java.lang.String text = new org.apache.wicket.markup.html.internal.ResponseBufferZone(org.apache.wicket.request.cycle.RequestCycle.get(), markupStream) {\n        @java.lang.Override\n        protected void executeInsideBufferedZone() {\n            org.apache.wicket.markup.html.form.AutoLabelTextResolver.TextLabel.super.onComponentTagBody(markupStream, tag);\n        }\n    }.execute().toString();\n    if (!org.apache.wicket.util.string.Strings.isEmpty(text)) {\n        return org.apache.wicket.model.Model.of(text);\n    }\n}",
            "dst_parent_type": "Block",
            "dst_type": "If",
            "operator": "MOV",
            "src": "if (labeled instanceof org.apache.wicket.markup.html.form.FormComponent) {\n    org.apache.wicket.markup.html.form.FormComponent<?> fc = ((org.apache.wicket.markup.html.form.FormComponent<?>) (labeled));\n    fc.setLabel(org.apache.wicket.model.Model.of(labelText));\n}",
            "src_parent": "{\n    boolean storeLabelText = false;\n    java.lang.String labelText = null;\n    if (labeled instanceof org.apache.wicket.markup.html.form.ILabelProvider) {\n        org.apache.wicket.markup.html.form.ILabelProvider<java.lang.String> provider = ((org.apache.wicket.markup.html.form.ILabelProvider<java.lang.String>) (labeled));\n        if (provider.getLabel() != null) {\n            java.lang.String text = provider.getLabel().getObject();\n            if (!org.apache.wicket.util.string.Strings.isEmpty(text)) {\n                labelText = text;\n            }\n        }\n    }\n    if ((labelText == null) && (labeled instanceof org.apache.wicket.markup.html.form.FormComponent)) {\n        java.lang.String text = ((org.apache.wicket.markup.html.form.FormComponent<?>) (labeled)).getDefaultLabel(\"wicket:unknown\");\n        if ((!\"wicket:unknown\".equals(text)) && (!org.apache.wicket.util.string.Strings.isEmpty(text))) {\n            labelText = text;\n        }\n    }\n    if ((labelText == null) && (openTag.getAttribute(\"key\") != null)) {\n        java.lang.String text = labeled.getString(openTag.getAttribute(\"key\"));\n        if (!org.apache.wicket.util.string.Strings.isEmpty(text)) {\n            labelText = text;\n            storeLabelText = true;\n        }\n    }\n    if (labelText == null) {\n        java.lang.String text = new org.apache.wicket.markup.html.internal.ResponseBufferZone(org.apache.wicket.request.cycle.RequestCycle.get(), markupStream) {\n            @java.lang.Override\n            protected void executeInsideBufferedZone() {\n                org.apache.wicket.markup.html.form.AutoLabelTextResolver.TextLabel.super.onComponentTagBody(markupStream, openTag);\n            }\n        }.execute().toString();\n        if (!org.apache.wicket.util.string.Strings.isEmpty(text)) {\n            labelText = text;\n            storeLabelText = true;\n        }\n    }\n    replaceComponentTagBody(markupStream, openTag, labelText);\n    if (labeled instanceof org.apache.wicket.markup.html.form.FormComponent) {\n        org.apache.wicket.markup.html.form.FormComponent<?> fc = ((org.apache.wicket.markup.html.form.FormComponent<?>) (labeled));\n        fc.setLabel(org.apache.wicket.model.Model.of(labelText));\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "If"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "LocalVariable",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "{\n    java.lang.String text = labeled.getString(resourceKey);\n    if (!org.apache.wicket.util.string.Strings.isEmpty(text)) {\n        return new org.apache.wicket.model.StringResourceModel(resourceKey, labeled, null);\n    }\n}",
            "dst_parent": "if (resourceKey != null) {\n    java.lang.String text = labeled.getString(resourceKey);\n    if (!org.apache.wicket.util.string.Strings.isEmpty(text)) {\n        return new org.apache.wicket.model.StringResourceModel(resourceKey, labeled, null);\n    }\n}",
            "dst_parent_type": "If",
            "dst_type": "Block",
            "operator": "MOV",
            "src": "{\n    java.lang.String text = labeled.getString(openTag.getAttribute(\"key\"));\n    if (!org.apache.wicket.util.string.Strings.isEmpty(text)) {\n        labelText = text;\n        storeLabelText = true;\n    }\n}",
            "src_parent": "if ((labelText == null) && (openTag.getAttribute(\"key\") != null)) {\n    java.lang.String text = labeled.getString(openTag.getAttribute(\"key\"));\n    if (!org.apache.wicket.util.string.Strings.isEmpty(text)) {\n        labelText = text;\n        storeLabelText = true;\n    }\n}",
            "src_parent_type": "If",
            "src_type": "Block"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "LocalVariable",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "java.lang.String",
            "dst_parent": "java.lang.String text = new org.apache.wicket.markup.html.internal.ResponseBufferZone(org.apache.wicket.request.cycle.RequestCycle.get(), markupStream) {\n    @java.lang.Override\n    protected void executeInsideBufferedZone() {\n        org.apache.wicket.markup.html.form.AutoLabelTextResolver.TextLabel.super.onComponentTagBody(markupStream, tag);\n    }\n}.execute().toString()",
            "dst_parent_type": "LocalVariable",
            "dst_type": "TypeReference",
            "operator": "MOV",
            "src": "java.lang.String",
            "src_parent": "java.lang.String text = new org.apache.wicket.markup.html.internal.ResponseBufferZone(org.apache.wicket.request.cycle.RequestCycle.get(), markupStream) {\n    @java.lang.Override\n    protected void executeInsideBufferedZone() {\n        org.apache.wicket.markup.html.form.AutoLabelTextResolver.TextLabel.super.onComponentTagBody(markupStream, openTag);\n    }\n}.execute().toString()",
            "src_parent_type": "LocalVariable",
            "src_type": "TypeReference"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "LocalVariable",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "new org.apache.wicket.markup.html.internal.ResponseBufferZone(org.apache.wicket.request.cycle.RequestCycle.get(), markupStream) {\n    @java.lang.Override\n    protected void executeInsideBufferedZone() {\n        org.apache.wicket.markup.html.form.AutoLabelTextResolver.TextLabel.super.onComponentTagBody(markupStream, tag);\n    }\n}.execute().toString()",
            "dst_parent": "java.lang.String text = new org.apache.wicket.markup.html.internal.ResponseBufferZone(org.apache.wicket.request.cycle.RequestCycle.get(), markupStream) {\n    @java.lang.Override\n    protected void executeInsideBufferedZone() {\n        org.apache.wicket.markup.html.form.AutoLabelTextResolver.TextLabel.super.onComponentTagBody(markupStream, tag);\n    }\n}.execute().toString()",
            "dst_parent_type": "LocalVariable",
            "dst_type": "Invocation",
            "operator": "MOV",
            "src": "new org.apache.wicket.markup.html.internal.ResponseBufferZone(org.apache.wicket.request.cycle.RequestCycle.get(), markupStream) {\n    @java.lang.Override\n    protected void executeInsideBufferedZone() {\n        org.apache.wicket.markup.html.form.AutoLabelTextResolver.TextLabel.super.onComponentTagBody(markupStream, openTag);\n    }\n}.execute().toString()",
            "src_parent": "java.lang.String text = new org.apache.wicket.markup.html.internal.ResponseBufferZone(org.apache.wicket.request.cycle.RequestCycle.get(), markupStream) {\n    @java.lang.Override\n    protected void executeInsideBufferedZone() {\n        org.apache.wicket.markup.html.form.AutoLabelTextResolver.TextLabel.super.onComponentTagBody(markupStream, openTag);\n    }\n}.execute().toString()",
            "src_parent_type": "LocalVariable",
            "src_type": "Invocation"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "LocalVariable",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "tag",
            "dst_parent": "tag.getAttribute(\"key\")",
            "dst_parent_type": "Invocation",
            "dst_type": "VariableRead",
            "operator": "MOV",
            "src": "openTag",
            "src_parent": "openTag.getAttribute(\"key\")",
            "src_parent_type": "Invocation",
            "src_type": "VariableRead"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "LocalVariable",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "\"key\"",
            "dst_parent": "tag.getAttribute(\"key\")",
            "dst_parent_type": "Invocation",
            "dst_type": "Literal",
            "operator": "MOV",
            "src": "\"key\"",
            "src_parent": "openTag.getAttribute(\"key\")",
            "src_parent_type": "Invocation",
            "src_type": "Literal"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "LocalVariable",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "resourceKey != null",
            "dst_parent_type": "BinaryOperator",
            "dst_type": "Literal",
            "operator": "MOV",
            "src": "null",
            "src_parent": "(openTag.getAttribute(\"key\") != null)",
            "src_parent_type": "BinaryOperator",
            "src_type": "Literal"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "If",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "labeled instanceof org.apache.wicket.markup.html.form.FormComponent",
            "dst_parent": "if (labeled instanceof org.apache.wicket.markup.html.form.FormComponent) {\n    org.apache.wicket.markup.html.form.FormComponent<?> fc = ((org.apache.wicket.markup.html.form.FormComponent<?>) (labeled));\n    fc.setLabel(labelModel);\n} else {\n    labelModel.detach();\n}",
            "dst_parent_type": "If",
            "dst_type": "BinaryOperator",
            "operator": "MOV",
            "src": "labeled instanceof org.apache.wicket.markup.html.form.FormComponent",
            "src_parent": "if (labeled instanceof org.apache.wicket.markup.html.form.FormComponent) {\n    org.apache.wicket.markup.html.form.FormComponent<?> fc = ((org.apache.wicket.markup.html.form.FormComponent<?>) (labeled));\n    fc.setLabel(org.apache.wicket.model.Model.of(labelText));\n}",
            "src_parent_type": "If",
            "src_type": "BinaryOperator"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "!org.apache.wicket.util.string.Strings.isEmpty(text)",
            "dst_parent": "if (!org.apache.wicket.util.string.Strings.isEmpty(text)) {\n    return new org.apache.wicket.model.StringResourceModel(resourceKey, labeled, null);\n}",
            "dst_parent_type": "If",
            "dst_type": "UnaryOperator",
            "operator": "MOV",
            "src": "!org.apache.wicket.util.string.Strings.isEmpty(text)",
            "src_parent": "if (!org.apache.wicket.util.string.Strings.isEmpty(text)) {\n    labelText = text;\n    storeLabelText = true;\n}",
            "src_parent_type": "If",
            "src_type": "UnaryOperator"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "If",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "org.apache.wicket.markup.html.form.FormComponent<?> fc = ((org.apache.wicket.markup.html.form.FormComponent<?>) (labeled))",
            "dst_parent": "{\n    org.apache.wicket.markup.html.form.FormComponent<?> fc = ((org.apache.wicket.markup.html.form.FormComponent<?>) (labeled));\n    fc.setLabel(labelModel);\n}",
            "dst_parent_type": "Block",
            "dst_type": "LocalVariable",
            "operator": "MOV",
            "src": "org.apache.wicket.markup.html.form.FormComponent<?> fc = ((org.apache.wicket.markup.html.form.FormComponent<?>) (labeled))",
            "src_parent": "{\n    org.apache.wicket.markup.html.form.FormComponent<?> fc = ((org.apache.wicket.markup.html.form.FormComponent<?>) (labeled));\n    fc.setLabel(org.apache.wicket.model.Model.of(labelText));\n}",
            "src_parent_type": "Block",
            "src_type": "LocalVariable"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "LocalVariable",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "resourceKey",
            "dst_parent": "labeled.getString(resourceKey)",
            "dst_parent_type": "Invocation",
            "dst_type": "VariableRead",
            "operator": "MOV",
            "src": "openTag",
            "src_parent": "openTag.getAttribute(\"key\")",
            "src_parent_type": "Invocation",
            "src_type": "VariableRead"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Invocation",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "org.apache.wicket.model.Model",
            "dst_parent": "org.apache.wicket.model.Model.of(text)",
            "dst_parent_type": "Invocation",
            "dst_type": "TypeAccess",
            "operator": "MOV",
            "src": "org.apache.wicket.model.Model",
            "src_parent": "org.apache.wicket.model.Model.of(labelText)",
            "src_parent_type": "Invocation",
            "src_type": "TypeAccess"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Invocation",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "text",
            "dst_parent": "org.apache.wicket.model.Model.of(text)",
            "dst_parent_type": "Invocation",
            "dst_type": "VariableRead",
            "operator": "MOV",
            "src": "labelText",
            "src_parent": "org.apache.wicket.model.Model.of(labelText)",
            "src_parent_type": "Invocation",
            "src_type": "VariableRead"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "LocalVariable",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "labeled",
            "dst_parent": "new org.apache.wicket.model.StringResourceModel(resourceKey, labeled, null)",
            "dst_parent_type": "ConstructorCall",
            "dst_type": "FieldRead",
            "operator": "MOV",
            "src": "((org.apache.wicket.markup.html.form.FormComponent<?>) (labeled))",
            "src_parent": "((org.apache.wicket.markup.html.form.FormComponent<?>) (labeled)).getDefaultLabel(\"wicket:unknown\")",
            "src_parent_type": "Invocation",
            "src_type": "FieldRead"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "LocalVariable",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "provider.getLabel().getObject()",
            "dst_parent": "org.apache.wicket.util.string.Strings.isEmpty(provider.getLabel().getObject())",
            "dst_parent_type": "Invocation",
            "dst_type": "Invocation",
            "operator": "MOV",
            "src": "provider.getLabel().getObject()",
            "src_parent": "java.lang.String text = provider.getLabel().getObject()",
            "src_parent_type": "LocalVariable",
            "src_type": "Invocation"
          }
        }
      ],
      "file_name": "AutoLabelTextResolver"
    }
  ],
  "id": "wicket_e743fd7e"
}