{
  "files": [
    {
      "features": [
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "If",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Try",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Invocation",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "split.getTableName()",
            "dst_parent": "setupIterators(job, scanner, split.getTableName())",
            "dst_parent_type": "Invocation",
            "dst_type": "Invocation",
            "operator": "UPD",
            "src": "split.getTableId()",
            "src_parent": "setupIterators(job, scanner, split.getTableId())",
            "src_parent_type": "Invocation",
            "src_type": "Invocation"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Try",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Assignment",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "instance",
            "dst_parent": "org.apache.accumulo.core.client.impl.Tables.getTableId(instance, tableName)",
            "dst_parent_type": "Invocation",
            "dst_type": "VariableRead",
            "operator": "UPD",
            "src": "job",
            "src_parent": "org.apache.accumulo.core.client.mapred.AbstractInputFormat.getInstance(job)",
            "src_parent_type": "Invocation",
            "src_type": "VariableRead"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Try",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Assignment",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "org.apache.accumulo.core.client.mapred.AbstractInputFormat.getInstance(job)",
            "src_parent": "org.apache.accumulo.core.client.impl.Tables.getTableId(org.apache.accumulo.core.client.mapred.AbstractInputFormat.getInstance(job), tableName)",
            "src_parent_type": "Invocation",
            "src_type": "Invocation"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "If",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "ForEach",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Try",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "tableId = org.apache.accumulo.core.client.impl.Tables.getTableId(org.apache.accumulo.core.client.mapred.AbstractInputFormat.getInstance(job), tableName)",
            "src_parent": "{\n    tableId = org.apache.accumulo.core.client.impl.Tables.getTableId(org.apache.accumulo.core.client.mapred.AbstractInputFormat.getInstance(job), tableName);\n    if (tableConfig.isOfflineScan()) {\n        binnedRanges = binOfflineTable(job, tableId, ranges);\n        while (binnedRanges == null) {\n            org.apache.accumulo.core.util.UtilWaitThread.sleep(100 + ((int) (java.lang.Math.random() * 100)));\n            binnedRanges = binOfflineTable(job, tableId, ranges);\n        } \n    } else {\n        org.apache.accumulo.core.client.Instance instance = org.apache.accumulo.core.client.mapred.AbstractInputFormat.getInstance(job);\n        tl = org.apache.accumulo.core.client.mapred.AbstractInputFormat.getTabletLocator(job, tableId);\n        tl.invalidateCache();\n        org.apache.accumulo.core.security.Credentials creds = new org.apache.accumulo.core.security.Credentials(org.apache.accumulo.core.client.mapred.AbstractInputFormat.getPrincipal(job), org.apache.accumulo.core.client.mapred.AbstractInputFormat.getAuthenticationToken(job));\n        while (!tl.binRanges(creds, ranges, binnedRanges).isEmpty()) {\n            if (!(instance instanceof org.apache.accumulo.core.client.mock.MockInstance)) {\n                if (!org.apache.accumulo.core.client.impl.Tables.exists(instance, tableId)) {\n                    throw new org.apache.accumulo.core.client.TableDeletedException(tableId);\n                }\n                if (org.apache.accumulo.core.client.impl.Tables.getTableState(instance, tableId) == org.apache.accumulo.core.master.state.tables.TableState.OFFLINE) {\n                    throw new org.apache.accumulo.core.client.TableOfflineException(instance, tableId);\n                }\n            }\n            binnedRanges.clear();\n            org.apache.accumulo.core.client.mapred.AbstractInputFormat.log.warn(\"Unable to locate bins for specified ranges. Retrying.\");\n            org.apache.accumulo.core.util.UtilWaitThread.sleep(100 + ((int) (java.lang.Math.random() * 100)));\n            tl.invalidateCache();\n        } \n    }\n}",
            "src_parent_type": "Block",
            "src_type": "Assignment"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Return",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "Invocation",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "ForEach",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "if (instance instanceof org.apache.accumulo.core.client.mock.MockInstance) {\n    tableId = \"\";\n} else {\n    tableId = org.apache.accumulo.core.client.impl.Tables.getTableId(instance, tableName);\n}",
            "src_parent": "{\n    org.apache.accumulo.core.client.Instance instance = org.apache.accumulo.core.client.mapred.AbstractInputFormat.getInstance(job);\n    if (instance instanceof org.apache.accumulo.core.client.mock.MockInstance) {\n        tableId = \"\";\n    } else {\n        tableId = org.apache.accumulo.core.client.impl.Tables.getTableId(instance, tableName);\n    }\n    if (tableConfig.isOfflineScan()) {\n        binnedRanges = binOfflineTable(job, tableId, ranges);\n        while (binnedRanges == null) {\n            org.apache.accumulo.core.util.UtilWaitThread.sleep(100 + ((int) (java.lang.Math.random() * 100)));\n            binnedRanges = binOfflineTable(job, tableId, ranges);\n        } \n    } else {\n        tl = org.apache.accumulo.core.client.mapred.AbstractInputFormat.getTabletLocator(job, tableId);\n        tl.invalidateCache();\n        org.apache.accumulo.core.security.Credentials creds = new org.apache.accumulo.core.security.Credentials(org.apache.accumulo.core.client.mapred.AbstractInputFormat.getPrincipal(job), org.apache.accumulo.core.client.mapred.AbstractInputFormat.getAuthenticationToken(job));\n        while (!tl.binRanges(creds, ranges, binnedRanges).isEmpty()) {\n            if (!(instance instanceof org.apache.accumulo.core.client.mock.MockInstance)) {\n                if (!org.apache.accumulo.core.client.impl.Tables.exists(instance, tableId)) {\n                    throw new org.apache.accumulo.core.client.TableDeletedException(tableId);\n                }\n                if (org.apache.accumulo.core.client.impl.Tables.getTableState(instance, tableId) == org.apache.accumulo.core.master.state.tables.TableState.OFFLINE) {\n                    throw new org.apache.accumulo.core.client.TableOfflineException(instance, tableId);\n                }\n            }\n            binnedRanges.clear();\n            org.apache.accumulo.core.client.mapred.AbstractInputFormat.log.warn(\"Unable to locate bins for specified ranges. Retrying.\");\n            org.apache.accumulo.core.util.UtilWaitThread.sleep(100 + ((int) (java.lang.Math.random() * 100)));\n            tl.invalidateCache();\n        } \n    }\n}",
            "src_parent_type": "Block",
            "src_type": "If"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "ForEach",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "Assignment",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "LocalVariable",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Try",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "true",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "{\n    if (instance instanceof org.apache.accumulo.core.client.mock.MockInstance) {\n        scanner = instance.getConnector(principal, token).createScanner(split.getTableName(), authorizations);\n    } else {\n        scanner = new org.apache.accumulo.core.client.impl.ScannerImpl(instance, new org.apache.accumulo.core.security.Credentials(principal, token), split.getTableId(), authorizations);\n    }\n}",
            "src_parent": "if (tableConfig.isOfflineScan()) {\n    scanner = new org.apache.accumulo.core.client.impl.OfflineScanner(instance, new org.apache.accumulo.core.security.Credentials(principal, token), split.getTableId(), authorizations);\n} else if (instance instanceof org.apache.accumulo.core.client.mock.MockInstance) {\n    scanner = instance.getConnector(principal, token).createScanner(split.getTableName(), authorizations);\n} else {\n    scanner = new org.apache.accumulo.core.client.impl.ScannerImpl(instance, new org.apache.accumulo.core.security.Credentials(principal, token), split.getTableId(), authorizations);\n}",
            "src_parent_type": "If",
            "src_type": "Block"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "Assignment",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Try",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "org.apache.accumulo.core.client.Instance instance = org.apache.accumulo.core.client.mapred.AbstractInputFormat.getInstance(job)",
            "dst_parent": "{\n    org.apache.accumulo.core.client.Instance instance = org.apache.accumulo.core.client.mapred.AbstractInputFormat.getInstance(job);\n    if (instance instanceof org.apache.accumulo.core.client.mock.MockInstance) {\n        tableId = \"\";\n    } else {\n        tableId = org.apache.accumulo.core.client.impl.Tables.getTableId(instance, tableName);\n    }\n    if (tableConfig.isOfflineScan()) {\n        binnedRanges = binOfflineTable(job, tableId, ranges);\n        while (binnedRanges == null) {\n            org.apache.accumulo.core.util.UtilWaitThread.sleep(100 + ((int) (java.lang.Math.random() * 100)));\n            binnedRanges = binOfflineTable(job, tableId, ranges);\n        } \n    } else {\n        tl = org.apache.accumulo.core.client.mapred.AbstractInputFormat.getTabletLocator(job, tableId);\n        tl.invalidateCache();\n        org.apache.accumulo.core.security.Credentials creds = new org.apache.accumulo.core.security.Credentials(org.apache.accumulo.core.client.mapred.AbstractInputFormat.getPrincipal(job), org.apache.accumulo.core.client.mapred.AbstractInputFormat.getAuthenticationToken(job));\n        while (!tl.binRanges(creds, ranges, binnedRanges).isEmpty()) {\n            if (!(instance instanceof org.apache.accumulo.core.client.mock.MockInstance)) {\n                if (!org.apache.accumulo.core.client.impl.Tables.exists(instance, tableId)) {\n                    throw new org.apache.accumulo.core.client.TableDeletedException(tableId);\n                }\n                if (org.apache.accumulo.core.client.impl.Tables.getTableState(instance, tableId) == org.apache.accumulo.core.master.state.tables.TableState.OFFLINE) {\n                    throw new org.apache.accumulo.core.client.TableOfflineException(instance, tableId);\n                }\n            }\n            binnedRanges.clear();\n            org.apache.accumulo.core.client.mapred.AbstractInputFormat.log.warn(\"Unable to locate bins for specified ranges. Retrying.\");\n            org.apache.accumulo.core.util.UtilWaitThread.sleep(100 + ((int) (java.lang.Math.random() * 100)));\n            tl.invalidateCache();\n        } \n    }\n}",
            "dst_parent_type": "Block",
            "dst_type": "LocalVariable",
            "operator": "MOV",
            "src": "org.apache.accumulo.core.client.Instance instance = org.apache.accumulo.core.client.mapred.AbstractInputFormat.getInstance(job)",
            "src_parent": "{\n    org.apache.accumulo.core.client.Instance instance = org.apache.accumulo.core.client.mapred.AbstractInputFormat.getInstance(job);\n    tl = org.apache.accumulo.core.client.mapred.AbstractInputFormat.getTabletLocator(job, tableId);\n    tl.invalidateCache();\n    org.apache.accumulo.core.security.Credentials creds = new org.apache.accumulo.core.security.Credentials(org.apache.accumulo.core.client.mapred.AbstractInputFormat.getPrincipal(job), org.apache.accumulo.core.client.mapred.AbstractInputFormat.getAuthenticationToken(job));\n    while (!tl.binRanges(creds, ranges, binnedRanges).isEmpty()) {\n        if (!(instance instanceof org.apache.accumulo.core.client.mock.MockInstance)) {\n            if (!org.apache.accumulo.core.client.impl.Tables.exists(instance, tableId)) {\n                throw new org.apache.accumulo.core.client.TableDeletedException(tableId);\n            }\n            if (org.apache.accumulo.core.client.impl.Tables.getTableState(instance, tableId) == org.apache.accumulo.core.master.state.tables.TableState.OFFLINE) {\n                throw new org.apache.accumulo.core.client.TableOfflineException(instance, tableId);\n            }\n        }\n        binnedRanges.clear();\n        org.apache.accumulo.core.client.mapred.AbstractInputFormat.log.warn(\"Unable to locate bins for specified ranges. Retrying.\");\n        org.apache.accumulo.core.util.UtilWaitThread.sleep(100 + ((int) (java.lang.Math.random() * 100)));\n        tl.invalidateCache();\n    } \n}",
            "src_parent_type": "Block",
            "src_type": "LocalVariable"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "Invocation",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Try",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "{\n    scanner = new org.apache.accumulo.core.client.impl.ScannerImpl(instance, new org.apache.accumulo.core.security.Credentials(principal, token), split.getTableId(), authorizations);\n}",
            "dst_parent": "if (instance instanceof org.apache.accumulo.core.client.mock.MockInstance) {\n    scanner = instance.getConnector(principal, token).createScanner(split.getTableName(), authorizations);\n} else {\n    scanner = new org.apache.accumulo.core.client.impl.ScannerImpl(instance, new org.apache.accumulo.core.security.Credentials(principal, token), split.getTableId(), authorizations);\n}",
            "dst_parent_type": "If",
            "dst_type": "Block",
            "operator": "MOV",
            "src": "{\n    scanner = new org.apache.accumulo.core.client.impl.ScannerImpl(instance, new org.apache.accumulo.core.security.Credentials(principal, token), split.getTableId(), authorizations);\n}",
            "src_parent": "if (tableConfig.isOfflineScan()) {\n    scanner = new org.apache.accumulo.core.client.impl.OfflineScanner(instance, new org.apache.accumulo.core.security.Credentials(principal, token), split.getTableId(), authorizations);\n} else {\n    scanner = new org.apache.accumulo.core.client.impl.ScannerImpl(instance, new org.apache.accumulo.core.security.Credentials(principal, token), split.getTableId(), authorizations);\n}",
            "src_parent_type": "If",
            "src_type": "Block"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Try",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Assignment",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "tableId",
            "dst_parent": "tableId = org.apache.accumulo.core.client.impl.Tables.getTableId(instance, tableName)",
            "dst_parent_type": "Assignment",
            "dst_type": "VariableWrite",
            "operator": "MOV",
            "src": "tableId",
            "src_parent": "tableId = org.apache.accumulo.core.client.impl.Tables.getTableId(org.apache.accumulo.core.client.mapred.AbstractInputFormat.getInstance(job), tableName)",
            "src_parent_type": "Assignment",
            "src_type": "VariableWrite"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Try",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Assignment",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "org.apache.accumulo.core.client.impl.Tables.getTableId(instance, tableName)",
            "dst_parent": "tableId = org.apache.accumulo.core.client.impl.Tables.getTableId(instance, tableName)",
            "dst_parent_type": "Assignment",
            "dst_type": "Invocation",
            "operator": "MOV",
            "src": "org.apache.accumulo.core.client.impl.Tables.getTableId(org.apache.accumulo.core.client.mapred.AbstractInputFormat.getInstance(job), tableName)",
            "src_parent": "tableId = org.apache.accumulo.core.client.impl.Tables.getTableId(org.apache.accumulo.core.client.mapred.AbstractInputFormat.getInstance(job), tableName)",
            "src_parent_type": "Assignment",
            "src_type": "Invocation"
          }
        }
      ],
      "file_name": "AbstractInputFormat"
    }
  ],
  "id": "accumulo_941e3cb1"
}