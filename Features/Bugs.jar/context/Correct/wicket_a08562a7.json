{
  "files": [
    {
      "features": [
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "LocalVariable",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Constructor",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "ForEach",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "if (header instanceof org.apache.wicket.markup.html.border.Border) {\n    ((org.apache.wicket.markup.html.border.Border) (header)).addToBody(column.getHeader(\"label\"));\n} else {\n    header.add(column.getHeader(\"label\"));\n}",
            "src_parent": "{\n    org.apache.wicket.markup.html.list.AbstractItem item = new org.apache.wicket.markup.html.list.AbstractItem(headers.newChildId());\n    headers.add(item);\n    org.apache.wicket.markup.html.WebMarkupContainer header = null;\n    if (column.isSortable()) {\n        header = newSortableHeader(\"header\", column.getSortProperty(), stateLocator);\n    } else {\n        header = new org.apache.wicket.markup.html.WebMarkupContainer(\"header\");\n    }\n    if (column instanceof org.apache.wicket.extensions.markup.html.repeater.data.table.IStyledColumn) {\n        header.add(new org.apache.wicket.extensions.markup.html.repeater.data.table.DataTable.CssAttributeBehavior() {\n            private static final long serialVersionUID = 1L;\n\n            @java.lang.Override\n            protected java.lang.String getCssClass() {\n                return ((org.apache.wicket.extensions.markup.html.repeater.data.table.IStyledColumn<?>) (column)).getCssClass();\n            }\n        });\n    }\n    item.add(header);\n    item.setRenderBodyOnly(true);\n    if (header instanceof org.apache.wicket.markup.html.border.Border) {\n        ((org.apache.wicket.markup.html.border.Border) (header)).addToBody(column.getHeader(\"label\"));\n    } else {\n        header.add(column.getHeader(\"label\"));\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "If"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "LocalVariable",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Constructor",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "ForEach",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "header.add(column.getHeader(\"label\"))",
            "dst_parent": "{\n    header.add(column.getHeader(\"label\"));\n}",
            "dst_parent_type": "Block",
            "dst_type": "Invocation",
            "operator": "MOV",
            "src": "header.add(column.getHeader(\"label\"))",
            "src_parent": "{\n    org.apache.wicket.markup.html.list.AbstractItem item = new org.apache.wicket.markup.html.list.AbstractItem(headers.newChildId());\n    headers.add(item);\n    org.apache.wicket.markup.html.WebMarkupContainer header = null;\n    if (column.isSortable()) {\n        header = newSortableHeader(\"header\", column.getSortProperty(), stateLocator);\n    } else {\n        header = new org.apache.wicket.markup.html.WebMarkupContainer(\"header\");\n    }\n    if (column instanceof org.apache.wicket.extensions.markup.html.repeater.data.table.IStyledColumn) {\n        header.add(new org.apache.wicket.extensions.markup.html.repeater.data.table.DataTable.CssAttributeBehavior() {\n            private static final long serialVersionUID = 1L;\n\n            @java.lang.Override\n            protected java.lang.String getCssClass() {\n                return ((org.apache.wicket.extensions.markup.html.repeater.data.table.IStyledColumn<?>) (column)).getCssClass();\n            }\n        });\n    }\n    item.add(header);\n    item.setRenderBodyOnly(true);\n    header.add(column.getHeader(\"label\"));\n}",
            "src_parent_type": "Block",
            "src_type": "Invocation"
          }
        }
      ],
      "file_name": "HeadersToolbar"
    }
  ],
  "id": "wicket_a08562a7"
}