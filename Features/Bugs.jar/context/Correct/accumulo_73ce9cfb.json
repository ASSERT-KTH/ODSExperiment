{
  "files": [
    {
      "features": [
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "Return",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Invocation",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "serialize()",
            "src_parent": "{\n    serialize();\n    m.serialize();\n    if ((java.util.Arrays.equals(row, m.row) && (entries == m.entries)) && java.util.Arrays.equals(data, m.data)) {\n        if ((values == null) && (m.values == null)) {\n            return true;\n        }\n        if (((values != null) && (m.values != null)) && (values.size() == m.values.size())) {\n            for (int i = 0; i < values.size(); i++) {\n                if (!java.util.Arrays.equals(values.get(i), m.values.get(i))) {\n                    return false;\n                }\n            }\n            return true;\n        }\n    }\n    return false;\n}",
            "src_parent_type": "Block",
            "src_type": "Invocation"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "Return",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Invocation",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "m.serialize()",
            "src_parent": "{\n    serialize();\n    m.serialize();\n    if ((java.util.Arrays.equals(row, m.row) && (entries == m.entries)) && java.util.Arrays.equals(data, m.data)) {\n        if ((values == null) && (m.values == null)) {\n            return true;\n        }\n        if (((values != null) && (m.values != null)) && (values.size() == m.values.size())) {\n            for (int i = 0; i < values.size(); i++) {\n                if (!java.util.Arrays.equals(values.get(i), m.values.get(i))) {\n                    return false;\n                }\n            }\n            return true;\n        }\n    }\n    return false;\n}",
            "src_parent_type": "Block",
            "src_type": "Invocation"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Return",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "data",
            "src_parent": "java.util.Arrays.equals(data, m.data)",
            "src_parent_type": "Invocation",
            "src_type": "FieldRead"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Return",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "m.data",
            "src_parent": "java.util.Arrays.equals(data, m.data)",
            "src_parent_type": "Invocation",
            "src_type": "FieldRead"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Return",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Invocation",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "serialize()",
            "src_parent": "{\n    serialize();\n    return new org.apache.accumulo.core.data.thrift.TMutation(java.nio.ByteBuffer.wrap(row), java.nio.ByteBuffer.wrap(data), org.apache.accumulo.core.util.ByteBufferUtil.toByteBuffers(values), entries);\n}",
            "src_parent_type": "Block",
            "src_type": "Invocation"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Return",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "data",
            "src_parent": "java.nio.ByteBuffer.wrap(data)",
            "src_parent_type": "Invocation",
            "src_type": "FieldRead"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Package",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "true",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Class",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "private byte[] serializedSnapshot() {\n    if (buffer != null) {\n        return buffer.toArray();\n    } else {\n        return this.data;\n    }\n}",
            "src_parent": "public class Mutation implements org.apache.hadoop.io.Writable {\n    static final int VALUE_SIZE_COPY_CUTOFF = 1 << 15;\n\n    public static enum SERIALIZED_FORMAT {\n\n        VERSION1,\n        VERSION2;}\n\n    private boolean useOldDeserialize = false;\n\n    private byte[] row;\n\n    private byte[] data;\n\n    private int entries;\n\n    private java.util.List<byte[]> values;\n\n    private static class ByteBuffer {\n        int offset;\n\n        byte[] data = new byte[64];\n\n        private void reserve(int l) {\n            if ((offset + l) > data.length) {\n                int newSize = data.length * 2;\n                while (newSize <= (offset + l)) {\n                    newSize = newSize * 2;\n                } \n                byte[] newData = new byte[newSize];\n                java.lang.System.arraycopy(data, 0, newData, 0, offset);\n                data = newData;\n            }\n        }\n\n        public void add(byte[] bytes, int off, int length) {\n            reserve(length);\n            java.lang.System.arraycopy(bytes, off, data, offset, length);\n            offset += length;\n        }\n\n        void add(boolean b) {\n            reserve(1);\n            if (b) {\n                data[offset++] = 1;\n            } else {\n                data[offset++] = 0;\n            }\n        }\n\n        public byte[] toArray() {\n            byte[] ret = new byte[offset];\n            java.lang.System.arraycopy(data, 0, ret, 0, offset);\n            return ret;\n        }\n\n        public void writeVLong(long i) {\n            reserve(9);\n            if ((i >= (-112)) && (i <= 127)) {\n                data[offset++] = ((byte) (i));\n                return;\n            }\n            int len = -112;\n            if (i < 0) {\n                i ^= -1L;\n                len = -120;\n            }\n            long tmp = i;\n            while (tmp != 0) {\n                tmp = tmp >> 8;\n                len--;\n            } \n            data[offset++] = ((byte) (len));\n            len = (len < (-120)) ? -(len + 120) : -(len + 112);\n            for (int idx = len; idx != 0; idx--) {\n                int shiftbits = (idx - 1) * 8;\n                long mask = 0xffL << shiftbits;\n                data[offset++] = ((byte) ((i & mask) >> shiftbits));\n            }\n        }\n    }\n\n    private static class SimpleReader {\n        int offset;\n\n        byte[] data;\n\n        SimpleReader(byte[] b) {\n            this.data = b;\n        }\n\n        int readInt() {\n            return (((data[offset++] << 24) + ((data[offset++] & 255) << 16)) + ((data[offset++] & 255) << 8)) + ((data[offset++] & 255) << 0);\n        }\n\n        long readLong() {\n            return (((((((((long) (data[offset++])) << 56) + (((long) (data[offset++] & 255)) << 48)) + (((long) (data[offset++] & 255)) << 40)) + (((long) (data[offset++] & 255)) << 32)) + (((long) (data[offset++] & 255)) << 24)) + ((data[offset++] & 255) << 16)) + ((data[offset++] & 255) << 8)) + ((data[offset++] & 255) << 0);\n        }\n\n        void readBytes(byte[] b) {\n            java.lang.System.arraycopy(data, offset, b, 0, b.length);\n            offset += b.length;\n        }\n\n        boolean readBoolean() {\n            return data[offset++] == 1;\n        }\n\n        long readVLong() {\n            byte firstByte = data[offset++];\n            int len = org.apache.hadoop.io.WritableUtils.decodeVIntSize(firstByte);\n            if (len == 1) {\n                return firstByte;\n            }\n            long i = 0;\n            for (int idx = 0; idx < (len - 1); idx++) {\n                byte b = data[offset++];\n                i = i << 8;\n                i = i | (b & 0xff);\n            }\n            return org.apache.hadoop.io.WritableUtils.isNegativeVInt(firstByte) ? i ^ (-1L) : i;\n        }\n    }\n\n    private org.apache.accumulo.core.data.Mutation.ByteBuffer buffer;\n\n    private java.util.List<org.apache.accumulo.core.data.ColumnUpdate> updates;\n\n    private static final byte[] EMPTY_BYTES = new byte[0];\n\n    private void serialize() {\n        if (buffer != null) {\n            data = buffer.toArray();\n            buffer = null;\n        }\n    }\n\n    private byte[] serializedSnapshot() {\n        if (buffer != null) {\n            return buffer.toArray();\n        } else {\n            return this.data;\n        }\n    }\n\n    public Mutation(byte[] row) {\n        this(row, 0, row.length);\n    }\n\n    public Mutation(byte[] row, int start, int length) {\n        this.row = new byte[length];\n        java.lang.System.arraycopy(row, start, this.row, 0, length);\n        buffer = new org.apache.accumulo.core.data.Mutation.ByteBuffer();\n    }\n\n    public Mutation(org.apache.hadoop.io.Text row) {\n        this(row.getBytes(), 0, row.getLength());\n    }\n\n    public Mutation(java.lang.CharSequence row) {\n        this(new org.apache.hadoop.io.Text(row.toString()));\n    }\n\n    public Mutation() {\n    }\n\n    public Mutation(org.apache.accumulo.core.data.thrift.TMutation tmutation) {\n        this.row = org.apache.accumulo.core.util.ByteBufferUtil.toBytes(tmutation.row);\n        this.data = org.apache.accumulo.core.util.ByteBufferUtil.toBytes(tmutation.data);\n        this.entries = tmutation.entries;\n        this.values = org.apache.accumulo.core.util.ByteBufferUtil.toBytesList(tmutation.values);\n        if (this.row == null) {\n            throw new java.lang.IllegalArgumentException(\"null row\");\n        }\n        if (this.data == null) {\n            throw new java.lang.IllegalArgumentException(\"null serialized data\");\n        }\n    }\n\n    public Mutation(org.apache.accumulo.core.data.Mutation m) {\n        m.serialize();\n        this.row = m.row;\n        this.data = m.data;\n        this.entries = m.entries;\n        this.values = m.values;\n    }\n\n    public byte[] getRow() {\n        return row;\n    }\n\n    private void put(byte[] b) {\n        put(b, b.length);\n    }\n\n    private void put(byte[] b, int length) {\n        buffer.writeVLong(length);\n        buffer.add(b, 0, length);\n    }\n\n    private void put(boolean b) {\n        buffer.add(b);\n    }\n\n    private void put(int i) {\n        buffer.writeVLong(i);\n    }\n\n    private void put(long l) {\n        buffer.writeVLong(l);\n    }\n\n    private void put(byte[] cf, byte[] cq, byte[] cv, boolean hasts, long ts, boolean deleted, byte[] val) {\n        put(cf, cf.length, cq, cq.length, cv, hasts, ts, deleted, val, val.length);\n    }\n\n    private void put(org.apache.hadoop.io.Text cf, org.apache.hadoop.io.Text cq, byte[] cv, boolean hasts, long ts, boolean deleted, byte[] val) {\n        put(cf.getBytes(), cf.getLength(), cq.getBytes(), cq.getLength(), cv, hasts, ts, deleted, val, val.length);\n    }\n\n    private void put(byte[] cf, int cfLength, byte[] cq, int cqLength, byte[] cv, boolean hasts, long ts, boolean deleted, byte[] val, int valLength) {\n        if (buffer == null) {\n            throw new java.lang.IllegalStateException(\"Can not add to mutation after serializing it\");\n        }\n        put(cf, cfLength);\n        put(cq, cqLength);\n        put(cv);\n        put(hasts);\n        if (hasts) {\n            put(ts);\n        }\n        put(deleted);\n        if (valLength < org.apache.accumulo.core.data.Mutation.VALUE_SIZE_COPY_CUTOFF) {\n            put(val, valLength);\n        } else {\n            if (values == null) {\n                values = new java.util.ArrayList<byte[]>();\n            }\n            byte[] copy = new byte[valLength];\n            java.lang.System.arraycopy(val, 0, copy, 0, valLength);\n            values.add(copy);\n            put((-1) * values.size());\n        }\n        entries++;\n    }\n\n    private void put(java.lang.CharSequence cf, java.lang.CharSequence cq, byte[] cv, boolean hasts, long ts, boolean deleted, byte[] val) {\n        put(new org.apache.hadoop.io.Text(cf.toString()), new org.apache.hadoop.io.Text(cq.toString()), cv, hasts, ts, deleted, val);\n    }\n\n    private void put(org.apache.hadoop.io.Text cf, org.apache.hadoop.io.Text cq, byte[] cv, boolean hasts, long ts, boolean deleted, org.apache.hadoop.io.Text val) {\n        put(cf.getBytes(), cf.getLength(), cq.getBytes(), cq.getLength(), cv, hasts, ts, deleted, val.getBytes(), val.getLength());\n    }\n\n    private void put(java.lang.CharSequence cf, java.lang.CharSequence cq, byte[] cv, boolean hasts, long ts, boolean deleted, java.lang.CharSequence val) {\n        put(new org.apache.hadoop.io.Text(cf.toString()), new org.apache.hadoop.io.Text(cq.toString()), cv, hasts, ts, deleted, new org.apache.hadoop.io.Text(val.toString()));\n    }\n\n    public void put(org.apache.hadoop.io.Text columnFamily, org.apache.hadoop.io.Text columnQualifier, org.apache.accumulo.core.data.Value value) {\n        put(columnFamily, columnQualifier, org.apache.accumulo.core.data.Mutation.EMPTY_BYTES, false, 0L, false, value.get());\n    }\n\n    public void put(org.apache.hadoop.io.Text columnFamily, org.apache.hadoop.io.Text columnQualifier, org.apache.accumulo.core.security.ColumnVisibility columnVisibility, org.apache.accumulo.core.data.Value value) {\n        put(columnFamily, columnQualifier, columnVisibility.getExpression(), false, 0L, false, value.get());\n    }\n\n    public void put(org.apache.hadoop.io.Text columnFamily, org.apache.hadoop.io.Text columnQualifier, long timestamp, org.apache.accumulo.core.data.Value value) {\n        put(columnFamily, columnQualifier, org.apache.accumulo.core.data.Mutation.EMPTY_BYTES, true, timestamp, false, value.get());\n    }\n\n    public void put(org.apache.hadoop.io.Text columnFamily, org.apache.hadoop.io.Text columnQualifier, org.apache.accumulo.core.security.ColumnVisibility columnVisibility, long timestamp, org.apache.accumulo.core.data.Value value) {\n        put(columnFamily, columnQualifier, columnVisibility.getExpression(), true, timestamp, false, value.get());\n    }\n\n    public void putDelete(org.apache.hadoop.io.Text columnFamily, org.apache.hadoop.io.Text columnQualifier) {\n        put(columnFamily, columnQualifier, org.apache.accumulo.core.data.Mutation.EMPTY_BYTES, false, 0L, true, org.apache.accumulo.core.data.Mutation.EMPTY_BYTES);\n    }\n\n    public void putDelete(org.apache.hadoop.io.Text columnFamily, org.apache.hadoop.io.Text columnQualifier, org.apache.accumulo.core.security.ColumnVisibility columnVisibility) {\n        put(columnFamily, columnQualifier, columnVisibility.getExpression(), false, 0L, true, org.apache.accumulo.core.data.Mutation.EMPTY_BYTES);\n    }\n\n    public void putDelete(org.apache.hadoop.io.Text columnFamily, org.apache.hadoop.io.Text columnQualifier, long timestamp) {\n        put(columnFamily, columnQualifier, org.apache.accumulo.core.data.Mutation.EMPTY_BYTES, true, timestamp, true, org.apache.accumulo.core.data.Mutation.EMPTY_BYTES);\n    }\n\n    public void putDelete(org.apache.hadoop.io.Text columnFamily, org.apache.hadoop.io.Text columnQualifier, org.apache.accumulo.core.security.ColumnVisibility columnVisibility, long timestamp) {\n        put(columnFamily, columnQualifier, columnVisibility.getExpression(), true, timestamp, true, org.apache.accumulo.core.data.Mutation.EMPTY_BYTES);\n    }\n\n    public void put(java.lang.CharSequence columnFamily, java.lang.CharSequence columnQualifier, org.apache.accumulo.core.data.Value value) {\n        put(columnFamily, columnQualifier, org.apache.accumulo.core.data.Mutation.EMPTY_BYTES, false, 0L, false, value.get());\n    }\n\n    public void put(java.lang.CharSequence columnFamily, java.lang.CharSequence columnQualifier, org.apache.accumulo.core.security.ColumnVisibility columnVisibility, org.apache.accumulo.core.data.Value value) {\n        put(columnFamily, columnQualifier, columnVisibility.getExpression(), false, 0L, false, value.get());\n    }\n\n    public void put(java.lang.CharSequence columnFamily, java.lang.CharSequence columnQualifier, long timestamp, org.apache.accumulo.core.data.Value value) {\n        put(columnFamily, columnQualifier, org.apache.accumulo.core.data.Mutation.EMPTY_BYTES, true, timestamp, false, value.get());\n    }\n\n    public void put(java.lang.CharSequence columnFamily, java.lang.CharSequence columnQualifier, org.apache.accumulo.core.security.ColumnVisibility columnVisibility, long timestamp, org.apache.accumulo.core.data.Value value) {\n        put(columnFamily, columnQualifier, columnVisibility.getExpression(), true, timestamp, false, value.get());\n    }\n\n    public void putDelete(java.lang.CharSequence columnFamily, java.lang.CharSequence columnQualifier) {\n        put(columnFamily, columnQualifier, org.apache.accumulo.core.data.Mutation.EMPTY_BYTES, false, 0L, true, org.apache.accumulo.core.data.Mutation.EMPTY_BYTES);\n    }\n\n    public void putDelete(java.lang.CharSequence columnFamily, java.lang.CharSequence columnQualifier, org.apache.accumulo.core.security.ColumnVisibility columnVisibility) {\n        put(columnFamily, columnQualifier, columnVisibility.getExpression(), false, 0L, true, org.apache.accumulo.core.data.Mutation.EMPTY_BYTES);\n    }\n\n    public void putDelete(java.lang.CharSequence columnFamily, java.lang.CharSequence columnQualifier, long timestamp) {\n        put(columnFamily, columnQualifier, org.apache.accumulo.core.data.Mutation.EMPTY_BYTES, true, timestamp, true, org.apache.accumulo.core.data.Mutation.EMPTY_BYTES);\n    }\n\n    public void putDelete(java.lang.CharSequence columnFamily, java.lang.CharSequence columnQualifier, org.apache.accumulo.core.security.ColumnVisibility columnVisibility, long timestamp) {\n        put(columnFamily, columnQualifier, columnVisibility.getExpression(), true, timestamp, true, org.apache.accumulo.core.data.Mutation.EMPTY_BYTES);\n    }\n\n    public void put(java.lang.CharSequence columnFamily, java.lang.CharSequence columnQualifier, java.lang.CharSequence value) {\n        put(columnFamily, columnQualifier, org.apache.accumulo.core.data.Mutation.EMPTY_BYTES, false, 0L, false, value);\n    }\n\n    public void put(java.lang.CharSequence columnFamily, java.lang.CharSequence columnQualifier, org.apache.accumulo.core.security.ColumnVisibility columnVisibility, java.lang.CharSequence value) {\n        put(columnFamily, columnQualifier, columnVisibility.getExpression(), false, 0L, false, value);\n    }\n\n    public void put(java.lang.CharSequence columnFamily, java.lang.CharSequence columnQualifier, long timestamp, java.lang.CharSequence value) {\n        put(columnFamily, columnQualifier, org.apache.accumulo.core.data.Mutation.EMPTY_BYTES, true, timestamp, false, value);\n    }\n\n    public void put(java.lang.CharSequence columnFamily, java.lang.CharSequence columnQualifier, org.apache.accumulo.core.security.ColumnVisibility columnVisibility, long timestamp, java.lang.CharSequence value) {\n        put(columnFamily, columnQualifier, columnVisibility.getExpression(), true, timestamp, false, value);\n    }\n\n    public void put(byte[] columnFamily, byte[] columnQualifier, byte[] value) {\n        put(columnFamily, columnQualifier, org.apache.accumulo.core.data.Mutation.EMPTY_BYTES, false, 0L, false, value);\n    }\n\n    public void put(byte[] columnFamily, byte[] columnQualifier, org.apache.accumulo.core.security.ColumnVisibility columnVisibility, byte[] value) {\n        put(columnFamily, columnQualifier, columnVisibility.getExpression(), false, 0L, false, value);\n    }\n\n    public void put(byte[] columnFamily, byte[] columnQualifier, long timestamp, byte[] value) {\n        put(columnFamily, columnQualifier, org.apache.accumulo.core.data.Mutation.EMPTY_BYTES, true, timestamp, false, value);\n    }\n\n    public void put(byte[] columnFamily, byte[] columnQualifier, org.apache.accumulo.core.security.ColumnVisibility columnVisibility, long timestamp, byte[] value) {\n        put(columnFamily, columnQualifier, columnVisibility.getExpression(), true, timestamp, false, value);\n    }\n\n    public void putDelete(byte[] columnFamily, byte[] columnQualifier) {\n        put(columnFamily, columnQualifier, org.apache.accumulo.core.data.Mutation.EMPTY_BYTES, false, 0L, true, org.apache.accumulo.core.data.Mutation.EMPTY_BYTES);\n    }\n\n    public void putDelete(byte[] columnFamily, byte[] columnQualifier, org.apache.accumulo.core.security.ColumnVisibility columnVisibility) {\n        put(columnFamily, columnQualifier, columnVisibility.getExpression(), false, 0L, true, org.apache.accumulo.core.data.Mutation.EMPTY_BYTES);\n    }\n\n    public void putDelete(byte[] columnFamily, byte[] columnQualifier, long timestamp) {\n        put(columnFamily, columnQualifier, org.apache.accumulo.core.data.Mutation.EMPTY_BYTES, true, timestamp, true, org.apache.accumulo.core.data.Mutation.EMPTY_BYTES);\n    }\n\n    public void putDelete(byte[] columnFamily, byte[] columnQualifier, org.apache.accumulo.core.security.ColumnVisibility columnVisibility, long timestamp) {\n        put(columnFamily, columnQualifier, columnVisibility.getExpression(), true, timestamp, true, org.apache.accumulo.core.data.Mutation.EMPTY_BYTES);\n    }\n\n    private byte[] oldReadBytes(org.apache.accumulo.core.data.Mutation.SimpleReader in) {\n        int len = in.readInt();\n        if (len == 0) {\n            return org.apache.accumulo.core.data.Mutation.EMPTY_BYTES;\n        }\n        byte[] bytes = new byte[len];\n        in.readBytes(bytes);\n        return bytes;\n    }\n\n    private byte[] readBytes(org.apache.accumulo.core.data.Mutation.SimpleReader in) {\n        int len = ((int) (in.readVLong()));\n        if (len == 0) {\n            return org.apache.accumulo.core.data.Mutation.EMPTY_BYTES;\n        }\n        byte[] bytes = new byte[len];\n        in.readBytes(bytes);\n        return bytes;\n    }\n\n    public java.util.List<org.apache.accumulo.core.data.ColumnUpdate> getUpdates() {\n        serialize();\n        org.apache.accumulo.core.data.Mutation.SimpleReader in = new org.apache.accumulo.core.data.Mutation.SimpleReader(data);\n        if (updates == null) {\n            if (entries == 1) {\n                updates = java.util.Collections.singletonList(deserializeColumnUpdate(in));\n            } else {\n                org.apache.accumulo.core.data.ColumnUpdate[] tmpUpdates = new org.apache.accumulo.core.data.ColumnUpdate[entries];\n                for (int i = 0; i < entries; i++) {\n                    tmpUpdates[i] = deserializeColumnUpdate(in);\n                }\n                updates = java.util.Arrays.asList(tmpUpdates);\n            }\n        }\n        return updates;\n    }\n\n    protected org.apache.accumulo.core.data.ColumnUpdate newColumnUpdate(byte[] cf, byte[] cq, byte[] cv, boolean hasts, long ts, boolean deleted, byte[] val) {\n        return new org.apache.accumulo.core.data.ColumnUpdate(cf, cq, cv, hasts, ts, deleted, val);\n    }\n\n    private org.apache.accumulo.core.data.ColumnUpdate deserializeColumnUpdate(org.apache.accumulo.core.data.Mutation.SimpleReader in) {\n        byte[] cf = readBytes(in);\n        byte[] cq = readBytes(in);\n        byte[] cv = readBytes(in);\n        boolean hasts = in.readBoolean();\n        long ts = 0;\n        if (hasts) {\n            ts = in.readVLong();\n        }\n        boolean deleted = in.readBoolean();\n        byte[] val;\n        int valLen = ((int) (in.readVLong()));\n        if (valLen < 0) {\n            val = values.get(((-1) * valLen) - 1);\n        } else if (valLen == 0) {\n            val = org.apache.accumulo.core.data.Mutation.EMPTY_BYTES;\n        } else {\n            val = new byte[valLen];\n            in.readBytes(val);\n        }\n        return newColumnUpdate(cf, cq, cv, hasts, ts, deleted, val);\n    }\n\n    private int cachedValLens = -1;\n\n    long getValueLengths() {\n        if (values == null) {\n            return 0;\n        }\n        if (cachedValLens == (-1)) {\n            int tmpCVL = 0;\n            for (byte[] val : values) {\n                tmpCVL += val.length;\n            }\n            cachedValLens = tmpCVL;\n        }\n        return cachedValLens;\n    }\n\n    public long numBytes() {\n        serialize();\n        return (row.length + data.length) + getValueLengths();\n    }\n\n    public long estimatedMemoryUsed() {\n        return numBytes() + 238;\n    }\n\n    public int size() {\n        return entries;\n    }\n\n    @java.lang.Override\n    public void readFields(java.io.DataInput in) throws java.io.IOException {\n        updates = null;\n        cachedValLens = -1;\n        buffer = null;\n        useOldDeserialize = false;\n        byte first = in.readByte();\n        if ((first & 0x80) != 0x80) {\n            oldReadFields(first, in);\n            useOldDeserialize = true;\n            return;\n        }\n        int len = org.apache.hadoop.io.WritableUtils.readVInt(in);\n        row = new byte[len];\n        in.readFully(row);\n        len = org.apache.hadoop.io.WritableUtils.readVInt(in);\n        data = new byte[len];\n        in.readFully(data);\n        entries = org.apache.hadoop.io.WritableUtils.readVInt(in);\n        boolean valuesPresent = (first & 0x1) == 0x1;\n        if (!valuesPresent) {\n            values = null;\n        } else {\n            values = new java.util.ArrayList<byte[]>();\n            int numValues = org.apache.hadoop.io.WritableUtils.readVInt(in);\n            for (int i = 0; i < numValues; i++) {\n                len = org.apache.hadoop.io.WritableUtils.readVInt(in);\n                byte[] val = new byte[len];\n                in.readFully(val);\n                values.add(val);\n            }\n        }\n    }\n\n    protected void droppingOldTimestamp(long ts) {\n    }\n\n    private void oldReadFields(byte first, java.io.DataInput in) throws java.io.IOException {\n        byte b = ((byte) (in.readByte()));\n        byte c = ((byte) (in.readByte()));\n        byte d = ((byte) (in.readByte()));\n        int len = ((((first & 0xff) << 24) | ((b & 0xff) << 16)) | ((c & 0xff) << 8)) | (d & 0xff);\n        row = new byte[len];\n        in.readFully(row);\n        len = in.readInt();\n        byte[] localData = new byte[len];\n        in.readFully(localData);\n        int localEntries = in.readInt();\n        java.util.List<byte[]> localValues;\n        boolean valuesPresent = in.readBoolean();\n        if (!valuesPresent) {\n            localValues = null;\n        } else {\n            localValues = new java.util.ArrayList<byte[]>();\n            int numValues = in.readInt();\n            for (int i = 0; i < numValues; i++) {\n                len = in.readInt();\n                byte[] val = new byte[len];\n                in.readFully(val);\n                localValues.add(val);\n            }\n        }\n        org.apache.accumulo.core.data.Mutation.SimpleReader din = new org.apache.accumulo.core.data.Mutation.SimpleReader(localData);\n        buffer = new org.apache.accumulo.core.data.Mutation.ByteBuffer();\n        for (int i = 0; i < localEntries; i++) {\n            byte[] cf = oldReadBytes(din);\n            byte[] cq = oldReadBytes(din);\n            byte[] cv = oldReadBytes(din);\n            boolean hasts = din.readBoolean();\n            long ts = din.readLong();\n            boolean deleted = din.readBoolean();\n            byte[] val;\n            int valLen = din.readInt();\n            if (valLen < 0) {\n                val = localValues.get(((-1) * valLen) - 1);\n            } else if (valLen == 0) {\n                val = org.apache.accumulo.core.data.Mutation.EMPTY_BYTES;\n            } else {\n                val = new byte[valLen];\n                din.readBytes(val);\n            }\n            put(cf, cq, cv, hasts, ts, deleted, val);\n            if (!hasts) {\n                droppingOldTimestamp(ts);\n            }\n        }\n        serialize();\n    }\n\n    @java.lang.Override\n    public void write(java.io.DataOutput out) throws java.io.IOException {\n        serialize();\n        byte hasValues = (values == null) ? 0 : ((byte) (1));\n        out.write(((byte) (0x80 | hasValues)));\n        org.apache.hadoop.io.WritableUtils.writeVInt(out, row.length);\n        out.write(row);\n        org.apache.hadoop.io.WritableUtils.writeVInt(out, data.length);\n        out.write(data);\n        org.apache.hadoop.io.WritableUtils.writeVInt(out, entries);\n        if (hasValues > 0) {\n            org.apache.hadoop.io.WritableUtils.writeVInt(out, values.size());\n            for (int i = 0; i < values.size(); i++) {\n                byte[] val = values.get(i);\n                org.apache.hadoop.io.WritableUtils.writeVInt(out, val.length);\n                out.write(val);\n            }\n        }\n    }\n\n    @java.lang.Override\n    public boolean equals(java.lang.Object o) {\n        if (o instanceof org.apache.accumulo.core.data.Mutation) {\n            return equals(((org.apache.accumulo.core.data.Mutation) (o)));\n        }\n        return false;\n    }\n\n    @java.lang.Override\n    public int hashCode() {\n        return toThrift(false).hashCode();\n    }\n\n    public boolean equals(org.apache.accumulo.core.data.Mutation m) {\n        byte[] myData = serializedSnapshot();\n        byte[] otherData = m.serializedSnapshot();\n        if ((java.util.Arrays.equals(row, m.row) && (entries == m.entries)) && java.util.Arrays.equals(myData, otherData)) {\n            if ((values == null) && (m.values == null)) {\n                return true;\n            }\n            if (((values != null) && (m.values != null)) && (values.size() == m.values.size())) {\n                for (int i = 0; i < values.size(); i++) {\n                    if (!java.util.Arrays.equals(values.get(i), m.values.get(i))) {\n                        return false;\n                    }\n                }\n                return true;\n            }\n        }\n        return false;\n    }\n\n    public org.apache.accumulo.core.data.thrift.TMutation toThrift() {\n        return toThrift(true);\n    }\n\n    private org.apache.accumulo.core.data.thrift.TMutation toThrift(boolean serialize) {\n        byte[] data;\n        if (serialize) {\n            this.serialize();\n            data = this.data;\n        } else {\n            data = serializedSnapshot();\n        }\n        return new org.apache.accumulo.core.data.thrift.TMutation(java.nio.ByteBuffer.wrap(row), java.nio.ByteBuffer.wrap(data), org.apache.accumulo.core.util.ByteBufferUtil.toByteBuffers(values), entries);\n    }\n\n    protected org.apache.accumulo.core.data.Mutation.SERIALIZED_FORMAT getSerializedFormat() {\n        return this.useOldDeserialize ? org.apache.accumulo.core.data.Mutation.SERIALIZED_FORMAT.VERSION1 : org.apache.accumulo.core.data.Mutation.SERIALIZED_FORMAT.VERSION2;\n    }\n}",
            "src_parent_type": "Class",
            "src_type": "Method"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Package",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "true",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Class",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "public org.apache.accumulo.core.data.thrift.TMutation toThrift() {\n    return toThrift(true);\n}",
            "src_parent": "public class Mutation implements org.apache.hadoop.io.Writable {\n    static final int VALUE_SIZE_COPY_CUTOFF = 1 << 15;\n\n    public static enum SERIALIZED_FORMAT {\n\n        VERSION1,\n        VERSION2;}\n\n    private boolean useOldDeserialize = false;\n\n    private byte[] row;\n\n    private byte[] data;\n\n    private int entries;\n\n    private java.util.List<byte[]> values;\n\n    private static class ByteBuffer {\n        int offset;\n\n        byte[] data = new byte[64];\n\n        private void reserve(int l) {\n            if ((offset + l) > data.length) {\n                int newSize = data.length * 2;\n                while (newSize <= (offset + l)) {\n                    newSize = newSize * 2;\n                } \n                byte[] newData = new byte[newSize];\n                java.lang.System.arraycopy(data, 0, newData, 0, offset);\n                data = newData;\n            }\n        }\n\n        public void add(byte[] bytes, int off, int length) {\n            reserve(length);\n            java.lang.System.arraycopy(bytes, off, data, offset, length);\n            offset += length;\n        }\n\n        void add(boolean b) {\n            reserve(1);\n            if (b) {\n                data[offset++] = 1;\n            } else {\n                data[offset++] = 0;\n            }\n        }\n\n        public byte[] toArray() {\n            byte[] ret = new byte[offset];\n            java.lang.System.arraycopy(data, 0, ret, 0, offset);\n            return ret;\n        }\n\n        public void writeVLong(long i) {\n            reserve(9);\n            if ((i >= (-112)) && (i <= 127)) {\n                data[offset++] = ((byte) (i));\n                return;\n            }\n            int len = -112;\n            if (i < 0) {\n                i ^= -1L;\n                len = -120;\n            }\n            long tmp = i;\n            while (tmp != 0) {\n                tmp = tmp >> 8;\n                len--;\n            } \n            data[offset++] = ((byte) (len));\n            len = (len < (-120)) ? -(len + 120) : -(len + 112);\n            for (int idx = len; idx != 0; idx--) {\n                int shiftbits = (idx - 1) * 8;\n                long mask = 0xffL << shiftbits;\n                data[offset++] = ((byte) ((i & mask) >> shiftbits));\n            }\n        }\n    }\n\n    private static class SimpleReader {\n        int offset;\n\n        byte[] data;\n\n        SimpleReader(byte[] b) {\n            this.data = b;\n        }\n\n        int readInt() {\n            return (((data[offset++] << 24) + ((data[offset++] & 255) << 16)) + ((data[offset++] & 255) << 8)) + ((data[offset++] & 255) << 0);\n        }\n\n        long readLong() {\n            return (((((((((long) (data[offset++])) << 56) + (((long) (data[offset++] & 255)) << 48)) + (((long) (data[offset++] & 255)) << 40)) + (((long) (data[offset++] & 255)) << 32)) + (((long) (data[offset++] & 255)) << 24)) + ((data[offset++] & 255) << 16)) + ((data[offset++] & 255) << 8)) + ((data[offset++] & 255) << 0);\n        }\n\n        void readBytes(byte[] b) {\n            java.lang.System.arraycopy(data, offset, b, 0, b.length);\n            offset += b.length;\n        }\n\n        boolean readBoolean() {\n            return data[offset++] == 1;\n        }\n\n        long readVLong() {\n            byte firstByte = data[offset++];\n            int len = org.apache.hadoop.io.WritableUtils.decodeVIntSize(firstByte);\n            if (len == 1) {\n                return firstByte;\n            }\n            long i = 0;\n            for (int idx = 0; idx < (len - 1); idx++) {\n                byte b = data[offset++];\n                i = i << 8;\n                i = i | (b & 0xff);\n            }\n            return org.apache.hadoop.io.WritableUtils.isNegativeVInt(firstByte) ? i ^ (-1L) : i;\n        }\n    }\n\n    private org.apache.accumulo.core.data.Mutation.ByteBuffer buffer;\n\n    private java.util.List<org.apache.accumulo.core.data.ColumnUpdate> updates;\n\n    private static final byte[] EMPTY_BYTES = new byte[0];\n\n    private void serialize() {\n        if (buffer != null) {\n            data = buffer.toArray();\n            buffer = null;\n        }\n    }\n\n    private byte[] serializedSnapshot() {\n        if (buffer != null) {\n            return buffer.toArray();\n        } else {\n            return this.data;\n        }\n    }\n\n    public Mutation(byte[] row) {\n        this(row, 0, row.length);\n    }\n\n    public Mutation(byte[] row, int start, int length) {\n        this.row = new byte[length];\n        java.lang.System.arraycopy(row, start, this.row, 0, length);\n        buffer = new org.apache.accumulo.core.data.Mutation.ByteBuffer();\n    }\n\n    public Mutation(org.apache.hadoop.io.Text row) {\n        this(row.getBytes(), 0, row.getLength());\n    }\n\n    public Mutation(java.lang.CharSequence row) {\n        this(new org.apache.hadoop.io.Text(row.toString()));\n    }\n\n    public Mutation() {\n    }\n\n    public Mutation(org.apache.accumulo.core.data.thrift.TMutation tmutation) {\n        this.row = org.apache.accumulo.core.util.ByteBufferUtil.toBytes(tmutation.row);\n        this.data = org.apache.accumulo.core.util.ByteBufferUtil.toBytes(tmutation.data);\n        this.entries = tmutation.entries;\n        this.values = org.apache.accumulo.core.util.ByteBufferUtil.toBytesList(tmutation.values);\n        if (this.row == null) {\n            throw new java.lang.IllegalArgumentException(\"null row\");\n        }\n        if (this.data == null) {\n            throw new java.lang.IllegalArgumentException(\"null serialized data\");\n        }\n    }\n\n    public Mutation(org.apache.accumulo.core.data.Mutation m) {\n        m.serialize();\n        this.row = m.row;\n        this.data = m.data;\n        this.entries = m.entries;\n        this.values = m.values;\n    }\n\n    public byte[] getRow() {\n        return row;\n    }\n\n    private void put(byte[] b) {\n        put(b, b.length);\n    }\n\n    private void put(byte[] b, int length) {\n        buffer.writeVLong(length);\n        buffer.add(b, 0, length);\n    }\n\n    private void put(boolean b) {\n        buffer.add(b);\n    }\n\n    private void put(int i) {\n        buffer.writeVLong(i);\n    }\n\n    private void put(long l) {\n        buffer.writeVLong(l);\n    }\n\n    private void put(byte[] cf, byte[] cq, byte[] cv, boolean hasts, long ts, boolean deleted, byte[] val) {\n        put(cf, cf.length, cq, cq.length, cv, hasts, ts, deleted, val, val.length);\n    }\n\n    private void put(org.apache.hadoop.io.Text cf, org.apache.hadoop.io.Text cq, byte[] cv, boolean hasts, long ts, boolean deleted, byte[] val) {\n        put(cf.getBytes(), cf.getLength(), cq.getBytes(), cq.getLength(), cv, hasts, ts, deleted, val, val.length);\n    }\n\n    private void put(byte[] cf, int cfLength, byte[] cq, int cqLength, byte[] cv, boolean hasts, long ts, boolean deleted, byte[] val, int valLength) {\n        if (buffer == null) {\n            throw new java.lang.IllegalStateException(\"Can not add to mutation after serializing it\");\n        }\n        put(cf, cfLength);\n        put(cq, cqLength);\n        put(cv);\n        put(hasts);\n        if (hasts) {\n            put(ts);\n        }\n        put(deleted);\n        if (valLength < org.apache.accumulo.core.data.Mutation.VALUE_SIZE_COPY_CUTOFF) {\n            put(val, valLength);\n        } else {\n            if (values == null) {\n                values = new java.util.ArrayList<byte[]>();\n            }\n            byte[] copy = new byte[valLength];\n            java.lang.System.arraycopy(val, 0, copy, 0, valLength);\n            values.add(copy);\n            put((-1) * values.size());\n        }\n        entries++;\n    }\n\n    private void put(java.lang.CharSequence cf, java.lang.CharSequence cq, byte[] cv, boolean hasts, long ts, boolean deleted, byte[] val) {\n        put(new org.apache.hadoop.io.Text(cf.toString()), new org.apache.hadoop.io.Text(cq.toString()), cv, hasts, ts, deleted, val);\n    }\n\n    private void put(org.apache.hadoop.io.Text cf, org.apache.hadoop.io.Text cq, byte[] cv, boolean hasts, long ts, boolean deleted, org.apache.hadoop.io.Text val) {\n        put(cf.getBytes(), cf.getLength(), cq.getBytes(), cq.getLength(), cv, hasts, ts, deleted, val.getBytes(), val.getLength());\n    }\n\n    private void put(java.lang.CharSequence cf, java.lang.CharSequence cq, byte[] cv, boolean hasts, long ts, boolean deleted, java.lang.CharSequence val) {\n        put(new org.apache.hadoop.io.Text(cf.toString()), new org.apache.hadoop.io.Text(cq.toString()), cv, hasts, ts, deleted, new org.apache.hadoop.io.Text(val.toString()));\n    }\n\n    public void put(org.apache.hadoop.io.Text columnFamily, org.apache.hadoop.io.Text columnQualifier, org.apache.accumulo.core.data.Value value) {\n        put(columnFamily, columnQualifier, org.apache.accumulo.core.data.Mutation.EMPTY_BYTES, false, 0L, false, value.get());\n    }\n\n    public void put(org.apache.hadoop.io.Text columnFamily, org.apache.hadoop.io.Text columnQualifier, org.apache.accumulo.core.security.ColumnVisibility columnVisibility, org.apache.accumulo.core.data.Value value) {\n        put(columnFamily, columnQualifier, columnVisibility.getExpression(), false, 0L, false, value.get());\n    }\n\n    public void put(org.apache.hadoop.io.Text columnFamily, org.apache.hadoop.io.Text columnQualifier, long timestamp, org.apache.accumulo.core.data.Value value) {\n        put(columnFamily, columnQualifier, org.apache.accumulo.core.data.Mutation.EMPTY_BYTES, true, timestamp, false, value.get());\n    }\n\n    public void put(org.apache.hadoop.io.Text columnFamily, org.apache.hadoop.io.Text columnQualifier, org.apache.accumulo.core.security.ColumnVisibility columnVisibility, long timestamp, org.apache.accumulo.core.data.Value value) {\n        put(columnFamily, columnQualifier, columnVisibility.getExpression(), true, timestamp, false, value.get());\n    }\n\n    public void putDelete(org.apache.hadoop.io.Text columnFamily, org.apache.hadoop.io.Text columnQualifier) {\n        put(columnFamily, columnQualifier, org.apache.accumulo.core.data.Mutation.EMPTY_BYTES, false, 0L, true, org.apache.accumulo.core.data.Mutation.EMPTY_BYTES);\n    }\n\n    public void putDelete(org.apache.hadoop.io.Text columnFamily, org.apache.hadoop.io.Text columnQualifier, org.apache.accumulo.core.security.ColumnVisibility columnVisibility) {\n        put(columnFamily, columnQualifier, columnVisibility.getExpression(), false, 0L, true, org.apache.accumulo.core.data.Mutation.EMPTY_BYTES);\n    }\n\n    public void putDelete(org.apache.hadoop.io.Text columnFamily, org.apache.hadoop.io.Text columnQualifier, long timestamp) {\n        put(columnFamily, columnQualifier, org.apache.accumulo.core.data.Mutation.EMPTY_BYTES, true, timestamp, true, org.apache.accumulo.core.data.Mutation.EMPTY_BYTES);\n    }\n\n    public void putDelete(org.apache.hadoop.io.Text columnFamily, org.apache.hadoop.io.Text columnQualifier, org.apache.accumulo.core.security.ColumnVisibility columnVisibility, long timestamp) {\n        put(columnFamily, columnQualifier, columnVisibility.getExpression(), true, timestamp, true, org.apache.accumulo.core.data.Mutation.EMPTY_BYTES);\n    }\n\n    public void put(java.lang.CharSequence columnFamily, java.lang.CharSequence columnQualifier, org.apache.accumulo.core.data.Value value) {\n        put(columnFamily, columnQualifier, org.apache.accumulo.core.data.Mutation.EMPTY_BYTES, false, 0L, false, value.get());\n    }\n\n    public void put(java.lang.CharSequence columnFamily, java.lang.CharSequence columnQualifier, org.apache.accumulo.core.security.ColumnVisibility columnVisibility, org.apache.accumulo.core.data.Value value) {\n        put(columnFamily, columnQualifier, columnVisibility.getExpression(), false, 0L, false, value.get());\n    }\n\n    public void put(java.lang.CharSequence columnFamily, java.lang.CharSequence columnQualifier, long timestamp, org.apache.accumulo.core.data.Value value) {\n        put(columnFamily, columnQualifier, org.apache.accumulo.core.data.Mutation.EMPTY_BYTES, true, timestamp, false, value.get());\n    }\n\n    public void put(java.lang.CharSequence columnFamily, java.lang.CharSequence columnQualifier, org.apache.accumulo.core.security.ColumnVisibility columnVisibility, long timestamp, org.apache.accumulo.core.data.Value value) {\n        put(columnFamily, columnQualifier, columnVisibility.getExpression(), true, timestamp, false, value.get());\n    }\n\n    public void putDelete(java.lang.CharSequence columnFamily, java.lang.CharSequence columnQualifier) {\n        put(columnFamily, columnQualifier, org.apache.accumulo.core.data.Mutation.EMPTY_BYTES, false, 0L, true, org.apache.accumulo.core.data.Mutation.EMPTY_BYTES);\n    }\n\n    public void putDelete(java.lang.CharSequence columnFamily, java.lang.CharSequence columnQualifier, org.apache.accumulo.core.security.ColumnVisibility columnVisibility) {\n        put(columnFamily, columnQualifier, columnVisibility.getExpression(), false, 0L, true, org.apache.accumulo.core.data.Mutation.EMPTY_BYTES);\n    }\n\n    public void putDelete(java.lang.CharSequence columnFamily, java.lang.CharSequence columnQualifier, long timestamp) {\n        put(columnFamily, columnQualifier, org.apache.accumulo.core.data.Mutation.EMPTY_BYTES, true, timestamp, true, org.apache.accumulo.core.data.Mutation.EMPTY_BYTES);\n    }\n\n    public void putDelete(java.lang.CharSequence columnFamily, java.lang.CharSequence columnQualifier, org.apache.accumulo.core.security.ColumnVisibility columnVisibility, long timestamp) {\n        put(columnFamily, columnQualifier, columnVisibility.getExpression(), true, timestamp, true, org.apache.accumulo.core.data.Mutation.EMPTY_BYTES);\n    }\n\n    public void put(java.lang.CharSequence columnFamily, java.lang.CharSequence columnQualifier, java.lang.CharSequence value) {\n        put(columnFamily, columnQualifier, org.apache.accumulo.core.data.Mutation.EMPTY_BYTES, false, 0L, false, value);\n    }\n\n    public void put(java.lang.CharSequence columnFamily, java.lang.CharSequence columnQualifier, org.apache.accumulo.core.security.ColumnVisibility columnVisibility, java.lang.CharSequence value) {\n        put(columnFamily, columnQualifier, columnVisibility.getExpression(), false, 0L, false, value);\n    }\n\n    public void put(java.lang.CharSequence columnFamily, java.lang.CharSequence columnQualifier, long timestamp, java.lang.CharSequence value) {\n        put(columnFamily, columnQualifier, org.apache.accumulo.core.data.Mutation.EMPTY_BYTES, true, timestamp, false, value);\n    }\n\n    public void put(java.lang.CharSequence columnFamily, java.lang.CharSequence columnQualifier, org.apache.accumulo.core.security.ColumnVisibility columnVisibility, long timestamp, java.lang.CharSequence value) {\n        put(columnFamily, columnQualifier, columnVisibility.getExpression(), true, timestamp, false, value);\n    }\n\n    public void put(byte[] columnFamily, byte[] columnQualifier, byte[] value) {\n        put(columnFamily, columnQualifier, org.apache.accumulo.core.data.Mutation.EMPTY_BYTES, false, 0L, false, value);\n    }\n\n    public void put(byte[] columnFamily, byte[] columnQualifier, org.apache.accumulo.core.security.ColumnVisibility columnVisibility, byte[] value) {\n        put(columnFamily, columnQualifier, columnVisibility.getExpression(), false, 0L, false, value);\n    }\n\n    public void put(byte[] columnFamily, byte[] columnQualifier, long timestamp, byte[] value) {\n        put(columnFamily, columnQualifier, org.apache.accumulo.core.data.Mutation.EMPTY_BYTES, true, timestamp, false, value);\n    }\n\n    public void put(byte[] columnFamily, byte[] columnQualifier, org.apache.accumulo.core.security.ColumnVisibility columnVisibility, long timestamp, byte[] value) {\n        put(columnFamily, columnQualifier, columnVisibility.getExpression(), true, timestamp, false, value);\n    }\n\n    public void putDelete(byte[] columnFamily, byte[] columnQualifier) {\n        put(columnFamily, columnQualifier, org.apache.accumulo.core.data.Mutation.EMPTY_BYTES, false, 0L, true, org.apache.accumulo.core.data.Mutation.EMPTY_BYTES);\n    }\n\n    public void putDelete(byte[] columnFamily, byte[] columnQualifier, org.apache.accumulo.core.security.ColumnVisibility columnVisibility) {\n        put(columnFamily, columnQualifier, columnVisibility.getExpression(), false, 0L, true, org.apache.accumulo.core.data.Mutation.EMPTY_BYTES);\n    }\n\n    public void putDelete(byte[] columnFamily, byte[] columnQualifier, long timestamp) {\n        put(columnFamily, columnQualifier, org.apache.accumulo.core.data.Mutation.EMPTY_BYTES, true, timestamp, true, org.apache.accumulo.core.data.Mutation.EMPTY_BYTES);\n    }\n\n    public void putDelete(byte[] columnFamily, byte[] columnQualifier, org.apache.accumulo.core.security.ColumnVisibility columnVisibility, long timestamp) {\n        put(columnFamily, columnQualifier, columnVisibility.getExpression(), true, timestamp, true, org.apache.accumulo.core.data.Mutation.EMPTY_BYTES);\n    }\n\n    private byte[] oldReadBytes(org.apache.accumulo.core.data.Mutation.SimpleReader in) {\n        int len = in.readInt();\n        if (len == 0) {\n            return org.apache.accumulo.core.data.Mutation.EMPTY_BYTES;\n        }\n        byte[] bytes = new byte[len];\n        in.readBytes(bytes);\n        return bytes;\n    }\n\n    private byte[] readBytes(org.apache.accumulo.core.data.Mutation.SimpleReader in) {\n        int len = ((int) (in.readVLong()));\n        if (len == 0) {\n            return org.apache.accumulo.core.data.Mutation.EMPTY_BYTES;\n        }\n        byte[] bytes = new byte[len];\n        in.readBytes(bytes);\n        return bytes;\n    }\n\n    public java.util.List<org.apache.accumulo.core.data.ColumnUpdate> getUpdates() {\n        serialize();\n        org.apache.accumulo.core.data.Mutation.SimpleReader in = new org.apache.accumulo.core.data.Mutation.SimpleReader(data);\n        if (updates == null) {\n            if (entries == 1) {\n                updates = java.util.Collections.singletonList(deserializeColumnUpdate(in));\n            } else {\n                org.apache.accumulo.core.data.ColumnUpdate[] tmpUpdates = new org.apache.accumulo.core.data.ColumnUpdate[entries];\n                for (int i = 0; i < entries; i++) {\n                    tmpUpdates[i] = deserializeColumnUpdate(in);\n                }\n                updates = java.util.Arrays.asList(tmpUpdates);\n            }\n        }\n        return updates;\n    }\n\n    protected org.apache.accumulo.core.data.ColumnUpdate newColumnUpdate(byte[] cf, byte[] cq, byte[] cv, boolean hasts, long ts, boolean deleted, byte[] val) {\n        return new org.apache.accumulo.core.data.ColumnUpdate(cf, cq, cv, hasts, ts, deleted, val);\n    }\n\n    private org.apache.accumulo.core.data.ColumnUpdate deserializeColumnUpdate(org.apache.accumulo.core.data.Mutation.SimpleReader in) {\n        byte[] cf = readBytes(in);\n        byte[] cq = readBytes(in);\n        byte[] cv = readBytes(in);\n        boolean hasts = in.readBoolean();\n        long ts = 0;\n        if (hasts) {\n            ts = in.readVLong();\n        }\n        boolean deleted = in.readBoolean();\n        byte[] val;\n        int valLen = ((int) (in.readVLong()));\n        if (valLen < 0) {\n            val = values.get(((-1) * valLen) - 1);\n        } else if (valLen == 0) {\n            val = org.apache.accumulo.core.data.Mutation.EMPTY_BYTES;\n        } else {\n            val = new byte[valLen];\n            in.readBytes(val);\n        }\n        return newColumnUpdate(cf, cq, cv, hasts, ts, deleted, val);\n    }\n\n    private int cachedValLens = -1;\n\n    long getValueLengths() {\n        if (values == null) {\n            return 0;\n        }\n        if (cachedValLens == (-1)) {\n            int tmpCVL = 0;\n            for (byte[] val : values) {\n                tmpCVL += val.length;\n            }\n            cachedValLens = tmpCVL;\n        }\n        return cachedValLens;\n    }\n\n    public long numBytes() {\n        serialize();\n        return (row.length + data.length) + getValueLengths();\n    }\n\n    public long estimatedMemoryUsed() {\n        return numBytes() + 238;\n    }\n\n    public int size() {\n        return entries;\n    }\n\n    @java.lang.Override\n    public void readFields(java.io.DataInput in) throws java.io.IOException {\n        updates = null;\n        cachedValLens = -1;\n        buffer = null;\n        useOldDeserialize = false;\n        byte first = in.readByte();\n        if ((first & 0x80) != 0x80) {\n            oldReadFields(first, in);\n            useOldDeserialize = true;\n            return;\n        }\n        int len = org.apache.hadoop.io.WritableUtils.readVInt(in);\n        row = new byte[len];\n        in.readFully(row);\n        len = org.apache.hadoop.io.WritableUtils.readVInt(in);\n        data = new byte[len];\n        in.readFully(data);\n        entries = org.apache.hadoop.io.WritableUtils.readVInt(in);\n        boolean valuesPresent = (first & 0x1) == 0x1;\n        if (!valuesPresent) {\n            values = null;\n        } else {\n            values = new java.util.ArrayList<byte[]>();\n            int numValues = org.apache.hadoop.io.WritableUtils.readVInt(in);\n            for (int i = 0; i < numValues; i++) {\n                len = org.apache.hadoop.io.WritableUtils.readVInt(in);\n                byte[] val = new byte[len];\n                in.readFully(val);\n                values.add(val);\n            }\n        }\n    }\n\n    protected void droppingOldTimestamp(long ts) {\n    }\n\n    private void oldReadFields(byte first, java.io.DataInput in) throws java.io.IOException {\n        byte b = ((byte) (in.readByte()));\n        byte c = ((byte) (in.readByte()));\n        byte d = ((byte) (in.readByte()));\n        int len = ((((first & 0xff) << 24) | ((b & 0xff) << 16)) | ((c & 0xff) << 8)) | (d & 0xff);\n        row = new byte[len];\n        in.readFully(row);\n        len = in.readInt();\n        byte[] localData = new byte[len];\n        in.readFully(localData);\n        int localEntries = in.readInt();\n        java.util.List<byte[]> localValues;\n        boolean valuesPresent = in.readBoolean();\n        if (!valuesPresent) {\n            localValues = null;\n        } else {\n            localValues = new java.util.ArrayList<byte[]>();\n            int numValues = in.readInt();\n            for (int i = 0; i < numValues; i++) {\n                len = in.readInt();\n                byte[] val = new byte[len];\n                in.readFully(val);\n                localValues.add(val);\n            }\n        }\n        org.apache.accumulo.core.data.Mutation.SimpleReader din = new org.apache.accumulo.core.data.Mutation.SimpleReader(localData);\n        buffer = new org.apache.accumulo.core.data.Mutation.ByteBuffer();\n        for (int i = 0; i < localEntries; i++) {\n            byte[] cf = oldReadBytes(din);\n            byte[] cq = oldReadBytes(din);\n            byte[] cv = oldReadBytes(din);\n            boolean hasts = din.readBoolean();\n            long ts = din.readLong();\n            boolean deleted = din.readBoolean();\n            byte[] val;\n            int valLen = din.readInt();\n            if (valLen < 0) {\n                val = localValues.get(((-1) * valLen) - 1);\n            } else if (valLen == 0) {\n                val = org.apache.accumulo.core.data.Mutation.EMPTY_BYTES;\n            } else {\n                val = new byte[valLen];\n                din.readBytes(val);\n            }\n            put(cf, cq, cv, hasts, ts, deleted, val);\n            if (!hasts) {\n                droppingOldTimestamp(ts);\n            }\n        }\n        serialize();\n    }\n\n    @java.lang.Override\n    public void write(java.io.DataOutput out) throws java.io.IOException {\n        serialize();\n        byte hasValues = (values == null) ? 0 : ((byte) (1));\n        out.write(((byte) (0x80 | hasValues)));\n        org.apache.hadoop.io.WritableUtils.writeVInt(out, row.length);\n        out.write(row);\n        org.apache.hadoop.io.WritableUtils.writeVInt(out, data.length);\n        out.write(data);\n        org.apache.hadoop.io.WritableUtils.writeVInt(out, entries);\n        if (hasValues > 0) {\n            org.apache.hadoop.io.WritableUtils.writeVInt(out, values.size());\n            for (int i = 0; i < values.size(); i++) {\n                byte[] val = values.get(i);\n                org.apache.hadoop.io.WritableUtils.writeVInt(out, val.length);\n                out.write(val);\n            }\n        }\n    }\n\n    @java.lang.Override\n    public boolean equals(java.lang.Object o) {\n        if (o instanceof org.apache.accumulo.core.data.Mutation) {\n            return equals(((org.apache.accumulo.core.data.Mutation) (o)));\n        }\n        return false;\n    }\n\n    @java.lang.Override\n    public int hashCode() {\n        return toThrift(false).hashCode();\n    }\n\n    public boolean equals(org.apache.accumulo.core.data.Mutation m) {\n        byte[] myData = serializedSnapshot();\n        byte[] otherData = m.serializedSnapshot();\n        if ((java.util.Arrays.equals(row, m.row) && (entries == m.entries)) && java.util.Arrays.equals(myData, otherData)) {\n            if ((values == null) && (m.values == null)) {\n                return true;\n            }\n            if (((values != null) && (m.values != null)) && (values.size() == m.values.size())) {\n                for (int i = 0; i < values.size(); i++) {\n                    if (!java.util.Arrays.equals(values.get(i), m.values.get(i))) {\n                        return false;\n                    }\n                }\n                return true;\n            }\n        }\n        return false;\n    }\n\n    public org.apache.accumulo.core.data.thrift.TMutation toThrift() {\n        return toThrift(true);\n    }\n\n    private org.apache.accumulo.core.data.thrift.TMutation toThrift(boolean serialize) {\n        byte[] data;\n        if (serialize) {\n            this.serialize();\n            data = this.data;\n        } else {\n            data = serializedSnapshot();\n        }\n        return new org.apache.accumulo.core.data.thrift.TMutation(java.nio.ByteBuffer.wrap(row), java.nio.ByteBuffer.wrap(data), org.apache.accumulo.core.util.ByteBufferUtil.toByteBuffers(values), entries);\n    }\n\n    protected org.apache.accumulo.core.data.Mutation.SERIALIZED_FORMAT getSerializedFormat() {\n        return this.useOldDeserialize ? org.apache.accumulo.core.data.Mutation.SERIALIZED_FORMAT.VERSION1 : org.apache.accumulo.core.data.Mutation.SERIALIZED_FORMAT.VERSION2;\n    }\n}",
            "src_parent_type": "Class",
            "src_type": "Method"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Method",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "byte[] myData = serializedSnapshot()",
            "src_parent": "{\n    byte[] myData = serializedSnapshot();\n    byte[] otherData = m.serializedSnapshot();\n    if ((java.util.Arrays.equals(row, m.row) && (entries == m.entries)) && java.util.Arrays.equals(myData, otherData)) {\n        if ((values == null) && (m.values == null)) {\n            return true;\n        }\n        if (((values != null) && (m.values != null)) && (values.size() == m.values.size())) {\n            for (int i = 0; i < values.size(); i++) {\n                if (!java.util.Arrays.equals(values.get(i), m.values.get(i))) {\n                    return false;\n                }\n            }\n            return true;\n        }\n    }\n    return false;\n}",
            "src_parent_type": "Block",
            "src_type": "LocalVariable"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Method",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "byte[] otherData = m.serializedSnapshot()",
            "src_parent": "{\n    byte[] myData = serializedSnapshot();\n    byte[] otherData = m.serializedSnapshot();\n    if ((java.util.Arrays.equals(row, m.row) && (entries == m.entries)) && java.util.Arrays.equals(myData, otherData)) {\n        if ((values == null) && (m.values == null)) {\n            return true;\n        }\n        if (((values != null) && (m.values != null)) && (values.size() == m.values.size())) {\n            for (int i = 0; i < values.size(); i++) {\n                if (!java.util.Arrays.equals(values.get(i), m.values.get(i))) {\n                    return false;\n                }\n            }\n            return true;\n        }\n    }\n    return false;\n}",
            "src_parent_type": "Block",
            "src_type": "LocalVariable"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Method",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "VE: Modifiers_Method",
            "src_parent": "private org.apache.accumulo.core.data.thrift.TMutation toThrift(boolean serialize) {\n    byte[] data;\n    if (serialize) {\n        this.serialize();\n        data = this.data;\n    } else {\n        data = serializedSnapshot();\n    }\n    return new org.apache.accumulo.core.data.thrift.TMutation(java.nio.ByteBuffer.wrap(row), java.nio.ByteBuffer.wrap(data), org.apache.accumulo.core.util.ByteBufferUtil.toByteBuffers(values), entries);\n}",
            "src_parent_type": "Method",
            "src_type": "VirtualEle"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Method",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "boolean serialize",
            "src_parent": "private org.apache.accumulo.core.data.thrift.TMutation toThrift(boolean serialize) {\n    byte[] data;\n    if (serialize) {\n        this.serialize();\n        data = this.data;\n    } else {\n        data = serializedSnapshot();\n    }\n    return new org.apache.accumulo.core.data.thrift.TMutation(java.nio.ByteBuffer.wrap(row), java.nio.ByteBuffer.wrap(data), org.apache.accumulo.core.util.ByteBufferUtil.toByteBuffers(values), entries);\n}",
            "src_parent_type": "Method",
            "src_type": "Parameter"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Method",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "byte[] data",
            "src_parent": "{\n    byte[] data;\n    if (serialize) {\n        this.serialize();\n        data = this.data;\n    } else {\n        data = serializedSnapshot();\n    }\n    return new org.apache.accumulo.core.data.thrift.TMutation(java.nio.ByteBuffer.wrap(row), java.nio.ByteBuffer.wrap(data), org.apache.accumulo.core.util.ByteBufferUtil.toByteBuffers(values), entries);\n}",
            "src_parent_type": "Block",
            "src_type": "LocalVariable"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Method",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "if (serialize) {\n    this.serialize();\n    data = this.data;\n} else {\n    data = serializedSnapshot();\n}",
            "src_parent": "{\n    byte[] data;\n    if (serialize) {\n        this.serialize();\n        data = this.data;\n    } else {\n        data = serializedSnapshot();\n    }\n    return new org.apache.accumulo.core.data.thrift.TMutation(java.nio.ByteBuffer.wrap(row), java.nio.ByteBuffer.wrap(data), org.apache.accumulo.core.util.ByteBufferUtil.toByteBuffers(values), entries);\n}",
            "src_parent_type": "Block",
            "src_type": "If"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Return",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "false",
            "src_parent": "toThrift(false)",
            "src_parent_type": "Invocation",
            "src_type": "Literal"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Return",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "myData",
            "src_parent": "java.util.Arrays.equals(myData, otherData)",
            "src_parent_type": "Invocation",
            "src_type": "VariableRead"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Return",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "otherData",
            "src_parent": "java.util.Arrays.equals(myData, otherData)",
            "src_parent_type": "Invocation",
            "src_type": "VariableRead"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Return",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "data",
            "src_parent": "java.nio.ByteBuffer.wrap(data)",
            "src_parent_type": "Invocation",
            "src_type": "VariableRead"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "VirtualElement",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "VE: Modifiers_Method",
            "dst_parent": "public org.apache.accumulo.core.data.thrift.TMutation toThrift() {\n    return toThrift(true);\n}",
            "dst_parent_type": "Method",
            "dst_type": "VirtualEle",
            "operator": "MOV",
            "src": "VE: Modifiers_Method",
            "src_parent": "public org.apache.accumulo.core.data.thrift.TMutation toThrift() {\n    serialize();\n    return new org.apache.accumulo.core.data.thrift.TMutation(java.nio.ByteBuffer.wrap(row), java.nio.ByteBuffer.wrap(data), org.apache.accumulo.core.util.ByteBufferUtil.toByteBuffers(values), entries);\n}",
            "src_parent_type": "Method",
            "src_type": "VirtualEle"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "Return",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Invocation",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "org.apache.accumulo.core.data.Mutation",
            "dst_parent": "",
            "dst_parent_type": "ThisAccess",
            "dst_type": "TypeAccess",
            "operator": "MOV",
            "src": "org.apache.accumulo.core.data.Mutation",
            "src_parent": "",
            "src_parent_type": "ThisAccess",
            "src_type": "TypeAccess"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "Return",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Invocation",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "m",
            "dst_parent": "m.serializedSnapshot()",
            "dst_parent_type": "Invocation",
            "dst_type": "VariableRead",
            "operator": "MOV",
            "src": "m",
            "src_parent": "m.serialize()",
            "src_parent_type": "Invocation",
            "src_type": "VariableRead"
          }
        }
      ],
      "file_name": "Mutation"
    }
  ],
  "id": "accumulo_73ce9cfb"
}