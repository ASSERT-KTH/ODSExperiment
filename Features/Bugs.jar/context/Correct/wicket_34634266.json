{
  "files": [
    {
      "features": [
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Class",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Method",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "@java.lang.Override\npublic final void detach() {\n    super.detach();\n    if (model != null) {\n        model.detach();\n    }\n    if (parameters != null) {\n        for (java.lang.Object parameter : parameters) {\n            if (parameter instanceof org.apache.wicket.model.IDetachable) {\n                ((org.apache.wicket.model.IDetachable) (parameter)).detach();\n            }\n        }\n    }\n    if (defaultValue != null) {\n        defaultValue.detach();\n    }\n}",
            "dst_parent": "public class StringResourceModel extends org.apache.wicket.model.LoadableDetachableModel<java.lang.String> implements org.apache.wicket.model.IComponentAssignedModel<java.lang.String> {\n    private static final long serialVersionUID = 1L;\n\n    private final org.apache.wicket.model.IModel<?> model;\n\n    private final java.lang.Object[] parameters;\n\n    private final org.apache.wicket.Component component;\n\n    private final java.lang.String resourceKey;\n\n    private final org.apache.wicket.model.IModel<java.lang.String> defaultValue;\n\n    @java.lang.Override\n    public org.apache.wicket.model.IWrapModel<java.lang.String> wrapOnAssignment(org.apache.wicket.Component component) {\n        return new org.apache.wicket.model.StringResourceModel.AssignmentWrapper(component);\n    }\n\n    private class AssignmentWrapper extends org.apache.wicket.model.LoadableDetachableModel<java.lang.String> implements org.apache.wicket.model.IWrapModel<java.lang.String> {\n        private static final long serialVersionUID = 1L;\n\n        private final org.apache.wicket.Component component;\n\n        public AssignmentWrapper(org.apache.wicket.Component component) {\n            this.component = component;\n        }\n\n        @java.lang.Override\n        public void detach() {\n            super.detach();\n            StringResourceModel.this.detach();\n        }\n\n        @java.lang.Override\n        protected void onDetach() {\n            if (StringResourceModel.this.component == null) {\n                StringResourceModel.this.onDetach();\n            }\n        }\n\n        @java.lang.Override\n        protected java.lang.String load() {\n            if (StringResourceModel.this.component != null) {\n                return StringResourceModel.this.getObject();\n            } else {\n                return getString(component);\n            }\n        }\n\n        @java.lang.Override\n        public void setObject(java.lang.String object) {\n            StringResourceModel.this.setObject(object);\n        }\n\n        @java.lang.Override\n        public org.apache.wicket.model.IModel<java.lang.String> getWrappedModel() {\n            return StringResourceModel.this;\n        }\n    }\n\n    public StringResourceModel(final java.lang.String resourceKey, final org.apache.wicket.Component component, final org.apache.wicket.model.IModel<?> model, final java.lang.Object... parameters) {\n        this(resourceKey, component, model, null, parameters);\n    }\n\n    public StringResourceModel(final java.lang.String resourceKey, final org.apache.wicket.Component component, final org.apache.wicket.model.IModel<?> model, final org.apache.wicket.model.IModel<java.lang.String> defaultValue, final java.lang.Object... parameters) {\n        if (resourceKey == null) {\n            throw new java.lang.IllegalArgumentException(\"Resource key must not be null\");\n        }\n        this.resourceKey = resourceKey;\n        this.component = component;\n        this.model = model;\n        this.defaultValue = defaultValue;\n        this.parameters = parameters;\n    }\n\n    public StringResourceModel(final java.lang.String resourceKey, final org.apache.wicket.model.IModel<?> model, final java.lang.Object... parameters) {\n        this(resourceKey, null, model, null, parameters);\n    }\n\n    public StringResourceModel(final java.lang.String resourceKey, final org.apache.wicket.model.IModel<?> model, final org.apache.wicket.model.IModel<java.lang.String> defaultValue, final java.lang.Object... parameters) {\n        this(resourceKey, null, model, defaultValue, parameters);\n    }\n\n    public org.apache.wicket.Localizer getLocalizer() {\n        return org.apache.wicket.Application.get().getResourceSettings().getLocalizer();\n    }\n\n    public final java.lang.String getString() {\n        return getString(component);\n    }\n\n    private java.lang.String getString(final org.apache.wicket.Component component) {\n        final org.apache.wicket.Localizer localizer = getLocalizer();\n        final java.util.Locale locale;\n        if (component != null) {\n            locale = component.getLocale();\n        } else {\n            locale = (org.apache.wicket.Session.exists()) ? org.apache.wicket.Session.get().getLocale() : java.util.Locale.getDefault();\n        }\n        java.lang.String value;\n        java.lang.Object[] parameters = getParameters();\n        if ((parameters == null) || (parameters.length == 0)) {\n            java.lang.String defaultVal = (defaultValue != null) ? defaultValue.getObject() : null;\n            value = localizer.getString(getResourceKey(), component, model, defaultVal);\n            if (value == null) {\n                value = defaultVal;\n            }\n        } else {\n            java.lang.String defaultVal = (defaultValue != null) ? defaultValue.getObject() : null;\n            value = localizer.getString(getResourceKey(), component, null, defaultVal);\n            if (value == null) {\n                value = defaultVal;\n            }\n            if (value != null) {\n                java.lang.Object[] realParams = new java.lang.Object[parameters.length];\n                for (int i = 0; i < parameters.length; i++) {\n                    if (parameters[i] instanceof org.apache.wicket.model.IModel<?>) {\n                        realParams[i] = ((org.apache.wicket.model.IModel<?>) (parameters[i])).getObject();\n                    } else if ((model != null) && (parameters[i] instanceof java.lang.String)) {\n                        realParams[i] = localizer.substitutePropertyExpressions(component, ((java.lang.String) (parameters[i])), model);\n                    } else {\n                        realParams[i] = parameters[i];\n                    }\n                }\n                if (value.indexOf('\\'') != (-1)) {\n                    value = escapeQuotes(value);\n                }\n                if (model != null) {\n                    value = org.apache.wicket.util.string.Strings.replaceAll(value, \"${\", \"$'{'\").toString();\n                }\n                final java.text.MessageFormat format = new java.text.MessageFormat(value, locale);\n                value = format.format(realParams);\n                if (model != null) {\n                    value = org.apache.wicket.util.string.Strings.replaceAll(value, \"$'{'\", \"${\").toString();\n                    value = localizer.substitutePropertyExpressions(component, value, model);\n                }\n            }\n        }\n        return value;\n    }\n\n    private java.lang.String escapeQuotes(final java.lang.String value) {\n        java.lang.StringBuilder newValue = new java.lang.StringBuilder(value.length() + 10);\n        int count = 0;\n        for (int i = 0; i < value.length(); i++) {\n            char ch = value.charAt(i);\n            if (ch == '{') {\n                count += 1;\n            } else if (ch == '}') {\n                count -= 1;\n            }\n            newValue.append(ch);\n            if ((ch == '\\'') && (count == 0)) {\n                newValue.append(ch);\n            }\n        }\n        return newValue.toString();\n    }\n\n    @java.lang.Override\n    public java.lang.String toString() {\n        java.lang.StringBuilder sb = new java.lang.StringBuilder(\"StringResourceModel[\");\n        sb.append(\"key:\");\n        sb.append(resourceKey);\n        sb.append(\",default:\");\n        sb.append(defaultValue);\n        sb.append(\",params:\");\n        if (parameters != null) {\n            sb.append(java.util.Arrays.asList(parameters));\n        }\n        sb.append(\"]\");\n        return sb.toString();\n    }\n\n    protected java.lang.Object[] getParameters() {\n        return parameters;\n    }\n\n    protected final java.lang.String getResourceKey() {\n        if (model != null) {\n            return new org.apache.wicket.core.util.string.interpolator.PropertyVariableInterpolator(resourceKey, model.getObject()).toString();\n        } else {\n            return resourceKey;\n        }\n    }\n\n    @java.lang.Override\n    protected final java.lang.String load() {\n        return getString();\n    }\n\n    @java.lang.Override\n    public final void detach() {\n        super.detach();\n        if (model != null) {\n            model.detach();\n        }\n        if (parameters != null) {\n            for (java.lang.Object parameter : parameters) {\n                if (parameter instanceof org.apache.wicket.model.IDetachable) {\n                    ((org.apache.wicket.model.IDetachable) (parameter)).detach();\n                }\n            }\n        }\n        if (defaultValue != null) {\n            defaultValue.detach();\n        }\n    }\n\n    @java.lang.Override\n    public void setObject(java.lang.String object) {\n        throw new java.lang.UnsupportedOperationException();\n    }\n}",
            "dst_parent_type": "Class",
            "dst_type": "Method",
            "operator": "UPD",
            "src": "@java.lang.Override\nprotected final void onDetach() {\n    super.onDetach();\n    if (model != null) {\n        model.detach();\n    }\n    if (parameters != null) {\n        for (java.lang.Object parameter : parameters) {\n            if (parameter instanceof org.apache.wicket.model.IDetachable) {\n                ((org.apache.wicket.model.IDetachable) (parameter)).detach();\n            }\n        }\n    }\n    if (defaultValue != null) {\n        defaultValue.detach();\n    }\n}",
            "src_parent": "public class StringResourceModel extends org.apache.wicket.model.LoadableDetachableModel<java.lang.String> implements org.apache.wicket.model.IComponentAssignedModel<java.lang.String> {\n    private static final long serialVersionUID = 1L;\n\n    private final org.apache.wicket.model.IModel<?> model;\n\n    private final java.lang.Object[] parameters;\n\n    private final org.apache.wicket.Component component;\n\n    private final java.lang.String resourceKey;\n\n    private final org.apache.wicket.model.IModel<java.lang.String> defaultValue;\n\n    @java.lang.Override\n    public org.apache.wicket.model.IWrapModel<java.lang.String> wrapOnAssignment(org.apache.wicket.Component component) {\n        return new org.apache.wicket.model.StringResourceModel.AssignmentWrapper(component);\n    }\n\n    private class AssignmentWrapper extends org.apache.wicket.model.LoadableDetachableModel<java.lang.String> implements org.apache.wicket.model.IWrapModel<java.lang.String> {\n        private static final long serialVersionUID = 1L;\n\n        private final org.apache.wicket.Component component;\n\n        public AssignmentWrapper(org.apache.wicket.Component component) {\n            this.component = component;\n        }\n\n        @java.lang.Override\n        public void detach() {\n            super.detach();\n            StringResourceModel.this.detach();\n        }\n\n        @java.lang.Override\n        protected void onDetach() {\n            if (StringResourceModel.this.component == null) {\n                StringResourceModel.this.onDetach();\n            }\n        }\n\n        @java.lang.Override\n        protected java.lang.String load() {\n            if (StringResourceModel.this.component != null) {\n                return StringResourceModel.this.getObject();\n            } else {\n                return getString(component);\n            }\n        }\n\n        @java.lang.Override\n        public void setObject(java.lang.String object) {\n            StringResourceModel.this.setObject(object);\n        }\n\n        @java.lang.Override\n        public org.apache.wicket.model.IModel<java.lang.String> getWrappedModel() {\n            return StringResourceModel.this;\n        }\n    }\n\n    public StringResourceModel(final java.lang.String resourceKey, final org.apache.wicket.Component component, final org.apache.wicket.model.IModel<?> model, final java.lang.Object... parameters) {\n        this(resourceKey, component, model, null, parameters);\n    }\n\n    public StringResourceModel(final java.lang.String resourceKey, final org.apache.wicket.Component component, final org.apache.wicket.model.IModel<?> model, final org.apache.wicket.model.IModel<java.lang.String> defaultValue, final java.lang.Object... parameters) {\n        if (resourceKey == null) {\n            throw new java.lang.IllegalArgumentException(\"Resource key must not be null\");\n        }\n        this.resourceKey = resourceKey;\n        this.component = component;\n        this.model = model;\n        this.defaultValue = defaultValue;\n        this.parameters = parameters;\n    }\n\n    public StringResourceModel(final java.lang.String resourceKey, final org.apache.wicket.model.IModel<?> model, final java.lang.Object... parameters) {\n        this(resourceKey, null, model, null, parameters);\n    }\n\n    public StringResourceModel(final java.lang.String resourceKey, final org.apache.wicket.model.IModel<?> model, final org.apache.wicket.model.IModel<java.lang.String> defaultValue, final java.lang.Object... parameters) {\n        this(resourceKey, null, model, defaultValue, parameters);\n    }\n\n    public org.apache.wicket.Localizer getLocalizer() {\n        return org.apache.wicket.Application.get().getResourceSettings().getLocalizer();\n    }\n\n    public final java.lang.String getString() {\n        return getString(component);\n    }\n\n    private java.lang.String getString(final org.apache.wicket.Component component) {\n        final org.apache.wicket.Localizer localizer = getLocalizer();\n        final java.util.Locale locale;\n        if (component != null) {\n            locale = component.getLocale();\n        } else {\n            locale = (org.apache.wicket.Session.exists()) ? org.apache.wicket.Session.get().getLocale() : java.util.Locale.getDefault();\n        }\n        java.lang.String value;\n        java.lang.Object[] parameters = getParameters();\n        if ((parameters == null) || (parameters.length == 0)) {\n            java.lang.String defaultVal = (defaultValue != null) ? defaultValue.getObject() : null;\n            value = localizer.getString(getResourceKey(), component, model, defaultVal);\n            if (value == null) {\n                value = defaultVal;\n            }\n        } else {\n            java.lang.String defaultVal = (defaultValue != null) ? defaultValue.getObject() : null;\n            value = localizer.getString(getResourceKey(), component, null, defaultVal);\n            if (value == null) {\n                value = defaultVal;\n            }\n            if (value != null) {\n                java.lang.Object[] realParams = new java.lang.Object[parameters.length];\n                for (int i = 0; i < parameters.length; i++) {\n                    if (parameters[i] instanceof org.apache.wicket.model.IModel<?>) {\n                        realParams[i] = ((org.apache.wicket.model.IModel<?>) (parameters[i])).getObject();\n                    } else if ((model != null) && (parameters[i] instanceof java.lang.String)) {\n                        realParams[i] = localizer.substitutePropertyExpressions(component, ((java.lang.String) (parameters[i])), model);\n                    } else {\n                        realParams[i] = parameters[i];\n                    }\n                }\n                if (value.indexOf('\\'') != (-1)) {\n                    value = escapeQuotes(value);\n                }\n                if (model != null) {\n                    value = org.apache.wicket.util.string.Strings.replaceAll(value, \"${\", \"$'{'\").toString();\n                }\n                final java.text.MessageFormat format = new java.text.MessageFormat(value, locale);\n                value = format.format(realParams);\n                if (model != null) {\n                    value = org.apache.wicket.util.string.Strings.replaceAll(value, \"$'{'\", \"${\").toString();\n                    value = localizer.substitutePropertyExpressions(component, value, model);\n                }\n            }\n        }\n        return value;\n    }\n\n    private java.lang.String escapeQuotes(final java.lang.String value) {\n        java.lang.StringBuilder newValue = new java.lang.StringBuilder(value.length() + 10);\n        int count = 0;\n        for (int i = 0; i < value.length(); i++) {\n            char ch = value.charAt(i);\n            if (ch == '{') {\n                count += 1;\n            } else if (ch == '}') {\n                count -= 1;\n            }\n            newValue.append(ch);\n            if ((ch == '\\'') && (count == 0)) {\n                newValue.append(ch);\n            }\n        }\n        return newValue.toString();\n    }\n\n    @java.lang.Override\n    public java.lang.String toString() {\n        java.lang.StringBuilder sb = new java.lang.StringBuilder(\"StringResourceModel[\");\n        sb.append(\"key:\");\n        sb.append(resourceKey);\n        sb.append(\",default:\");\n        sb.append(defaultValue);\n        sb.append(\",params:\");\n        if (parameters != null) {\n            sb.append(java.util.Arrays.asList(parameters));\n        }\n        sb.append(\"]\");\n        return sb.toString();\n    }\n\n    protected java.lang.Object[] getParameters() {\n        return parameters;\n    }\n\n    protected final java.lang.String getResourceKey() {\n        if (model != null) {\n            return new org.apache.wicket.core.util.string.interpolator.PropertyVariableInterpolator(resourceKey, model.getObject()).toString();\n        } else {\n            return resourceKey;\n        }\n    }\n\n    @java.lang.Override\n    protected final java.lang.String load() {\n        return getString();\n    }\n\n    @java.lang.Override\n    protected final void onDetach() {\n        super.onDetach();\n        if (model != null) {\n            model.detach();\n        }\n        if (parameters != null) {\n            for (java.lang.Object parameter : parameters) {\n                if (parameter instanceof org.apache.wicket.model.IDetachable) {\n                    ((org.apache.wicket.model.IDetachable) (parameter)).detach();\n                }\n            }\n        }\n        if (defaultValue != null) {\n            defaultValue.detach();\n        }\n    }\n\n    @java.lang.Override\n    public void setObject(java.lang.String object) {\n        throw new java.lang.UnsupportedOperationException();\n    }\n}",
            "src_parent_type": "Class",
            "src_type": "Method"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Invocation",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "super.detach()",
            "dst_parent": "{\n    super.detach();\n    if (model != null) {\n        model.detach();\n    }\n    if (parameters != null) {\n        for (java.lang.Object parameter : parameters) {\n            if (parameter instanceof org.apache.wicket.model.IDetachable) {\n                ((org.apache.wicket.model.IDetachable) (parameter)).detach();\n            }\n        }\n    }\n    if (defaultValue != null) {\n        defaultValue.detach();\n    }\n}",
            "dst_parent_type": "Block",
            "dst_type": "Invocation",
            "operator": "UPD",
            "src": "super.onDetach()",
            "src_parent": "{\n    super.onDetach();\n    if (model != null) {\n        model.detach();\n    }\n    if (parameters != null) {\n        for (java.lang.Object parameter : parameters) {\n            if (parameter instanceof org.apache.wicket.model.IDetachable) {\n                ((org.apache.wicket.model.IDetachable) (parameter)).detach();\n            }\n        }\n    }\n    if (defaultValue != null) {\n        defaultValue.detach();\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "Invocation"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Wrapper",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "public",
            "dst_parent": "@java.lang.Override\npublic final void detach() {\n    super.detach();\n    if (model != null) {\n        model.detach();\n    }\n    if (parameters != null) {\n        for (java.lang.Object parameter : parameters) {\n            if (parameter instanceof org.apache.wicket.model.IDetachable) {\n                ((org.apache.wicket.model.IDetachable) (parameter)).detach();\n            }\n        }\n    }\n    if (defaultValue != null) {\n        defaultValue.detach();\n    }\n}",
            "dst_parent_type": "Method",
            "dst_type": "Wra",
            "operator": "UPD",
            "src": "protected",
            "src_parent": "@java.lang.Override\nprotected final void onDetach() {\n    super.onDetach();\n    if (model != null) {\n        model.detach();\n    }\n    if (parameters != null) {\n        for (java.lang.Object parameter : parameters) {\n            if (parameter instanceof org.apache.wicket.model.IDetachable) {\n                ((org.apache.wicket.model.IDetachable) (parameter)).detach();\n            }\n        }\n    }\n    if (defaultValue != null) {\n        defaultValue.detach();\n    }\n}",
            "src_parent_type": "Method",
            "src_type": "Wra"
          }
        }
      ],
      "file_name": "StringResourceModel"
    }
  ],
  "id": "wicket_34634266"
}