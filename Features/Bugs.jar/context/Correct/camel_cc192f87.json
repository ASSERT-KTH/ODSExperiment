{
  "files": [
    {
      "features": [
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "Return",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "if (body instanceof java.io.InputStream) {\n    return new javax.xml.transform.stream.StreamSource(((java.io.InputStream) (body)));\n}",
            "src_parent": "{\n    if (body instanceof javax.xml.transform.Source) {\n        return ((javax.xml.transform.Source) (body));\n    }\n    javax.xml.transform.Source source = null;\n    if (body instanceof java.io.InputStream) {\n        return new javax.xml.transform.stream.StreamSource(((java.io.InputStream) (body)));\n    }\n    if (body != null) {\n        if (isAllowStAX()) {\n            source = exchange.getContext().getTypeConverter().tryConvertTo(javax.xml.transform.stax.StAXSource.class, exchange, body);\n        }\n        if (source == null) {\n            source = exchange.getContext().getTypeConverter().tryConvertTo(javax.xml.transform.sax.SAXSource.class, exchange, body);\n        }\n        if (source == null) {\n            source = exchange.getContext().getTypeConverter().tryConvertTo(javax.xml.transform.stream.StreamSource.class, exchange, body);\n        }\n        if (source == null) {\n            source = exchange.getContext().getTypeConverter().tryConvertTo(javax.xml.transform.dom.DOMSource.class, exchange, body);\n        }\n        if (source == null) {\n            org.apache.camel.TypeConverter tc = exchange.getContext().getTypeConverterRegistry().lookup(javax.xml.transform.Source.class, body.getClass());\n            if (tc != null) {\n                source = tc.convertTo(javax.xml.transform.Source.class, exchange, body);\n            }\n        }\n    }\n    if (source == null) {\n        if (isFailOnNullBody()) {\n            throw new org.apache.camel.ExpectedBodyTypeException(exchange, javax.xml.transform.Source.class);\n        } else {\n            try {\n                source = converter.toDOMSource(converter.createDocument());\n            } catch (javax.xml.parsers.ParserConfigurationException e) {\n                throw new org.apache.camel.RuntimeTransformException(e);\n            }\n        }\n    }\n    return source;\n}",
            "src_parent_type": "Block",
            "src_type": "If"
          }
        }
      ],
      "file_name": "XsltBuilder"
    }
  ],
  "id": "camel_cc192f87"
}