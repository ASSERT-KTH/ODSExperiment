{
  "files": [
    {
      "features": [
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Try",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "LocalVariable",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "LocalVariable",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "java.lang.String valueTypeName = (value != null) ? value.getClass().getName() : \"null\"",
            "src_parent": "{\n    wicket.RequestCycle cycle = wicket.RequestCycle.get();\n    if (cycle == null) {\n        throw new wicket.WicketRuntimeException(\"Can not set the attribute. No RequestCycle available\");\n    }\n    wicket.session.ISessionStore store = getSessionStore();\n    wicket.Request request = cycle.getRequest();\n    if (value == this) {\n        java.lang.Object current = store.getAttribute(request, name);\n        if (current == null) {\n            java.lang.String id = store.getSessionId(request, false);\n            if (id != null) {\n                store.bind(request, ((wicket.Session) (value)));\n            }\n        }\n    }\n    java.lang.String valueTypeName = (value != null) ? value.getClass().getName() : \"null\";\n    try {\n        final java.io.ByteArrayOutputStream out = new java.io.ByteArrayOutputStream();\n        new java.io.ObjectOutputStream(out).writeObject(value);\n        wicket.Session.log.debug(((((\"Stored attribute \" + name) + \"{ \") + valueTypeName) + \"} with size: \") + wicket.util.lang.Bytes.bytes(out.size()));\n    } catch (java.lang.Exception e) {\n        throw new wicket.WicketRuntimeException(\"Internal error cloning object. Make sure all dependent objects implement Serializable. Class: \" + valueTypeName, e);\n    }\n    store.setAttribute(request, name, value);\n}",
            "src_parent_type": "Block",
            "src_type": "LocalVariable"
          }
        },
        {
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {},
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Invocation",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "If",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "LocalVariable",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "Method",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "true",
          "S16_HAS_Invocations_Prone_Exception": "true",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "Try",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "DEL",
            "src": "try {\n    final java.io.ByteArrayOutputStream out = new java.io.ByteArrayOutputStream();\n    new java.io.ObjectOutputStream(out).writeObject(value);\n    wicket.Session.log.debug(((((\"Stored attribute \" + name) + \"{ \") + valueTypeName) + \"} with size: \") + wicket.util.lang.Bytes.bytes(out.size()));\n} catch (java.lang.Exception e) {\n    throw new wicket.WicketRuntimeException(\"Internal error cloning object. Make sure all dependent objects implement Serializable. Class: \" + valueTypeName, e);\n}",
            "src_parent": "{\n    wicket.RequestCycle cycle = wicket.RequestCycle.get();\n    if (cycle == null) {\n        throw new wicket.WicketRuntimeException(\"Can not set the attribute. No RequestCycle available\");\n    }\n    wicket.session.ISessionStore store = getSessionStore();\n    wicket.Request request = cycle.getRequest();\n    if (value == this) {\n        java.lang.Object current = store.getAttribute(request, name);\n        if (current == null) {\n            java.lang.String id = store.getSessionId(request, false);\n            if (id != null) {\n                store.bind(request, ((wicket.Session) (value)));\n            }\n        }\n    }\n    java.lang.String valueTypeName = (value != null) ? value.getClass().getName() : \"null\";\n    try {\n        final java.io.ByteArrayOutputStream out = new java.io.ByteArrayOutputStream();\n        new java.io.ObjectOutputStream(out).writeObject(value);\n        wicket.Session.log.debug(((((\"Stored attribute \" + name) + \"{ \") + valueTypeName) + \"} with size: \") + wicket.util.lang.Bytes.bytes(out.size()));\n    } catch (java.lang.Exception e) {\n        throw new wicket.WicketRuntimeException(\"Internal error cloning object. Make sure all dependent objects implement Serializable. Class: \" + valueTypeName, e);\n    }\n    store.setAttribute(request, name, value);\n}",
            "src_parent_type": "Block",
            "src_type": "Try"
          }
        }
      ],
      "file_name": "Session"
    }
  ],
  "id": "wicket_7e1000dd"
}