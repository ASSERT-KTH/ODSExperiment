/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 25 20:58:31 GMT 2019
 */

package org.apache.accumulo.core.client.mock;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.nio.CharBuffer;
import org.apache.accumulo.core.client.admin.TimeType;
import org.apache.accumulo.core.client.mock.MockTable;
import org.apache.accumulo.core.data.Key;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MockTable_ESTest extends MockTable_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      char[] charArray0 = new char[8];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      Key key0 = new Key(charBuffer0, charBuffer0, charBuffer0, 0L);
      MockTable.MockMemKey mockTable_MockMemKey0 = new MockTable.MockMemKey(key0, (-617));
      StringBuffer stringBuffer0 = new StringBuffer("");
      Key key1 = new Key(charBuffer0, charBuffer0, stringBuffer0, "");
      int int0 = mockTable_MockMemKey0.compareTo(key1);
      assertEquals(8, int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Key key0 = new Key();
      MockTable.MockMemKey mockTable_MockMemKey0 = new MockTable.MockMemKey(key0, 1744);
      MockTable.MockMemKey mockTable_MockMemKey1 = new MockTable.MockMemKey(key0, 66);
      boolean boolean0 = mockTable_MockMemKey0.equals((Object) mockTable_MockMemKey1);
      assertFalse(boolean0);
      assertFalse(mockTable_MockMemKey1.equals((Object)mockTable_MockMemKey0));
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      TimeType timeType0 = TimeType.MILLIS;
      MockTable mockTable0 = null;
      try {
        mockTable0 = new MockTable(false, timeType0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class org.apache.accumulo.core.iterators.IteratorUtil
         //
         verifyException("org.apache.accumulo.core.client.mock.MockTable", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Key key0 = new Key();
      MockTable.MockMemKey mockTable_MockMemKey0 = new MockTable.MockMemKey(key0, ' ');
      MockTable.MockMemKey mockTable_MockMemKey1 = new MockTable.MockMemKey(mockTable_MockMemKey0, ']');
      int int0 = mockTable_MockMemKey1.compareTo((Key) mockTable_MockMemKey0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Key key0 = new Key();
      MockTable.MockMemKey mockTable_MockMemKey0 = new MockTable.MockMemKey(key0, ' ');
      MockTable.MockMemKey mockTable_MockMemKey1 = new MockTable.MockMemKey(mockTable_MockMemKey0, ']');
      int int0 = mockTable_MockMemKey0.compareTo((Key) mockTable_MockMemKey1);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Key key0 = new Key();
      MockTable.MockMemKey mockTable_MockMemKey0 = new MockTable.MockMemKey(key0, 1);
      int int0 = mockTable_MockMemKey0.compareTo(key0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Key key0 = new Key();
      MockTable.MockMemKey mockTable_MockMemKey0 = new MockTable.MockMemKey(key0, 1);
      Key key1 = new Key(" : [] 9223372036854775807 false count=1", " : [] 9223372036854775807 false count=1", " : [] 9223372036854775807 false count=1", " : [] 9223372036854775807 false count=1");
      int int0 = mockTable_MockMemKey0.compareTo(key1);
      assertEquals((-39), int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Key key0 = new Key();
      MockTable.MockMemKey mockTable_MockMemKey0 = new MockTable.MockMemKey(key0, ' ');
      int int0 = mockTable_MockMemKey0.compareTo((Key) mockTable_MockMemKey0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Key key0 = new Key();
      MockTable.MockMemKey mockTable_MockMemKey0 = new MockTable.MockMemKey(key0, ' ');
      MockTable.MockMemKey mockTable_MockMemKey1 = new MockTable.MockMemKey(mockTable_MockMemKey0, ']');
      boolean boolean0 = mockTable_MockMemKey0.equals((Object) mockTable_MockMemKey1);
      assertFalse(boolean0);
      assertFalse(mockTable_MockMemKey1.equals((Object)mockTable_MockMemKey0));
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Key key0 = new Key();
      MockTable.MockMemKey mockTable_MockMemKey0 = new MockTable.MockMemKey(key0, 1);
      boolean boolean0 = mockTable_MockMemKey0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Key key0 = new Key();
      MockTable.MockMemKey mockTable_MockMemKey0 = new MockTable.MockMemKey(key0, 1);
      String string0 = mockTable_MockMemKey0.toString();
      assertEquals(" : [] 9223372036854775807 false count=1", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Key key0 = new Key();
      MockTable.MockMemKey mockTable_MockMemKey0 = new MockTable.MockMemKey(key0, ' ');
      boolean boolean0 = mockTable_MockMemKey0.equals((Object) mockTable_MockMemKey0);
      assertTrue(boolean0);
  }
}
