/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Wed Dec 25 20:44:25 GMT 2019
 */

package org.apache.accumulo.core.iterators.user;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.junit.AfterClass;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

import static org.evosuite.shaded.org.mockito.Mockito.*;
@EvoSuiteClassExclude
public class RegExFilter_ESTest_scaffolding {

  @org.junit.Rule 
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeClass 
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "org.apache.accumulo.core.iterators.user.RegExFilter"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    try { initMocksToAvoidTimeoutsInTheTests(); } catch(ClassNotFoundException e) {} 
  } 

  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    Sandbox.resetDefaultSecurityManager(); 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
  } 

  @Before 
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    setSystemProperties(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
    java.lang.System.setProperty("file.encoding", "ANSI_X3.4-1968"); 
    java.lang.System.setProperty("java.awt.headless", "true"); 
    java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
    java.lang.System.setProperty("user.country", "US"); 
    java.lang.System.setProperty("user.dir", "/home/wasp/Desktop/research/evosuite-bugjar/tests/bugs-dot-jar_ACCUMULO-189_6dbbdc21/7"); 
    java.lang.System.setProperty("user.home", "/home/wasp"); 
    java.lang.System.setProperty("user.language", "en"); 
    java.lang.System.setProperty("user.name", "wasp"); 
    java.lang.System.setProperty("user.timezone", "America/Los_Angeles"); 
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(RegExFilter_ESTest_scaffolding.class.getClassLoader() ,
      "org.apache.hadoop.fs.FileSystem",
      "org.apache.accumulo.core.data.thrift.TKey$_Fields",
      "org.apache.thrift.protocol.TSimpleJSONProtocol",
      "org.apache.hadoop.io.SequenceFile$CompressionType",
      "org.apache.hadoop.io.compress.CompressionOutputStream",
      "org.apache.hadoop.io.Writable",
      "org.apache.thrift.TBaseHelper",
      "org.apache.accumulo.core.iterators.conf.ColumnToClassMapping",
      "org.apache.hadoop.io.SequenceFile$Metadata",
      "org.apache.accumulo.core.iterators.GrepIterator",
      "org.apache.hadoop.conf.Configuration",
      "org.apache.accumulo.core.data.thrift.IterInfo",
      "org.apache.hadoop.io.WritableFactories",
      "org.apache.thrift.protocol.TCompactProtocol",
      "org.apache.thrift.TBase",
      "org.apache.accumulo.core.data.thrift.TKey",
      "org.apache.hadoop.io.SequenceFile$Sorter",
      "org.apache.thrift.protocol.TJSONProtocol",
      "org.apache.accumulo.core.data.Column",
      "org.apache.accumulo.core.iterators.user.LargeRowFilter",
      "org.apache.accumulo.core.iterators.conf.ColumnUtil$ColFamHashKey",
      "org.apache.accumulo.core.security.ColumnVisibility$NodeType",
      "org.apache.thrift.transport.TSeekableFile",
      "org.apache.accumulo.core.iterators.IteratorUtil$IteratorScope",
      "org.apache.accumulo.core.util.BadArgumentException",
      "org.apache.hadoop.io.SequenceFile$RecordCompressWriter",
      "org.apache.accumulo.core.iterators.Filter",
      "org.apache.hadoop.io.compress.Decompressor",
      "org.apache.hadoop.fs.CanSetReadahead",
      "org.apache.accumulo.core.iterators.SortedKeyIterator",
      "org.apache.accumulo.core.iterators.conf.ColumnUtil$ColHashKey",
      "org.apache.accumulo.core.conf.ConfigurationCopy",
      "org.apache.accumulo.core.iterators.IterationInterruptedException",
      "org.apache.hadoop.fs.FSDataOutputStream$PositionCache",
      "org.apache.thrift.transport.TFileTransport",
      "org.apache.hadoop.security.SaslRpcServer$2",
      "org.apache.accumulo.core.data.thrift.IterInfo$_Fields",
      "org.apache.hadoop.io.WritableComparable",
      "org.apache.accumulo.core.iterators.user.IntersectingIterator",
      "org.apache.accumulo.core.iterators.SortedKeyValueIterator",
      "org.apache.hadoop.io.WritableComparator",
      "org.apache.accumulo.core.iterators.DevNull",
      "org.apache.thrift.transport.TMemoryInputTransport",
      "org.apache.accumulo.core.iterators.user.GrepIterator",
      "org.apache.hadoop.io.SequenceFile$BlockCompressWriter",
      "org.apache.hadoop.io.serializer.SerializationFactory",
      "org.apache.hadoop.fs.Syncable",
      "org.apache.thrift.protocol.TJSONProtocol$JSONBaseContext",
      "org.apache.hadoop.fs.CanSetDropBehind",
      "org.apache.accumulo.core.iterators.DebugIterator",
      "org.apache.hadoop.io.SequenceFile$Writer$Option",
      "org.apache.accumulo.core.iterators.IntersectingIterator",
      "org.apache.accumulo.core.iterators.IteratorUtil",
      "org.apache.hadoop.io.DataInputBuffer",
      "org.apache.thrift.meta_data.FieldValueMetaData",
      "org.apache.thrift.protocol.TJSONProtocol$JSONListContext",
      "org.apache.accumulo.core.data.thrift.TRange",
      "org.apache.accumulo.core.iterators.SortedMapIterator",
      "org.apache.accumulo.core.conf.AccumuloConfiguration",
      "org.apache.accumulo.core.conf.SiteConfiguration",
      "org.apache.thrift.transport.TFileTransport$truncableBufferedInputStream",
      "org.apache.thrift.transport.TSaslTransport$SaslParticipant",
      "org.apache.accumulo.core.iterators.user.RegExFilter",
      "org.apache.accumulo.core.iterators.LargeRowFilter",
      "org.apache.thrift.transport.TNonblockingTransport",
      "org.apache.hadoop.util.Progressable",
      "org.apache.accumulo.core.data.Value$Comparator",
      "org.apache.thrift.protocol.TSet",
      "org.apache.accumulo.core.data.ArrayByteSequence",
      "org.apache.hadoop.fs.Seekable",
      "org.apache.thrift.protocol.TList",
      "org.apache.hadoop.io.compress.CompressionCodec",
      "org.apache.thrift.transport.TTransport",
      "org.apache.thrift.transport.TSaslTransport$NegotiationStatus",
      "org.apache.thrift.protocol.TField",
      "org.apache.thrift.protocol.TProtocolException",
      "org.apache.accumulo.core.data.thrift.TRange$_Fields",
      "org.apache.hadoop.io.serializer.Deserializer",
      "org.apache.accumulo.core.iterators.user.VersioningIterator",
      "org.apache.thrift.transport.TStandardFile",
      "org.apache.thrift.TByteArrayOutputStream",
      "org.apache.accumulo.core.iterators.conf.ColumnUtil",
      "org.apache.accumulo.core.data.thrift.TColumn",
      "org.apache.hadoop.security.SaslRpcServer$SaslGssCallbackHandler",
      "org.apache.thrift.transport.TFileTransport$tailPolicy",
      "org.apache.hadoop.io.DataOutputBuffer",
      "org.apache.accumulo.core.util.Pair",
      "org.apache.thrift.TFieldIdEnum",
      "org.apache.accumulo.core.iterators.WrappingIterator",
      "org.apache.accumulo.core.util.ByteBufferUtil",
      "org.apache.accumulo.core.iterators.user.RowDeletingIterator",
      "org.apache.accumulo.core.data.Key$1",
      "org.apache.hadoop.security.token.SecretManager$InvalidToken",
      "org.apache.hadoop.io.EnumSetWritable",
      "org.apache.hadoop.fs.PathFilter",
      "org.apache.thrift.protocol.TSimpleJSONProtocol$StructContext",
      "org.apache.hadoop.io.MapWritable",
      "org.apache.hadoop.io.compress.Compressor",
      "org.apache.hadoop.HadoopIllegalArgumentException",
      "org.apache.thrift.protocol.TStruct",
      "org.apache.thrift.meta_data.FieldMetaData",
      "org.apache.accumulo.core.security.ColumnVisibility$NodeComparator",
      "org.apache.hadoop.io.EnumSetWritable$1",
      "org.apache.hadoop.io.SequenceFile$Reader",
      "org.apache.thrift.transport.TNonblockingSocket",
      "org.apache.hadoop.io.compress.CompressionInputStream",
      "org.apache.accumulo.core.security.Authorizations",
      "org.apache.accumulo.core.conf.DefaultConfiguration",
      "org.apache.thrift.TBaseHelper$NestedStructureComparator",
      "org.apache.thrift.protocol.TMessage",
      "org.apache.hadoop.io.RawComparator",
      "org.apache.accumulo.core.iterators.OptionDescriber",
      "org.apache.hadoop.io.SequenceFile$Reader$Option",
      "org.apache.hadoop.io.WritableUtils",
      "org.apache.accumulo.core.data.ByteSequence",
      "org.apache.hadoop.util.Progress",
      "org.apache.hadoop.io.Text",
      "org.apache.hadoop.io.SequenceFile",
      "org.apache.accumulo.core.iterators.conf.ColumnSet",
      "org.apache.accumulo.core.data.thrift.TColumn$_Fields",
      "org.apache.hadoop.io.FastByteComparisons$LexicographicalComparerHolder$UnsafeComparer$1",
      "org.apache.accumulo.core.iterators.IteratorUtil$IterInfoComparator",
      "org.apache.hadoop.fs.FSDataInputStream",
      "org.apache.thrift.transport.TSaslTransport",
      "org.apache.hadoop.io.DataOutputBuffer$Buffer",
      "org.apache.hadoop.fs.ByteBufferReadable",
      "org.apache.thrift.TBaseHelper$1",
      "org.apache.hadoop.fs.ChecksumFileSystem",
      "org.apache.hadoop.fs.RemoteIterator",
      "org.apache.accumulo.core.iterators.user.WholeRowIterator",
      "org.apache.thrift.transport.TSaslTransport$SaslResponse",
      "org.apache.accumulo.core.iterators.OptionDescriber$IteratorOptions",
      "org.apache.hadoop.io.SequenceFile$1",
      "org.apache.hadoop.fs.FSDataOutputStream",
      "org.apache.thrift.ShortStack",
      "org.apache.hadoop.fs.FilterFileSystem",
      "org.apache.accumulo.core.data.Key",
      "org.apache.accumulo.core.iterators.system.InterruptibleIterator",
      "org.apache.thrift.transport.TSocket",
      "org.apache.thrift.transport.TMemoryBuffer",
      "org.apache.thrift.protocol.TSimpleJSONProtocol$ListContext",
      "org.apache.accumulo.core.iterators.ColumnFamilyCounter",
      "org.apache.hadoop.fs.FileAlreadyExistsException",
      "org.apache.hadoop.io.AbstractMapWritable",
      "org.apache.hadoop.conf.Configuration$IntegerRanges",
      "org.apache.hadoop.io.Text$2",
      "org.apache.thrift.transport.TSaslTransport$SaslRole",
      "org.apache.thrift.TException",
      "org.apache.accumulo.core.iterators.WholeRowIterator",
      "org.apache.accumulo.core.data.Range",
      "org.apache.accumulo.core.client.IteratorSetting",
      "org.apache.accumulo.core.security.ColumnVisibility",
      "org.apache.hadoop.io.Text$1",
      "org.apache.thrift.protocol.TJSONProtocol$JSONPairContext",
      "org.apache.accumulo.core.data.PartialKey",
      "org.apache.accumulo.core.iterators.RowDeletingIterator",
      "org.apache.accumulo.core.iterators.IteratorEnvironment",
      "org.apache.hadoop.fs.ChecksumException",
      "org.apache.thrift.transport.TTransportException",
      "org.apache.hadoop.io.FastByteComparisons",
      "org.apache.accumulo.core.util.ArgumentChecker",
      "org.apache.thrift.meta_data.StructMetaData",
      "org.apache.accumulo.core.util.TextUtil",
      "org.apache.hadoop.security.SaslPlainServer$SecurityProvider",
      "org.apache.hadoop.conf.Configured",
      "org.apache.hadoop.io.Text$Comparator",
      "org.apache.hadoop.fs.Path",
      "org.apache.accumulo.core.data.Value",
      "org.apache.hadoop.conf.Configurable",
      "org.apache.thrift.transport.TIOStreamTransport",
      "org.apache.accumulo.core.security.ColumnVisibility$Node",
      "org.apache.accumulo.core.iterators.FirstEntryInRowIterator",
      "org.apache.thrift.protocol.TSimpleJSONProtocol$Context",
      "org.apache.thrift.transport.TSaslClientTransport",
      "org.apache.hadoop.io.DataInputBuffer$Buffer",
      "org.apache.accumulo.core.iterators.VersioningIterator",
      "org.apache.hadoop.fs.permission.AccessControlException",
      "org.apache.thrift.protocol.TMap",
      "org.apache.hadoop.fs.HasFileDescriptor",
      "org.apache.hadoop.io.BinaryComparable",
      "org.apache.hadoop.security.SaslRpcServer",
      "org.apache.hadoop.util.MergeSort",
      "org.apache.hadoop.io.SequenceFile$Sorter$RawKeyValueIterator",
      "org.apache.hadoop.io.SequenceFile$ValueBytes",
      "org.apache.accumulo.core.iterators.OrIterator",
      "org.apache.thrift.protocol.TJSONProtocol$LookaheadReader",
      "org.apache.hadoop.conf.Configuration$Resource",
      "org.apache.hadoop.security.SaslRpcServer$AuthMethod",
      "org.apache.hadoop.fs.ParentNotDirectoryException",
      "org.apache.hadoop.fs.PositionedReadable",
      "org.apache.hadoop.io.VersionMismatchException",
      "org.apache.hadoop.fs.CreateFlag",
      "org.apache.hadoop.io.FastByteComparisons$Comparer",
      "org.apache.accumulo.core.iterators.SkippingIterator",
      "org.apache.hadoop.io.WritableFactory",
      "org.apache.accumulo.core.iterators.aggregation.Aggregator",
      "org.apache.accumulo.core.security.ColumnVisibility$ColumnVisibilityParser",
      "org.apache.accumulo.core.iterators.AggregatingIterator",
      "org.apache.thrift.protocol.TProtocol",
      "org.apache.hadoop.io.FastByteComparisons$LexicographicalComparerHolder$UnsafeComparer",
      "org.apache.hadoop.security.AccessControlException",
      "org.apache.hadoop.io.FastByteComparisons$LexicographicalComparerHolder",
      "org.apache.hadoop.fs.LocalFileSystem",
      "org.apache.hadoop.io.SequenceFile$Writer"
    );
  } 
  private static void initMocksToAvoidTimeoutsInTheTests() throws ClassNotFoundException { 
    mock(Class.forName("org.apache.accumulo.core.iterators.IteratorEnvironment", false, RegExFilter_ESTest_scaffolding.class.getClassLoader()));
  }

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(RegExFilter_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "org.apache.accumulo.core.iterators.WrappingIterator",
      "org.apache.accumulo.core.iterators.Filter",
      "org.apache.accumulo.core.iterators.user.RegExFilter",
      "org.apache.hadoop.io.BinaryComparable",
      "org.apache.hadoop.io.Text$1",
      "org.apache.hadoop.io.Text$2",
      "org.apache.hadoop.io.WritableComparator",
      "org.apache.hadoop.io.Text$Comparator",
      "org.apache.hadoop.io.Text",
      "org.apache.hadoop.io.FastByteComparisons",
      "org.apache.hadoop.io.FastByteComparisons$LexicographicalComparerHolder$UnsafeComparer$1",
      "org.apache.hadoop.io.FastByteComparisons$LexicographicalComparerHolder$UnsafeComparer",
      "org.apache.hadoop.io.FastByteComparisons$LexicographicalComparerHolder",
      "org.apache.accumulo.core.data.Key",
      "org.apache.accumulo.core.iterators.OrIterator",
      "org.apache.accumulo.core.client.IteratorSetting",
      "org.apache.accumulo.core.util.ArgumentChecker",
      "org.apache.accumulo.core.iterators.ColumnFamilyCounter",
      "org.apache.accumulo.core.iterators.SortedMapIterator",
      "org.apache.accumulo.core.data.Range",
      "org.apache.accumulo.core.data.Value",
      "org.apache.accumulo.core.iterators.user.LargeRowFilter",
      "org.apache.hadoop.io.AbstractMapWritable",
      "org.apache.hadoop.io.MapWritable",
      "org.apache.accumulo.core.iterators.AggregatingIterator",
      "org.apache.accumulo.core.iterators.user.WholeRowIterator",
      "org.apache.accumulo.core.iterators.WholeRowIterator",
      "org.apache.accumulo.core.data.ByteSequence",
      "org.apache.accumulo.core.data.ArrayByteSequence",
      "org.apache.accumulo.core.iterators.user.RowDeletingIterator",
      "org.apache.accumulo.core.iterators.user.IntersectingIterator",
      "org.apache.accumulo.core.iterators.OptionDescriber$IteratorOptions",
      "org.apache.accumulo.core.iterators.SortedKeyIterator",
      "org.apache.hadoop.conf.Configuration",
      "org.apache.accumulo.core.iterators.user.VersioningIterator",
      "org.apache.accumulo.core.iterators.VersioningIterator",
      "org.apache.accumulo.core.iterators.SkippingIterator",
      "org.apache.accumulo.core.iterators.FirstEntryInRowIterator",
      "org.apache.accumulo.core.iterators.DevNull",
      "org.apache.accumulo.core.data.Key$1",
      "org.apache.accumulo.core.iterators.conf.ColumnToClassMapping",
      "org.apache.accumulo.core.iterators.conf.ColumnUtil$ColHashKey",
      "org.apache.accumulo.core.iterators.conf.ColumnUtil$ColFamHashKey",
      "org.apache.accumulo.core.security.ColumnVisibility",
      "org.apache.accumulo.core.util.TextUtil",
      "org.apache.accumulo.core.security.ColumnVisibility$ColumnVisibilityParser",
      "org.apache.accumulo.core.security.Authorizations",
      "org.apache.accumulo.core.util.BadArgumentException",
      "org.apache.accumulo.core.iterators.DebugIterator",
      "org.apache.accumulo.core.iterators.user.GrepIterator",
      "org.apache.accumulo.core.iterators.GrepIterator",
      "org.apache.accumulo.core.iterators.conf.ColumnSet",
      "org.apache.accumulo.core.util.Pair",
      "org.apache.accumulo.core.security.ColumnVisibility$Node",
      "org.apache.accumulo.core.security.ColumnVisibility$NodeType",
      "org.apache.thrift.transport.TTransport",
      "org.apache.thrift.transport.TNonblockingTransport",
      "org.apache.thrift.transport.TNonblockingSocket",
      "org.apache.thrift.transport.TMemoryBuffer",
      "org.apache.thrift.TByteArrayOutputStream",
      "org.apache.thrift.protocol.TProtocol",
      "org.apache.thrift.protocol.TStruct",
      "org.apache.thrift.protocol.TField",
      "org.apache.thrift.protocol.TMessage",
      "org.apache.thrift.protocol.TSet",
      "org.apache.thrift.protocol.TList",
      "org.apache.thrift.protocol.TMap",
      "org.apache.thrift.protocol.TSimpleJSONProtocol",
      "org.apache.thrift.protocol.TSimpleJSONProtocol$Context",
      "org.apache.hadoop.io.EnumSetWritable$1",
      "org.apache.hadoop.io.WritableFactories",
      "org.apache.hadoop.io.EnumSetWritable",
      "org.apache.hadoop.security.SaslRpcServer$SaslGssCallbackHandler",
      "org.apache.thrift.transport.TMemoryInputTransport",
      "org.apache.thrift.transport.TSaslTransport",
      "org.apache.thrift.transport.TSaslClientTransport",
      "org.apache.thrift.transport.TSaslTransport$SaslParticipant",
      "org.apache.thrift.protocol.TCompactProtocol",
      "org.apache.thrift.ShortStack",
      "org.apache.hadoop.io.SequenceFile$Metadata",
      "org.apache.accumulo.core.data.thrift.TKey$_Fields",
      "org.apache.thrift.meta_data.FieldMetaData",
      "org.apache.thrift.meta_data.FieldValueMetaData",
      "org.apache.accumulo.core.data.thrift.TKey",
      "org.apache.thrift.protocol.TJSONProtocol",
      "org.apache.thrift.protocol.TJSONProtocol$JSONBaseContext",
      "org.apache.thrift.protocol.TJSONProtocol$LookaheadReader",
      "org.apache.accumulo.core.util.ByteBufferUtil",
      "org.apache.thrift.transport.TFileTransport",
      "org.apache.thrift.transport.TFileTransport$tailPolicy",
      "org.apache.thrift.transport.TStandardFile",
      "org.apache.thrift.TBaseHelper$NestedStructureComparator",
      "org.apache.thrift.TBaseHelper",
      "org.apache.hadoop.io.WritableUtils",
      "org.apache.accumulo.core.data.thrift.TRange$_Fields",
      "org.apache.thrift.meta_data.StructMetaData",
      "org.apache.accumulo.core.data.thrift.TRange",
      "org.apache.thrift.transport.TIOStreamTransport",
      "org.apache.thrift.transport.TSocket"
    );
  }
}
