/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 25 20:50:31 GMT 2019
 */

package org.apache.accumulo.core.iterators.user;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.HashMap;
import java.util.Map;
import java.util.TreeMap;
import java.util.regex.PatternSyntaxException;
import org.apache.accumulo.core.client.IteratorSetting;
import org.apache.accumulo.core.data.Key;
import org.apache.accumulo.core.data.Value;
import org.apache.accumulo.core.iterators.ColumnFamilyCounter;
import org.apache.accumulo.core.iterators.IteratorEnvironment;
import org.apache.accumulo.core.iterators.OptionDescriber;
import org.apache.accumulo.core.iterators.SortedKeyValueIterator;
import org.apache.accumulo.core.iterators.SortedMapIterator;
import org.apache.accumulo.core.iterators.user.RegExFilter;
import org.apache.hadoop.io.Text;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class RegExFilter_ESTest extends RegExFilter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      RegExFilter regExFilter0 = new RegExFilter();
      Class<org.apache.accumulo.core.iterators.IntersectingIterator> class0 = org.apache.accumulo.core.iterators.IntersectingIterator.class;
      IteratorSetting iteratorSetting0 = new IteratorSetting(1107, "valueRegex", class0);
      RegExFilter.setEncoding(iteratorSetting0, "UTF-8");
      Map<String, String> map0 = iteratorSetting0.getProperties();
      regExFilter0.validateOptions(map0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      RegExFilter regExFilter0 = new RegExFilter();
      OptionDescriber.IteratorOptions optionDescriber_IteratorOptions0 = regExFilter0.describeOptions();
      org.apache.accumulo.core.iterators.GrepIterator grepIterator0 = new org.apache.accumulo.core.iterators.GrepIterator();
      IteratorEnvironment iteratorEnvironment0 = mock(IteratorEnvironment.class, new ViolatedAssumptionAnswer());
      regExFilter0.init(grepIterator0, optionDescriber_IteratorOptions0.namedOptions, iteratorEnvironment0);
      Key key0 = new Key();
      // Undeclared exception!
      try { 
        regExFilter0.accept(key0, (Value) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.accumulo.core.iterators.user.RegExFilter", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      RegExFilter regExFilter0 = new RegExFilter();
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      hashMap0.put("colqRegex", "(Q~;*NyB0Vq#");
      // Undeclared exception!
      try { 
        regExFilter0.validateOptions(hashMap0);
        fail("Expecting exception: PatternSyntaxException");
      
      } catch(PatternSyntaxException e) {
         //
         // Unclosed group near index 12
         // (Q~;*NyB0Vq#
         //
         verifyException("java.util.regex.Pattern", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      RegExFilter regExFilter0 = new RegExFilter();
      // Undeclared exception!
      try { 
        regExFilter0.validateOptions((Map<String, String>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.accumulo.core.iterators.Filter", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      // Undeclared exception!
      try { 
        RegExFilter.setRegexs((IteratorSetting) null, "-)yMZ3ru", "UTF-8", "XzXa.u2t1z2CehM", "<ocI$", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.accumulo.core.iterators.user.RegExFilter", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      RegExFilter regExFilter0 = new RegExFilter();
      TreeMap<Key, Value> treeMap0 = new TreeMap<Key, Value>();
      SortedMapIterator sortedMapIterator0 = new SortedMapIterator(treeMap0);
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      hashMap0.put("rowRegex", "cT&+HFr$NU(>NQ{xJp");
      IteratorEnvironment iteratorEnvironment0 = mock(IteratorEnvironment.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        regExFilter0.init(sortedMapIterator0, hashMap0, iteratorEnvironment0);
        fail("Expecting exception: PatternSyntaxException");
      
      } catch(PatternSyntaxException e) {
         //
         // Illegal repetition near index 13
         // cT&+HFr$NU(>NQ{xJp
         //              ^
         //
         verifyException("java.util.regex.Pattern", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      RegExFilter regExFilter0 = new RegExFilter();
      IteratorEnvironment iteratorEnvironment0 = mock(IteratorEnvironment.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        regExFilter0.init(regExFilter0, (Map<String, String>) null, iteratorEnvironment0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.accumulo.core.iterators.Filter", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      RegExFilter regExFilter0 = new RegExFilter();
      TreeMap<String, String> treeMap0 = new TreeMap<String, String>();
      IteratorEnvironment iteratorEnvironment0 = mock(IteratorEnvironment.class, new ViolatedAssumptionAnswer());
      treeMap0.put("rowRegex", "valueRegex");
      regExFilter0.init(regExFilter0, treeMap0, iteratorEnvironment0);
      regExFilter0.validateOptions(treeMap0);
      IteratorEnvironment iteratorEnvironment1 = mock(IteratorEnvironment.class, new ViolatedAssumptionAnswer());
      regExFilter0.deepCopy(iteratorEnvironment1);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      IteratorSetting iteratorSetting0 = new IteratorSetting(101, "valueRegex", "");
      RegExFilter.setEncoding(iteratorSetting0, "");
      assertFalse(iteratorSetting0.hasProperties());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Class<org.apache.accumulo.core.iterators.IntersectingIterator> class0 = org.apache.accumulo.core.iterators.IntersectingIterator.class;
      IteratorSetting iteratorSetting0 = new IteratorSetting(574, class0);
      RegExFilter.setRegexs(iteratorSetting0, "rowRegex", ",iL%y{", "colfRegex", (String) null, true);
      assertTrue(iteratorSetting0.hasProperties());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Class<org.apache.accumulo.core.iterators.IntersectingIterator> class0 = org.apache.accumulo.core.iterators.IntersectingIterator.class;
      IteratorSetting iteratorSetting0 = new IteratorSetting(1, "org.apache.hadoop.io.SequenceFile$BlockCompressWriter", class0);
      RegExFilter.setRegexs(iteratorSetting0, "name:org.apache.hadoop.io.SequenceFile$BlockCompressWriter, priority:1, class:org.apache.accumulo.core.iterators.IntersectingIterator, scopes:[scan], properties:{}", "fi{~|S*!./57;rx^", (String) null, "", false);
      assertEquals(1, iteratorSetting0.getPriority());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Class<org.apache.accumulo.core.iterators.IntersectingIterator> class0 = org.apache.accumulo.core.iterators.IntersectingIterator.class;
      IteratorSetting iteratorSetting0 = new IteratorSetting(237, "regular expression on row", class0);
      RegExFilter.setRegexs(iteratorSetting0, (String) null, "orFields", "UTF-8", "rowRegex", false);
      assertEquals("org.apache.accumulo.core.iterators.IntersectingIterator", iteratorSetting0.getIteratorClass());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      RegExFilter regExFilter0 = new RegExFilter();
      OptionDescriber.IteratorOptions optionDescriber_IteratorOptions0 = regExFilter0.describeOptions();
      boolean boolean0 = regExFilter0.validateOptions(optionDescriber_IteratorOptions0.namedOptions);
      assertFalse(boolean0);
      assertEquals("The RegExFilter/Iterator allows you to filter for key/value pairs based on regular expressions", optionDescriber_IteratorOptions0.getDescription());
      assertEquals("regex", optionDescriber_IteratorOptions0.getName());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      RegExFilter regExFilter0 = new RegExFilter();
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      ColumnFamilyCounter columnFamilyCounter0 = new ColumnFamilyCounter();
      IteratorEnvironment iteratorEnvironment0 = mock(IteratorEnvironment.class, new ViolatedAssumptionAnswer());
      regExFilter0.init(columnFamilyCounter0, hashMap0, iteratorEnvironment0);
      assertEquals(0, hashMap0.size());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      RegExFilter regExFilter0 = new RegExFilter();
      Class<org.apache.accumulo.core.iterators.IntersectingIterator> class0 = org.apache.accumulo.core.iterators.IntersectingIterator.class;
      IteratorSetting iteratorSetting0 = new IteratorSetting(1102, "valueRegex", class0);
      Map<String, String> map0 = iteratorSetting0.getProperties();
      org.apache.accumulo.core.iterators.GrepIterator grepIterator0 = new org.apache.accumulo.core.iterators.GrepIterator();
      RegExFilter.setRegexs(iteratorSetting0, "UTF-8", (String) null, "", "'&RX'.P", true);
      Key key0 = new Key();
      IteratorEnvironment iteratorEnvironment0 = mock(IteratorEnvironment.class, new ViolatedAssumptionAnswer());
      regExFilter0.init(grepIterator0, map0, iteratorEnvironment0);
      assertEquals(4, map0.size());
      
      boolean boolean0 = regExFilter0.accept(key0, (Value) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      RegExFilter regExFilter0 = new RegExFilter();
      Class<org.apache.accumulo.core.iterators.IntersectingIterator> class0 = org.apache.accumulo.core.iterators.IntersectingIterator.class;
      IteratorSetting iteratorSetting0 = new IteratorSetting(1102, "valueRegex", class0);
      Map<String, String> map0 = iteratorSetting0.getProperties();
      org.apache.accumulo.core.iterators.GrepIterator grepIterator0 = new org.apache.accumulo.core.iterators.GrepIterator();
      RegExFilter.setRegexs(iteratorSetting0, "UTF-8", (String) null, "valueRegex", "'&RX'.P", true);
      Key key0 = new Key();
      IteratorEnvironment iteratorEnvironment0 = mock(IteratorEnvironment.class, new ViolatedAssumptionAnswer());
      regExFilter0.init(grepIterator0, map0, iteratorEnvironment0);
      // Undeclared exception!
      try { 
        regExFilter0.accept(key0, (Value) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.accumulo.core.iterators.user.RegExFilter", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      RegExFilter regExFilter0 = new RegExFilter();
      org.apache.accumulo.core.iterators.WholeRowIterator wholeRowIterator0 = new org.apache.accumulo.core.iterators.WholeRowIterator();
      TreeMap<String, String> treeMap0 = new TreeMap<String, String>();
      IteratorEnvironment iteratorEnvironment0 = mock(IteratorEnvironment.class, new ViolatedAssumptionAnswer());
      treeMap0.put("rowRegex", "valueRegex");
      regExFilter0.init(wholeRowIterator0, treeMap0, iteratorEnvironment0);
      Text text0 = new Text();
      Key key0 = new Key(text0, text0, text0, text0);
      boolean boolean0 = regExFilter0.accept(key0, (Value) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      RegExFilter regExFilter0 = new RegExFilter();
      org.apache.accumulo.core.iterators.WholeRowIterator wholeRowIterator0 = new org.apache.accumulo.core.iterators.WholeRowIterator();
      TreeMap<String, String> treeMap0 = new TreeMap<String, String>();
      IteratorEnvironment iteratorEnvironment0 = mock(IteratorEnvironment.class, new ViolatedAssumptionAnswer());
      treeMap0.put("rowRegex", "valueRegex");
      regExFilter0.init(wholeRowIterator0, treeMap0, iteratorEnvironment0);
      IteratorEnvironment iteratorEnvironment1 = mock(IteratorEnvironment.class, new ViolatedAssumptionAnswer());
      SortedKeyValueIterator<Key, Value> sortedKeyValueIterator0 = regExFilter0.deepCopy(iteratorEnvironment1);
      assertNotSame(regExFilter0, sortedKeyValueIterator0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      RegExFilter regExFilter0 = new RegExFilter();
      OptionDescriber.IteratorOptions optionDescriber_IteratorOptions0 = regExFilter0.describeOptions();
      org.apache.accumulo.core.iterators.GrepIterator grepIterator0 = new org.apache.accumulo.core.iterators.GrepIterator();
      IteratorEnvironment iteratorEnvironment0 = mock(IteratorEnvironment.class, new ViolatedAssumptionAnswer());
      regExFilter0.init(grepIterator0, optionDescriber_IteratorOptions0.namedOptions, iteratorEnvironment0);
      IteratorEnvironment iteratorEnvironment1 = mock(IteratorEnvironment.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        regExFilter0.deepCopy(iteratorEnvironment1);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.accumulo.core.iterators.user.GrepIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      RegExFilter regExFilter0 = new RegExFilter();
      IteratorEnvironment iteratorEnvironment0 = mock(IteratorEnvironment.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        regExFilter0.deepCopy(iteratorEnvironment0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // getting null source
         //
         verifyException("org.apache.accumulo.core.iterators.WrappingIterator", e);
      }
  }
}
