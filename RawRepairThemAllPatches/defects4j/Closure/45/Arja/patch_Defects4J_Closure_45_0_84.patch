--- /tmp/Arja_Defects4J_Closure_45/src/com/google/javascript/jscomp/NodeUtil.java	2018-12-01 09:37:41.704746508 -0500
+++ /tmp/Arja_Defects4J_Closure_45/patches_p0j8/Patch_1358/patched/tmp/Arja_Defects4J_Closure_45/src/com/google/javascript/jscomp/NodeUtil.java	2018-12-01 09:56:42.476894166 -0500
@@ -585,13 +585,8 @@
   static boolean isLiteralValue(Node n, boolean includeFunctions) {
     switch (n.getType()) {
       case Token.ARRAYLIT:
-        for (Node child = n.getFirstChild(); child != null;
-             child = child.getNext()) {
-          if ((!child.isEmpty()) && !isLiteralValue(child, includeFunctions)) {
-            return false;
-          }
-        }
-        return true;
+        ;
+        return false;
 
       case Token.REGEXP:
         // Return true only if all children are const.


--- /tmp/Arja_Defects4J_Closure_45/src/com/google/javascript/jscomp/RemoveUnusedVars.java	2018-12-01 09:37:43.388746547 -0500
+++ /tmp/Arja_Defects4J_Closure_45/patches_p0j8/Patch_1358/patched/tmp/Arja_Defects4J_Closure_45/src/com/google/javascript/jscomp/RemoveUnusedVars.java	2018-12-01 09:56:42.476894166 -0500
@@ -948,17 +948,6 @@
       if (mayHaveSecondarySideEffects) {
         Node replacement = assignNode.getLastChild().detachFromParent();
 
-        // Aggregate any expressions in GETELEMs.
-        for (Node current = assignNode.getFirstChild();
-             !current.isName();
-             current = current.getFirstChild()) {
-          if (current.isGetElem()) {
-            replacement = IR.comma(
-                current.getLastChild().detachFromParent(), replacement);
-            replacement.copyInformationFrom(current);
-          }
-        }
-
         parent.replaceChild(assignNode, replacement);
       } else {
         Node gramps = parent.getParent();


