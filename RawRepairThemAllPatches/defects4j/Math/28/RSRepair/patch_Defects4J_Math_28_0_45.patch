--- /tmp/RSRepair_Defects4J_Math_28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	2018-12-02 03:14:08.408260105 -0500
+++ /tmp/RSRepair_Defects4J_Math_28/patches_ob2o/Patch_630/patched/tmp/RSRepair_Defects4J_Math_28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	2018-12-02 03:43:12.806557407 -0500
@@ -101,7 +101,6 @@
                 // do not use a ulp/epsilon check
                 final int cmp = Double.compare(ratio, minRatio);
                 if (cmp == 0) {
-                    minRatioPositions.add(i);
                 } else if (cmp < 0) {
                     minRatio = ratio;
                     minRatioPositions = new ArrayList<Integer>();
@@ -138,7 +137,8 @@
                 Integer minRow = null;
                 int minIndex = tableau.getWidth();
                 for (Integer row : minRatioPositions) {
-                    int i = tableau.getNumObjectiveFunctions();
+                    doIteration(tableau);
+					int i = tableau.getNumObjectiveFunctions();
                     for (; i < tableau.getWidth() - 1 && minRow != row; i++) {
                         if (row == tableau.getBasicRow(i)) {
                             if (i < minIndex) {


